/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package osc

import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// AccessKeyApiService AccessKeyApi service
type AccessKeyApiService service

type ApiCreateAccessKeyRequest struct {
	ctx _context.Context
	ApiService *AccessKeyApiService
	createAccessKeyRequest *CreateAccessKeyRequest
}

func (r ApiCreateAccessKeyRequest) CreateAccessKeyRequest(createAccessKeyRequest CreateAccessKeyRequest) ApiCreateAccessKeyRequest {
	r.createAccessKeyRequest = &createAccessKeyRequest
	return r
}

func (r ApiCreateAccessKeyRequest) Execute() (CreateAccessKeyResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateAccessKeyExecute(r)
}

/*
 * CreateAccessKey Method for CreateAccessKey
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateAccessKeyRequest
 */
func (a *AccessKeyApiService) CreateAccessKey(ctx _context.Context) ApiCreateAccessKeyRequest {
	return ApiCreateAccessKeyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateAccessKeyResponse
 */
func (a *AccessKeyApiService) CreateAccessKeyExecute(r ApiCreateAccessKeyRequest) (CreateAccessKeyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateAccessKeyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccessKeyApiService.CreateAccessKey")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateAccessKey"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createAccessKeyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteAccessKeyRequest struct {
	ctx _context.Context
	ApiService *AccessKeyApiService
	deleteAccessKeyRequest *DeleteAccessKeyRequest
}

func (r ApiDeleteAccessKeyRequest) DeleteAccessKeyRequest(deleteAccessKeyRequest DeleteAccessKeyRequest) ApiDeleteAccessKeyRequest {
	r.deleteAccessKeyRequest = &deleteAccessKeyRequest
	return r
}

func (r ApiDeleteAccessKeyRequest) Execute() (DeleteAccessKeyResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteAccessKeyExecute(r)
}

/*
 * DeleteAccessKey Method for DeleteAccessKey
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteAccessKeyRequest
 */
func (a *AccessKeyApiService) DeleteAccessKey(ctx _context.Context) ApiDeleteAccessKeyRequest {
	return ApiDeleteAccessKeyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteAccessKeyResponse
 */
func (a *AccessKeyApiService) DeleteAccessKeyExecute(r ApiDeleteAccessKeyRequest) (DeleteAccessKeyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteAccessKeyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccessKeyApiService.DeleteAccessKey")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteAccessKey"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteAccessKeyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadAccessKeysRequest struct {
	ctx _context.Context
	ApiService *AccessKeyApiService
	readAccessKeysRequest *ReadAccessKeysRequest
}

func (r ApiReadAccessKeysRequest) ReadAccessKeysRequest(readAccessKeysRequest ReadAccessKeysRequest) ApiReadAccessKeysRequest {
	r.readAccessKeysRequest = &readAccessKeysRequest
	return r
}

func (r ApiReadAccessKeysRequest) Execute() (ReadAccessKeysResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadAccessKeysExecute(r)
}

/*
 * ReadAccessKeys Method for ReadAccessKeys
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadAccessKeysRequest
 */
func (a *AccessKeyApiService) ReadAccessKeys(ctx _context.Context) ApiReadAccessKeysRequest {
	return ApiReadAccessKeysRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadAccessKeysResponse
 */
func (a *AccessKeyApiService) ReadAccessKeysExecute(r ApiReadAccessKeysRequest) (ReadAccessKeysResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadAccessKeysResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccessKeyApiService.ReadAccessKeys")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadAccessKeys"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readAccessKeysRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadSecretAccessKeyRequest struct {
	ctx _context.Context
	ApiService *AccessKeyApiService
	readSecretAccessKeyRequest *ReadSecretAccessKeyRequest
}

func (r ApiReadSecretAccessKeyRequest) ReadSecretAccessKeyRequest(readSecretAccessKeyRequest ReadSecretAccessKeyRequest) ApiReadSecretAccessKeyRequest {
	r.readSecretAccessKeyRequest = &readSecretAccessKeyRequest
	return r
}

func (r ApiReadSecretAccessKeyRequest) Execute() (ReadSecretAccessKeyResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSecretAccessKeyExecute(r)
}

/*
 * ReadSecretAccessKey Method for ReadSecretAccessKey
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSecretAccessKeyRequest
 */
func (a *AccessKeyApiService) ReadSecretAccessKey(ctx _context.Context) ApiReadSecretAccessKeyRequest {
	return ApiReadSecretAccessKeyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSecretAccessKeyResponse
 */
func (a *AccessKeyApiService) ReadSecretAccessKeyExecute(r ApiReadSecretAccessKeyRequest) (ReadSecretAccessKeyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSecretAccessKeyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccessKeyApiService.ReadSecretAccessKey")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSecretAccessKey"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSecretAccessKeyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateAccessKeyRequest struct {
	ctx _context.Context
	ApiService *AccessKeyApiService
	updateAccessKeyRequest *UpdateAccessKeyRequest
}

func (r ApiUpdateAccessKeyRequest) UpdateAccessKeyRequest(updateAccessKeyRequest UpdateAccessKeyRequest) ApiUpdateAccessKeyRequest {
	r.updateAccessKeyRequest = &updateAccessKeyRequest
	return r
}

func (r ApiUpdateAccessKeyRequest) Execute() (UpdateAccessKeyResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateAccessKeyExecute(r)
}

/*
 * UpdateAccessKey Method for UpdateAccessKey
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateAccessKeyRequest
 */
func (a *AccessKeyApiService) UpdateAccessKey(ctx _context.Context) ApiUpdateAccessKeyRequest {
	return ApiUpdateAccessKeyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateAccessKeyResponse
 */
func (a *AccessKeyApiService) UpdateAccessKeyExecute(r ApiUpdateAccessKeyRequest) (UpdateAccessKeyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateAccessKeyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccessKeyApiService.UpdateAccessKey")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateAccessKey"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateAccessKeyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// AccountApiService AccountApi service
type AccountApiService service

type ApiCheckAuthenticationRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	checkAuthenticationRequest *CheckAuthenticationRequest
}

func (r ApiCheckAuthenticationRequest) CheckAuthenticationRequest(checkAuthenticationRequest CheckAuthenticationRequest) ApiCheckAuthenticationRequest {
	r.checkAuthenticationRequest = &checkAuthenticationRequest
	return r
}

func (r ApiCheckAuthenticationRequest) Execute() (CheckAuthenticationResponse, *_nethttp.Response, error) {
	return r.ApiService.CheckAuthenticationExecute(r)
}

/*
 * CheckAuthentication Method for CheckAuthentication
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCheckAuthenticationRequest
 */
func (a *AccountApiService) CheckAuthentication(ctx _context.Context) ApiCheckAuthenticationRequest {
	return ApiCheckAuthenticationRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CheckAuthenticationResponse
 */
func (a *AccountApiService) CheckAuthenticationExecute(r ApiCheckAuthenticationRequest) (CheckAuthenticationResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CheckAuthenticationResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.CheckAuthentication")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CheckAuthentication"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.checkAuthenticationRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateAccountRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	createAccountRequest *CreateAccountRequest
}

func (r ApiCreateAccountRequest) CreateAccountRequest(createAccountRequest CreateAccountRequest) ApiCreateAccountRequest {
	r.createAccountRequest = &createAccountRequest
	return r
}

func (r ApiCreateAccountRequest) Execute() (CreateAccountResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateAccountExecute(r)
}

/*
 * CreateAccount Method for CreateAccount
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateAccountRequest
 */
func (a *AccountApiService) CreateAccount(ctx _context.Context) ApiCreateAccountRequest {
	return ApiCreateAccountRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateAccountResponse
 */
func (a *AccountApiService) CreateAccountExecute(r ApiCreateAccountRequest) (CreateAccountResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateAccountResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.CreateAccount")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateAccount"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createAccountRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadAccountsRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	readAccountsRequest *ReadAccountsRequest
}

func (r ApiReadAccountsRequest) ReadAccountsRequest(readAccountsRequest ReadAccountsRequest) ApiReadAccountsRequest {
	r.readAccountsRequest = &readAccountsRequest
	return r
}

func (r ApiReadAccountsRequest) Execute() (ReadAccountsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadAccountsExecute(r)
}

/*
 * ReadAccounts Method for ReadAccounts
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadAccountsRequest
 */
func (a *AccountApiService) ReadAccounts(ctx _context.Context) ApiReadAccountsRequest {
	return ApiReadAccountsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadAccountsResponse
 */
func (a *AccountApiService) ReadAccountsExecute(r ApiReadAccountsRequest) (ReadAccountsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadAccountsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.ReadAccounts")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadAccounts"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readAccountsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadConsumptionAccountRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	readConsumptionAccountRequest *ReadConsumptionAccountRequest
}

func (r ApiReadConsumptionAccountRequest) ReadConsumptionAccountRequest(readConsumptionAccountRequest ReadConsumptionAccountRequest) ApiReadConsumptionAccountRequest {
	r.readConsumptionAccountRequest = &readConsumptionAccountRequest
	return r
}

func (r ApiReadConsumptionAccountRequest) Execute() (ReadConsumptionAccountResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadConsumptionAccountExecute(r)
}

/*
 * ReadConsumptionAccount Method for ReadConsumptionAccount
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadConsumptionAccountRequest
 */
func (a *AccountApiService) ReadConsumptionAccount(ctx _context.Context) ApiReadConsumptionAccountRequest {
	return ApiReadConsumptionAccountRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadConsumptionAccountResponse
 */
func (a *AccountApiService) ReadConsumptionAccountExecute(r ApiReadConsumptionAccountRequest) (ReadConsumptionAccountResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadConsumptionAccountResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.ReadConsumptionAccount")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadConsumptionAccount"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readConsumptionAccountRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiResetAccountPasswordRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	resetAccountPasswordRequest *ResetAccountPasswordRequest
}

func (r ApiResetAccountPasswordRequest) ResetAccountPasswordRequest(resetAccountPasswordRequest ResetAccountPasswordRequest) ApiResetAccountPasswordRequest {
	r.resetAccountPasswordRequest = &resetAccountPasswordRequest
	return r
}

func (r ApiResetAccountPasswordRequest) Execute() (ResetAccountPasswordResponse, *_nethttp.Response, error) {
	return r.ApiService.ResetAccountPasswordExecute(r)
}

/*
 * ResetAccountPassword Method for ResetAccountPassword
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiResetAccountPasswordRequest
 */
func (a *AccountApiService) ResetAccountPassword(ctx _context.Context) ApiResetAccountPasswordRequest {
	return ApiResetAccountPasswordRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ResetAccountPasswordResponse
 */
func (a *AccountApiService) ResetAccountPasswordExecute(r ApiResetAccountPasswordRequest) (ResetAccountPasswordResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ResetAccountPasswordResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.ResetAccountPassword")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ResetAccountPassword"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.resetAccountPasswordRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiSendResetPasswordEmailRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	sendResetPasswordEmailRequest *SendResetPasswordEmailRequest
}

func (r ApiSendResetPasswordEmailRequest) SendResetPasswordEmailRequest(sendResetPasswordEmailRequest SendResetPasswordEmailRequest) ApiSendResetPasswordEmailRequest {
	r.sendResetPasswordEmailRequest = &sendResetPasswordEmailRequest
	return r
}

func (r ApiSendResetPasswordEmailRequest) Execute() (SendResetPasswordEmailResponse, *_nethttp.Response, error) {
	return r.ApiService.SendResetPasswordEmailExecute(r)
}

/*
 * SendResetPasswordEmail Method for SendResetPasswordEmail
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiSendResetPasswordEmailRequest
 */
func (a *AccountApiService) SendResetPasswordEmail(ctx _context.Context) ApiSendResetPasswordEmailRequest {
	return ApiSendResetPasswordEmailRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return SendResetPasswordEmailResponse
 */
func (a *AccountApiService) SendResetPasswordEmailExecute(r ApiSendResetPasswordEmailRequest) (SendResetPasswordEmailResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  SendResetPasswordEmailResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.SendResetPasswordEmail")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/SendResetPasswordEmail"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.sendResetPasswordEmailRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateAccountRequest struct {
	ctx _context.Context
	ApiService *AccountApiService
	updateAccountRequest *UpdateAccountRequest
}

func (r ApiUpdateAccountRequest) UpdateAccountRequest(updateAccountRequest UpdateAccountRequest) ApiUpdateAccountRequest {
	r.updateAccountRequest = &updateAccountRequest
	return r
}

func (r ApiUpdateAccountRequest) Execute() (UpdateAccountResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateAccountExecute(r)
}

/*
 * UpdateAccount Method for UpdateAccount
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateAccountRequest
 */
func (a *AccountApiService) UpdateAccount(ctx _context.Context) ApiUpdateAccountRequest {
	return ApiUpdateAccountRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateAccountResponse
 */
func (a *AccountApiService) UpdateAccountExecute(r ApiUpdateAccountRequest) (UpdateAccountResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateAccountResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AccountApiService.UpdateAccount")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateAccount"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateAccountRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ApiLogApiService ApiLogApi service
type ApiLogApiService service

type ApiReadApiLogsRequest struct {
	ctx _context.Context
	ApiService *ApiLogApiService
	readApiLogsRequest *ReadApiLogsRequest
}

func (r ApiReadApiLogsRequest) ReadApiLogsRequest(readApiLogsRequest ReadApiLogsRequest) ApiReadApiLogsRequest {
	r.readApiLogsRequest = &readApiLogsRequest
	return r
}

func (r ApiReadApiLogsRequest) Execute() (ReadApiLogsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadApiLogsExecute(r)
}

/*
 * ReadApiLogs Method for ReadApiLogs
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadApiLogsRequest
 */
func (a *ApiLogApiService) ReadApiLogs(ctx _context.Context) ApiReadApiLogsRequest {
	return ApiReadApiLogsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadApiLogsResponse
 */
func (a *ApiLogApiService) ReadApiLogsExecute(r ApiReadApiLogsRequest) (ReadApiLogsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadApiLogsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ApiLogApiService.ReadApiLogs")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadApiLogs"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readApiLogsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ClientGatewayApiService ClientGatewayApi service
type ClientGatewayApiService service

type ApiCreateClientGatewayRequest struct {
	ctx _context.Context
	ApiService *ClientGatewayApiService
	createClientGatewayRequest *CreateClientGatewayRequest
}

func (r ApiCreateClientGatewayRequest) CreateClientGatewayRequest(createClientGatewayRequest CreateClientGatewayRequest) ApiCreateClientGatewayRequest {
	r.createClientGatewayRequest = &createClientGatewayRequest
	return r
}

func (r ApiCreateClientGatewayRequest) Execute() (CreateClientGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateClientGatewayExecute(r)
}

/*
 * CreateClientGateway Method for CreateClientGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateClientGatewayRequest
 */
func (a *ClientGatewayApiService) CreateClientGateway(ctx _context.Context) ApiCreateClientGatewayRequest {
	return ApiCreateClientGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateClientGatewayResponse
 */
func (a *ClientGatewayApiService) CreateClientGatewayExecute(r ApiCreateClientGatewayRequest) (CreateClientGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateClientGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ClientGatewayApiService.CreateClientGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateClientGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createClientGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteClientGatewayRequest struct {
	ctx _context.Context
	ApiService *ClientGatewayApiService
	deleteClientGatewayRequest *DeleteClientGatewayRequest
}

func (r ApiDeleteClientGatewayRequest) DeleteClientGatewayRequest(deleteClientGatewayRequest DeleteClientGatewayRequest) ApiDeleteClientGatewayRequest {
	r.deleteClientGatewayRequest = &deleteClientGatewayRequest
	return r
}

func (r ApiDeleteClientGatewayRequest) Execute() (DeleteClientGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteClientGatewayExecute(r)
}

/*
 * DeleteClientGateway Method for DeleteClientGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteClientGatewayRequest
 */
func (a *ClientGatewayApiService) DeleteClientGateway(ctx _context.Context) ApiDeleteClientGatewayRequest {
	return ApiDeleteClientGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteClientGatewayResponse
 */
func (a *ClientGatewayApiService) DeleteClientGatewayExecute(r ApiDeleteClientGatewayRequest) (DeleteClientGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteClientGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ClientGatewayApiService.DeleteClientGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteClientGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteClientGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadClientGatewaysRequest struct {
	ctx _context.Context
	ApiService *ClientGatewayApiService
	readClientGatewaysRequest *ReadClientGatewaysRequest
}

func (r ApiReadClientGatewaysRequest) ReadClientGatewaysRequest(readClientGatewaysRequest ReadClientGatewaysRequest) ApiReadClientGatewaysRequest {
	r.readClientGatewaysRequest = &readClientGatewaysRequest
	return r
}

func (r ApiReadClientGatewaysRequest) Execute() (ReadClientGatewaysResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadClientGatewaysExecute(r)
}

/*
 * ReadClientGateways Method for ReadClientGateways
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadClientGatewaysRequest
 */
func (a *ClientGatewayApiService) ReadClientGateways(ctx _context.Context) ApiReadClientGatewaysRequest {
	return ApiReadClientGatewaysRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadClientGatewaysResponse
 */
func (a *ClientGatewayApiService) ReadClientGatewaysExecute(r ApiReadClientGatewaysRequest) (ReadClientGatewaysResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadClientGatewaysResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ClientGatewayApiService.ReadClientGateways")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadClientGateways"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readClientGatewaysRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// DhcpOptionApiService DhcpOptionApi service
type DhcpOptionApiService service

type ApiCreateDhcpOptionsRequest struct {
	ctx _context.Context
	ApiService *DhcpOptionApiService
	createDhcpOptionsRequest *CreateDhcpOptionsRequest
}

func (r ApiCreateDhcpOptionsRequest) CreateDhcpOptionsRequest(createDhcpOptionsRequest CreateDhcpOptionsRequest) ApiCreateDhcpOptionsRequest {
	r.createDhcpOptionsRequest = &createDhcpOptionsRequest
	return r
}

func (r ApiCreateDhcpOptionsRequest) Execute() (CreateDhcpOptionsResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateDhcpOptionsExecute(r)
}

/*
 * CreateDhcpOptions Method for CreateDhcpOptions
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateDhcpOptionsRequest
 */
func (a *DhcpOptionApiService) CreateDhcpOptions(ctx _context.Context) ApiCreateDhcpOptionsRequest {
	return ApiCreateDhcpOptionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateDhcpOptionsResponse
 */
func (a *DhcpOptionApiService) CreateDhcpOptionsExecute(r ApiCreateDhcpOptionsRequest) (CreateDhcpOptionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateDhcpOptionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DhcpOptionApiService.CreateDhcpOptions")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateDhcpOptions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createDhcpOptionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteDhcpOptionsRequest struct {
	ctx _context.Context
	ApiService *DhcpOptionApiService
	deleteDhcpOptionsRequest *DeleteDhcpOptionsRequest
}

func (r ApiDeleteDhcpOptionsRequest) DeleteDhcpOptionsRequest(deleteDhcpOptionsRequest DeleteDhcpOptionsRequest) ApiDeleteDhcpOptionsRequest {
	r.deleteDhcpOptionsRequest = &deleteDhcpOptionsRequest
	return r
}

func (r ApiDeleteDhcpOptionsRequest) Execute() (DeleteDhcpOptionsResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteDhcpOptionsExecute(r)
}

/*
 * DeleteDhcpOptions Method for DeleteDhcpOptions
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteDhcpOptionsRequest
 */
func (a *DhcpOptionApiService) DeleteDhcpOptions(ctx _context.Context) ApiDeleteDhcpOptionsRequest {
	return ApiDeleteDhcpOptionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteDhcpOptionsResponse
 */
func (a *DhcpOptionApiService) DeleteDhcpOptionsExecute(r ApiDeleteDhcpOptionsRequest) (DeleteDhcpOptionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteDhcpOptionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DhcpOptionApiService.DeleteDhcpOptions")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteDhcpOptions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteDhcpOptionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadDhcpOptionsRequest struct {
	ctx _context.Context
	ApiService *DhcpOptionApiService
	readDhcpOptionsRequest *ReadDhcpOptionsRequest
}

func (r ApiReadDhcpOptionsRequest) ReadDhcpOptionsRequest(readDhcpOptionsRequest ReadDhcpOptionsRequest) ApiReadDhcpOptionsRequest {
	r.readDhcpOptionsRequest = &readDhcpOptionsRequest
	return r
}

func (r ApiReadDhcpOptionsRequest) Execute() (ReadDhcpOptionsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadDhcpOptionsExecute(r)
}

/*
 * ReadDhcpOptions Method for ReadDhcpOptions
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadDhcpOptionsRequest
 */
func (a *DhcpOptionApiService) ReadDhcpOptions(ctx _context.Context) ApiReadDhcpOptionsRequest {
	return ApiReadDhcpOptionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadDhcpOptionsResponse
 */
func (a *DhcpOptionApiService) ReadDhcpOptionsExecute(r ApiReadDhcpOptionsRequest) (ReadDhcpOptionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadDhcpOptionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DhcpOptionApiService.ReadDhcpOptions")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadDhcpOptions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readDhcpOptionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// DirectLinkApiService DirectLinkApi service
type DirectLinkApiService service

type ApiCreateDirectLinkRequest struct {
	ctx _context.Context
	ApiService *DirectLinkApiService
	createDirectLinkRequest *CreateDirectLinkRequest
}

func (r ApiCreateDirectLinkRequest) CreateDirectLinkRequest(createDirectLinkRequest CreateDirectLinkRequest) ApiCreateDirectLinkRequest {
	r.createDirectLinkRequest = &createDirectLinkRequest
	return r
}

func (r ApiCreateDirectLinkRequest) Execute() (CreateDirectLinkResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateDirectLinkExecute(r)
}

/*
 * CreateDirectLink Method for CreateDirectLink
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateDirectLinkRequest
 */
func (a *DirectLinkApiService) CreateDirectLink(ctx _context.Context) ApiCreateDirectLinkRequest {
	return ApiCreateDirectLinkRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateDirectLinkResponse
 */
func (a *DirectLinkApiService) CreateDirectLinkExecute(r ApiCreateDirectLinkRequest) (CreateDirectLinkResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateDirectLinkResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkApiService.CreateDirectLink")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateDirectLink"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createDirectLinkRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteDirectLinkRequest struct {
	ctx _context.Context
	ApiService *DirectLinkApiService
	deleteDirectLinkRequest *DeleteDirectLinkRequest
}

func (r ApiDeleteDirectLinkRequest) DeleteDirectLinkRequest(deleteDirectLinkRequest DeleteDirectLinkRequest) ApiDeleteDirectLinkRequest {
	r.deleteDirectLinkRequest = &deleteDirectLinkRequest
	return r
}

func (r ApiDeleteDirectLinkRequest) Execute() (DeleteDirectLinkResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteDirectLinkExecute(r)
}

/*
 * DeleteDirectLink Method for DeleteDirectLink
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteDirectLinkRequest
 */
func (a *DirectLinkApiService) DeleteDirectLink(ctx _context.Context) ApiDeleteDirectLinkRequest {
	return ApiDeleteDirectLinkRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteDirectLinkResponse
 */
func (a *DirectLinkApiService) DeleteDirectLinkExecute(r ApiDeleteDirectLinkRequest) (DeleteDirectLinkResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteDirectLinkResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkApiService.DeleteDirectLink")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteDirectLink"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteDirectLinkRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadDirectLinksRequest struct {
	ctx _context.Context
	ApiService *DirectLinkApiService
	readDirectLinksRequest *ReadDirectLinksRequest
}

func (r ApiReadDirectLinksRequest) ReadDirectLinksRequest(readDirectLinksRequest ReadDirectLinksRequest) ApiReadDirectLinksRequest {
	r.readDirectLinksRequest = &readDirectLinksRequest
	return r
}

func (r ApiReadDirectLinksRequest) Execute() (ReadDirectLinksResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadDirectLinksExecute(r)
}

/*
 * ReadDirectLinks Method for ReadDirectLinks
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadDirectLinksRequest
 */
func (a *DirectLinkApiService) ReadDirectLinks(ctx _context.Context) ApiReadDirectLinksRequest {
	return ApiReadDirectLinksRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadDirectLinksResponse
 */
func (a *DirectLinkApiService) ReadDirectLinksExecute(r ApiReadDirectLinksRequest) (ReadDirectLinksResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadDirectLinksResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkApiService.ReadDirectLinks")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadDirectLinks"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readDirectLinksRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// DirectLinkInterfaceApiService DirectLinkInterfaceApi service
type DirectLinkInterfaceApiService service

type ApiCreateDirectLinkInterfaceRequest struct {
	ctx _context.Context
	ApiService *DirectLinkInterfaceApiService
	createDirectLinkInterfaceRequest *CreateDirectLinkInterfaceRequest
}

func (r ApiCreateDirectLinkInterfaceRequest) CreateDirectLinkInterfaceRequest(createDirectLinkInterfaceRequest CreateDirectLinkInterfaceRequest) ApiCreateDirectLinkInterfaceRequest {
	r.createDirectLinkInterfaceRequest = &createDirectLinkInterfaceRequest
	return r
}

func (r ApiCreateDirectLinkInterfaceRequest) Execute() (CreateDirectLinkInterfaceResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateDirectLinkInterfaceExecute(r)
}

/*
 * CreateDirectLinkInterface Method for CreateDirectLinkInterface
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateDirectLinkInterfaceRequest
 */
func (a *DirectLinkInterfaceApiService) CreateDirectLinkInterface(ctx _context.Context) ApiCreateDirectLinkInterfaceRequest {
	return ApiCreateDirectLinkInterfaceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateDirectLinkInterfaceResponse
 */
func (a *DirectLinkInterfaceApiService) CreateDirectLinkInterfaceExecute(r ApiCreateDirectLinkInterfaceRequest) (CreateDirectLinkInterfaceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateDirectLinkInterfaceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkInterfaceApiService.CreateDirectLinkInterface")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateDirectLinkInterface"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createDirectLinkInterfaceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteDirectLinkInterfaceRequest struct {
	ctx _context.Context
	ApiService *DirectLinkInterfaceApiService
	deleteDirectLinkInterfaceRequest *DeleteDirectLinkInterfaceRequest
}

func (r ApiDeleteDirectLinkInterfaceRequest) DeleteDirectLinkInterfaceRequest(deleteDirectLinkInterfaceRequest DeleteDirectLinkInterfaceRequest) ApiDeleteDirectLinkInterfaceRequest {
	r.deleteDirectLinkInterfaceRequest = &deleteDirectLinkInterfaceRequest
	return r
}

func (r ApiDeleteDirectLinkInterfaceRequest) Execute() (DeleteDirectLinkInterfaceResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteDirectLinkInterfaceExecute(r)
}

/*
 * DeleteDirectLinkInterface Method for DeleteDirectLinkInterface
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteDirectLinkInterfaceRequest
 */
func (a *DirectLinkInterfaceApiService) DeleteDirectLinkInterface(ctx _context.Context) ApiDeleteDirectLinkInterfaceRequest {
	return ApiDeleteDirectLinkInterfaceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteDirectLinkInterfaceResponse
 */
func (a *DirectLinkInterfaceApiService) DeleteDirectLinkInterfaceExecute(r ApiDeleteDirectLinkInterfaceRequest) (DeleteDirectLinkInterfaceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteDirectLinkInterfaceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkInterfaceApiService.DeleteDirectLinkInterface")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteDirectLinkInterface"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteDirectLinkInterfaceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadDirectLinkInterfacesRequest struct {
	ctx _context.Context
	ApiService *DirectLinkInterfaceApiService
	readDirectLinkInterfacesRequest *ReadDirectLinkInterfacesRequest
}

func (r ApiReadDirectLinkInterfacesRequest) ReadDirectLinkInterfacesRequest(readDirectLinkInterfacesRequest ReadDirectLinkInterfacesRequest) ApiReadDirectLinkInterfacesRequest {
	r.readDirectLinkInterfacesRequest = &readDirectLinkInterfacesRequest
	return r
}

func (r ApiReadDirectLinkInterfacesRequest) Execute() (ReadDirectLinkInterfacesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadDirectLinkInterfacesExecute(r)
}

/*
 * ReadDirectLinkInterfaces Method for ReadDirectLinkInterfaces
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadDirectLinkInterfacesRequest
 */
func (a *DirectLinkInterfaceApiService) ReadDirectLinkInterfaces(ctx _context.Context) ApiReadDirectLinkInterfacesRequest {
	return ApiReadDirectLinkInterfacesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadDirectLinkInterfacesResponse
 */
func (a *DirectLinkInterfaceApiService) ReadDirectLinkInterfacesExecute(r ApiReadDirectLinkInterfacesRequest) (ReadDirectLinkInterfacesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadDirectLinkInterfacesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "DirectLinkInterfaceApiService.ReadDirectLinkInterfaces")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadDirectLinkInterfaces"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readDirectLinkInterfacesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// FlexibleGpuApiService FlexibleGpuApi service
type FlexibleGpuApiService service

type ApiCreateFlexibleGpuRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	createFlexibleGpuRequest *CreateFlexibleGpuRequest
}

func (r ApiCreateFlexibleGpuRequest) CreateFlexibleGpuRequest(createFlexibleGpuRequest CreateFlexibleGpuRequest) ApiCreateFlexibleGpuRequest {
	r.createFlexibleGpuRequest = &createFlexibleGpuRequest
	return r
}

func (r ApiCreateFlexibleGpuRequest) Execute() (CreateFlexibleGpuResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateFlexibleGpuExecute(r)
}

/*
 * CreateFlexibleGpu Method for CreateFlexibleGpu
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateFlexibleGpuRequest
 */
func (a *FlexibleGpuApiService) CreateFlexibleGpu(ctx _context.Context) ApiCreateFlexibleGpuRequest {
	return ApiCreateFlexibleGpuRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateFlexibleGpuResponse
 */
func (a *FlexibleGpuApiService) CreateFlexibleGpuExecute(r ApiCreateFlexibleGpuRequest) (CreateFlexibleGpuResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateFlexibleGpuResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.CreateFlexibleGpu")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateFlexibleGpu"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createFlexibleGpuRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteFlexibleGpuRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	deleteFlexibleGpuRequest *DeleteFlexibleGpuRequest
}

func (r ApiDeleteFlexibleGpuRequest) DeleteFlexibleGpuRequest(deleteFlexibleGpuRequest DeleteFlexibleGpuRequest) ApiDeleteFlexibleGpuRequest {
	r.deleteFlexibleGpuRequest = &deleteFlexibleGpuRequest
	return r
}

func (r ApiDeleteFlexibleGpuRequest) Execute() (DeleteFlexibleGpuResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteFlexibleGpuExecute(r)
}

/*
 * DeleteFlexibleGpu Method for DeleteFlexibleGpu
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteFlexibleGpuRequest
 */
func (a *FlexibleGpuApiService) DeleteFlexibleGpu(ctx _context.Context) ApiDeleteFlexibleGpuRequest {
	return ApiDeleteFlexibleGpuRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteFlexibleGpuResponse
 */
func (a *FlexibleGpuApiService) DeleteFlexibleGpuExecute(r ApiDeleteFlexibleGpuRequest) (DeleteFlexibleGpuResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteFlexibleGpuResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.DeleteFlexibleGpu")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteFlexibleGpu"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteFlexibleGpuRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkFlexibleGpuRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	linkFlexibleGpuRequest *LinkFlexibleGpuRequest
}

func (r ApiLinkFlexibleGpuRequest) LinkFlexibleGpuRequest(linkFlexibleGpuRequest LinkFlexibleGpuRequest) ApiLinkFlexibleGpuRequest {
	r.linkFlexibleGpuRequest = &linkFlexibleGpuRequest
	return r
}

func (r ApiLinkFlexibleGpuRequest) Execute() (LinkFlexibleGpuResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkFlexibleGpuExecute(r)
}

/*
 * LinkFlexibleGpu Method for LinkFlexibleGpu
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkFlexibleGpuRequest
 */
func (a *FlexibleGpuApiService) LinkFlexibleGpu(ctx _context.Context) ApiLinkFlexibleGpuRequest {
	return ApiLinkFlexibleGpuRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkFlexibleGpuResponse
 */
func (a *FlexibleGpuApiService) LinkFlexibleGpuExecute(r ApiLinkFlexibleGpuRequest) (LinkFlexibleGpuResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkFlexibleGpuResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.LinkFlexibleGpu")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkFlexibleGpu"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkFlexibleGpuRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadFlexibleGpuCatalogRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	readFlexibleGpuCatalogRequest *ReadFlexibleGpuCatalogRequest
}

func (r ApiReadFlexibleGpuCatalogRequest) ReadFlexibleGpuCatalogRequest(readFlexibleGpuCatalogRequest ReadFlexibleGpuCatalogRequest) ApiReadFlexibleGpuCatalogRequest {
	r.readFlexibleGpuCatalogRequest = &readFlexibleGpuCatalogRequest
	return r
}

func (r ApiReadFlexibleGpuCatalogRequest) Execute() (ReadFlexibleGpuCatalogResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadFlexibleGpuCatalogExecute(r)
}

/*
 * ReadFlexibleGpuCatalog Method for ReadFlexibleGpuCatalog
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadFlexibleGpuCatalogRequest
 */
func (a *FlexibleGpuApiService) ReadFlexibleGpuCatalog(ctx _context.Context) ApiReadFlexibleGpuCatalogRequest {
	return ApiReadFlexibleGpuCatalogRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadFlexibleGpuCatalogResponse
 */
func (a *FlexibleGpuApiService) ReadFlexibleGpuCatalogExecute(r ApiReadFlexibleGpuCatalogRequest) (ReadFlexibleGpuCatalogResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadFlexibleGpuCatalogResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.ReadFlexibleGpuCatalog")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadFlexibleGpuCatalog"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readFlexibleGpuCatalogRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadFlexibleGpusRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	readFlexibleGpusRequest *ReadFlexibleGpusRequest
}

func (r ApiReadFlexibleGpusRequest) ReadFlexibleGpusRequest(readFlexibleGpusRequest ReadFlexibleGpusRequest) ApiReadFlexibleGpusRequest {
	r.readFlexibleGpusRequest = &readFlexibleGpusRequest
	return r
}

func (r ApiReadFlexibleGpusRequest) Execute() (ReadFlexibleGpusResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadFlexibleGpusExecute(r)
}

/*
 * ReadFlexibleGpus Method for ReadFlexibleGpus
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadFlexibleGpusRequest
 */
func (a *FlexibleGpuApiService) ReadFlexibleGpus(ctx _context.Context) ApiReadFlexibleGpusRequest {
	return ApiReadFlexibleGpusRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadFlexibleGpusResponse
 */
func (a *FlexibleGpuApiService) ReadFlexibleGpusExecute(r ApiReadFlexibleGpusRequest) (ReadFlexibleGpusResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadFlexibleGpusResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.ReadFlexibleGpus")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadFlexibleGpus"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readFlexibleGpusRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkFlexibleGpuRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	unlinkFlexibleGpuRequest *UnlinkFlexibleGpuRequest
}

func (r ApiUnlinkFlexibleGpuRequest) UnlinkFlexibleGpuRequest(unlinkFlexibleGpuRequest UnlinkFlexibleGpuRequest) ApiUnlinkFlexibleGpuRequest {
	r.unlinkFlexibleGpuRequest = &unlinkFlexibleGpuRequest
	return r
}

func (r ApiUnlinkFlexibleGpuRequest) Execute() (UnlinkFlexibleGpuResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkFlexibleGpuExecute(r)
}

/*
 * UnlinkFlexibleGpu Method for UnlinkFlexibleGpu
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkFlexibleGpuRequest
 */
func (a *FlexibleGpuApiService) UnlinkFlexibleGpu(ctx _context.Context) ApiUnlinkFlexibleGpuRequest {
	return ApiUnlinkFlexibleGpuRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkFlexibleGpuResponse
 */
func (a *FlexibleGpuApiService) UnlinkFlexibleGpuExecute(r ApiUnlinkFlexibleGpuRequest) (UnlinkFlexibleGpuResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkFlexibleGpuResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.UnlinkFlexibleGpu")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkFlexibleGpu"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkFlexibleGpuRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateFlexibleGpuRequest struct {
	ctx _context.Context
	ApiService *FlexibleGpuApiService
	updateFlexibleGpuRequest *UpdateFlexibleGpuRequest
}

func (r ApiUpdateFlexibleGpuRequest) UpdateFlexibleGpuRequest(updateFlexibleGpuRequest UpdateFlexibleGpuRequest) ApiUpdateFlexibleGpuRequest {
	r.updateFlexibleGpuRequest = &updateFlexibleGpuRequest
	return r
}

func (r ApiUpdateFlexibleGpuRequest) Execute() (UpdateFlexibleGpuResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateFlexibleGpuExecute(r)
}

/*
 * UpdateFlexibleGpu Method for UpdateFlexibleGpu
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateFlexibleGpuRequest
 */
func (a *FlexibleGpuApiService) UpdateFlexibleGpu(ctx _context.Context) ApiUpdateFlexibleGpuRequest {
	return ApiUpdateFlexibleGpuRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateFlexibleGpuResponse
 */
func (a *FlexibleGpuApiService) UpdateFlexibleGpuExecute(r ApiUpdateFlexibleGpuRequest) (UpdateFlexibleGpuResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateFlexibleGpuResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "FlexibleGpuApiService.UpdateFlexibleGpu")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateFlexibleGpu"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateFlexibleGpuRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ImageApiService ImageApi service
type ImageApiService service

type ApiCreateImageRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	createImageRequest *CreateImageRequest
}

func (r ApiCreateImageRequest) CreateImageRequest(createImageRequest CreateImageRequest) ApiCreateImageRequest {
	r.createImageRequest = &createImageRequest
	return r
}

func (r ApiCreateImageRequest) Execute() (CreateImageResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateImageExecute(r)
}

/*
 * CreateImage Method for CreateImage
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateImageRequest
 */
func (a *ImageApiService) CreateImage(ctx _context.Context) ApiCreateImageRequest {
	return ApiCreateImageRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateImageResponse
 */
func (a *ImageApiService) CreateImageExecute(r ApiCreateImageRequest) (CreateImageResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateImageResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.CreateImage")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateImage"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createImageRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateImageExportTaskRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	createImageExportTaskRequest *CreateImageExportTaskRequest
}

func (r ApiCreateImageExportTaskRequest) CreateImageExportTaskRequest(createImageExportTaskRequest CreateImageExportTaskRequest) ApiCreateImageExportTaskRequest {
	r.createImageExportTaskRequest = &createImageExportTaskRequest
	return r
}

func (r ApiCreateImageExportTaskRequest) Execute() (CreateImageExportTaskResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateImageExportTaskExecute(r)
}

/*
 * CreateImageExportTask Method for CreateImageExportTask
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateImageExportTaskRequest
 */
func (a *ImageApiService) CreateImageExportTask(ctx _context.Context) ApiCreateImageExportTaskRequest {
	return ApiCreateImageExportTaskRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateImageExportTaskResponse
 */
func (a *ImageApiService) CreateImageExportTaskExecute(r ApiCreateImageExportTaskRequest) (CreateImageExportTaskResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateImageExportTaskResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.CreateImageExportTask")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateImageExportTask"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createImageExportTaskRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteImageRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	deleteImageRequest *DeleteImageRequest
}

func (r ApiDeleteImageRequest) DeleteImageRequest(deleteImageRequest DeleteImageRequest) ApiDeleteImageRequest {
	r.deleteImageRequest = &deleteImageRequest
	return r
}

func (r ApiDeleteImageRequest) Execute() (DeleteImageResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteImageExecute(r)
}

/*
 * DeleteImage Method for DeleteImage
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteImageRequest
 */
func (a *ImageApiService) DeleteImage(ctx _context.Context) ApiDeleteImageRequest {
	return ApiDeleteImageRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteImageResponse
 */
func (a *ImageApiService) DeleteImageExecute(r ApiDeleteImageRequest) (DeleteImageResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteImageResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.DeleteImage")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteImage"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteImageRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadImageExportTasksRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	readImageExportTasksRequest *ReadImageExportTasksRequest
}

func (r ApiReadImageExportTasksRequest) ReadImageExportTasksRequest(readImageExportTasksRequest ReadImageExportTasksRequest) ApiReadImageExportTasksRequest {
	r.readImageExportTasksRequest = &readImageExportTasksRequest
	return r
}

func (r ApiReadImageExportTasksRequest) Execute() (ReadImageExportTasksResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadImageExportTasksExecute(r)
}

/*
 * ReadImageExportTasks Method for ReadImageExportTasks
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadImageExportTasksRequest
 */
func (a *ImageApiService) ReadImageExportTasks(ctx _context.Context) ApiReadImageExportTasksRequest {
	return ApiReadImageExportTasksRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadImageExportTasksResponse
 */
func (a *ImageApiService) ReadImageExportTasksExecute(r ApiReadImageExportTasksRequest) (ReadImageExportTasksResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadImageExportTasksResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.ReadImageExportTasks")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadImageExportTasks"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readImageExportTasksRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadImagesRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	readImagesRequest *ReadImagesRequest
}

func (r ApiReadImagesRequest) ReadImagesRequest(readImagesRequest ReadImagesRequest) ApiReadImagesRequest {
	r.readImagesRequest = &readImagesRequest
	return r
}

func (r ApiReadImagesRequest) Execute() (ReadImagesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadImagesExecute(r)
}

/*
 * ReadImages Method for ReadImages
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadImagesRequest
 */
func (a *ImageApiService) ReadImages(ctx _context.Context) ApiReadImagesRequest {
	return ApiReadImagesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadImagesResponse
 */
func (a *ImageApiService) ReadImagesExecute(r ApiReadImagesRequest) (ReadImagesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadImagesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.ReadImages")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadImages"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readImagesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateImageRequest struct {
	ctx _context.Context
	ApiService *ImageApiService
	updateImageRequest *UpdateImageRequest
}

func (r ApiUpdateImageRequest) UpdateImageRequest(updateImageRequest UpdateImageRequest) ApiUpdateImageRequest {
	r.updateImageRequest = &updateImageRequest
	return r
}

func (r ApiUpdateImageRequest) Execute() (UpdateImageResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateImageExecute(r)
}

/*
 * UpdateImage Method for UpdateImage
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateImageRequest
 */
func (a *ImageApiService) UpdateImage(ctx _context.Context) ApiUpdateImageRequest {
	return ApiUpdateImageRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateImageResponse
 */
func (a *ImageApiService) UpdateImageExecute(r ApiUpdateImageRequest) (UpdateImageResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateImageResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ImageApiService.UpdateImage")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateImage"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateImageRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// InternetServiceApiService InternetServiceApi service
type InternetServiceApiService service

type ApiCreateInternetServiceRequest struct {
	ctx _context.Context
	ApiService *InternetServiceApiService
	createInternetServiceRequest *CreateInternetServiceRequest
}

func (r ApiCreateInternetServiceRequest) CreateInternetServiceRequest(createInternetServiceRequest CreateInternetServiceRequest) ApiCreateInternetServiceRequest {
	r.createInternetServiceRequest = &createInternetServiceRequest
	return r
}

func (r ApiCreateInternetServiceRequest) Execute() (CreateInternetServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateInternetServiceExecute(r)
}

/*
 * CreateInternetService Method for CreateInternetService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateInternetServiceRequest
 */
func (a *InternetServiceApiService) CreateInternetService(ctx _context.Context) ApiCreateInternetServiceRequest {
	return ApiCreateInternetServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateInternetServiceResponse
 */
func (a *InternetServiceApiService) CreateInternetServiceExecute(r ApiCreateInternetServiceRequest) (CreateInternetServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateInternetServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "InternetServiceApiService.CreateInternetService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateInternetService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createInternetServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteInternetServiceRequest struct {
	ctx _context.Context
	ApiService *InternetServiceApiService
	deleteInternetServiceRequest *DeleteInternetServiceRequest
}

func (r ApiDeleteInternetServiceRequest) DeleteInternetServiceRequest(deleteInternetServiceRequest DeleteInternetServiceRequest) ApiDeleteInternetServiceRequest {
	r.deleteInternetServiceRequest = &deleteInternetServiceRequest
	return r
}

func (r ApiDeleteInternetServiceRequest) Execute() (DeleteInternetServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteInternetServiceExecute(r)
}

/*
 * DeleteInternetService Method for DeleteInternetService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteInternetServiceRequest
 */
func (a *InternetServiceApiService) DeleteInternetService(ctx _context.Context) ApiDeleteInternetServiceRequest {
	return ApiDeleteInternetServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteInternetServiceResponse
 */
func (a *InternetServiceApiService) DeleteInternetServiceExecute(r ApiDeleteInternetServiceRequest) (DeleteInternetServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteInternetServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "InternetServiceApiService.DeleteInternetService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteInternetService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteInternetServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkInternetServiceRequest struct {
	ctx _context.Context
	ApiService *InternetServiceApiService
	linkInternetServiceRequest *LinkInternetServiceRequest
}

func (r ApiLinkInternetServiceRequest) LinkInternetServiceRequest(linkInternetServiceRequest LinkInternetServiceRequest) ApiLinkInternetServiceRequest {
	r.linkInternetServiceRequest = &linkInternetServiceRequest
	return r
}

func (r ApiLinkInternetServiceRequest) Execute() (LinkInternetServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkInternetServiceExecute(r)
}

/*
 * LinkInternetService Method for LinkInternetService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkInternetServiceRequest
 */
func (a *InternetServiceApiService) LinkInternetService(ctx _context.Context) ApiLinkInternetServiceRequest {
	return ApiLinkInternetServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkInternetServiceResponse
 */
func (a *InternetServiceApiService) LinkInternetServiceExecute(r ApiLinkInternetServiceRequest) (LinkInternetServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkInternetServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "InternetServiceApiService.LinkInternetService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkInternetService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkInternetServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadInternetServicesRequest struct {
	ctx _context.Context
	ApiService *InternetServiceApiService
	readInternetServicesRequest *ReadInternetServicesRequest
}

func (r ApiReadInternetServicesRequest) ReadInternetServicesRequest(readInternetServicesRequest ReadInternetServicesRequest) ApiReadInternetServicesRequest {
	r.readInternetServicesRequest = &readInternetServicesRequest
	return r
}

func (r ApiReadInternetServicesRequest) Execute() (ReadInternetServicesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadInternetServicesExecute(r)
}

/*
 * ReadInternetServices Method for ReadInternetServices
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadInternetServicesRequest
 */
func (a *InternetServiceApiService) ReadInternetServices(ctx _context.Context) ApiReadInternetServicesRequest {
	return ApiReadInternetServicesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadInternetServicesResponse
 */
func (a *InternetServiceApiService) ReadInternetServicesExecute(r ApiReadInternetServicesRequest) (ReadInternetServicesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadInternetServicesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "InternetServiceApiService.ReadInternetServices")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadInternetServices"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readInternetServicesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkInternetServiceRequest struct {
	ctx _context.Context
	ApiService *InternetServiceApiService
	unlinkInternetServiceRequest *UnlinkInternetServiceRequest
}

func (r ApiUnlinkInternetServiceRequest) UnlinkInternetServiceRequest(unlinkInternetServiceRequest UnlinkInternetServiceRequest) ApiUnlinkInternetServiceRequest {
	r.unlinkInternetServiceRequest = &unlinkInternetServiceRequest
	return r
}

func (r ApiUnlinkInternetServiceRequest) Execute() (UnlinkInternetServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkInternetServiceExecute(r)
}

/*
 * UnlinkInternetService Method for UnlinkInternetService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkInternetServiceRequest
 */
func (a *InternetServiceApiService) UnlinkInternetService(ctx _context.Context) ApiUnlinkInternetServiceRequest {
	return ApiUnlinkInternetServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkInternetServiceResponse
 */
func (a *InternetServiceApiService) UnlinkInternetServiceExecute(r ApiUnlinkInternetServiceRequest) (UnlinkInternetServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkInternetServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "InternetServiceApiService.UnlinkInternetService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkInternetService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkInternetServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// KeypairApiService KeypairApi service
type KeypairApiService service

type ApiCreateKeypairRequest struct {
	ctx _context.Context
	ApiService *KeypairApiService
	createKeypairRequest *CreateKeypairRequest
}

func (r ApiCreateKeypairRequest) CreateKeypairRequest(createKeypairRequest CreateKeypairRequest) ApiCreateKeypairRequest {
	r.createKeypairRequest = &createKeypairRequest
	return r
}

func (r ApiCreateKeypairRequest) Execute() (CreateKeypairResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateKeypairExecute(r)
}

/*
 * CreateKeypair Method for CreateKeypair
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateKeypairRequest
 */
func (a *KeypairApiService) CreateKeypair(ctx _context.Context) ApiCreateKeypairRequest {
	return ApiCreateKeypairRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateKeypairResponse
 */
func (a *KeypairApiService) CreateKeypairExecute(r ApiCreateKeypairRequest) (CreateKeypairResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateKeypairResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "KeypairApiService.CreateKeypair")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateKeypair"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createKeypairRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteKeypairRequest struct {
	ctx _context.Context
	ApiService *KeypairApiService
	deleteKeypairRequest *DeleteKeypairRequest
}

func (r ApiDeleteKeypairRequest) DeleteKeypairRequest(deleteKeypairRequest DeleteKeypairRequest) ApiDeleteKeypairRequest {
	r.deleteKeypairRequest = &deleteKeypairRequest
	return r
}

func (r ApiDeleteKeypairRequest) Execute() (DeleteKeypairResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteKeypairExecute(r)
}

/*
 * DeleteKeypair Method for DeleteKeypair
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteKeypairRequest
 */
func (a *KeypairApiService) DeleteKeypair(ctx _context.Context) ApiDeleteKeypairRequest {
	return ApiDeleteKeypairRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteKeypairResponse
 */
func (a *KeypairApiService) DeleteKeypairExecute(r ApiDeleteKeypairRequest) (DeleteKeypairResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteKeypairResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "KeypairApiService.DeleteKeypair")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteKeypair"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteKeypairRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadKeypairsRequest struct {
	ctx _context.Context
	ApiService *KeypairApiService
	readKeypairsRequest *ReadKeypairsRequest
}

func (r ApiReadKeypairsRequest) ReadKeypairsRequest(readKeypairsRequest ReadKeypairsRequest) ApiReadKeypairsRequest {
	r.readKeypairsRequest = &readKeypairsRequest
	return r
}

func (r ApiReadKeypairsRequest) Execute() (ReadKeypairsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadKeypairsExecute(r)
}

/*
 * ReadKeypairs Method for ReadKeypairs
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadKeypairsRequest
 */
func (a *KeypairApiService) ReadKeypairs(ctx _context.Context) ApiReadKeypairsRequest {
	return ApiReadKeypairsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadKeypairsResponse
 */
func (a *KeypairApiService) ReadKeypairsExecute(r ApiReadKeypairsRequest) (ReadKeypairsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadKeypairsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "KeypairApiService.ReadKeypairs")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadKeypairs"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readKeypairsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ListenerApiService ListenerApi service
type ListenerApiService service

type ApiCreateListenerRuleRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	createListenerRuleRequest *CreateListenerRuleRequest
}

func (r ApiCreateListenerRuleRequest) CreateListenerRuleRequest(createListenerRuleRequest CreateListenerRuleRequest) ApiCreateListenerRuleRequest {
	r.createListenerRuleRequest = &createListenerRuleRequest
	return r
}

func (r ApiCreateListenerRuleRequest) Execute() (CreateListenerRuleResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateListenerRuleExecute(r)
}

/*
 * CreateListenerRule Method for CreateListenerRule
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateListenerRuleRequest
 */
func (a *ListenerApiService) CreateListenerRule(ctx _context.Context) ApiCreateListenerRuleRequest {
	return ApiCreateListenerRuleRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateListenerRuleResponse
 */
func (a *ListenerApiService) CreateListenerRuleExecute(r ApiCreateListenerRuleRequest) (CreateListenerRuleResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateListenerRuleResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.CreateListenerRule")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateListenerRule"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createListenerRuleRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateLoadBalancerListenersRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	createLoadBalancerListenersRequest *CreateLoadBalancerListenersRequest
}

func (r ApiCreateLoadBalancerListenersRequest) CreateLoadBalancerListenersRequest(createLoadBalancerListenersRequest CreateLoadBalancerListenersRequest) ApiCreateLoadBalancerListenersRequest {
	r.createLoadBalancerListenersRequest = &createLoadBalancerListenersRequest
	return r
}

func (r ApiCreateLoadBalancerListenersRequest) Execute() (CreateLoadBalancerListenersResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateLoadBalancerListenersExecute(r)
}

/*
 * CreateLoadBalancerListeners Method for CreateLoadBalancerListeners
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateLoadBalancerListenersRequest
 */
func (a *ListenerApiService) CreateLoadBalancerListeners(ctx _context.Context) ApiCreateLoadBalancerListenersRequest {
	return ApiCreateLoadBalancerListenersRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateLoadBalancerListenersResponse
 */
func (a *ListenerApiService) CreateLoadBalancerListenersExecute(r ApiCreateLoadBalancerListenersRequest) (CreateLoadBalancerListenersResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateLoadBalancerListenersResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.CreateLoadBalancerListeners")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateLoadBalancerListeners"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createLoadBalancerListenersRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteListenerRuleRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	deleteListenerRuleRequest *DeleteListenerRuleRequest
}

func (r ApiDeleteListenerRuleRequest) DeleteListenerRuleRequest(deleteListenerRuleRequest DeleteListenerRuleRequest) ApiDeleteListenerRuleRequest {
	r.deleteListenerRuleRequest = &deleteListenerRuleRequest
	return r
}

func (r ApiDeleteListenerRuleRequest) Execute() (DeleteListenerRuleResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteListenerRuleExecute(r)
}

/*
 * DeleteListenerRule Method for DeleteListenerRule
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteListenerRuleRequest
 */
func (a *ListenerApiService) DeleteListenerRule(ctx _context.Context) ApiDeleteListenerRuleRequest {
	return ApiDeleteListenerRuleRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteListenerRuleResponse
 */
func (a *ListenerApiService) DeleteListenerRuleExecute(r ApiDeleteListenerRuleRequest) (DeleteListenerRuleResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteListenerRuleResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.DeleteListenerRule")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteListenerRule"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteListenerRuleRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteLoadBalancerListenersRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	deleteLoadBalancerListenersRequest *DeleteLoadBalancerListenersRequest
}

func (r ApiDeleteLoadBalancerListenersRequest) DeleteLoadBalancerListenersRequest(deleteLoadBalancerListenersRequest DeleteLoadBalancerListenersRequest) ApiDeleteLoadBalancerListenersRequest {
	r.deleteLoadBalancerListenersRequest = &deleteLoadBalancerListenersRequest
	return r
}

func (r ApiDeleteLoadBalancerListenersRequest) Execute() (DeleteLoadBalancerListenersResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteLoadBalancerListenersExecute(r)
}

/*
 * DeleteLoadBalancerListeners Method for DeleteLoadBalancerListeners
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteLoadBalancerListenersRequest
 */
func (a *ListenerApiService) DeleteLoadBalancerListeners(ctx _context.Context) ApiDeleteLoadBalancerListenersRequest {
	return ApiDeleteLoadBalancerListenersRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteLoadBalancerListenersResponse
 */
func (a *ListenerApiService) DeleteLoadBalancerListenersExecute(r ApiDeleteLoadBalancerListenersRequest) (DeleteLoadBalancerListenersResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteLoadBalancerListenersResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.DeleteLoadBalancerListeners")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteLoadBalancerListeners"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteLoadBalancerListenersRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadListenerRulesRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	readListenerRulesRequest *ReadListenerRulesRequest
}

func (r ApiReadListenerRulesRequest) ReadListenerRulesRequest(readListenerRulesRequest ReadListenerRulesRequest) ApiReadListenerRulesRequest {
	r.readListenerRulesRequest = &readListenerRulesRequest
	return r
}

func (r ApiReadListenerRulesRequest) Execute() (ReadListenerRulesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadListenerRulesExecute(r)
}

/*
 * ReadListenerRules Method for ReadListenerRules
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadListenerRulesRequest
 */
func (a *ListenerApiService) ReadListenerRules(ctx _context.Context) ApiReadListenerRulesRequest {
	return ApiReadListenerRulesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadListenerRulesResponse
 */
func (a *ListenerApiService) ReadListenerRulesExecute(r ApiReadListenerRulesRequest) (ReadListenerRulesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadListenerRulesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.ReadListenerRules")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadListenerRules"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readListenerRulesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateListenerRuleRequest struct {
	ctx _context.Context
	ApiService *ListenerApiService
	updateListenerRuleRequest *UpdateListenerRuleRequest
}

func (r ApiUpdateListenerRuleRequest) UpdateListenerRuleRequest(updateListenerRuleRequest UpdateListenerRuleRequest) ApiUpdateListenerRuleRequest {
	r.updateListenerRuleRequest = &updateListenerRuleRequest
	return r
}

func (r ApiUpdateListenerRuleRequest) Execute() (UpdateListenerRuleResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateListenerRuleExecute(r)
}

/*
 * UpdateListenerRule Method for UpdateListenerRule
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateListenerRuleRequest
 */
func (a *ListenerApiService) UpdateListenerRule(ctx _context.Context) ApiUpdateListenerRuleRequest {
	return ApiUpdateListenerRuleRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateListenerRuleResponse
 */
func (a *ListenerApiService) UpdateListenerRuleExecute(r ApiUpdateListenerRuleRequest) (UpdateListenerRuleResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateListenerRuleResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ListenerApiService.UpdateListenerRule")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateListenerRule"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateListenerRuleRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// LoadBalancerApiService LoadBalancerApi service
type LoadBalancerApiService service

type ApiCreateLoadBalancerRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	createLoadBalancerRequest *CreateLoadBalancerRequest
}

func (r ApiCreateLoadBalancerRequest) CreateLoadBalancerRequest(createLoadBalancerRequest CreateLoadBalancerRequest) ApiCreateLoadBalancerRequest {
	r.createLoadBalancerRequest = &createLoadBalancerRequest
	return r
}

func (r ApiCreateLoadBalancerRequest) Execute() (CreateLoadBalancerResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateLoadBalancerExecute(r)
}

/*
 * CreateLoadBalancer Method for CreateLoadBalancer
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateLoadBalancerRequest
 */
func (a *LoadBalancerApiService) CreateLoadBalancer(ctx _context.Context) ApiCreateLoadBalancerRequest {
	return ApiCreateLoadBalancerRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateLoadBalancerResponse
 */
func (a *LoadBalancerApiService) CreateLoadBalancerExecute(r ApiCreateLoadBalancerRequest) (CreateLoadBalancerResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateLoadBalancerResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.CreateLoadBalancer")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateLoadBalancer"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createLoadBalancerRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateLoadBalancerTagsRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	createLoadBalancerTagsRequest *CreateLoadBalancerTagsRequest
}

func (r ApiCreateLoadBalancerTagsRequest) CreateLoadBalancerTagsRequest(createLoadBalancerTagsRequest CreateLoadBalancerTagsRequest) ApiCreateLoadBalancerTagsRequest {
	r.createLoadBalancerTagsRequest = &createLoadBalancerTagsRequest
	return r
}

func (r ApiCreateLoadBalancerTagsRequest) Execute() (CreateLoadBalancerTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateLoadBalancerTagsExecute(r)
}

/*
 * CreateLoadBalancerTags Method for CreateLoadBalancerTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateLoadBalancerTagsRequest
 */
func (a *LoadBalancerApiService) CreateLoadBalancerTags(ctx _context.Context) ApiCreateLoadBalancerTagsRequest {
	return ApiCreateLoadBalancerTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateLoadBalancerTagsResponse
 */
func (a *LoadBalancerApiService) CreateLoadBalancerTagsExecute(r ApiCreateLoadBalancerTagsRequest) (CreateLoadBalancerTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateLoadBalancerTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.CreateLoadBalancerTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateLoadBalancerTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createLoadBalancerTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteLoadBalancerRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	deleteLoadBalancerRequest *DeleteLoadBalancerRequest
}

func (r ApiDeleteLoadBalancerRequest) DeleteLoadBalancerRequest(deleteLoadBalancerRequest DeleteLoadBalancerRequest) ApiDeleteLoadBalancerRequest {
	r.deleteLoadBalancerRequest = &deleteLoadBalancerRequest
	return r
}

func (r ApiDeleteLoadBalancerRequest) Execute() (DeleteLoadBalancerResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteLoadBalancerExecute(r)
}

/*
 * DeleteLoadBalancer Method for DeleteLoadBalancer
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteLoadBalancerRequest
 */
func (a *LoadBalancerApiService) DeleteLoadBalancer(ctx _context.Context) ApiDeleteLoadBalancerRequest {
	return ApiDeleteLoadBalancerRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteLoadBalancerResponse
 */
func (a *LoadBalancerApiService) DeleteLoadBalancerExecute(r ApiDeleteLoadBalancerRequest) (DeleteLoadBalancerResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteLoadBalancerResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.DeleteLoadBalancer")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteLoadBalancer"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteLoadBalancerRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteLoadBalancerTagsRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	deleteLoadBalancerTagsRequest *DeleteLoadBalancerTagsRequest
}

func (r ApiDeleteLoadBalancerTagsRequest) DeleteLoadBalancerTagsRequest(deleteLoadBalancerTagsRequest DeleteLoadBalancerTagsRequest) ApiDeleteLoadBalancerTagsRequest {
	r.deleteLoadBalancerTagsRequest = &deleteLoadBalancerTagsRequest
	return r
}

func (r ApiDeleteLoadBalancerTagsRequest) Execute() (DeleteLoadBalancerTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteLoadBalancerTagsExecute(r)
}

/*
 * DeleteLoadBalancerTags Method for DeleteLoadBalancerTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteLoadBalancerTagsRequest
 */
func (a *LoadBalancerApiService) DeleteLoadBalancerTags(ctx _context.Context) ApiDeleteLoadBalancerTagsRequest {
	return ApiDeleteLoadBalancerTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteLoadBalancerTagsResponse
 */
func (a *LoadBalancerApiService) DeleteLoadBalancerTagsExecute(r ApiDeleteLoadBalancerTagsRequest) (DeleteLoadBalancerTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteLoadBalancerTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.DeleteLoadBalancerTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteLoadBalancerTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteLoadBalancerTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeregisterVmsInLoadBalancerRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	deregisterVmsInLoadBalancerRequest *DeregisterVmsInLoadBalancerRequest
}

func (r ApiDeregisterVmsInLoadBalancerRequest) DeregisterVmsInLoadBalancerRequest(deregisterVmsInLoadBalancerRequest DeregisterVmsInLoadBalancerRequest) ApiDeregisterVmsInLoadBalancerRequest {
	r.deregisterVmsInLoadBalancerRequest = &deregisterVmsInLoadBalancerRequest
	return r
}

func (r ApiDeregisterVmsInLoadBalancerRequest) Execute() (DeregisterVmsInLoadBalancerResponse, *_nethttp.Response, error) {
	return r.ApiService.DeregisterVmsInLoadBalancerExecute(r)
}

/*
 * DeregisterVmsInLoadBalancer Method for DeregisterVmsInLoadBalancer
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeregisterVmsInLoadBalancerRequest
 */
func (a *LoadBalancerApiService) DeregisterVmsInLoadBalancer(ctx _context.Context) ApiDeregisterVmsInLoadBalancerRequest {
	return ApiDeregisterVmsInLoadBalancerRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeregisterVmsInLoadBalancerResponse
 */
func (a *LoadBalancerApiService) DeregisterVmsInLoadBalancerExecute(r ApiDeregisterVmsInLoadBalancerRequest) (DeregisterVmsInLoadBalancerResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeregisterVmsInLoadBalancerResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.DeregisterVmsInLoadBalancer")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeregisterVmsInLoadBalancer"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deregisterVmsInLoadBalancerRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadLoadBalancerTagsRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	readLoadBalancerTagsRequest *ReadLoadBalancerTagsRequest
}

func (r ApiReadLoadBalancerTagsRequest) ReadLoadBalancerTagsRequest(readLoadBalancerTagsRequest ReadLoadBalancerTagsRequest) ApiReadLoadBalancerTagsRequest {
	r.readLoadBalancerTagsRequest = &readLoadBalancerTagsRequest
	return r
}

func (r ApiReadLoadBalancerTagsRequest) Execute() (ReadLoadBalancerTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadLoadBalancerTagsExecute(r)
}

/*
 * ReadLoadBalancerTags Method for ReadLoadBalancerTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadLoadBalancerTagsRequest
 */
func (a *LoadBalancerApiService) ReadLoadBalancerTags(ctx _context.Context) ApiReadLoadBalancerTagsRequest {
	return ApiReadLoadBalancerTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadLoadBalancerTagsResponse
 */
func (a *LoadBalancerApiService) ReadLoadBalancerTagsExecute(r ApiReadLoadBalancerTagsRequest) (ReadLoadBalancerTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadLoadBalancerTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.ReadLoadBalancerTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadLoadBalancerTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readLoadBalancerTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadLoadBalancersRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	readLoadBalancersRequest *ReadLoadBalancersRequest
}

func (r ApiReadLoadBalancersRequest) ReadLoadBalancersRequest(readLoadBalancersRequest ReadLoadBalancersRequest) ApiReadLoadBalancersRequest {
	r.readLoadBalancersRequest = &readLoadBalancersRequest
	return r
}

func (r ApiReadLoadBalancersRequest) Execute() (ReadLoadBalancersResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadLoadBalancersExecute(r)
}

/*
 * ReadLoadBalancers Method for ReadLoadBalancers
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadLoadBalancersRequest
 */
func (a *LoadBalancerApiService) ReadLoadBalancers(ctx _context.Context) ApiReadLoadBalancersRequest {
	return ApiReadLoadBalancersRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadLoadBalancersResponse
 */
func (a *LoadBalancerApiService) ReadLoadBalancersExecute(r ApiReadLoadBalancersRequest) (ReadLoadBalancersResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadLoadBalancersResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.ReadLoadBalancers")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadLoadBalancers"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readLoadBalancersRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVmsHealthRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	readVmsHealthRequest *ReadVmsHealthRequest
}

func (r ApiReadVmsHealthRequest) ReadVmsHealthRequest(readVmsHealthRequest ReadVmsHealthRequest) ApiReadVmsHealthRequest {
	r.readVmsHealthRequest = &readVmsHealthRequest
	return r
}

func (r ApiReadVmsHealthRequest) Execute() (ReadVmsHealthResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVmsHealthExecute(r)
}

/*
 * ReadVmsHealth Method for ReadVmsHealth
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVmsHealthRequest
 */
func (a *LoadBalancerApiService) ReadVmsHealth(ctx _context.Context) ApiReadVmsHealthRequest {
	return ApiReadVmsHealthRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVmsHealthResponse
 */
func (a *LoadBalancerApiService) ReadVmsHealthExecute(r ApiReadVmsHealthRequest) (ReadVmsHealthResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVmsHealthResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.ReadVmsHealth")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVmsHealth"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVmsHealthRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiRegisterVmsInLoadBalancerRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	registerVmsInLoadBalancerRequest *RegisterVmsInLoadBalancerRequest
}

func (r ApiRegisterVmsInLoadBalancerRequest) RegisterVmsInLoadBalancerRequest(registerVmsInLoadBalancerRequest RegisterVmsInLoadBalancerRequest) ApiRegisterVmsInLoadBalancerRequest {
	r.registerVmsInLoadBalancerRequest = &registerVmsInLoadBalancerRequest
	return r
}

func (r ApiRegisterVmsInLoadBalancerRequest) Execute() (RegisterVmsInLoadBalancerResponse, *_nethttp.Response, error) {
	return r.ApiService.RegisterVmsInLoadBalancerExecute(r)
}

/*
 * RegisterVmsInLoadBalancer Method for RegisterVmsInLoadBalancer
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiRegisterVmsInLoadBalancerRequest
 */
func (a *LoadBalancerApiService) RegisterVmsInLoadBalancer(ctx _context.Context) ApiRegisterVmsInLoadBalancerRequest {
	return ApiRegisterVmsInLoadBalancerRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return RegisterVmsInLoadBalancerResponse
 */
func (a *LoadBalancerApiService) RegisterVmsInLoadBalancerExecute(r ApiRegisterVmsInLoadBalancerRequest) (RegisterVmsInLoadBalancerResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  RegisterVmsInLoadBalancerResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.RegisterVmsInLoadBalancer")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/RegisterVmsInLoadBalancer"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.registerVmsInLoadBalancerRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateLoadBalancerRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerApiService
	updateLoadBalancerRequest *UpdateLoadBalancerRequest
}

func (r ApiUpdateLoadBalancerRequest) UpdateLoadBalancerRequest(updateLoadBalancerRequest UpdateLoadBalancerRequest) ApiUpdateLoadBalancerRequest {
	r.updateLoadBalancerRequest = &updateLoadBalancerRequest
	return r
}

func (r ApiUpdateLoadBalancerRequest) Execute() (UpdateLoadBalancerResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateLoadBalancerExecute(r)
}

/*
 * UpdateLoadBalancer Method for UpdateLoadBalancer
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateLoadBalancerRequest
 */
func (a *LoadBalancerApiService) UpdateLoadBalancer(ctx _context.Context) ApiUpdateLoadBalancerRequest {
	return ApiUpdateLoadBalancerRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateLoadBalancerResponse
 */
func (a *LoadBalancerApiService) UpdateLoadBalancerExecute(r ApiUpdateLoadBalancerRequest) (UpdateLoadBalancerResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateLoadBalancerResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerApiService.UpdateLoadBalancer")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateLoadBalancer"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateLoadBalancerRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// LoadBalancerPolicyApiService LoadBalancerPolicyApi service
type LoadBalancerPolicyApiService service

type ApiCreateLoadBalancerPolicyRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerPolicyApiService
	createLoadBalancerPolicyRequest *CreateLoadBalancerPolicyRequest
}

func (r ApiCreateLoadBalancerPolicyRequest) CreateLoadBalancerPolicyRequest(createLoadBalancerPolicyRequest CreateLoadBalancerPolicyRequest) ApiCreateLoadBalancerPolicyRequest {
	r.createLoadBalancerPolicyRequest = &createLoadBalancerPolicyRequest
	return r
}

func (r ApiCreateLoadBalancerPolicyRequest) Execute() (CreateLoadBalancerPolicyResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateLoadBalancerPolicyExecute(r)
}

/*
 * CreateLoadBalancerPolicy Method for CreateLoadBalancerPolicy
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateLoadBalancerPolicyRequest
 */
func (a *LoadBalancerPolicyApiService) CreateLoadBalancerPolicy(ctx _context.Context) ApiCreateLoadBalancerPolicyRequest {
	return ApiCreateLoadBalancerPolicyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateLoadBalancerPolicyResponse
 */
func (a *LoadBalancerPolicyApiService) CreateLoadBalancerPolicyExecute(r ApiCreateLoadBalancerPolicyRequest) (CreateLoadBalancerPolicyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateLoadBalancerPolicyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerPolicyApiService.CreateLoadBalancerPolicy")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateLoadBalancerPolicy"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createLoadBalancerPolicyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteLoadBalancerPolicyRequest struct {
	ctx _context.Context
	ApiService *LoadBalancerPolicyApiService
	deleteLoadBalancerPolicyRequest *DeleteLoadBalancerPolicyRequest
}

func (r ApiDeleteLoadBalancerPolicyRequest) DeleteLoadBalancerPolicyRequest(deleteLoadBalancerPolicyRequest DeleteLoadBalancerPolicyRequest) ApiDeleteLoadBalancerPolicyRequest {
	r.deleteLoadBalancerPolicyRequest = &deleteLoadBalancerPolicyRequest
	return r
}

func (r ApiDeleteLoadBalancerPolicyRequest) Execute() (DeleteLoadBalancerPolicyResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteLoadBalancerPolicyExecute(r)
}

/*
 * DeleteLoadBalancerPolicy Method for DeleteLoadBalancerPolicy
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteLoadBalancerPolicyRequest
 */
func (a *LoadBalancerPolicyApiService) DeleteLoadBalancerPolicy(ctx _context.Context) ApiDeleteLoadBalancerPolicyRequest {
	return ApiDeleteLoadBalancerPolicyRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteLoadBalancerPolicyResponse
 */
func (a *LoadBalancerPolicyApiService) DeleteLoadBalancerPolicyExecute(r ApiDeleteLoadBalancerPolicyRequest) (DeleteLoadBalancerPolicyResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteLoadBalancerPolicyResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LoadBalancerPolicyApiService.DeleteLoadBalancerPolicy")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteLoadBalancerPolicy"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteLoadBalancerPolicyRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// LocationApiService LocationApi service
type LocationApiService service

type ApiReadLocationsRequest struct {
	ctx _context.Context
	ApiService *LocationApiService
	readLocationsRequest *ReadLocationsRequest
}

func (r ApiReadLocationsRequest) ReadLocationsRequest(readLocationsRequest ReadLocationsRequest) ApiReadLocationsRequest {
	r.readLocationsRequest = &readLocationsRequest
	return r
}

func (r ApiReadLocationsRequest) Execute() (ReadLocationsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadLocationsExecute(r)
}

/*
 * ReadLocations Method for ReadLocations
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadLocationsRequest
 */
func (a *LocationApiService) ReadLocations(ctx _context.Context) ApiReadLocationsRequest {
	return ApiReadLocationsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadLocationsResponse
 */
func (a *LocationApiService) ReadLocationsExecute(r ApiReadLocationsRequest) (ReadLocationsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadLocationsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "LocationApiService.ReadLocations")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadLocations"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readLocationsRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AcceptNetPeeringRequest struct for AcceptNetPeeringRequest
type AcceptNetPeeringRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net peering connection you want to accept.
	NetPeeringId string `json:"NetPeeringId"`
}

// NewAcceptNetPeeringRequest instantiates a new AcceptNetPeeringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptNetPeeringRequest(netPeeringId string, ) *AcceptNetPeeringRequest {
	this := AcceptNetPeeringRequest{}
	this.NetPeeringId = netPeeringId
	return &this
}

// NewAcceptNetPeeringRequestWithDefaults instantiates a new AcceptNetPeeringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptNetPeeringRequestWithDefaults() *AcceptNetPeeringRequest {
	this := AcceptNetPeeringRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *AcceptNetPeeringRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptNetPeeringRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *AcceptNetPeeringRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *AcceptNetPeeringRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetPeeringId returns the NetPeeringId field value
func (o *AcceptNetPeeringRequest) GetNetPeeringId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value
// and a boolean to check if the value has been set.
func (o *AcceptNetPeeringRequest) GetNetPeeringIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetPeeringId, true
}

// SetNetPeeringId sets field value
func (o *AcceptNetPeeringRequest) SetNetPeeringId(v string) {
	o.NetPeeringId = v
}

func (o AcceptNetPeeringRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	return json.Marshal(toSerialize)
}

type NullableAcceptNetPeeringRequest struct {
	value *AcceptNetPeeringRequest
	isSet bool
}

func (v NullableAcceptNetPeeringRequest) Get() *AcceptNetPeeringRequest {
	return v.value
}

func (v *NullableAcceptNetPeeringRequest) Set(val *AcceptNetPeeringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptNetPeeringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptNetPeeringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptNetPeeringRequest(val *AcceptNetPeeringRequest) *NullableAcceptNetPeeringRequest {
	return &NullableAcceptNetPeeringRequest{value: val, isSet: true}
}

func (v NullableAcceptNetPeeringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptNetPeeringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AcceptNetPeeringResponse struct for AcceptNetPeeringResponse
type AcceptNetPeeringResponse struct {
	NetPeering *NetPeering `json:"NetPeering,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewAcceptNetPeeringResponse instantiates a new AcceptNetPeeringResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptNetPeeringResponse() *AcceptNetPeeringResponse {
	this := AcceptNetPeeringResponse{}
	return &this
}

// NewAcceptNetPeeringResponseWithDefaults instantiates a new AcceptNetPeeringResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptNetPeeringResponseWithDefaults() *AcceptNetPeeringResponse {
	this := AcceptNetPeeringResponse{}
	return &this
}

// GetNetPeering returns the NetPeering field value if set, zero value otherwise.
func (o *AcceptNetPeeringResponse) GetNetPeering() NetPeering {
	if o == nil || o.NetPeering == nil {
		var ret NetPeering
		return ret
	}
	return *o.NetPeering
}

// GetNetPeeringOk returns a tuple with the NetPeering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptNetPeeringResponse) GetNetPeeringOk() (*NetPeering, bool) {
	if o == nil || o.NetPeering == nil {
		return nil, false
	}
	return o.NetPeering, true
}

// HasNetPeering returns a boolean if a field has been set.
func (o *AcceptNetPeeringResponse) HasNetPeering() bool {
	if o != nil && o.NetPeering != nil {
		return true
	}

	return false
}

// SetNetPeering gets a reference to the given NetPeering and assigns it to the NetPeering field.
func (o *AcceptNetPeeringResponse) SetNetPeering(v NetPeering) {
	o.NetPeering = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *AcceptNetPeeringResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptNetPeeringResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *AcceptNetPeeringResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *AcceptNetPeeringResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o AcceptNetPeeringResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetPeering != nil {
		toSerialize["NetPeering"] = o.NetPeering
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableAcceptNetPeeringResponse struct {
	value *AcceptNetPeeringResponse
	isSet bool
}

func (v NullableAcceptNetPeeringResponse) Get() *AcceptNetPeeringResponse {
	return v.value
}

func (v *NullableAcceptNetPeeringResponse) Set(val *AcceptNetPeeringResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptNetPeeringResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptNetPeeringResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptNetPeeringResponse(val *AcceptNetPeeringResponse) *NullableAcceptNetPeeringResponse {
	return &NullableAcceptNetPeeringResponse{value: val, isSet: true}
}

func (v NullableAcceptNetPeeringResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptNetPeeringResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AccepterNet Information about the accepter Net.
type AccepterNet struct {
	// The account ID of the owner of the accepter Net.
	AccountId *string `json:"AccountId,omitempty"`
	// The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// The ID of the accepter Net.
	NetId *string `json:"NetId,omitempty"`
}

// NewAccepterNet instantiates a new AccepterNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccepterNet() *AccepterNet {
	this := AccepterNet{}
	return &this
}

// NewAccepterNetWithDefaults instantiates a new AccepterNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccepterNetWithDefaults() *AccepterNet {
	this := AccepterNet{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AccepterNet) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccepterNet) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccepterNet) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AccepterNet) SetAccountId(v string) {
	o.AccountId = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *AccepterNet) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccepterNet) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *AccepterNet) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *AccepterNet) SetIpRange(v string) {
	o.IpRange = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *AccepterNet) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccepterNet) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *AccepterNet) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *AccepterNet) SetNetId(v string) {
	o.NetId = &v
}

func (o AccepterNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableAccepterNet struct {
	value *AccepterNet
	isSet bool
}

func (v NullableAccepterNet) Get() *AccepterNet {
	return v.value
}

func (v *NullableAccepterNet) Set(val *AccepterNet) {
	v.value = val
	v.isSet = true
}

func (v NullableAccepterNet) IsSet() bool {
	return v.isSet
}

func (v *NullableAccepterNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccepterNet(val *AccepterNet) *NullableAccepterNet {
	return &NullableAccepterNet{value: val, isSet: true}
}

func (v NullableAccepterNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccepterNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AccessKey Information about the access key.
type AccessKey struct {
	// The ID of the access key.
	AccessKeyId *string `json:"AccessKeyId,omitempty"`
	// The date and time of creation of the access key.
	CreationDate *string `json:"CreationDate,omitempty"`
	// The date at which the access key expires.
	ExpirationDate *string `json:"ExpirationDate,omitempty"`
	// The date and time of the last modification of the access key.
	LastModificationDate *string `json:"LastModificationDate,omitempty"`
	// The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
	State *string `json:"State,omitempty"`
}

// NewAccessKey instantiates a new AccessKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKey() *AccessKey {
	this := AccessKey{}
	return &this
}

// NewAccessKeyWithDefaults instantiates a new AccessKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyWithDefaults() *AccessKey {
	this := AccessKey{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *AccessKey) GetAccessKeyId() string {
	if o == nil || o.AccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKey) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || o.AccessKeyId == nil {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *AccessKey) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId != nil {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *AccessKey) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *AccessKey) GetCreationDate() string {
	if o == nil || o.CreationDate == nil {
		var ret string
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKey) GetCreationDateOk() (*string, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *AccessKey) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given string and assigns it to the CreationDate field.
func (o *AccessKey) SetCreationDate(v string) {
	o.CreationDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *AccessKey) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKey) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *AccessKey) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *AccessKey) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetLastModificationDate returns the LastModificationDate field value if set, zero value otherwise.
func (o *AccessKey) GetLastModificationDate() string {
	if o == nil || o.LastModificationDate == nil {
		var ret string
		return ret
	}
	return *o.LastModificationDate
}

// GetLastModificationDateOk returns a tuple with the LastModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKey) GetLastModificationDateOk() (*string, bool) {
	if o == nil || o.LastModificationDate == nil {
		return nil, false
	}
	return o.LastModificationDate, true
}

// HasLastModificationDate returns a boolean if a field has been set.
func (o *AccessKey) HasLastModificationDate() bool {
	if o != nil && o.LastModificationDate != nil {
		return true
	}

	return false
}

// SetLastModificationDate gets a reference to the given string and assigns it to the LastModificationDate field.
func (o *AccessKey) SetLastModificationDate(v string) {
	o.LastModificationDate = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AccessKey) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKey) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AccessKey) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AccessKey) SetState(v string) {
	o.State = &v
}

func (o AccessKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId != nil {
		toSerialize["AccessKeyId"] = o.AccessKeyId
	}
	if o.CreationDate != nil {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	if o.LastModificationDate != nil {
		toSerialize["LastModificationDate"] = o.LastModificationDate
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableAccessKey struct {
	value *AccessKey
	isSet bool
}

func (v NullableAccessKey) Get() *AccessKey {
	return v.value
}

func (v *NullableAccessKey) Set(val *AccessKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKey(val *AccessKey) *NullableAccessKey {
	return &NullableAccessKey{value: val, isSet: true}
}

func (v NullableAccessKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AccessKeySecretKey Information about the secret access key.
type AccessKeySecretKey struct {
	// The ID of the secret access key.
	AccessKeyId *string `json:"AccessKeyId,omitempty"`
	// The date and time of creation of the secret access key.
	CreationDate *string `json:"CreationDate,omitempty"`
	// The date at which the access key expires.
	ExpirationDate *string `json:"ExpirationDate,omitempty"`
	// The date and time of the last modification of the secret access key.
	LastModificationDate *string `json:"LastModificationDate,omitempty"`
	// The secret access key that enables you to send requests.
	SecretKey *string `json:"SecretKey,omitempty"`
	// The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not).
	State *string `json:"State,omitempty"`
}

// NewAccessKeySecretKey instantiates a new AccessKeySecretKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeySecretKey() *AccessKeySecretKey {
	this := AccessKeySecretKey{}
	return &this
}

// NewAccessKeySecretKeyWithDefaults instantiates a new AccessKeySecretKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeySecretKeyWithDefaults() *AccessKeySecretKey {
	this := AccessKeySecretKey{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetAccessKeyId() string {
	if o == nil || o.AccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || o.AccessKeyId == nil {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId != nil {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *AccessKeySecretKey) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetCreationDate() string {
	if o == nil || o.CreationDate == nil {
		var ret string
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetCreationDateOk() (*string, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given string and assigns it to the CreationDate field.
func (o *AccessKeySecretKey) SetCreationDate(v string) {
	o.CreationDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *AccessKeySecretKey) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetLastModificationDate returns the LastModificationDate field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetLastModificationDate() string {
	if o == nil || o.LastModificationDate == nil {
		var ret string
		return ret
	}
	return *o.LastModificationDate
}

// GetLastModificationDateOk returns a tuple with the LastModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetLastModificationDateOk() (*string, bool) {
	if o == nil || o.LastModificationDate == nil {
		return nil, false
	}
	return o.LastModificationDate, true
}

// HasLastModificationDate returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasLastModificationDate() bool {
	if o != nil && o.LastModificationDate != nil {
		return true
	}

	return false
}

// SetLastModificationDate gets a reference to the given string and assigns it to the LastModificationDate field.
func (o *AccessKeySecretKey) SetLastModificationDate(v string) {
	o.LastModificationDate = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AccessKeySecretKey) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AccessKeySecretKey) SetState(v string) {
	o.State = &v
}

func (o AccessKeySecretKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId != nil {
		toSerialize["AccessKeyId"] = o.AccessKeyId
	}
	if o.CreationDate != nil {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	if o.LastModificationDate != nil {
		toSerialize["LastModificationDate"] = o.LastModificationDate
	}
	if o.SecretKey != nil {
		toSerialize["SecretKey"] = o.SecretKey
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableAccessKeySecretKey struct {
	value *AccessKeySecretKey
	isSet bool
}

func (v NullableAccessKeySecretKey) Get() *AccessKeySecretKey {
	return v.value
}

func (v *NullableAccessKeySecretKey) Set(val *AccessKeySecretKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeySecretKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeySecretKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeySecretKey(val *AccessKeySecretKey) *NullableAccessKeySecretKey {
	return &NullableAccessKeySecretKey{value: val, isSet: true}
}

func (v NullableAccessKeySecretKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeySecretKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// AccessLog Information about access logs.
type AccessLog struct {
	// If `true`, access logs are enabled for your load balancer. If `false`, they are not. If you set this to `true` in your request, the `OsuBucketName` parameter is required.
	IsEnabled *bool `json:"IsEnabled,omitempty"`
	// The name of the Object Storage Unit (OSU) bucket for the access logs.
	OsuBucketName *string `json:"OsuBucketName,omitempty"`
	// The path to the folder of the access logs in your Object Storage Unit (OSU) bucket (by default, the `root` level of your bucket).
	OsuBucketPrefix *string `json:"OsuBucketPrefix,omitempty"`
	// The time interval for the publication of access logs in the Object Storage Unit (OSU) bucket, in minutes. This value can be either 5 or 60 (by default, 60).
	PublicationInterval *int32 `json:"PublicationInterval,omitempty"`
}

// NewAccessLog instantiates a new AccessLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessLog() *AccessLog {
	this := AccessLog{}
	return &this
}

// NewAccessLogWithDefaults instantiates a new AccessLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessLogWithDefaults() *AccessLog {
	this := AccessLog{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *AccessLog) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessLog) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *AccessLog) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *AccessLog) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetOsuBucketName returns the OsuBucketName field value if set, zero value otherwise.
func (o *AccessLog) GetOsuBucketName() string {
	if o == nil || o.OsuBucketName == nil {
		var ret string
		return ret
	}
	return *o.OsuBucketName
}

// GetOsuBucketNameOk returns a tuple with the OsuBucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessLog) GetOsuBucketNameOk() (*string, bool) {
	if o == nil || o.OsuBucketName == nil {
		return nil, false
	}
	return o.OsuBucketName, true
}

// HasOsuBucketName returns a boolean if a field has been set.
func (o *AccessLog) HasOsuBucketName() bool {
	if o != nil && o.OsuBucketName != nil {
		return true
	}

	return false
}

// SetOsuBucketName gets a reference to the given string and assigns it to the OsuBucketName field.
func (o *AccessLog) SetOsuBucketName(v string) {
	o.OsuBucketName = &v
}

// GetOsuBucketPrefix returns the OsuBucketPrefix field value if set, zero value otherwise.
func (o *AccessLog) GetOsuBucketPrefix() string {
	if o == nil || o.OsuBucketPrefix == nil {
		var ret string
		return ret
	}
	return *o.OsuBucketPrefix
}

// GetOsuBucketPrefixOk returns a tuple with the OsuBucketPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessLog) GetOsuBucketPrefixOk() (*string, bool) {
	if o == nil || o.OsuBucketPrefix == nil {
		return nil, false
	}
	return o.OsuBucketPrefix, true
}

// HasOsuBucketPrefix returns a boolean if a field has been set.
func (o *AccessLog) HasOsuBucketPrefix() bool {
	if o != nil && o.OsuBucketPrefix != nil {
		return true
	}

	return false
}

// SetOsuBucketPrefix gets a reference to the given string and assigns it to the OsuBucketPrefix field.
func (o *AccessLog) SetOsuBucketPrefix(v string) {
	o.OsuBucketPrefix = &v
}

// GetPublicationInterval returns the PublicationInterval field value if set, zero value otherwise.
func (o *AccessLog) GetPublicationInterval() int32 {
	if o == nil || o.PublicationInterval == nil {
		var ret int32
		return ret
	}
	return *o.PublicationInterval
}

// GetPublicationIntervalOk returns a tuple with the PublicationInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessLog) GetPublicationIntervalOk() (*int32, bool) {
	if o == nil || o.PublicationInterval == nil {
		return nil, false
	}
	return o.PublicationInterval, true
}

// HasPublicationInterval returns a boolean if a field has been set.
func (o *AccessLog) HasPublicationInterval() bool {
	if o != nil && o.PublicationInterval != nil {
		return true
	}

	return false
}

// SetPublicationInterval gets a reference to the given int32 and assigns it to the PublicationInterval field.
func (o *AccessLog) SetPublicationInterval(v int32) {
	o.PublicationInterval = &v
}

func (o AccessLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsEnabled != nil {
		toSerialize["IsEnabled"] = o.IsEnabled
	}
	if o.OsuBucketName != nil {
		toSerialize["OsuBucketName"] = o.OsuBucketName
	}
	if o.OsuBucketPrefix != nil {
		toSerialize["OsuBucketPrefix"] = o.OsuBucketPrefix
	}
	if o.PublicationInterval != nil {
		toSerialize["PublicationInterval"] = o.PublicationInterval
	}
	return json.Marshal(toSerialize)
}

type NullableAccessLog struct {
	value *AccessLog
	isSet bool
}

func (v NullableAccessLog) Get() *AccessLog {
	return v.value
}

func (v *NullableAccessLog) Set(val *AccessLog) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessLog) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessLog(val *AccessLog) *NullableAccessLog {
	return &NullableAccessLog{value: val, isSet: true}
}

func (v NullableAccessLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Account Information about the account.
type Account struct {
	// The ID of the account.
	AccountId *string `json:"AccountId,omitempty"`
	// The city of the account owner.
	City *string `json:"City,omitempty"`
	// The name of the company for the account.
	CompanyName *string `json:"CompanyName,omitempty"`
	// The country of the account owner.
	Country *string `json:"Country,omitempty"`
	// The ID of the customer.
	CustomerId *string `json:"CustomerId,omitempty"`
	// The email address for the account.
	Email *string `json:"Email,omitempty"`
	// The first name of the account owner.
	FirstName *string `json:"FirstName,omitempty"`
	// The job title of the account owner.
	JobTitle *string `json:"JobTitle,omitempty"`
	// The last name of the account owner.
	LastName *string `json:"LastName,omitempty"`
	// The mobile phone number of the account owner.
	MobileNumber *string `json:"MobileNumber,omitempty"`
	// The landline phone number of the account owner.
	PhoneNumber *string `json:"PhoneNumber,omitempty"`
	// The state/province of the account.
	StateProvince *string `json:"StateProvince,omitempty"`
	// The value added tax (VAT) number for the account.
	VatNumber *string `json:"VatNumber,omitempty"`
	// The ZIP code of the city.
	ZipCode *string `json:"ZipCode,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount() *Account {
	this := Account{}
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Account) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Account) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Account) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *Account) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *Account) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *Account) SetCity(v string) {
	o.City = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *Account) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Account) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *Account) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Account) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Account) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *Account) SetCountry(v string) {
	o.Country = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *Account) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *Account) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *Account) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Account) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Account) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Account) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Account) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Account) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Account) SetFirstName(v string) {
	o.FirstName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *Account) GetJobTitle() string {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetJobTitleOk() (*string, bool) {
	if o == nil || o.JobTitle == nil {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *Account) HasJobTitle() bool {
	if o != nil && o.JobTitle != nil {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *Account) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Account) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Account) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Account) SetLastName(v string) {
	o.LastName = &v
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *Account) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *Account) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *Account) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Account) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Account) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Account) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStateProvince returns the StateProvince field value if set, zero value otherwise.
func (o *Account) GetStateProvince() string {
	if o == nil || o.StateProvince == nil {
		var ret string
		return ret
	}
	return *o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetStateProvinceOk() (*string, bool) {
	if o == nil || o.StateProvince == nil {
		return nil, false
	}
	return o.StateProvince, true
}

// HasStateProvince returns a boolean if a field has been set.
func (o *Account) HasStateProvince() bool {
	if o != nil && o.StateProvince != nil {
		return true
	}

	return false
}

// SetStateProvince gets a reference to the given string and assigns it to the StateProvince field.
func (o *Account) SetStateProvince(v string) {
	o.StateProvince = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *Account) GetVatNumber() string {
	if o == nil || o.VatNumber == nil {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetVatNumberOk() (*string, bool) {
	if o == nil || o.VatNumber == nil {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *Account) HasVatNumber() bool {
	if o != nil && o.VatNumber != nil {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *Account) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *Account) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *Account) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *Account) SetZipCode(v string) {
	o.ZipCode = &v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.City != nil {
		toSerialize["City"] = o.City
	}
	if o.CompanyName != nil {
		toSerialize["CompanyName"] = o.CompanyName
	}
	if o.Country != nil {
		toSerialize["Country"] = o.Country
	}
	if o.CustomerId != nil {
		toSerialize["CustomerId"] = o.CustomerId
	}
	if o.Email != nil {
		toSerialize["Email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["FirstName"] = o.FirstName
	}
	if o.JobTitle != nil {
		toSerialize["JobTitle"] = o.JobTitle
	}
	if o.LastName != nil {
		toSerialize["LastName"] = o.LastName
	}
	if o.MobileNumber != nil {
		toSerialize["MobileNumber"] = o.MobileNumber
	}
	if o.PhoneNumber != nil {
		toSerialize["PhoneNumber"] = o.PhoneNumber
	}
	if o.StateProvince != nil {
		toSerialize["StateProvince"] = o.StateProvince
	}
	if o.VatNumber != nil {
		toSerialize["VatNumber"] = o.VatNumber
	}
	if o.ZipCode != nil {
		toSerialize["ZipCode"] = o.ZipCode
	}
	return json.Marshal(toSerialize)
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ApplicationStickyCookiePolicy Information about the stickiness policy.
type ApplicationStickyCookiePolicy struct {
	// The name of the application cookie used for stickiness.
	CookieName *string `json:"CookieName,omitempty"`
	// The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.
	PolicyName *string `json:"PolicyName,omitempty"`
}

// NewApplicationStickyCookiePolicy instantiates a new ApplicationStickyCookiePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationStickyCookiePolicy() *ApplicationStickyCookiePolicy {
	this := ApplicationStickyCookiePolicy{}
	return &this
}

// NewApplicationStickyCookiePolicyWithDefaults instantiates a new ApplicationStickyCookiePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationStickyCookiePolicyWithDefaults() *ApplicationStickyCookiePolicy {
	this := ApplicationStickyCookiePolicy{}
	return &this
}

// GetCookieName returns the CookieName field value if set, zero value otherwise.
func (o *ApplicationStickyCookiePolicy) GetCookieName() string {
	if o == nil || o.CookieName == nil {
		var ret string
		return ret
	}
	return *o.CookieName
}

// GetCookieNameOk returns a tuple with the CookieName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationStickyCookiePolicy) GetCookieNameOk() (*string, bool) {
	if o == nil || o.CookieName == nil {
		return nil, false
	}
	return o.CookieName, true
}

// HasCookieName returns a boolean if a field has been set.
func (o *ApplicationStickyCookiePolicy) HasCookieName() bool {
	if o != nil && o.CookieName != nil {
		return true
	}

	return false
}

// SetCookieName gets a reference to the given string and assigns it to the CookieName field.
func (o *ApplicationStickyCookiePolicy) SetCookieName(v string) {
	o.CookieName = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *ApplicationStickyCookiePolicy) GetPolicyName() string {
	if o == nil || o.PolicyName == nil {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationStickyCookiePolicy) GetPolicyNameOk() (*string, bool) {
	if o == nil || o.PolicyName == nil {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ApplicationStickyCookiePolicy) HasPolicyName() bool {
	if o != nil && o.PolicyName != nil {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *ApplicationStickyCookiePolicy) SetPolicyName(v string) {
	o.PolicyName = &v
}

func (o ApplicationStickyCookiePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CookieName != nil {
		toSerialize["CookieName"] = o.CookieName
	}
	if o.PolicyName != nil {
		toSerialize["PolicyName"] = o.PolicyName
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationStickyCookiePolicy struct {
	value *ApplicationStickyCookiePolicy
	isSet bool
}

func (v NullableApplicationStickyCookiePolicy) Get() *ApplicationStickyCookiePolicy {
	return v.value
}

func (v *NullableApplicationStickyCookiePolicy) Set(val *ApplicationStickyCookiePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationStickyCookiePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationStickyCookiePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationStickyCookiePolicy(val *ApplicationStickyCookiePolicy) *NullableApplicationStickyCookiePolicy {
	return &NullableApplicationStickyCookiePolicy{value: val, isSet: true}
}

func (v NullableApplicationStickyCookiePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationStickyCookiePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BackendVmHealth Information about the health of a back-end VM.
type BackendVmHealth struct {
	// The description of the state of the back-end VM.
	Description *string `json:"Description,omitempty"`
	// The state of the back-end VM (`InService` \\| `OutOfService` \\| `Unknown`).
	State *string `json:"State,omitempty"`
	// Information about the cause of `OutOfService` VMs.<br /> Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \\| `Instance` \\| `N/A`).
	StateReason *string `json:"StateReason,omitempty"`
	// The ID of the back-end VM.
	VmId *string `json:"VmId,omitempty"`
}

// NewBackendVmHealth instantiates a new BackendVmHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackendVmHealth() *BackendVmHealth {
	this := BackendVmHealth{}
	return &this
}

// NewBackendVmHealthWithDefaults instantiates a new BackendVmHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackendVmHealthWithDefaults() *BackendVmHealth {
	this := BackendVmHealth{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BackendVmHealth) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackendVmHealth) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BackendVmHealth) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BackendVmHealth) SetDescription(v string) {
	o.Description = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BackendVmHealth) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackendVmHealth) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BackendVmHealth) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BackendVmHealth) SetState(v string) {
	o.State = &v
}

// GetStateReason returns the StateReason field value if set, zero value otherwise.
func (o *BackendVmHealth) GetStateReason() string {
	if o == nil || o.StateReason == nil {
		var ret string
		return ret
	}
	return *o.StateReason
}

// GetStateReasonOk returns a tuple with the StateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackendVmHealth) GetStateReasonOk() (*string, bool) {
	if o == nil || o.StateReason == nil {
		return nil, false
	}
	return o.StateReason, true
}

// HasStateReason returns a boolean if a field has been set.
func (o *BackendVmHealth) HasStateReason() bool {
	if o != nil && o.StateReason != nil {
		return true
	}

	return false
}

// SetStateReason gets a reference to the given string and assigns it to the StateReason field.
func (o *BackendVmHealth) SetStateReason(v string) {
	o.StateReason = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *BackendVmHealth) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackendVmHealth) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *BackendVmHealth) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *BackendVmHealth) SetVmId(v string) {
	o.VmId = &v
}

func (o BackendVmHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.StateReason != nil {
		toSerialize["StateReason"] = o.StateReason
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableBackendVmHealth struct {
	value *BackendVmHealth
	isSet bool
}

func (v NullableBackendVmHealth) Get() *BackendVmHealth {
	return v.value
}

func (v *NullableBackendVmHealth) Set(val *BackendVmHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableBackendVmHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableBackendVmHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackendVmHealth(val *BackendVmHealth) *NullableBackendVmHealth {
	return &NullableBackendVmHealth{value: val, isSet: true}
}

func (v NullableBackendVmHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackendVmHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BlockDeviceMappingCreated Information about the created block device mapping.
type BlockDeviceMappingCreated struct {
	Bsu *BsuCreated `json:"Bsu,omitempty"`
	// The name of the device.
	DeviceName *string `json:"DeviceName,omitempty"`
}

// NewBlockDeviceMappingCreated instantiates a new BlockDeviceMappingCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDeviceMappingCreated() *BlockDeviceMappingCreated {
	this := BlockDeviceMappingCreated{}
	return &this
}

// NewBlockDeviceMappingCreatedWithDefaults instantiates a new BlockDeviceMappingCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDeviceMappingCreatedWithDefaults() *BlockDeviceMappingCreated {
	this := BlockDeviceMappingCreated{}
	return &this
}

// GetBsu returns the Bsu field value if set, zero value otherwise.
func (o *BlockDeviceMappingCreated) GetBsu() BsuCreated {
	if o == nil || o.Bsu == nil {
		var ret BsuCreated
		return ret
	}
	return *o.Bsu
}

// GetBsuOk returns a tuple with the Bsu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingCreated) GetBsuOk() (*BsuCreated, bool) {
	if o == nil || o.Bsu == nil {
		return nil, false
	}
	return o.Bsu, true
}

// HasBsu returns a boolean if a field has been set.
func (o *BlockDeviceMappingCreated) HasBsu() bool {
	if o != nil && o.Bsu != nil {
		return true
	}

	return false
}

// SetBsu gets a reference to the given BsuCreated and assigns it to the Bsu field.
func (o *BlockDeviceMappingCreated) SetBsu(v BsuCreated) {
	o.Bsu = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingCreated) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingCreated) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingCreated) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *BlockDeviceMappingCreated) SetDeviceName(v string) {
	o.DeviceName = &v
}

func (o BlockDeviceMappingCreated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bsu != nil {
		toSerialize["Bsu"] = o.Bsu
	}
	if o.DeviceName != nil {
		toSerialize["DeviceName"] = o.DeviceName
	}
	return json.Marshal(toSerialize)
}

type NullableBlockDeviceMappingCreated struct {
	value *BlockDeviceMappingCreated
	isSet bool
}

func (v NullableBlockDeviceMappingCreated) Get() *BlockDeviceMappingCreated {
	return v.value
}

func (v *NullableBlockDeviceMappingCreated) Set(val *BlockDeviceMappingCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDeviceMappingCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDeviceMappingCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDeviceMappingCreated(val *BlockDeviceMappingCreated) *NullableBlockDeviceMappingCreated {
	return &NullableBlockDeviceMappingCreated{value: val, isSet: true}
}

func (v NullableBlockDeviceMappingCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDeviceMappingCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BlockDeviceMappingImage One or more parameters used to automatically set up volumes when the VM is created.
type BlockDeviceMappingImage struct {
	Bsu *BsuToCreate `json:"Bsu,omitempty"`
	// The name of the device.
	DeviceName *string `json:"DeviceName,omitempty"`
	// The name of the virtual device (ephemeralN).
	VirtualDeviceName *string `json:"VirtualDeviceName,omitempty"`
}

// NewBlockDeviceMappingImage instantiates a new BlockDeviceMappingImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDeviceMappingImage() *BlockDeviceMappingImage {
	this := BlockDeviceMappingImage{}
	return &this
}

// NewBlockDeviceMappingImageWithDefaults instantiates a new BlockDeviceMappingImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDeviceMappingImageWithDefaults() *BlockDeviceMappingImage {
	this := BlockDeviceMappingImage{}
	return &this
}

// GetBsu returns the Bsu field value if set, zero value otherwise.
func (o *BlockDeviceMappingImage) GetBsu() BsuToCreate {
	if o == nil || o.Bsu == nil {
		var ret BsuToCreate
		return ret
	}
	return *o.Bsu
}

// GetBsuOk returns a tuple with the Bsu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingImage) GetBsuOk() (*BsuToCreate, bool) {
	if o == nil || o.Bsu == nil {
		return nil, false
	}
	return o.Bsu, true
}

// HasBsu returns a boolean if a field has been set.
func (o *BlockDeviceMappingImage) HasBsu() bool {
	if o != nil && o.Bsu != nil {
		return true
	}

	return false
}

// SetBsu gets a reference to the given BsuToCreate and assigns it to the Bsu field.
func (o *BlockDeviceMappingImage) SetBsu(v BsuToCreate) {
	o.Bsu = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingImage) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingImage) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingImage) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *BlockDeviceMappingImage) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetVirtualDeviceName returns the VirtualDeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingImage) GetVirtualDeviceName() string {
	if o == nil || o.VirtualDeviceName == nil {
		var ret string
		return ret
	}
	return *o.VirtualDeviceName
}

// GetVirtualDeviceNameOk returns a tuple with the VirtualDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingImage) GetVirtualDeviceNameOk() (*string, bool) {
	if o == nil || o.VirtualDeviceName == nil {
		return nil, false
	}
	return o.VirtualDeviceName, true
}

// HasVirtualDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingImage) HasVirtualDeviceName() bool {
	if o != nil && o.VirtualDeviceName != nil {
		return true
	}

	return false
}

// SetVirtualDeviceName gets a reference to the given string and assigns it to the VirtualDeviceName field.
func (o *BlockDeviceMappingImage) SetVirtualDeviceName(v string) {
	o.VirtualDeviceName = &v
}

func (o BlockDeviceMappingImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bsu != nil {
		toSerialize["Bsu"] = o.Bsu
	}
	if o.DeviceName != nil {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if o.VirtualDeviceName != nil {
		toSerialize["VirtualDeviceName"] = o.VirtualDeviceName
	}
	return json.Marshal(toSerialize)
}

type NullableBlockDeviceMappingImage struct {
	value *BlockDeviceMappingImage
	isSet bool
}

func (v NullableBlockDeviceMappingImage) Get() *BlockDeviceMappingImage {
	return v.value
}

func (v *NullableBlockDeviceMappingImage) Set(val *BlockDeviceMappingImage) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDeviceMappingImage) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDeviceMappingImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDeviceMappingImage(val *BlockDeviceMappingImage) *NullableBlockDeviceMappingImage {
	return &NullableBlockDeviceMappingImage{value: val, isSet: true}
}

func (v NullableBlockDeviceMappingImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDeviceMappingImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BlockDeviceMappingVmCreation Information about the block device mapping.
type BlockDeviceMappingVmCreation struct {
	Bsu *BsuToCreate `json:"Bsu,omitempty"`
	// The name of the device.
	DeviceName *string `json:"DeviceName,omitempty"`
	// Removes the device which is included in the block device mapping of the OMI.
	NoDevice *string `json:"NoDevice,omitempty"`
	// The name of the virtual device (ephemeralN).
	VirtualDeviceName *string `json:"VirtualDeviceName,omitempty"`
}

// NewBlockDeviceMappingVmCreation instantiates a new BlockDeviceMappingVmCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDeviceMappingVmCreation() *BlockDeviceMappingVmCreation {
	this := BlockDeviceMappingVmCreation{}
	return &this
}

// NewBlockDeviceMappingVmCreationWithDefaults instantiates a new BlockDeviceMappingVmCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDeviceMappingVmCreationWithDefaults() *BlockDeviceMappingVmCreation {
	this := BlockDeviceMappingVmCreation{}
	return &this
}

// GetBsu returns the Bsu field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmCreation) GetBsu() BsuToCreate {
	if o == nil || o.Bsu == nil {
		var ret BsuToCreate
		return ret
	}
	return *o.Bsu
}

// GetBsuOk returns a tuple with the Bsu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmCreation) GetBsuOk() (*BsuToCreate, bool) {
	if o == nil || o.Bsu == nil {
		return nil, false
	}
	return o.Bsu, true
}

// HasBsu returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmCreation) HasBsu() bool {
	if o != nil && o.Bsu != nil {
		return true
	}

	return false
}

// SetBsu gets a reference to the given BsuToCreate and assigns it to the Bsu field.
func (o *BlockDeviceMappingVmCreation) SetBsu(v BsuToCreate) {
	o.Bsu = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmCreation) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmCreation) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmCreation) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *BlockDeviceMappingVmCreation) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetNoDevice returns the NoDevice field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmCreation) GetNoDevice() string {
	if o == nil || o.NoDevice == nil {
		var ret string
		return ret
	}
	return *o.NoDevice
}

// GetNoDeviceOk returns a tuple with the NoDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmCreation) GetNoDeviceOk() (*string, bool) {
	if o == nil || o.NoDevice == nil {
		return nil, false
	}
	return o.NoDevice, true
}

// HasNoDevice returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmCreation) HasNoDevice() bool {
	if o != nil && o.NoDevice != nil {
		return true
	}

	return false
}

// SetNoDevice gets a reference to the given string and assigns it to the NoDevice field.
func (o *BlockDeviceMappingVmCreation) SetNoDevice(v string) {
	o.NoDevice = &v
}

// GetVirtualDeviceName returns the VirtualDeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmCreation) GetVirtualDeviceName() string {
	if o == nil || o.VirtualDeviceName == nil {
		var ret string
		return ret
	}
	return *o.VirtualDeviceName
}

// GetVirtualDeviceNameOk returns a tuple with the VirtualDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmCreation) GetVirtualDeviceNameOk() (*string, bool) {
	if o == nil || o.VirtualDeviceName == nil {
		return nil, false
	}
	return o.VirtualDeviceName, true
}

// HasVirtualDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmCreation) HasVirtualDeviceName() bool {
	if o != nil && o.VirtualDeviceName != nil {
		return true
	}

	return false
}

// SetVirtualDeviceName gets a reference to the given string and assigns it to the VirtualDeviceName field.
func (o *BlockDeviceMappingVmCreation) SetVirtualDeviceName(v string) {
	o.VirtualDeviceName = &v
}

func (o BlockDeviceMappingVmCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bsu != nil {
		toSerialize["Bsu"] = o.Bsu
	}
	if o.DeviceName != nil {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if o.NoDevice != nil {
		toSerialize["NoDevice"] = o.NoDevice
	}
	if o.VirtualDeviceName != nil {
		toSerialize["VirtualDeviceName"] = o.VirtualDeviceName
	}
	return json.Marshal(toSerialize)
}

type NullableBlockDeviceMappingVmCreation struct {
	value *BlockDeviceMappingVmCreation
	isSet bool
}

func (v NullableBlockDeviceMappingVmCreation) Get() *BlockDeviceMappingVmCreation {
	return v.value
}

func (v *NullableBlockDeviceMappingVmCreation) Set(val *BlockDeviceMappingVmCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDeviceMappingVmCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDeviceMappingVmCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDeviceMappingVmCreation(val *BlockDeviceMappingVmCreation) *NullableBlockDeviceMappingVmCreation {
	return &NullableBlockDeviceMappingVmCreation{value: val, isSet: true}
}

func (v NullableBlockDeviceMappingVmCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDeviceMappingVmCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BlockDeviceMappingVmUpdate Information about the block device mapping.
type BlockDeviceMappingVmUpdate struct {
	Bsu *BsuToUpdateVm `json:"Bsu,omitempty"`
	// The name of the device.
	DeviceName *string `json:"DeviceName,omitempty"`
	// Removes the device which is included in the block device mapping of the OMI.
	NoDevice *string `json:"NoDevice,omitempty"`
	// The name of the virtual device (ephemeralN).
	VirtualDeviceName *string `json:"VirtualDeviceName,omitempty"`
}

// NewBlockDeviceMappingVmUpdate instantiates a new BlockDeviceMappingVmUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDeviceMappingVmUpdate() *BlockDeviceMappingVmUpdate {
	this := BlockDeviceMappingVmUpdate{}
	return &this
}

// NewBlockDeviceMappingVmUpdateWithDefaults instantiates a new BlockDeviceMappingVmUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDeviceMappingVmUpdateWithDefaults() *BlockDeviceMappingVmUpdate {
	this := BlockDeviceMappingVmUpdate{}
	return &this
}

// GetBsu returns the Bsu field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmUpdate) GetBsu() BsuToUpdateVm {
	if o == nil || o.Bsu == nil {
		var ret BsuToUpdateVm
		return ret
	}
	return *o.Bsu
}

// GetBsuOk returns a tuple with the Bsu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmUpdate) GetBsuOk() (*BsuToUpdateVm, bool) {
	if o == nil || o.Bsu == nil {
		return nil, false
	}
	return o.Bsu, true
}

// HasBsu returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmUpdate) HasBsu() bool {
	if o != nil && o.Bsu != nil {
		return true
	}

	return false
}

// SetBsu gets a reference to the given BsuToUpdateVm and assigns it to the Bsu field.
func (o *BlockDeviceMappingVmUpdate) SetBsu(v BsuToUpdateVm) {
	o.Bsu = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmUpdate) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmUpdate) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmUpdate) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *BlockDeviceMappingVmUpdate) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetNoDevice returns the NoDevice field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmUpdate) GetNoDevice() string {
	if o == nil || o.NoDevice == nil {
		var ret string
		return ret
	}
	return *o.NoDevice
}

// GetNoDeviceOk returns a tuple with the NoDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmUpdate) GetNoDeviceOk() (*string, bool) {
	if o == nil || o.NoDevice == nil {
		return nil, false
	}
	return o.NoDevice, true
}

// HasNoDevice returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmUpdate) HasNoDevice() bool {
	if o != nil && o.NoDevice != nil {
		return true
	}

	return false
}

// SetNoDevice gets a reference to the given string and assigns it to the NoDevice field.
func (o *BlockDeviceMappingVmUpdate) SetNoDevice(v string) {
	o.NoDevice = &v
}

// GetVirtualDeviceName returns the VirtualDeviceName field value if set, zero value otherwise.
func (o *BlockDeviceMappingVmUpdate) GetVirtualDeviceName() string {
	if o == nil || o.VirtualDeviceName == nil {
		var ret string
		return ret
	}
	return *o.VirtualDeviceName
}

// GetVirtualDeviceNameOk returns a tuple with the VirtualDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDeviceMappingVmUpdate) GetVirtualDeviceNameOk() (*string, bool) {
	if o == nil || o.VirtualDeviceName == nil {
		return nil, false
	}
	return o.VirtualDeviceName, true
}

// HasVirtualDeviceName returns a boolean if a field has been set.
func (o *BlockDeviceMappingVmUpdate) HasVirtualDeviceName() bool {
	if o != nil && o.VirtualDeviceName != nil {
		return true
	}

	return false
}

// SetVirtualDeviceName gets a reference to the given string and assigns it to the VirtualDeviceName field.
func (o *BlockDeviceMappingVmUpdate) SetVirtualDeviceName(v string) {
	o.VirtualDeviceName = &v
}

func (o BlockDeviceMappingVmUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bsu != nil {
		toSerialize["Bsu"] = o.Bsu
	}
	if o.DeviceName != nil {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if o.NoDevice != nil {
		toSerialize["NoDevice"] = o.NoDevice
	}
	if o.VirtualDeviceName != nil {
		toSerialize["VirtualDeviceName"] = o.VirtualDeviceName
	}
	return json.Marshal(toSerialize)
}

type NullableBlockDeviceMappingVmUpdate struct {
	value *BlockDeviceMappingVmUpdate
	isSet bool
}

func (v NullableBlockDeviceMappingVmUpdate) Get() *BlockDeviceMappingVmUpdate {
	return v.value
}

func (v *NullableBlockDeviceMappingVmUpdate) Set(val *BlockDeviceMappingVmUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDeviceMappingVmUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDeviceMappingVmUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDeviceMappingVmUpdate(val *BlockDeviceMappingVmUpdate) *NullableBlockDeviceMappingVmUpdate {
	return &NullableBlockDeviceMappingVmUpdate{value: val, isSet: true}
}

func (v NullableBlockDeviceMappingVmUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDeviceMappingVmUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BsuCreated Information about the created BSU volume.
type BsuCreated struct {
	// Set to `true` by default, which means that the volume is deleted when the VM is terminated. If set to `false`, the volume is not deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The time and date of attachment of the volume to the VM.
	LinkDate *string `json:"LinkDate,omitempty"`
	// The state of the volume.
	State *string `json:"State,omitempty"`
	// The ID of the volume.
	VolumeId *string `json:"VolumeId,omitempty"`
}

// NewBsuCreated instantiates a new BsuCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBsuCreated() *BsuCreated {
	this := BsuCreated{}
	return &this
}

// NewBsuCreatedWithDefaults instantiates a new BsuCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBsuCreatedWithDefaults() *BsuCreated {
	this := BsuCreated{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *BsuCreated) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuCreated) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *BsuCreated) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *BsuCreated) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetLinkDate returns the LinkDate field value if set, zero value otherwise.
func (o *BsuCreated) GetLinkDate() string {
	if o == nil || o.LinkDate == nil {
		var ret string
		return ret
	}
	return *o.LinkDate
}

// GetLinkDateOk returns a tuple with the LinkDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuCreated) GetLinkDateOk() (*string, bool) {
	if o == nil || o.LinkDate == nil {
		return nil, false
	}
	return o.LinkDate, true
}

// HasLinkDate returns a boolean if a field has been set.
func (o *BsuCreated) HasLinkDate() bool {
	if o != nil && o.LinkDate != nil {
		return true
	}

	return false
}

// SetLinkDate gets a reference to the given string and assigns it to the LinkDate field.
func (o *BsuCreated) SetLinkDate(v string) {
	o.LinkDate = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BsuCreated) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuCreated) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BsuCreated) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BsuCreated) SetState(v string) {
	o.State = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *BsuCreated) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuCreated) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *BsuCreated) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *BsuCreated) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o BsuCreated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.LinkDate != nil {
		toSerialize["LinkDate"] = o.LinkDate
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableBsuCreated struct {
	value *BsuCreated
	isSet bool
}

func (v NullableBsuCreated) Get() *BsuCreated {
	return v.value
}

func (v *NullableBsuCreated) Set(val *BsuCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableBsuCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableBsuCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBsuCreated(val *BsuCreated) *NullableBsuCreated {
	return &NullableBsuCreated{value: val, isSet: true}
}

func (v NullableBsuCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBsuCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BsuToCreate Information about the BSU volume to create.
type BsuToCreate struct {
	// Set to `true` by default, which means that the volume is deleted when the VM is terminated. If set to `false`, the volume is not deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`.
	Iops *int32 `json:"Iops,omitempty"`
	// The ID of the snapshot used to create the volume.
	SnapshotId *string `json:"SnapshotId,omitempty"`
	// The size of the volume, in gibibytes (GiB).<br /> If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br /> If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
	VolumeSize *int32 `json:"VolumeSize,omitempty"`
	// The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br /> For more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS).
	VolumeType *string `json:"VolumeType,omitempty"`
}

// NewBsuToCreate instantiates a new BsuToCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBsuToCreate() *BsuToCreate {
	this := BsuToCreate{}
	return &this
}

// NewBsuToCreateWithDefaults instantiates a new BsuToCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBsuToCreateWithDefaults() *BsuToCreate {
	this := BsuToCreate{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *BsuToCreate) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToCreate) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *BsuToCreate) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *BsuToCreate) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetIops returns the Iops field value if set, zero value otherwise.
func (o *BsuToCreate) GetIops() int32 {
	if o == nil || o.Iops == nil {
		var ret int32
		return ret
	}
	return *o.Iops
}

// GetIopsOk returns a tuple with the Iops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToCreate) GetIopsOk() (*int32, bool) {
	if o == nil || o.Iops == nil {
		return nil, false
	}
	return o.Iops, true
}

// HasIops returns a boolean if a field has been set.
func (o *BsuToCreate) HasIops() bool {
	if o != nil && o.Iops != nil {
		return true
	}

	return false
}

// SetIops gets a reference to the given int32 and assigns it to the Iops field.
func (o *BsuToCreate) SetIops(v int32) {
	o.Iops = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *BsuToCreate) GetSnapshotId() string {
	if o == nil || o.SnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToCreate) GetSnapshotIdOk() (*string, bool) {
	if o == nil || o.SnapshotId == nil {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *BsuToCreate) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *BsuToCreate) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *BsuToCreate) GetVolumeSize() int32 {
	if o == nil || o.VolumeSize == nil {
		var ret int32
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToCreate) GetVolumeSizeOk() (*int32, bool) {
	if o == nil || o.VolumeSize == nil {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *BsuToCreate) HasVolumeSize() bool {
	if o != nil && o.VolumeSize != nil {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int32 and assigns it to the VolumeSize field.
func (o *BsuToCreate) SetVolumeSize(v int32) {
	o.VolumeSize = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *BsuToCreate) GetVolumeType() string {
	if o == nil || o.VolumeType == nil {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToCreate) GetVolumeTypeOk() (*string, bool) {
	if o == nil || o.VolumeType == nil {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *BsuToCreate) HasVolumeType() bool {
	if o != nil && o.VolumeType != nil {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *BsuToCreate) SetVolumeType(v string) {
	o.VolumeType = &v
}

func (o BsuToCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.Iops != nil {
		toSerialize["Iops"] = o.Iops
	}
	if o.SnapshotId != nil {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	if o.VolumeSize != nil {
		toSerialize["VolumeSize"] = o.VolumeSize
	}
	if o.VolumeType != nil {
		toSerialize["VolumeType"] = o.VolumeType
	}
	return json.Marshal(toSerialize)
}

type NullableBsuToCreate struct {
	value *BsuToCreate
	isSet bool
}

func (v NullableBsuToCreate) Get() *BsuToCreate {
	return v.value
}

func (v *NullableBsuToCreate) Set(val *BsuToCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableBsuToCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableBsuToCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBsuToCreate(val *BsuToCreate) *NullableBsuToCreate {
	return &NullableBsuToCreate{value: val, isSet: true}
}

func (v NullableBsuToCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBsuToCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// BsuToUpdateVm Information about the BSU volume.
type BsuToUpdateVm struct {
	// If `true`, the volume is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The ID of the volume.
	VolumeId *string `json:"VolumeId,omitempty"`
}

// NewBsuToUpdateVm instantiates a new BsuToUpdateVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBsuToUpdateVm() *BsuToUpdateVm {
	this := BsuToUpdateVm{}
	return &this
}

// NewBsuToUpdateVmWithDefaults instantiates a new BsuToUpdateVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBsuToUpdateVmWithDefaults() *BsuToUpdateVm {
	this := BsuToUpdateVm{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *BsuToUpdateVm) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToUpdateVm) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *BsuToUpdateVm) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *BsuToUpdateVm) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *BsuToUpdateVm) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BsuToUpdateVm) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *BsuToUpdateVm) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *BsuToUpdateVm) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o BsuToUpdateVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableBsuToUpdateVm struct {
	value *BsuToUpdateVm
	isSet bool
}

func (v NullableBsuToUpdateVm) Get() *BsuToUpdateVm {
	return v.value
}

func (v *NullableBsuToUpdateVm) Set(val *BsuToUpdateVm) {
	v.value = val
	v.isSet = true
}

func (v NullableBsuToUpdateVm) IsSet() bool {
	return v.isSet
}

func (v *NullableBsuToUpdateVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBsuToUpdateVm(val *BsuToUpdateVm) *NullableBsuToUpdateVm {
	return &NullableBsuToUpdateVm{value: val, isSet: true}
}

func (v NullableBsuToUpdateVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBsuToUpdateVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CheckAuthenticationRequest struct for CheckAuthenticationRequest
type CheckAuthenticationRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The email address of the account.
	Login *string `json:"Login,omitempty"`
	// The password of the account.
	Password *string `json:"Password,omitempty"`
}

// NewCheckAuthenticationRequest instantiates a new CheckAuthenticationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAuthenticationRequest() *CheckAuthenticationRequest {
	this := CheckAuthenticationRequest{}
	return &this
}

// NewCheckAuthenticationRequestWithDefaults instantiates a new CheckAuthenticationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAuthenticationRequestWithDefaults() *CheckAuthenticationRequest {
	this := CheckAuthenticationRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CheckAuthenticationRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAuthenticationRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CheckAuthenticationRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CheckAuthenticationRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *CheckAuthenticationRequest) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAuthenticationRequest) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *CheckAuthenticationRequest) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *CheckAuthenticationRequest) SetLogin(v string) {
	o.Login = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CheckAuthenticationRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAuthenticationRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CheckAuthenticationRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CheckAuthenticationRequest) SetPassword(v string) {
	o.Password = &v
}

func (o CheckAuthenticationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Login != nil {
		toSerialize["Login"] = o.Login
	}
	if o.Password != nil {
		toSerialize["Password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableCheckAuthenticationRequest struct {
	value *CheckAuthenticationRequest
	isSet bool
}

func (v NullableCheckAuthenticationRequest) Get() *CheckAuthenticationRequest {
	return v.value
}

func (v *NullableCheckAuthenticationRequest) Set(val *CheckAuthenticationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAuthenticationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAuthenticationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAuthenticationRequest(val *CheckAuthenticationRequest) *NullableCheckAuthenticationRequest {
	return &NullableCheckAuthenticationRequest{value: val, isSet: true}
}

func (v NullableCheckAuthenticationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAuthenticationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CheckAuthenticationResponse struct for CheckAuthenticationResponse
type CheckAuthenticationResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCheckAuthenticationResponse instantiates a new CheckAuthenticationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAuthenticationResponse() *CheckAuthenticationResponse {
	this := CheckAuthenticationResponse{}
	return &this
}

// NewCheckAuthenticationResponseWithDefaults instantiates a new CheckAuthenticationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAuthenticationResponseWithDefaults() *CheckAuthenticationResponse {
	this := CheckAuthenticationResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CheckAuthenticationResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAuthenticationResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CheckAuthenticationResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CheckAuthenticationResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CheckAuthenticationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCheckAuthenticationResponse struct {
	value *CheckAuthenticationResponse
	isSet bool
}

func (v NullableCheckAuthenticationResponse) Get() *CheckAuthenticationResponse {
	return v.value
}

func (v *NullableCheckAuthenticationResponse) Set(val *CheckAuthenticationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAuthenticationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAuthenticationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAuthenticationResponse(val *CheckAuthenticationResponse) *NullableCheckAuthenticationResponse {
	return &NullableCheckAuthenticationResponse{value: val, isSet: true}
}

func (v NullableCheckAuthenticationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAuthenticationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ClientGateway Information about the client gateway.
type ClientGateway struct {
	// An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
	BgpAsn *int32 `json:"BgpAsn,omitempty"`
	// The ID of the client gateway.
	ClientGatewayId *string `json:"ClientGatewayId,omitempty"`
	// The type of communication tunnel used by the client gateway (only `ipsec.1` is supported).
	ConnectionType *string `json:"ConnectionType,omitempty"`
	// The public IPv4 address of the client gateway (must be a fixed address into a NATed network).
	PublicIp *string `json:"PublicIp,omitempty"`
	// The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the client gateway.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewClientGateway instantiates a new ClientGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientGateway() *ClientGateway {
	this := ClientGateway{}
	return &this
}

// NewClientGatewayWithDefaults instantiates a new ClientGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientGatewayWithDefaults() *ClientGateway {
	this := ClientGateway{}
	return &this
}

// GetBgpAsn returns the BgpAsn field value if set, zero value otherwise.
func (o *ClientGateway) GetBgpAsn() int32 {
	if o == nil || o.BgpAsn == nil {
		var ret int32
		return ret
	}
	return *o.BgpAsn
}

// GetBgpAsnOk returns a tuple with the BgpAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetBgpAsnOk() (*int32, bool) {
	if o == nil || o.BgpAsn == nil {
		return nil, false
	}
	return o.BgpAsn, true
}

// HasBgpAsn returns a boolean if a field has been set.
func (o *ClientGateway) HasBgpAsn() bool {
	if o != nil && o.BgpAsn != nil {
		return true
	}

	return false
}

// SetBgpAsn gets a reference to the given int32 and assigns it to the BgpAsn field.
func (o *ClientGateway) SetBgpAsn(v int32) {
	o.BgpAsn = &v
}

// GetClientGatewayId returns the ClientGatewayId field value if set, zero value otherwise.
func (o *ClientGateway) GetClientGatewayId() string {
	if o == nil || o.ClientGatewayId == nil {
		var ret string
		return ret
	}
	return *o.ClientGatewayId
}

// GetClientGatewayIdOk returns a tuple with the ClientGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetClientGatewayIdOk() (*string, bool) {
	if o == nil || o.ClientGatewayId == nil {
		return nil, false
	}
	return o.ClientGatewayId, true
}

// HasClientGatewayId returns a boolean if a field has been set.
func (o *ClientGateway) HasClientGatewayId() bool {
	if o != nil && o.ClientGatewayId != nil {
		return true
	}

	return false
}

// SetClientGatewayId gets a reference to the given string and assigns it to the ClientGatewayId field.
func (o *ClientGateway) SetClientGatewayId(v string) {
	o.ClientGatewayId = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *ClientGateway) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *ClientGateway) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *ClientGateway) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *ClientGateway) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ClientGateway) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *ClientGateway) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ClientGateway) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ClientGateway) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ClientGateway) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ClientGateway) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGateway) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ClientGateway) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *ClientGateway) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o ClientGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BgpAsn != nil {
		toSerialize["BgpAsn"] = o.BgpAsn
	}
	if o.ClientGatewayId != nil {
		toSerialize["ClientGatewayId"] = o.ClientGatewayId
	}
	if o.ConnectionType != nil {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableClientGateway struct {
	value *ClientGateway
	isSet bool
}

func (v NullableClientGateway) Get() *ClientGateway {
	return v.value
}

func (v *NullableClientGateway) Set(val *ClientGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableClientGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableClientGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientGateway(val *ClientGateway) *NullableClientGateway {
	return &NullableClientGateway{value: val, isSet: true}
}

func (v NullableClientGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ConsumptionEntry Information about the resources consumed during the specified time period.
type ConsumptionEntry struct {
	// The category of the resource (for example, `network`).
	Category *string `json:"Category,omitempty"`
	// The beginning of the time period.
	FromDate *string `json:"FromDate,omitempty"`
	// The API call that triggered the resource consumption (for example, `RunInstances` or `CreateVolume`).
	Operation *string `json:"Operation,omitempty"`
	// The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-OSU` or `TinaOS-DirectLink`).
	Service *string `json:"Service,omitempty"`
	// A description of the consumed resource.
	Title *string `json:"Title,omitempty"`
	// The end of the time period.
	ToDate *string `json:"ToDate,omitempty"`
	// The type of resource, depending on the API call.
	Type *string `json:"Type,omitempty"`
	// The consumed amount for the resource. The unit depends on the resource type. For more information, see the `Title` element.
	Value *string `json:"Value,omitempty"`
}

// NewConsumptionEntry instantiates a new ConsumptionEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumptionEntry() *ConsumptionEntry {
	this := ConsumptionEntry{}
	return &this
}

// NewConsumptionEntryWithDefaults instantiates a new ConsumptionEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumptionEntryWithDefaults() *ConsumptionEntry {
	this := ConsumptionEntry{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ConsumptionEntry) SetCategory(v string) {
	o.Category = &v
}

// GetFromDate returns the FromDate field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetFromDate() string {
	if o == nil || o.FromDate == nil {
		var ret string
		return ret
	}
	return *o.FromDate
}

// GetFromDateOk returns a tuple with the FromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetFromDateOk() (*string, bool) {
	if o == nil || o.FromDate == nil {
		return nil, false
	}
	return o.FromDate, true
}

// HasFromDate returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasFromDate() bool {
	if o != nil && o.FromDate != nil {
		return true
	}

	return false
}

// SetFromDate gets a reference to the given string and assigns it to the FromDate field.
func (o *ConsumptionEntry) SetFromDate(v string) {
	o.FromDate = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetOperation() string {
	if o == nil || o.Operation == nil {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetOperationOk() (*string, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *ConsumptionEntry) SetOperation(v string) {
	o.Operation = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ConsumptionEntry) SetService(v string) {
	o.Service = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ConsumptionEntry) SetTitle(v string) {
	o.Title = &v
}

// GetToDate returns the ToDate field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetToDate() string {
	if o == nil || o.ToDate == nil {
		var ret string
		return ret
	}
	return *o.ToDate
}

// GetToDateOk returns a tuple with the ToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetToDateOk() (*string, bool) {
	if o == nil || o.ToDate == nil {
		return nil, false
	}
	return o.ToDate, true
}

// HasToDate returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasToDate() bool {
	if o != nil && o.ToDate != nil {
		return true
	}

	return false
}

// SetToDate gets a reference to the given string and assigns it to the ToDate field.
func (o *ConsumptionEntry) SetToDate(v string) {
	o.ToDate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ConsumptionEntry) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ConsumptionEntry) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionEntry) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ConsumptionEntry) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ConsumptionEntry) SetValue(v string) {
	o.Value = &v
}

func (o ConsumptionEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category != nil {
		toSerialize["Category"] = o.Category
	}
	if o.FromDate != nil {
		toSerialize["FromDate"] = o.FromDate
	}
	if o.Operation != nil {
		toSerialize["Operation"] = o.Operation
	}
	if o.Service != nil {
		toSerialize["Service"] = o.Service
	}
	if o.Title != nil {
		toSerialize["Title"] = o.Title
	}
	if o.ToDate != nil {
		toSerialize["ToDate"] = o.ToDate
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["Value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableConsumptionEntry struct {
	value *ConsumptionEntry
	isSet bool
}

func (v NullableConsumptionEntry) Get() *ConsumptionEntry {
	return v.value
}

func (v *NullableConsumptionEntry) Set(val *ConsumptionEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumptionEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumptionEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumptionEntry(val *ConsumptionEntry) *NullableConsumptionEntry {
	return &NullableConsumptionEntry{value: val, isSet: true}
}

func (v NullableConsumptionEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumptionEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateAccessKeyRequest struct for CreateAccessKeyRequest
type CreateAccessKeyRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The date and time at which you want the access key to expire, in ISO 8601 format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`). If not specified, the access key has no expiration date.
	ExpirationDate *string `json:"ExpirationDate,omitempty"`
}

// NewCreateAccessKeyRequest instantiates a new CreateAccessKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessKeyRequest() *CreateAccessKeyRequest {
	this := CreateAccessKeyRequest{}
	return &this
}

// NewCreateAccessKeyRequestWithDefaults instantiates a new CreateAccessKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessKeyRequestWithDefaults() *CreateAccessKeyRequest {
	this := CreateAccessKeyRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateAccessKeyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateAccessKeyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateAccessKeyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CreateAccessKeyRequest) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyRequest) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CreateAccessKeyRequest) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CreateAccessKeyRequest) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

func (o CreateAccessKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessKeyRequest struct {
	value *CreateAccessKeyRequest
	isSet bool
}

func (v NullableCreateAccessKeyRequest) Get() *CreateAccessKeyRequest {
	return v.value
}

func (v *NullableCreateAccessKeyRequest) Set(val *CreateAccessKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessKeyRequest(val *CreateAccessKeyRequest) *NullableCreateAccessKeyRequest {
	return &NullableCreateAccessKeyRequest{value: val, isSet: true}
}

func (v NullableCreateAccessKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateAccessKeyResponse struct for CreateAccessKeyResponse
type CreateAccessKeyResponse struct {
	AccessKey *AccessKeySecretKey `json:"AccessKey,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateAccessKeyResponse instantiates a new CreateAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessKeyResponse() *CreateAccessKeyResponse {
	this := CreateAccessKeyResponse{}
	return &this
}

// NewCreateAccessKeyResponseWithDefaults instantiates a new CreateAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessKeyResponseWithDefaults() *CreateAccessKeyResponse {
	this := CreateAccessKeyResponse{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *CreateAccessKeyResponse) GetAccessKey() AccessKeySecretKey {
	if o == nil || o.AccessKey == nil {
		var ret AccessKeySecretKey
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyResponse) GetAccessKeyOk() (*AccessKeySecretKey, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *CreateAccessKeyResponse) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given AccessKeySecretKey and assigns it to the AccessKey field.
func (o *CreateAccessKeyResponse) SetAccessKey(v AccessKeySecretKey) {
	o.AccessKey = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateAccessKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateAccessKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateAccessKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["AccessKey"] = o.AccessKey
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessKeyResponse struct {
	value *CreateAccessKeyResponse
	isSet bool
}

func (v NullableCreateAccessKeyResponse) Get() *CreateAccessKeyResponse {
	return v.value
}

func (v *NullableCreateAccessKeyResponse) Set(val *CreateAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessKeyResponse(val *CreateAccessKeyResponse) *NullableCreateAccessKeyResponse {
	return &NullableCreateAccessKeyResponse{value: val, isSet: true}
}

func (v NullableCreateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateAccountRequest struct for CreateAccountRequest
type CreateAccountRequest struct {
	// The city of the account owner.
	City string `json:"City"`
	// The name of the company for the account.
	CompanyName string `json:"CompanyName"`
	// The country of the account owner.
	Country string `json:"Country"`
	// The ID of the customer. It must be 8 digits.
	CustomerId string `json:"CustomerId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The email address for the account.
	Email string `json:"Email"`
	// The first name of the account owner.
	FirstName string `json:"FirstName"`
	// The job title of the account owner.
	JobTitle *string `json:"JobTitle,omitempty"`
	// The last name of the account owner.
	LastName string `json:"LastName"`
	// The mobile phone number of the account owner.
	MobileNumber *string `json:"MobileNumber,omitempty"`
	// The landline phone number of the account owner.
	PhoneNumber *string `json:"PhoneNumber,omitempty"`
	// The state/province of the account.
	StateProvince *string `json:"StateProvince,omitempty"`
	// The value added tax (VAT) number for the account.
	VatNumber *string `json:"VatNumber,omitempty"`
	// The ZIP code of the city.
	ZipCode string `json:"ZipCode"`
}

// NewCreateAccountRequest instantiates a new CreateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountRequest(city string, companyName string, country string, customerId string, email string, firstName string, lastName string, zipCode string, ) *CreateAccountRequest {
	this := CreateAccountRequest{}
	this.City = city
	this.CompanyName = companyName
	this.Country = country
	this.CustomerId = customerId
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	this.ZipCode = zipCode
	return &this
}

// NewCreateAccountRequestWithDefaults instantiates a new CreateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountRequestWithDefaults() *CreateAccountRequest {
	this := CreateAccountRequest{}
	return &this
}

// GetCity returns the City field value
func (o *CreateAccountRequest) GetCity() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *CreateAccountRequest) SetCity(v string) {
	o.City = v
}

// GetCompanyName returns the CompanyName field value
func (o *CreateAccountRequest) GetCompanyName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *CreateAccountRequest) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetCountry returns the Country field value
func (o *CreateAccountRequest) GetCountry() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CreateAccountRequest) SetCountry(v string) {
	o.Country = v
}

// GetCustomerId returns the CustomerId field value
func (o *CreateAccountRequest) GetCustomerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *CreateAccountRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateAccountRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetEmail returns the Email field value
func (o *CreateAccountRequest) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateAccountRequest) SetEmail(v string) {
	o.Email = v
}

// GetFirstName returns the FirstName field value
func (o *CreateAccountRequest) GetFirstName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CreateAccountRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetJobTitle() string {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetJobTitleOk() (*string, bool) {
	if o == nil || o.JobTitle == nil {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasJobTitle() bool {
	if o != nil && o.JobTitle != nil {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *CreateAccountRequest) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetLastName returns the LastName field value
func (o *CreateAccountRequest) GetLastName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CreateAccountRequest) SetLastName(v string) {
	o.LastName = v
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *CreateAccountRequest) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CreateAccountRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStateProvince returns the StateProvince field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetStateProvince() string {
	if o == nil || o.StateProvince == nil {
		var ret string
		return ret
	}
	return *o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetStateProvinceOk() (*string, bool) {
	if o == nil || o.StateProvince == nil {
		return nil, false
	}
	return o.StateProvince, true
}

// HasStateProvince returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasStateProvince() bool {
	if o != nil && o.StateProvince != nil {
		return true
	}

	return false
}

// SetStateProvince gets a reference to the given string and assigns it to the StateProvince field.
func (o *CreateAccountRequest) SetStateProvince(v string) {
	o.StateProvince = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetVatNumber() string {
	if o == nil || o.VatNumber == nil {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetVatNumberOk() (*string, bool) {
	if o == nil || o.VatNumber == nil {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasVatNumber() bool {
	if o != nil && o.VatNumber != nil {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *CreateAccountRequest) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetZipCode returns the ZipCode field value
func (o *CreateAccountRequest) GetZipCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetZipCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *CreateAccountRequest) SetZipCode(v string) {
	o.ZipCode = v
}

func (o CreateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["City"] = o.City
	}
	if true {
		toSerialize["CompanyName"] = o.CompanyName
	}
	if true {
		toSerialize["Country"] = o.Country
	}
	if true {
		toSerialize["CustomerId"] = o.CustomerId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Email"] = o.Email
	}
	if true {
		toSerialize["FirstName"] = o.FirstName
	}
	if o.JobTitle != nil {
		toSerialize["JobTitle"] = o.JobTitle
	}
	if true {
		toSerialize["LastName"] = o.LastName
	}
	if o.MobileNumber != nil {
		toSerialize["MobileNumber"] = o.MobileNumber
	}
	if o.PhoneNumber != nil {
		toSerialize["PhoneNumber"] = o.PhoneNumber
	}
	if o.StateProvince != nil {
		toSerialize["StateProvince"] = o.StateProvince
	}
	if o.VatNumber != nil {
		toSerialize["VatNumber"] = o.VatNumber
	}
	if true {
		toSerialize["ZipCode"] = o.ZipCode
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccountRequest struct {
	value *CreateAccountRequest
	isSet bool
}

func (v NullableCreateAccountRequest) Get() *CreateAccountRequest {
	return v.value
}

func (v *NullableCreateAccountRequest) Set(val *CreateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountRequest(val *CreateAccountRequest) *NullableCreateAccountRequest {
	return &NullableCreateAccountRequest{value: val, isSet: true}
}

func (v NullableCreateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateAccountResponse struct for CreateAccountResponse
type CreateAccountResponse struct {
	Account *Account `json:"Account,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateAccountResponse instantiates a new CreateAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountResponse() *CreateAccountResponse {
	this := CreateAccountResponse{}
	return &this
}

// NewCreateAccountResponseWithDefaults instantiates a new CreateAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountResponseWithDefaults() *CreateAccountResponse {
	this := CreateAccountResponse{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *CreateAccountResponse) GetAccount() Account {
	if o == nil || o.Account == nil {
		var ret Account
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountResponse) GetAccountOk() (*Account, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *CreateAccountResponse) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given Account and assigns it to the Account field.
func (o *CreateAccountResponse) SetAccount(v Account) {
	o.Account = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateAccountResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateAccountResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateAccountResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["Account"] = o.Account
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccountResponse struct {
	value *CreateAccountResponse
	isSet bool
}

func (v NullableCreateAccountResponse) Get() *CreateAccountResponse {
	return v.value
}

func (v *NullableCreateAccountResponse) Set(val *CreateAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountResponse(val *CreateAccountResponse) *NullableCreateAccountResponse {
	return &NullableCreateAccountResponse{value: val, isSet: true}
}

func (v NullableCreateAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateClientGatewayRequest struct for CreateClientGatewayRequest
type CreateClientGatewayRequest struct {
	// An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
	BgpAsn int32 `json:"BgpAsn"`
	// The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported).
	ConnectionType string `json:"ConnectionType"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The public fixed IPv4 address of your client gateway.
	PublicIp string `json:"PublicIp"`
}

// NewCreateClientGatewayRequest instantiates a new CreateClientGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClientGatewayRequest(bgpAsn int32, connectionType string, publicIp string, ) *CreateClientGatewayRequest {
	this := CreateClientGatewayRequest{}
	this.BgpAsn = bgpAsn
	this.ConnectionType = connectionType
	this.PublicIp = publicIp
	return &this
}

// NewCreateClientGatewayRequestWithDefaults instantiates a new CreateClientGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClientGatewayRequestWithDefaults() *CreateClientGatewayRequest {
	this := CreateClientGatewayRequest{}
	return &this
}

// GetBgpAsn returns the BgpAsn field value
func (o *CreateClientGatewayRequest) GetBgpAsn() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.BgpAsn
}

// GetBgpAsnOk returns a tuple with the BgpAsn field value
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayRequest) GetBgpAsnOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BgpAsn, true
}

// SetBgpAsn sets field value
func (o *CreateClientGatewayRequest) SetBgpAsn(v int32) {
	o.BgpAsn = v
}

// GetConnectionType returns the ConnectionType field value
func (o *CreateClientGatewayRequest) GetConnectionType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *CreateClientGatewayRequest) SetConnectionType(v string) {
	o.ConnectionType = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateClientGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateClientGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateClientGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPublicIp returns the PublicIp field value
func (o *CreateClientGatewayRequest) GetPublicIp() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayRequest) GetPublicIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PublicIp, true
}

// SetPublicIp sets field value
func (o *CreateClientGatewayRequest) SetPublicIp(v string) {
	o.PublicIp = v
}

func (o CreateClientGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BgpAsn"] = o.BgpAsn
	}
	if true {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["PublicIp"] = o.PublicIp
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClientGatewayRequest struct {
	value *CreateClientGatewayRequest
	isSet bool
}

func (v NullableCreateClientGatewayRequest) Get() *CreateClientGatewayRequest {
	return v.value
}

func (v *NullableCreateClientGatewayRequest) Set(val *CreateClientGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClientGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClientGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClientGatewayRequest(val *CreateClientGatewayRequest) *NullableCreateClientGatewayRequest {
	return &NullableCreateClientGatewayRequest{value: val, isSet: true}
}

func (v NullableCreateClientGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClientGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateClientGatewayResponse struct for CreateClientGatewayResponse
type CreateClientGatewayResponse struct {
	ClientGateway *ClientGateway `json:"ClientGateway,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateClientGatewayResponse instantiates a new CreateClientGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClientGatewayResponse() *CreateClientGatewayResponse {
	this := CreateClientGatewayResponse{}
	return &this
}

// NewCreateClientGatewayResponseWithDefaults instantiates a new CreateClientGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClientGatewayResponseWithDefaults() *CreateClientGatewayResponse {
	this := CreateClientGatewayResponse{}
	return &this
}

// GetClientGateway returns the ClientGateway field value if set, zero value otherwise.
func (o *CreateClientGatewayResponse) GetClientGateway() ClientGateway {
	if o == nil || o.ClientGateway == nil {
		var ret ClientGateway
		return ret
	}
	return *o.ClientGateway
}

// GetClientGatewayOk returns a tuple with the ClientGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayResponse) GetClientGatewayOk() (*ClientGateway, bool) {
	if o == nil || o.ClientGateway == nil {
		return nil, false
	}
	return o.ClientGateway, true
}

// HasClientGateway returns a boolean if a field has been set.
func (o *CreateClientGatewayResponse) HasClientGateway() bool {
	if o != nil && o.ClientGateway != nil {
		return true
	}

	return false
}

// SetClientGateway gets a reference to the given ClientGateway and assigns it to the ClientGateway field.
func (o *CreateClientGatewayResponse) SetClientGateway(v ClientGateway) {
	o.ClientGateway = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateClientGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateClientGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateClientGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateClientGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientGateway != nil {
		toSerialize["ClientGateway"] = o.ClientGateway
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClientGatewayResponse struct {
	value *CreateClientGatewayResponse
	isSet bool
}

func (v NullableCreateClientGatewayResponse) Get() *CreateClientGatewayResponse {
	return v.value
}

func (v *NullableCreateClientGatewayResponse) Set(val *CreateClientGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClientGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClientGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClientGatewayResponse(val *CreateClientGatewayResponse) *NullableCreateClientGatewayResponse {
	return &NullableCreateClientGatewayResponse{value: val, isSet: true}
}

func (v NullableCreateClientGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClientGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDhcpOptionsRequest struct for CreateDhcpOptionsRequest
type CreateDhcpOptionsRequest struct {
	// Specify a domain name (for example, MyCompany.com). You can specify only one domain name.
	DomainName *string `json:"DomainName,omitempty"`
	// The IP addresses of domain name servers. If no IP addresses are specified, the `OutscaleProvidedDNS` value is set by default.
	DomainNameServers *[]string `json:"DomainNameServers,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The IP addresses of the Network Time Protocol (NTP) servers.
	NtpServers *[]string `json:"NtpServers,omitempty"`
}

// NewCreateDhcpOptionsRequest instantiates a new CreateDhcpOptionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDhcpOptionsRequest() *CreateDhcpOptionsRequest {
	this := CreateDhcpOptionsRequest{}
	return &this
}

// NewCreateDhcpOptionsRequestWithDefaults instantiates a new CreateDhcpOptionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDhcpOptionsRequestWithDefaults() *CreateDhcpOptionsRequest {
	this := CreateDhcpOptionsRequest{}
	return &this
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *CreateDhcpOptionsRequest) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsRequest) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *CreateDhcpOptionsRequest) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *CreateDhcpOptionsRequest) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainNameServers returns the DomainNameServers field value if set, zero value otherwise.
func (o *CreateDhcpOptionsRequest) GetDomainNameServers() []string {
	if o == nil || o.DomainNameServers == nil {
		var ret []string
		return ret
	}
	return *o.DomainNameServers
}

// GetDomainNameServersOk returns a tuple with the DomainNameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsRequest) GetDomainNameServersOk() (*[]string, bool) {
	if o == nil || o.DomainNameServers == nil {
		return nil, false
	}
	return o.DomainNameServers, true
}

// HasDomainNameServers returns a boolean if a field has been set.
func (o *CreateDhcpOptionsRequest) HasDomainNameServers() bool {
	if o != nil && o.DomainNameServers != nil {
		return true
	}

	return false
}

// SetDomainNameServers gets a reference to the given []string and assigns it to the DomainNameServers field.
func (o *CreateDhcpOptionsRequest) SetDomainNameServers(v []string) {
	o.DomainNameServers = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateDhcpOptionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateDhcpOptionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateDhcpOptionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *CreateDhcpOptionsRequest) GetNtpServers() []string {
	if o == nil || o.NtpServers == nil {
		var ret []string
		return ret
	}
	return *o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsRequest) GetNtpServersOk() (*[]string, bool) {
	if o == nil || o.NtpServers == nil {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *CreateDhcpOptionsRequest) HasNtpServers() bool {
	if o != nil && o.NtpServers != nil {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *CreateDhcpOptionsRequest) SetNtpServers(v []string) {
	o.NtpServers = &v
}

func (o CreateDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainName != nil {
		toSerialize["DomainName"] = o.DomainName
	}
	if o.DomainNameServers != nil {
		toSerialize["DomainNameServers"] = o.DomainNameServers
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.NtpServers != nil {
		toSerialize["NtpServers"] = o.NtpServers
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDhcpOptionsRequest struct {
	value *CreateDhcpOptionsRequest
	isSet bool
}

func (v NullableCreateDhcpOptionsRequest) Get() *CreateDhcpOptionsRequest {
	return v.value
}

func (v *NullableCreateDhcpOptionsRequest) Set(val *CreateDhcpOptionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDhcpOptionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDhcpOptionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDhcpOptionsRequest(val *CreateDhcpOptionsRequest) *NullableCreateDhcpOptionsRequest {
	return &NullableCreateDhcpOptionsRequest{value: val, isSet: true}
}

func (v NullableCreateDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDhcpOptionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDhcpOptionsResponse struct for CreateDhcpOptionsResponse
type CreateDhcpOptionsResponse struct {
	DhcpOptionsSet *DhcpOptionsSet `json:"DhcpOptionsSet,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateDhcpOptionsResponse instantiates a new CreateDhcpOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDhcpOptionsResponse() *CreateDhcpOptionsResponse {
	this := CreateDhcpOptionsResponse{}
	return &this
}

// NewCreateDhcpOptionsResponseWithDefaults instantiates a new CreateDhcpOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDhcpOptionsResponseWithDefaults() *CreateDhcpOptionsResponse {
	this := CreateDhcpOptionsResponse{}
	return &this
}

// GetDhcpOptionsSet returns the DhcpOptionsSet field value if set, zero value otherwise.
func (o *CreateDhcpOptionsResponse) GetDhcpOptionsSet() DhcpOptionsSet {
	if o == nil || o.DhcpOptionsSet == nil {
		var ret DhcpOptionsSet
		return ret
	}
	return *o.DhcpOptionsSet
}

// GetDhcpOptionsSetOk returns a tuple with the DhcpOptionsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsResponse) GetDhcpOptionsSetOk() (*DhcpOptionsSet, bool) {
	if o == nil || o.DhcpOptionsSet == nil {
		return nil, false
	}
	return o.DhcpOptionsSet, true
}

// HasDhcpOptionsSet returns a boolean if a field has been set.
func (o *CreateDhcpOptionsResponse) HasDhcpOptionsSet() bool {
	if o != nil && o.DhcpOptionsSet != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSet gets a reference to the given DhcpOptionsSet and assigns it to the DhcpOptionsSet field.
func (o *CreateDhcpOptionsResponse) SetDhcpOptionsSet(v DhcpOptionsSet) {
	o.DhcpOptionsSet = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateDhcpOptionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDhcpOptionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateDhcpOptionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateDhcpOptionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DhcpOptionsSet != nil {
		toSerialize["DhcpOptionsSet"] = o.DhcpOptionsSet
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDhcpOptionsResponse struct {
	value *CreateDhcpOptionsResponse
	isSet bool
}

func (v NullableCreateDhcpOptionsResponse) Get() *CreateDhcpOptionsResponse {
	return v.value
}

func (v *NullableCreateDhcpOptionsResponse) Set(val *CreateDhcpOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDhcpOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDhcpOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDhcpOptionsResponse(val *CreateDhcpOptionsResponse) *NullableCreateDhcpOptionsResponse {
	return &NullableCreateDhcpOptionsResponse{value: val, isSet: true}
}

func (v NullableCreateDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDhcpOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDirectLinkInterfaceRequest struct for CreateDirectLinkInterfaceRequest
type CreateDirectLinkInterfaceRequest struct {
	// The ID of the existing DirectLink for which you want to create the DirectLink interface.
	DirectLinkId string `json:"DirectLinkId"`
	DirectLinkInterface DirectLinkInterface `json:"DirectLinkInterface"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewCreateDirectLinkInterfaceRequest instantiates a new CreateDirectLinkInterfaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDirectLinkInterfaceRequest(directLinkId string, directLinkInterface DirectLinkInterface, ) *CreateDirectLinkInterfaceRequest {
	this := CreateDirectLinkInterfaceRequest{}
	this.DirectLinkId = directLinkId
	this.DirectLinkInterface = directLinkInterface
	return &this
}

// NewCreateDirectLinkInterfaceRequestWithDefaults instantiates a new CreateDirectLinkInterfaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDirectLinkInterfaceRequestWithDefaults() *CreateDirectLinkInterfaceRequest {
	this := CreateDirectLinkInterfaceRequest{}
	return &this
}

// GetDirectLinkId returns the DirectLinkId field value
func (o *CreateDirectLinkInterfaceRequest) GetDirectLinkId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DirectLinkId
}

// GetDirectLinkIdOk returns a tuple with the DirectLinkId field value
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkInterfaceRequest) GetDirectLinkIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkId, true
}

// SetDirectLinkId sets field value
func (o *CreateDirectLinkInterfaceRequest) SetDirectLinkId(v string) {
	o.DirectLinkId = v
}

// GetDirectLinkInterface returns the DirectLinkInterface field value
func (o *CreateDirectLinkInterfaceRequest) GetDirectLinkInterface() DirectLinkInterface {
	if o == nil  {
		var ret DirectLinkInterface
		return ret
	}

	return o.DirectLinkInterface
}

// GetDirectLinkInterfaceOk returns a tuple with the DirectLinkInterface field value
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkInterfaceRequest) GetDirectLinkInterfaceOk() (*DirectLinkInterface, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkInterface, true
}

// SetDirectLinkInterface sets field value
func (o *CreateDirectLinkInterfaceRequest) SetDirectLinkInterface(v DirectLinkInterface) {
	o.DirectLinkInterface = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateDirectLinkInterfaceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkInterfaceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateDirectLinkInterfaceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateDirectLinkInterfaceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o CreateDirectLinkInterfaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DirectLinkId"] = o.DirectLinkId
	}
	if true {
		toSerialize["DirectLinkInterface"] = o.DirectLinkInterface
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDirectLinkInterfaceRequest struct {
	value *CreateDirectLinkInterfaceRequest
	isSet bool
}

func (v NullableCreateDirectLinkInterfaceRequest) Get() *CreateDirectLinkInterfaceRequest {
	return v.value
}

func (v *NullableCreateDirectLinkInterfaceRequest) Set(val *CreateDirectLinkInterfaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDirectLinkInterfaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDirectLinkInterfaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDirectLinkInterfaceRequest(val *CreateDirectLinkInterfaceRequest) *NullableCreateDirectLinkInterfaceRequest {
	return &NullableCreateDirectLinkInterfaceRequest{value: val, isSet: true}
}

func (v NullableCreateDirectLinkInterfaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDirectLinkInterfaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDirectLinkInterfaceResponse struct for CreateDirectLinkInterfaceResponse
type CreateDirectLinkInterfaceResponse struct {
	DirectLinkInterface *DirectLinkInterfaces `json:"DirectLinkInterface,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateDirectLinkInterfaceResponse instantiates a new CreateDirectLinkInterfaceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDirectLinkInterfaceResponse() *CreateDirectLinkInterfaceResponse {
	this := CreateDirectLinkInterfaceResponse{}
	return &this
}

// NewCreateDirectLinkInterfaceResponseWithDefaults instantiates a new CreateDirectLinkInterfaceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDirectLinkInterfaceResponseWithDefaults() *CreateDirectLinkInterfaceResponse {
	this := CreateDirectLinkInterfaceResponse{}
	return &this
}

// GetDirectLinkInterface returns the DirectLinkInterface field value if set, zero value otherwise.
func (o *CreateDirectLinkInterfaceResponse) GetDirectLinkInterface() DirectLinkInterfaces {
	if o == nil || o.DirectLinkInterface == nil {
		var ret DirectLinkInterfaces
		return ret
	}
	return *o.DirectLinkInterface
}

// GetDirectLinkInterfaceOk returns a tuple with the DirectLinkInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkInterfaceResponse) GetDirectLinkInterfaceOk() (*DirectLinkInterfaces, bool) {
	if o == nil || o.DirectLinkInterface == nil {
		return nil, false
	}
	return o.DirectLinkInterface, true
}

// HasDirectLinkInterface returns a boolean if a field has been set.
func (o *CreateDirectLinkInterfaceResponse) HasDirectLinkInterface() bool {
	if o != nil && o.DirectLinkInterface != nil {
		return true
	}

	return false
}

// SetDirectLinkInterface gets a reference to the given DirectLinkInterfaces and assigns it to the DirectLinkInterface field.
func (o *CreateDirectLinkInterfaceResponse) SetDirectLinkInterface(v DirectLinkInterfaces) {
	o.DirectLinkInterface = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateDirectLinkInterfaceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkInterfaceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateDirectLinkInterfaceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateDirectLinkInterfaceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateDirectLinkInterfaceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinkInterface != nil {
		toSerialize["DirectLinkInterface"] = o.DirectLinkInterface
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDirectLinkInterfaceResponse struct {
	value *CreateDirectLinkInterfaceResponse
	isSet bool
}

func (v NullableCreateDirectLinkInterfaceResponse) Get() *CreateDirectLinkInterfaceResponse {
	return v.value
}

func (v *NullableCreateDirectLinkInterfaceResponse) Set(val *CreateDirectLinkInterfaceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDirectLinkInterfaceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDirectLinkInterfaceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDirectLinkInterfaceResponse(val *CreateDirectLinkInterfaceResponse) *NullableCreateDirectLinkInterfaceResponse {
	return &NullableCreateDirectLinkInterfaceResponse{value: val, isSet: true}
}

func (v NullableCreateDirectLinkInterfaceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDirectLinkInterfaceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDirectLinkRequest struct for CreateDirectLinkRequest
type CreateDirectLinkRequest struct {
	// The bandwidth of the DirectLink (`1Gbps` \\| `10Gbps`).
	Bandwidth string `json:"Bandwidth"`
	// The name of the DirectLink.
	DirectLinkName string `json:"DirectLinkName"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The code of the requested location for the DirectLink, returned by the [ReadLocations](#readlocations) method.
	Location string `json:"Location"`
}

// NewCreateDirectLinkRequest instantiates a new CreateDirectLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDirectLinkRequest(bandwidth string, directLinkName string, location string, ) *CreateDirectLinkRequest {
	this := CreateDirectLinkRequest{}
	this.Bandwidth = bandwidth
	this.DirectLinkName = directLinkName
	this.Location = location
	return &this
}

// NewCreateDirectLinkRequestWithDefaults instantiates a new CreateDirectLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDirectLinkRequestWithDefaults() *CreateDirectLinkRequest {
	this := CreateDirectLinkRequest{}
	return &this
}

// GetBandwidth returns the Bandwidth field value
func (o *CreateDirectLinkRequest) GetBandwidth() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkRequest) GetBandwidthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bandwidth, true
}

// SetBandwidth sets field value
func (o *CreateDirectLinkRequest) SetBandwidth(v string) {
	o.Bandwidth = v
}

// GetDirectLinkName returns the DirectLinkName field value
func (o *CreateDirectLinkRequest) GetDirectLinkName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DirectLinkName
}

// GetDirectLinkNameOk returns a tuple with the DirectLinkName field value
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkRequest) GetDirectLinkNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkName, true
}

// SetDirectLinkName sets field value
func (o *CreateDirectLinkRequest) SetDirectLinkName(v string) {
	o.DirectLinkName = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateDirectLinkRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateDirectLinkRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateDirectLinkRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLocation returns the Location field value
func (o *CreateDirectLinkRequest) GetLocation() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkRequest) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *CreateDirectLinkRequest) SetLocation(v string) {
	o.Location = v
}

func (o CreateDirectLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Bandwidth"] = o.Bandwidth
	}
	if true {
		toSerialize["DirectLinkName"] = o.DirectLinkName
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Location"] = o.Location
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDirectLinkRequest struct {
	value *CreateDirectLinkRequest
	isSet bool
}

func (v NullableCreateDirectLinkRequest) Get() *CreateDirectLinkRequest {
	return v.value
}

func (v *NullableCreateDirectLinkRequest) Set(val *CreateDirectLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDirectLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDirectLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDirectLinkRequest(val *CreateDirectLinkRequest) *NullableCreateDirectLinkRequest {
	return &NullableCreateDirectLinkRequest{value: val, isSet: true}
}

func (v NullableCreateDirectLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDirectLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateDirectLinkResponse struct for CreateDirectLinkResponse
type CreateDirectLinkResponse struct {
	DirectLink *DirectLink `json:"DirectLink,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateDirectLinkResponse instantiates a new CreateDirectLinkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDirectLinkResponse() *CreateDirectLinkResponse {
	this := CreateDirectLinkResponse{}
	return &this
}

// NewCreateDirectLinkResponseWithDefaults instantiates a new CreateDirectLinkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDirectLinkResponseWithDefaults() *CreateDirectLinkResponse {
	this := CreateDirectLinkResponse{}
	return &this
}

// GetDirectLink returns the DirectLink field value if set, zero value otherwise.
func (o *CreateDirectLinkResponse) GetDirectLink() DirectLink {
	if o == nil || o.DirectLink == nil {
		var ret DirectLink
		return ret
	}
	return *o.DirectLink
}

// GetDirectLinkOk returns a tuple with the DirectLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkResponse) GetDirectLinkOk() (*DirectLink, bool) {
	if o == nil || o.DirectLink == nil {
		return nil, false
	}
	return o.DirectLink, true
}

// HasDirectLink returns a boolean if a field has been set.
func (o *CreateDirectLinkResponse) HasDirectLink() bool {
	if o != nil && o.DirectLink != nil {
		return true
	}

	return false
}

// SetDirectLink gets a reference to the given DirectLink and assigns it to the DirectLink field.
func (o *CreateDirectLinkResponse) SetDirectLink(v DirectLink) {
	o.DirectLink = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateDirectLinkResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDirectLinkResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateDirectLinkResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateDirectLinkResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateDirectLinkResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLink != nil {
		toSerialize["DirectLink"] = o.DirectLink
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDirectLinkResponse struct {
	value *CreateDirectLinkResponse
	isSet bool
}

func (v NullableCreateDirectLinkResponse) Get() *CreateDirectLinkResponse {
	return v.value
}

func (v *NullableCreateDirectLinkResponse) Set(val *CreateDirectLinkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDirectLinkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDirectLinkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDirectLinkResponse(val *CreateDirectLinkResponse) *NullableCreateDirectLinkResponse {
	return &NullableCreateDirectLinkResponse{value: val, isSet: true}
}

func (v NullableCreateDirectLinkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDirectLinkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateFlexibleGpuRequest struct for CreateFlexibleGpuRequest
type CreateFlexibleGpuRequest struct {
	// If `true`, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The processor generation that the fGPU must be compatible with. If not specified, the oldest possible processor generation is selected (as provided by [ReadFlexibleGpuCatalog](#readflexiblegpucatalog) for the specified model of fGPU).
	Generation *string `json:"Generation,omitempty"`
	// The model of fGPU you want to allocate. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).
	ModelName string `json:"ModelName"`
	// The Subregion in which you want to create the fGPU.
	SubregionName string `json:"SubregionName"`
}

// NewCreateFlexibleGpuRequest instantiates a new CreateFlexibleGpuRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFlexibleGpuRequest(modelName string, subregionName string, ) *CreateFlexibleGpuRequest {
	this := CreateFlexibleGpuRequest{}
	var deleteOnVmDeletion bool = false
	this.DeleteOnVmDeletion = &deleteOnVmDeletion
	this.ModelName = modelName
	this.SubregionName = subregionName
	return &this
}

// NewCreateFlexibleGpuRequestWithDefaults instantiates a new CreateFlexibleGpuRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFlexibleGpuRequestWithDefaults() *CreateFlexibleGpuRequest {
	this := CreateFlexibleGpuRequest{}
	var deleteOnVmDeletion bool = false
	this.DeleteOnVmDeletion = &deleteOnVmDeletion
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *CreateFlexibleGpuRequest) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuRequest) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *CreateFlexibleGpuRequest) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *CreateFlexibleGpuRequest) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateFlexibleGpuRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateFlexibleGpuRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateFlexibleGpuRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *CreateFlexibleGpuRequest) GetGeneration() string {
	if o == nil || o.Generation == nil {
		var ret string
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuRequest) GetGenerationOk() (*string, bool) {
	if o == nil || o.Generation == nil {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *CreateFlexibleGpuRequest) HasGeneration() bool {
	if o != nil && o.Generation != nil {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given string and assigns it to the Generation field.
func (o *CreateFlexibleGpuRequest) SetGeneration(v string) {
	o.Generation = &v
}

// GetModelName returns the ModelName field value
func (o *CreateFlexibleGpuRequest) GetModelName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuRequest) GetModelNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModelName, true
}

// SetModelName sets field value
func (o *CreateFlexibleGpuRequest) SetModelName(v string) {
	o.ModelName = v
}

// GetSubregionName returns the SubregionName field value
func (o *CreateFlexibleGpuRequest) GetSubregionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuRequest) GetSubregionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubregionName, true
}

// SetSubregionName sets field value
func (o *CreateFlexibleGpuRequest) SetSubregionName(v string) {
	o.SubregionName = v
}

func (o CreateFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Generation != nil {
		toSerialize["Generation"] = o.Generation
	}
	if true {
		toSerialize["ModelName"] = o.ModelName
	}
	if true {
		toSerialize["SubregionName"] = o.SubregionName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFlexibleGpuRequest struct {
	value *CreateFlexibleGpuRequest
	isSet bool
}

func (v NullableCreateFlexibleGpuRequest) Get() *CreateFlexibleGpuRequest {
	return v.value
}

func (v *NullableCreateFlexibleGpuRequest) Set(val *CreateFlexibleGpuRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFlexibleGpuRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFlexibleGpuRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFlexibleGpuRequest(val *CreateFlexibleGpuRequest) *NullableCreateFlexibleGpuRequest {
	return &NullableCreateFlexibleGpuRequest{value: val, isSet: true}
}

func (v NullableCreateFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFlexibleGpuRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateFlexibleGpuResponse struct for CreateFlexibleGpuResponse
type CreateFlexibleGpuResponse struct {
	FlexibleGpu *FlexibleGpu `json:"FlexibleGpu,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateFlexibleGpuResponse instantiates a new CreateFlexibleGpuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFlexibleGpuResponse() *CreateFlexibleGpuResponse {
	this := CreateFlexibleGpuResponse{}
	return &this
}

// NewCreateFlexibleGpuResponseWithDefaults instantiates a new CreateFlexibleGpuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFlexibleGpuResponseWithDefaults() *CreateFlexibleGpuResponse {
	this := CreateFlexibleGpuResponse{}
	return &this
}

// GetFlexibleGpu returns the FlexibleGpu field value if set, zero value otherwise.
func (o *CreateFlexibleGpuResponse) GetFlexibleGpu() FlexibleGpu {
	if o == nil || o.FlexibleGpu == nil {
		var ret FlexibleGpu
		return ret
	}
	return *o.FlexibleGpu
}

// GetFlexibleGpuOk returns a tuple with the FlexibleGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuResponse) GetFlexibleGpuOk() (*FlexibleGpu, bool) {
	if o == nil || o.FlexibleGpu == nil {
		return nil, false
	}
	return o.FlexibleGpu, true
}

// HasFlexibleGpu returns a boolean if a field has been set.
func (o *CreateFlexibleGpuResponse) HasFlexibleGpu() bool {
	if o != nil && o.FlexibleGpu != nil {
		return true
	}

	return false
}

// SetFlexibleGpu gets a reference to the given FlexibleGpu and assigns it to the FlexibleGpu field.
func (o *CreateFlexibleGpuResponse) SetFlexibleGpu(v FlexibleGpu) {
	o.FlexibleGpu = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateFlexibleGpuResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFlexibleGpuResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateFlexibleGpuResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateFlexibleGpuResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlexibleGpu != nil {
		toSerialize["FlexibleGpu"] = o.FlexibleGpu
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFlexibleGpuResponse struct {
	value *CreateFlexibleGpuResponse
	isSet bool
}

func (v NullableCreateFlexibleGpuResponse) Get() *CreateFlexibleGpuResponse {
	return v.value
}

func (v *NullableCreateFlexibleGpuResponse) Set(val *CreateFlexibleGpuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFlexibleGpuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFlexibleGpuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFlexibleGpuResponse(val *CreateFlexibleGpuResponse) *NullableCreateFlexibleGpuResponse {
	return &NullableCreateFlexibleGpuResponse{value: val, isSet: true}
}

func (v NullableCreateFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFlexibleGpuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateImageExportTaskRequest struct for CreateImageExportTaskRequest
type CreateImageExportTaskRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the OMI to export.
	ImageId string `json:"ImageId"`
	OsuExport OsuExport `json:"OsuExport"`
}

// NewCreateImageExportTaskRequest instantiates a new CreateImageExportTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageExportTaskRequest(imageId string, osuExport OsuExport, ) *CreateImageExportTaskRequest {
	this := CreateImageExportTaskRequest{}
	this.ImageId = imageId
	this.OsuExport = osuExport
	return &this
}

// NewCreateImageExportTaskRequestWithDefaults instantiates a new CreateImageExportTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageExportTaskRequestWithDefaults() *CreateImageExportTaskRequest {
	this := CreateImageExportTaskRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateImageExportTaskRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageExportTaskRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateImageExportTaskRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateImageExportTaskRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetImageId returns the ImageId field value
func (o *CreateImageExportTaskRequest) GetImageId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *CreateImageExportTaskRequest) GetImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *CreateImageExportTaskRequest) SetImageId(v string) {
	o.ImageId = v
}

// GetOsuExport returns the OsuExport field value
func (o *CreateImageExportTaskRequest) GetOsuExport() OsuExport {
	if o == nil  {
		var ret OsuExport
		return ret
	}

	return o.OsuExport
}

// GetOsuExportOk returns a tuple with the OsuExport field value
// and a boolean to check if the value has been set.
func (o *CreateImageExportTaskRequest) GetOsuExportOk() (*OsuExport, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OsuExport, true
}

// SetOsuExport sets field value
func (o *CreateImageExportTaskRequest) SetOsuExport(v OsuExport) {
	o.OsuExport = v
}

func (o CreateImageExportTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ImageId"] = o.ImageId
	}
	if true {
		toSerialize["OsuExport"] = o.OsuExport
	}
	return json.Marshal(toSerialize)
}

type NullableCreateImageExportTaskRequest struct {
	value *CreateImageExportTaskRequest
	isSet bool
}

func (v NullableCreateImageExportTaskRequest) Get() *CreateImageExportTaskRequest {
	return v.value
}

func (v *NullableCreateImageExportTaskRequest) Set(val *CreateImageExportTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageExportTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageExportTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageExportTaskRequest(val *CreateImageExportTaskRequest) *NullableCreateImageExportTaskRequest {
	return &NullableCreateImageExportTaskRequest{value: val, isSet: true}
}

func (v NullableCreateImageExportTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageExportTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateImageExportTaskResponse struct for CreateImageExportTaskResponse
type CreateImageExportTaskResponse struct {
	ImageExportTask *ImageExportTask `json:"ImageExportTask,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateImageExportTaskResponse instantiates a new CreateImageExportTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageExportTaskResponse() *CreateImageExportTaskResponse {
	this := CreateImageExportTaskResponse{}
	return &this
}

// NewCreateImageExportTaskResponseWithDefaults instantiates a new CreateImageExportTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageExportTaskResponseWithDefaults() *CreateImageExportTaskResponse {
	this := CreateImageExportTaskResponse{}
	return &this
}

// GetImageExportTask returns the ImageExportTask field value if set, zero value otherwise.
func (o *CreateImageExportTaskResponse) GetImageExportTask() ImageExportTask {
	if o == nil || o.ImageExportTask == nil {
		var ret ImageExportTask
		return ret
	}
	return *o.ImageExportTask
}

// GetImageExportTaskOk returns a tuple with the ImageExportTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageExportTaskResponse) GetImageExportTaskOk() (*ImageExportTask, bool) {
	if o == nil || o.ImageExportTask == nil {
		return nil, false
	}
	return o.ImageExportTask, true
}

// HasImageExportTask returns a boolean if a field has been set.
func (o *CreateImageExportTaskResponse) HasImageExportTask() bool {
	if o != nil && o.ImageExportTask != nil {
		return true
	}

	return false
}

// SetImageExportTask gets a reference to the given ImageExportTask and assigns it to the ImageExportTask field.
func (o *CreateImageExportTaskResponse) SetImageExportTask(v ImageExportTask) {
	o.ImageExportTask = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateImageExportTaskResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageExportTaskResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateImageExportTaskResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateImageExportTaskResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateImageExportTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageExportTask != nil {
		toSerialize["ImageExportTask"] = o.ImageExportTask
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateImageExportTaskResponse struct {
	value *CreateImageExportTaskResponse
	isSet bool
}

func (v NullableCreateImageExportTaskResponse) Get() *CreateImageExportTaskResponse {
	return v.value
}

func (v *NullableCreateImageExportTaskResponse) Set(val *CreateImageExportTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageExportTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageExportTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageExportTaskResponse(val *CreateImageExportTaskResponse) *NullableCreateImageExportTaskResponse {
	return &NullableCreateImageExportTaskResponse{value: val, isSet: true}
}

func (v NullableCreateImageExportTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageExportTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateImageRequest struct for CreateImageRequest
type CreateImageRequest struct {
	// The architecture of the OMI (by default, `i386`).
	Architecture *string `json:"Architecture,omitempty"`
	// One or more block device mappings.
	BlockDeviceMappings *[]BlockDeviceMappingImage `json:"BlockDeviceMappings,omitempty"`
	// A description for the new OMI.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in an OSU bucket. If you specify this parameter, a copy of the OMI is created in your account.
	FileLocation *string `json:"FileLocation,omitempty"`
	// A unique name for the new OMI.<br /> Constraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-).
	ImageName *string `json:"ImageName,omitempty"`
	// If `false`, the VM shuts down before creating the OMI and then reboots. If `true`, the VM does not.
	NoReboot *bool `json:"NoReboot,omitempty"`
	// The name of the root device.
	RootDeviceName *string `json:"RootDeviceName,omitempty"`
	// The ID of the OMI you want to copy.
	SourceImageId *string `json:"SourceImageId,omitempty"`
	// The name of the source Region, which must be the same as the Region of your account.
	SourceRegionName *string `json:"SourceRegionName,omitempty"`
	// The ID of the VM from which you want to create the OMI.
	VmId *string `json:"VmId,omitempty"`
}

// NewCreateImageRequest instantiates a new CreateImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageRequest() *CreateImageRequest {
	this := CreateImageRequest{}
	return &this
}

// NewCreateImageRequestWithDefaults instantiates a new CreateImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageRequestWithDefaults() *CreateImageRequest {
	this := CreateImageRequest{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *CreateImageRequest) GetArchitecture() string {
	if o == nil || o.Architecture == nil {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetArchitectureOk() (*string, bool) {
	if o == nil || o.Architecture == nil {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *CreateImageRequest) HasArchitecture() bool {
	if o != nil && o.Architecture != nil {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *CreateImageRequest) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *CreateImageRequest) GetBlockDeviceMappings() []BlockDeviceMappingImage {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingImage
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetBlockDeviceMappingsOk() (*[]BlockDeviceMappingImage, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		return nil, false
	}
	return o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *CreateImageRequest) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingImage and assigns it to the BlockDeviceMappings field.
func (o *CreateImageRequest) SetBlockDeviceMappings(v []BlockDeviceMappingImage) {
	o.BlockDeviceMappings = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateImageRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateImageRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateImageRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateImageRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateImageRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateImageRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFileLocation returns the FileLocation field value if set, zero value otherwise.
func (o *CreateImageRequest) GetFileLocation() string {
	if o == nil || o.FileLocation == nil {
		var ret string
		return ret
	}
	return *o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetFileLocationOk() (*string, bool) {
	if o == nil || o.FileLocation == nil {
		return nil, false
	}
	return o.FileLocation, true
}

// HasFileLocation returns a boolean if a field has been set.
func (o *CreateImageRequest) HasFileLocation() bool {
	if o != nil && o.FileLocation != nil {
		return true
	}

	return false
}

// SetFileLocation gets a reference to the given string and assigns it to the FileLocation field.
func (o *CreateImageRequest) SetFileLocation(v string) {
	o.FileLocation = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetImageName() string {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetImageNameOk() (*string, bool) {
	if o == nil || o.ImageName == nil {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasImageName() bool {
	if o != nil && o.ImageName != nil {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *CreateImageRequest) SetImageName(v string) {
	o.ImageName = &v
}

// GetNoReboot returns the NoReboot field value if set, zero value otherwise.
func (o *CreateImageRequest) GetNoReboot() bool {
	if o == nil || o.NoReboot == nil {
		var ret bool
		return ret
	}
	return *o.NoReboot
}

// GetNoRebootOk returns a tuple with the NoReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetNoRebootOk() (*bool, bool) {
	if o == nil || o.NoReboot == nil {
		return nil, false
	}
	return o.NoReboot, true
}

// HasNoReboot returns a boolean if a field has been set.
func (o *CreateImageRequest) HasNoReboot() bool {
	if o != nil && o.NoReboot != nil {
		return true
	}

	return false
}

// SetNoReboot gets a reference to the given bool and assigns it to the NoReboot field.
func (o *CreateImageRequest) SetNoReboot(v bool) {
	o.NoReboot = &v
}

// GetRootDeviceName returns the RootDeviceName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetRootDeviceName() string {
	if o == nil || o.RootDeviceName == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceName
}

// GetRootDeviceNameOk returns a tuple with the RootDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetRootDeviceNameOk() (*string, bool) {
	if o == nil || o.RootDeviceName == nil {
		return nil, false
	}
	return o.RootDeviceName, true
}

// HasRootDeviceName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasRootDeviceName() bool {
	if o != nil && o.RootDeviceName != nil {
		return true
	}

	return false
}

// SetRootDeviceName gets a reference to the given string and assigns it to the RootDeviceName field.
func (o *CreateImageRequest) SetRootDeviceName(v string) {
	o.RootDeviceName = &v
}

// GetSourceImageId returns the SourceImageId field value if set, zero value otherwise.
func (o *CreateImageRequest) GetSourceImageId() string {
	if o == nil || o.SourceImageId == nil {
		var ret string
		return ret
	}
	return *o.SourceImageId
}

// GetSourceImageIdOk returns a tuple with the SourceImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetSourceImageIdOk() (*string, bool) {
	if o == nil || o.SourceImageId == nil {
		return nil, false
	}
	return o.SourceImageId, true
}

// HasSourceImageId returns a boolean if a field has been set.
func (o *CreateImageRequest) HasSourceImageId() bool {
	if o != nil && o.SourceImageId != nil {
		return true
	}

	return false
}

// SetSourceImageId gets a reference to the given string and assigns it to the SourceImageId field.
func (o *CreateImageRequest) SetSourceImageId(v string) {
	o.SourceImageId = &v
}

// GetSourceRegionName returns the SourceRegionName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetSourceRegionName() string {
	if o == nil || o.SourceRegionName == nil {
		var ret string
		return ret
	}
	return *o.SourceRegionName
}

// GetSourceRegionNameOk returns a tuple with the SourceRegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetSourceRegionNameOk() (*string, bool) {
	if o == nil || o.SourceRegionName == nil {
		return nil, false
	}
	return o.SourceRegionName, true
}

// HasSourceRegionName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasSourceRegionName() bool {
	if o != nil && o.SourceRegionName != nil {
		return true
	}

	return false
}

// SetSourceRegionName gets a reference to the given string and assigns it to the SourceRegionName field.
func (o *CreateImageRequest) SetSourceRegionName(v string) {
	o.SourceRegionName = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *CreateImageRequest) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *CreateImageRequest) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *CreateImageRequest) SetVmId(v string) {
	o.VmId = &v
}

func (o CreateImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Architecture != nil {
		toSerialize["Architecture"] = o.Architecture
	}
	if o.BlockDeviceMappings != nil {
		toSerialize["BlockDeviceMappings"] = o.BlockDeviceMappings
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.FileLocation != nil {
		toSerialize["FileLocation"] = o.FileLocation
	}
	if o.ImageName != nil {
		toSerialize["ImageName"] = o.ImageName
	}
	if o.NoReboot != nil {
		toSerialize["NoReboot"] = o.NoReboot
	}
	if o.RootDeviceName != nil {
		toSerialize["RootDeviceName"] = o.RootDeviceName
	}
	if o.SourceImageId != nil {
		toSerialize["SourceImageId"] = o.SourceImageId
	}
	if o.SourceRegionName != nil {
		toSerialize["SourceRegionName"] = o.SourceRegionName
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateImageRequest struct {
	value *CreateImageRequest
	isSet bool
}

func (v NullableCreateImageRequest) Get() *CreateImageRequest {
	return v.value
}

func (v *NullableCreateImageRequest) Set(val *CreateImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageRequest(val *CreateImageRequest) *NullableCreateImageRequest {
	return &NullableCreateImageRequest{value: val, isSet: true}
}

func (v NullableCreateImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateImageResponse struct for CreateImageResponse
type CreateImageResponse struct {
	Image *Image `json:"Image,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateImageResponse instantiates a new CreateImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageResponse() *CreateImageResponse {
	this := CreateImageResponse{}
	return &this
}

// NewCreateImageResponseWithDefaults instantiates a new CreateImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageResponseWithDefaults() *CreateImageResponse {
	this := CreateImageResponse{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CreateImageResponse) GetImage() Image {
	if o == nil || o.Image == nil {
		var ret Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageResponse) GetImageOk() (*Image, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CreateImageResponse) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given Image and assigns it to the Image field.
func (o *CreateImageResponse) SetImage(v Image) {
	o.Image = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateImageResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateImageResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateImageResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["Image"] = o.Image
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateImageResponse struct {
	value *CreateImageResponse
	isSet bool
}

func (v NullableCreateImageResponse) Get() *CreateImageResponse {
	return v.value
}

func (v *NullableCreateImageResponse) Set(val *CreateImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageResponse(val *CreateImageResponse) *NullableCreateImageResponse {
	return &NullableCreateImageResponse{value: val, isSet: true}
}

func (v NullableCreateImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateInternetServiceRequest struct for CreateInternetServiceRequest
type CreateInternetServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewCreateInternetServiceRequest instantiates a new CreateInternetServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInternetServiceRequest() *CreateInternetServiceRequest {
	this := CreateInternetServiceRequest{}
	return &this
}

// NewCreateInternetServiceRequestWithDefaults instantiates a new CreateInternetServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInternetServiceRequestWithDefaults() *CreateInternetServiceRequest {
	this := CreateInternetServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateInternetServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInternetServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateInternetServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateInternetServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o CreateInternetServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableCreateInternetServiceRequest struct {
	value *CreateInternetServiceRequest
	isSet bool
}

func (v NullableCreateInternetServiceRequest) Get() *CreateInternetServiceRequest {
	return v.value
}

func (v *NullableCreateInternetServiceRequest) Set(val *CreateInternetServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInternetServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInternetServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInternetServiceRequest(val *CreateInternetServiceRequest) *NullableCreateInternetServiceRequest {
	return &NullableCreateInternetServiceRequest{value: val, isSet: true}
}

func (v NullableCreateInternetServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInternetServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateInternetServiceResponse struct for CreateInternetServiceResponse
type CreateInternetServiceResponse struct {
	InternetService *InternetService `json:"InternetService,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateInternetServiceResponse instantiates a new CreateInternetServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInternetServiceResponse() *CreateInternetServiceResponse {
	this := CreateInternetServiceResponse{}
	return &this
}

// NewCreateInternetServiceResponseWithDefaults instantiates a new CreateInternetServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInternetServiceResponseWithDefaults() *CreateInternetServiceResponse {
	this := CreateInternetServiceResponse{}
	return &this
}

// GetInternetService returns the InternetService field value if set, zero value otherwise.
func (o *CreateInternetServiceResponse) GetInternetService() InternetService {
	if o == nil || o.InternetService == nil {
		var ret InternetService
		return ret
	}
	return *o.InternetService
}

// GetInternetServiceOk returns a tuple with the InternetService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInternetServiceResponse) GetInternetServiceOk() (*InternetService, bool) {
	if o == nil || o.InternetService == nil {
		return nil, false
	}
	return o.InternetService, true
}

// HasInternetService returns a boolean if a field has been set.
func (o *CreateInternetServiceResponse) HasInternetService() bool {
	if o != nil && o.InternetService != nil {
		return true
	}

	return false
}

// SetInternetService gets a reference to the given InternetService and assigns it to the InternetService field.
func (o *CreateInternetServiceResponse) SetInternetService(v InternetService) {
	o.InternetService = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateInternetServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInternetServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateInternetServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateInternetServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateInternetServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternetService != nil {
		toSerialize["InternetService"] = o.InternetService
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateInternetServiceResponse struct {
	value *CreateInternetServiceResponse
	isSet bool
}

func (v NullableCreateInternetServiceResponse) Get() *CreateInternetServiceResponse {
	return v.value
}

func (v *NullableCreateInternetServiceResponse) Set(val *CreateInternetServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInternetServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInternetServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInternetServiceResponse(val *CreateInternetServiceResponse) *NullableCreateInternetServiceResponse {
	return &NullableCreateInternetServiceResponse{value: val, isSet: true}
}

func (v NullableCreateInternetServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInternetServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateKeypairRequest struct for CreateKeypairRequest
type CreateKeypairRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
	KeypairName string `json:"KeypairName"`
	// The public key. It must be base64-encoded.
	PublicKey *string `json:"PublicKey,omitempty"`
}

// NewCreateKeypairRequest instantiates a new CreateKeypairRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateKeypairRequest(keypairName string, ) *CreateKeypairRequest {
	this := CreateKeypairRequest{}
	this.KeypairName = keypairName
	return &this
}

// NewCreateKeypairRequestWithDefaults instantiates a new CreateKeypairRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateKeypairRequestWithDefaults() *CreateKeypairRequest {
	this := CreateKeypairRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateKeypairRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateKeypairRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateKeypairRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetKeypairName returns the KeypairName field value
func (o *CreateKeypairRequest) GetKeypairName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value
// and a boolean to check if the value has been set.
func (o *CreateKeypairRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeypairName, true
}

// SetKeypairName sets field value
func (o *CreateKeypairRequest) SetKeypairName(v string) {
	o.KeypairName = v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *CreateKeypairRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *CreateKeypairRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *CreateKeypairRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o CreateKeypairRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["KeypairName"] = o.KeypairName
	}
	if o.PublicKey != nil {
		toSerialize["PublicKey"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableCreateKeypairRequest struct {
	value *CreateKeypairRequest
	isSet bool
}

func (v NullableCreateKeypairRequest) Get() *CreateKeypairRequest {
	return v.value
}

func (v *NullableCreateKeypairRequest) Set(val *CreateKeypairRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateKeypairRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateKeypairRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateKeypairRequest(val *CreateKeypairRequest) *NullableCreateKeypairRequest {
	return &NullableCreateKeypairRequest{value: val, isSet: true}
}

func (v NullableCreateKeypairRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateKeypairRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateKeypairResponse struct for CreateKeypairResponse
type CreateKeypairResponse struct {
	Keypair *KeypairCreated `json:"Keypair,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateKeypairResponse instantiates a new CreateKeypairResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateKeypairResponse() *CreateKeypairResponse {
	this := CreateKeypairResponse{}
	return &this
}

// NewCreateKeypairResponseWithDefaults instantiates a new CreateKeypairResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateKeypairResponseWithDefaults() *CreateKeypairResponse {
	this := CreateKeypairResponse{}
	return &this
}

// GetKeypair returns the Keypair field value if set, zero value otherwise.
func (o *CreateKeypairResponse) GetKeypair() KeypairCreated {
	if o == nil || o.Keypair == nil {
		var ret KeypairCreated
		return ret
	}
	return *o.Keypair
}

// GetKeypairOk returns a tuple with the Keypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairResponse) GetKeypairOk() (*KeypairCreated, bool) {
	if o == nil || o.Keypair == nil {
		return nil, false
	}
	return o.Keypair, true
}

// HasKeypair returns a boolean if a field has been set.
func (o *CreateKeypairResponse) HasKeypair() bool {
	if o != nil && o.Keypair != nil {
		return true
	}

	return false
}

// SetKeypair gets a reference to the given KeypairCreated and assigns it to the Keypair field.
func (o *CreateKeypairResponse) SetKeypair(v KeypairCreated) {
	o.Keypair = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateKeypairResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateKeypairResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateKeypairResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateKeypairResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keypair != nil {
		toSerialize["Keypair"] = o.Keypair
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateKeypairResponse struct {
	value *CreateKeypairResponse
	isSet bool
}

func (v NullableCreateKeypairResponse) Get() *CreateKeypairResponse {
	return v.value
}

func (v *NullableCreateKeypairResponse) Set(val *CreateKeypairResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateKeypairResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateKeypairResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateKeypairResponse(val *CreateKeypairResponse) *NullableCreateKeypairResponse {
	return &NullableCreateKeypairResponse{value: val, isSet: true}
}

func (v NullableCreateKeypairResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateKeypairResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateListenerRuleRequest struct for CreateListenerRuleRequest
type CreateListenerRuleRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Listener LoadBalancerLight `json:"Listener"`
	ListenerRule ListenerRuleForCreation `json:"ListenerRule"`
	// The IDs of the backend VMs.
	VmIds []string `json:"VmIds"`
}

// NewCreateListenerRuleRequest instantiates a new CreateListenerRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateListenerRuleRequest(listener LoadBalancerLight, listenerRule ListenerRuleForCreation, vmIds []string, ) *CreateListenerRuleRequest {
	this := CreateListenerRuleRequest{}
	this.Listener = listener
	this.ListenerRule = listenerRule
	this.VmIds = vmIds
	return &this
}

// NewCreateListenerRuleRequestWithDefaults instantiates a new CreateListenerRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateListenerRuleRequestWithDefaults() *CreateListenerRuleRequest {
	this := CreateListenerRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateListenerRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateListenerRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateListenerRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetListener returns the Listener field value
func (o *CreateListenerRuleRequest) GetListener() LoadBalancerLight {
	if o == nil  {
		var ret LoadBalancerLight
		return ret
	}

	return o.Listener
}

// GetListenerOk returns a tuple with the Listener field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetListenerOk() (*LoadBalancerLight, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Listener, true
}

// SetListener sets field value
func (o *CreateListenerRuleRequest) SetListener(v LoadBalancerLight) {
	o.Listener = v
}

// GetListenerRule returns the ListenerRule field value
func (o *CreateListenerRuleRequest) GetListenerRule() ListenerRuleForCreation {
	if o == nil  {
		var ret ListenerRuleForCreation
		return ret
	}

	return o.ListenerRule
}

// GetListenerRuleOk returns a tuple with the ListenerRule field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetListenerRuleOk() (*ListenerRuleForCreation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ListenerRule, true
}

// SetListenerRule sets field value
func (o *CreateListenerRuleRequest) SetListenerRule(v ListenerRuleForCreation) {
	o.ListenerRule = v
}

// GetVmIds returns the VmIds field value
func (o *CreateListenerRuleRequest) GetVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *CreateListenerRuleRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o CreateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Listener"] = o.Listener
	}
	if true {
		toSerialize["ListenerRule"] = o.ListenerRule
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreateListenerRuleRequest struct {
	value *CreateListenerRuleRequest
	isSet bool
}

func (v NullableCreateListenerRuleRequest) Get() *CreateListenerRuleRequest {
	return v.value
}

func (v *NullableCreateListenerRuleRequest) Set(val *CreateListenerRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateListenerRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateListenerRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateListenerRuleRequest(val *CreateListenerRuleRequest) *NullableCreateListenerRuleRequest {
	return &NullableCreateListenerRuleRequest{value: val, isSet: true}
}

func (v NullableCreateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateListenerRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateListenerRuleResponse struct for CreateListenerRuleResponse
type CreateListenerRuleResponse struct {
	ListenerRule *ListenerRule `json:"ListenerRule,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateListenerRuleResponse instantiates a new CreateListenerRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateListenerRuleResponse() *CreateListenerRuleResponse {
	this := CreateListenerRuleResponse{}
	return &this
}

// NewCreateListenerRuleResponseWithDefaults instantiates a new CreateListenerRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateListenerRuleResponseWithDefaults() *CreateListenerRuleResponse {
	this := CreateListenerRuleResponse{}
	return &this
}

// GetListenerRule returns the ListenerRule field value if set, zero value otherwise.
func (o *CreateListenerRuleResponse) GetListenerRule() ListenerRule {
	if o == nil || o.ListenerRule == nil {
		var ret ListenerRule
		return ret
	}
	return *o.ListenerRule
}

// GetListenerRuleOk returns a tuple with the ListenerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleResponse) GetListenerRuleOk() (*ListenerRule, bool) {
	if o == nil || o.ListenerRule == nil {
		return nil, false
	}
	return o.ListenerRule, true
}

// HasListenerRule returns a boolean if a field has been set.
func (o *CreateListenerRuleResponse) HasListenerRule() bool {
	if o != nil && o.ListenerRule != nil {
		return true
	}

	return false
}

// SetListenerRule gets a reference to the given ListenerRule and assigns it to the ListenerRule field.
func (o *CreateListenerRuleResponse) SetListenerRule(v ListenerRule) {
	o.ListenerRule = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateListenerRuleResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateListenerRuleResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateListenerRuleResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateListenerRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ListenerRule != nil {
		toSerialize["ListenerRule"] = o.ListenerRule
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateListenerRuleResponse struct {
	value *CreateListenerRuleResponse
	isSet bool
}

func (v NullableCreateListenerRuleResponse) Get() *CreateListenerRuleResponse {
	return v.value
}

func (v *NullableCreateListenerRuleResponse) Set(val *CreateListenerRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateListenerRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateListenerRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateListenerRuleResponse(val *CreateListenerRuleResponse) *NullableCreateListenerRuleResponse {
	return &NullableCreateListenerRuleResponse{value: val, isSet: true}
}

func (v NullableCreateListenerRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateListenerRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerListenersRequest struct for CreateLoadBalancerListenersRequest
type CreateLoadBalancerListenersRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more listeners for the load balancer.
	Listeners []ListenerForCreation `json:"Listeners"`
	// The name of the load balancer for which you want to create listeners.
	LoadBalancerName string `json:"LoadBalancerName"`
}

// NewCreateLoadBalancerListenersRequest instantiates a new CreateLoadBalancerListenersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerListenersRequest(listeners []ListenerForCreation, loadBalancerName string, ) *CreateLoadBalancerListenersRequest {
	this := CreateLoadBalancerListenersRequest{}
	this.Listeners = listeners
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewCreateLoadBalancerListenersRequestWithDefaults instantiates a new CreateLoadBalancerListenersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerListenersRequestWithDefaults() *CreateLoadBalancerListenersRequest {
	this := CreateLoadBalancerListenersRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateLoadBalancerListenersRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerListenersRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateLoadBalancerListenersRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateLoadBalancerListenersRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetListeners returns the Listeners field value
func (o *CreateLoadBalancerListenersRequest) GetListeners() []ListenerForCreation {
	if o == nil  {
		var ret []ListenerForCreation
		return ret
	}

	return o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerListenersRequest) GetListenersOk() (*[]ListenerForCreation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Listeners, true
}

// SetListeners sets field value
func (o *CreateLoadBalancerListenersRequest) SetListeners(v []ListenerForCreation) {
	o.Listeners = v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *CreateLoadBalancerListenersRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerListenersRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *CreateLoadBalancerListenersRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

func (o CreateLoadBalancerListenersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Listeners"] = o.Listeners
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerListenersRequest struct {
	value *CreateLoadBalancerListenersRequest
	isSet bool
}

func (v NullableCreateLoadBalancerListenersRequest) Get() *CreateLoadBalancerListenersRequest {
	return v.value
}

func (v *NullableCreateLoadBalancerListenersRequest) Set(val *CreateLoadBalancerListenersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerListenersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerListenersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerListenersRequest(val *CreateLoadBalancerListenersRequest) *NullableCreateLoadBalancerListenersRequest {
	return &NullableCreateLoadBalancerListenersRequest{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerListenersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerListenersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerListenersResponse struct for CreateLoadBalancerListenersResponse
type CreateLoadBalancerListenersResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateLoadBalancerListenersResponse instantiates a new CreateLoadBalancerListenersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerListenersResponse() *CreateLoadBalancerListenersResponse {
	this := CreateLoadBalancerListenersResponse{}
	return &this
}

// NewCreateLoadBalancerListenersResponseWithDefaults instantiates a new CreateLoadBalancerListenersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerListenersResponseWithDefaults() *CreateLoadBalancerListenersResponse {
	this := CreateLoadBalancerListenersResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *CreateLoadBalancerListenersResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerListenersResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *CreateLoadBalancerListenersResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *CreateLoadBalancerListenersResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateLoadBalancerListenersResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerListenersResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateLoadBalancerListenersResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateLoadBalancerListenersResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateLoadBalancerListenersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerListenersResponse struct {
	value *CreateLoadBalancerListenersResponse
	isSet bool
}

func (v NullableCreateLoadBalancerListenersResponse) Get() *CreateLoadBalancerListenersResponse {
	return v.value
}

func (v *NullableCreateLoadBalancerListenersResponse) Set(val *CreateLoadBalancerListenersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerListenersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerListenersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerListenersResponse(val *CreateLoadBalancerListenersResponse) *NullableCreateLoadBalancerListenersResponse {
	return &NullableCreateLoadBalancerListenersResponse{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerListenersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerListenersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerPolicyRequest struct for CreateLoadBalancerPolicyRequest
type CreateLoadBalancerPolicyRequest struct {
	// The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
	CookieName *string `json:"CookieName,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer for which you want to create a policy.
	LoadBalancerName string `json:"LoadBalancerName"`
	// The name of the policy. This name must be unique and consist of alphanumeric characters and dashes (-).
	PolicyName string `json:"PolicyName"`
	// The type of stickiness policy you want to create: `app` or `load_balancer`.
	PolicyType string `json:"PolicyType"`
}

// NewCreateLoadBalancerPolicyRequest instantiates a new CreateLoadBalancerPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerPolicyRequest(loadBalancerName string, policyName string, policyType string, ) *CreateLoadBalancerPolicyRequest {
	this := CreateLoadBalancerPolicyRequest{}
	this.LoadBalancerName = loadBalancerName
	this.PolicyName = policyName
	this.PolicyType = policyType
	return &this
}

// NewCreateLoadBalancerPolicyRequestWithDefaults instantiates a new CreateLoadBalancerPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerPolicyRequestWithDefaults() *CreateLoadBalancerPolicyRequest {
	this := CreateLoadBalancerPolicyRequest{}
	return &this
}

// GetCookieName returns the CookieName field value if set, zero value otherwise.
func (o *CreateLoadBalancerPolicyRequest) GetCookieName() string {
	if o == nil || o.CookieName == nil {
		var ret string
		return ret
	}
	return *o.CookieName
}

// GetCookieNameOk returns a tuple with the CookieName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyRequest) GetCookieNameOk() (*string, bool) {
	if o == nil || o.CookieName == nil {
		return nil, false
	}
	return o.CookieName, true
}

// HasCookieName returns a boolean if a field has been set.
func (o *CreateLoadBalancerPolicyRequest) HasCookieName() bool {
	if o != nil && o.CookieName != nil {
		return true
	}

	return false
}

// SetCookieName gets a reference to the given string and assigns it to the CookieName field.
func (o *CreateLoadBalancerPolicyRequest) SetCookieName(v string) {
	o.CookieName = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateLoadBalancerPolicyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateLoadBalancerPolicyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateLoadBalancerPolicyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *CreateLoadBalancerPolicyRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *CreateLoadBalancerPolicyRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetPolicyName returns the PolicyName field value
func (o *CreateLoadBalancerPolicyRequest) GetPolicyName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyRequest) GetPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *CreateLoadBalancerPolicyRequest) SetPolicyName(v string) {
	o.PolicyName = v
}

// GetPolicyType returns the PolicyType field value
func (o *CreateLoadBalancerPolicyRequest) GetPolicyType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyRequest) GetPolicyTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PolicyType, true
}

// SetPolicyType sets field value
func (o *CreateLoadBalancerPolicyRequest) SetPolicyType(v string) {
	o.PolicyType = v
}

func (o CreateLoadBalancerPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CookieName != nil {
		toSerialize["CookieName"] = o.CookieName
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if true {
		toSerialize["PolicyName"] = o.PolicyName
	}
	if true {
		toSerialize["PolicyType"] = o.PolicyType
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerPolicyRequest struct {
	value *CreateLoadBalancerPolicyRequest
	isSet bool
}

func (v NullableCreateLoadBalancerPolicyRequest) Get() *CreateLoadBalancerPolicyRequest {
	return v.value
}

func (v *NullableCreateLoadBalancerPolicyRequest) Set(val *CreateLoadBalancerPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerPolicyRequest(val *CreateLoadBalancerPolicyRequest) *NullableCreateLoadBalancerPolicyRequest {
	return &NullableCreateLoadBalancerPolicyRequest{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerPolicyResponse struct for CreateLoadBalancerPolicyResponse
type CreateLoadBalancerPolicyResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateLoadBalancerPolicyResponse instantiates a new CreateLoadBalancerPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerPolicyResponse() *CreateLoadBalancerPolicyResponse {
	this := CreateLoadBalancerPolicyResponse{}
	return &this
}

// NewCreateLoadBalancerPolicyResponseWithDefaults instantiates a new CreateLoadBalancerPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerPolicyResponseWithDefaults() *CreateLoadBalancerPolicyResponse {
	this := CreateLoadBalancerPolicyResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *CreateLoadBalancerPolicyResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *CreateLoadBalancerPolicyResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *CreateLoadBalancerPolicyResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateLoadBalancerPolicyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPolicyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateLoadBalancerPolicyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateLoadBalancerPolicyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateLoadBalancerPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerPolicyResponse struct {
	value *CreateLoadBalancerPolicyResponse
	isSet bool
}

func (v NullableCreateLoadBalancerPolicyResponse) Get() *CreateLoadBalancerPolicyResponse {
	return v.value
}

func (v *NullableCreateLoadBalancerPolicyResponse) Set(val *CreateLoadBalancerPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerPolicyResponse(val *CreateLoadBalancerPolicyResponse) *NullableCreateLoadBalancerPolicyResponse {
	return &NullableCreateLoadBalancerPolicyResponse{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerRequest struct for CreateLoadBalancerRequest
type CreateLoadBalancerRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more listeners to create.
	Listeners []ListenerForCreation `json:"Listeners"`
	// The unique name of the load balancer (32 alphanumeric or hyphen characters maximum, but cannot start or end with a hyphen).
	LoadBalancerName string `json:"LoadBalancerName"`
	// The type of load balancer: `internet-facing` or `internal`. Use this parameter only for load balancers in a Net.
	LoadBalancerType *string `json:"LoadBalancerType,omitempty"`
	// (Net only) One or more IDs of security groups you want to assign to the load balancer. If not specified, the default security group of the Net is assigned to the load balancer.
	SecurityGroups *[]string `json:"SecurityGroups,omitempty"`
	// One or more IDs of Subnets in your Net that you want to attach to the load balancer.
	Subnets *[]string `json:"Subnets,omitempty"`
	// One or more names of Subregions (currently, only one Subregion is supported). This parameter is not required if you create a load balancer in a Net. To create an internal load balancer, use the `LoadBalancerType` parameter.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more tags assigned to the load balancer.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewCreateLoadBalancerRequest instantiates a new CreateLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerRequest(listeners []ListenerForCreation, loadBalancerName string, ) *CreateLoadBalancerRequest {
	this := CreateLoadBalancerRequest{}
	this.Listeners = listeners
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewCreateLoadBalancerRequestWithDefaults instantiates a new CreateLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerRequestWithDefaults() *CreateLoadBalancerRequest {
	this := CreateLoadBalancerRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateLoadBalancerRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetListeners returns the Listeners field value
func (o *CreateLoadBalancerRequest) GetListeners() []ListenerForCreation {
	if o == nil  {
		var ret []ListenerForCreation
		return ret
	}

	return o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetListenersOk() (*[]ListenerForCreation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Listeners, true
}

// SetListeners sets field value
func (o *CreateLoadBalancerRequest) SetListeners(v []ListenerForCreation) {
	o.Listeners = v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *CreateLoadBalancerRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *CreateLoadBalancerRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetLoadBalancerType returns the LoadBalancerType field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetLoadBalancerType() string {
	if o == nil || o.LoadBalancerType == nil {
		var ret string
		return ret
	}
	return *o.LoadBalancerType
}

// GetLoadBalancerTypeOk returns a tuple with the LoadBalancerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetLoadBalancerTypeOk() (*string, bool) {
	if o == nil || o.LoadBalancerType == nil {
		return nil, false
	}
	return o.LoadBalancerType, true
}

// HasLoadBalancerType returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasLoadBalancerType() bool {
	if o != nil && o.LoadBalancerType != nil {
		return true
	}

	return false
}

// SetLoadBalancerType gets a reference to the given string and assigns it to the LoadBalancerType field.
func (o *CreateLoadBalancerRequest) SetLoadBalancerType(v string) {
	o.LoadBalancerType = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetSecurityGroups() []string {
	if o == nil || o.SecurityGroups == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetSecurityGroupsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *CreateLoadBalancerRequest) SetSecurityGroups(v []string) {
	o.SecurityGroups = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetSubnets() []string {
	if o == nil || o.Subnets == nil {
		var ret []string
		return ret
	}
	return *o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetSubnetsOk() (*[]string, bool) {
	if o == nil || o.Subnets == nil {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasSubnets() bool {
	if o != nil && o.Subnets != nil {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []string and assigns it to the Subnets field.
func (o *CreateLoadBalancerRequest) SetSubnets(v []string) {
	o.Subnets = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *CreateLoadBalancerRequest) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateLoadBalancerRequest) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerRequest) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateLoadBalancerRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *CreateLoadBalancerRequest) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o CreateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Listeners"] = o.Listeners
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if o.LoadBalancerType != nil {
		toSerialize["LoadBalancerType"] = o.LoadBalancerType
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.Subnets != nil {
		toSerialize["Subnets"] = o.Subnets
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerRequest struct {
	value *CreateLoadBalancerRequest
	isSet bool
}

func (v NullableCreateLoadBalancerRequest) Get() *CreateLoadBalancerRequest {
	return v.value
}

func (v *NullableCreateLoadBalancerRequest) Set(val *CreateLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerRequest(val *CreateLoadBalancerRequest) *NullableCreateLoadBalancerRequest {
	return &NullableCreateLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerResponse struct for CreateLoadBalancerResponse
type CreateLoadBalancerResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateLoadBalancerResponse instantiates a new CreateLoadBalancerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerResponse() *CreateLoadBalancerResponse {
	this := CreateLoadBalancerResponse{}
	return &this
}

// NewCreateLoadBalancerResponseWithDefaults instantiates a new CreateLoadBalancerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerResponseWithDefaults() *CreateLoadBalancerResponse {
	this := CreateLoadBalancerResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *CreateLoadBalancerResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *CreateLoadBalancerResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *CreateLoadBalancerResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateLoadBalancerResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateLoadBalancerResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateLoadBalancerResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerResponse struct {
	value *CreateLoadBalancerResponse
	isSet bool
}

func (v NullableCreateLoadBalancerResponse) Get() *CreateLoadBalancerResponse {
	return v.value
}

func (v *NullableCreateLoadBalancerResponse) Set(val *CreateLoadBalancerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerResponse(val *CreateLoadBalancerResponse) *NullableCreateLoadBalancerResponse {
	return &NullableCreateLoadBalancerResponse{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerTagsRequest struct for CreateLoadBalancerTagsRequest
type CreateLoadBalancerTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more load balancer names.
	LoadBalancerNames []string `json:"LoadBalancerNames"`
	// One or more tags to add to the specified load balancers.
	Tags []ResourceTag `json:"Tags"`
}

// NewCreateLoadBalancerTagsRequest instantiates a new CreateLoadBalancerTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerTagsRequest(loadBalancerNames []string, tags []ResourceTag, ) *CreateLoadBalancerTagsRequest {
	this := CreateLoadBalancerTagsRequest{}
	this.LoadBalancerNames = loadBalancerNames
	this.Tags = tags
	return &this
}

// NewCreateLoadBalancerTagsRequestWithDefaults instantiates a new CreateLoadBalancerTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerTagsRequestWithDefaults() *CreateLoadBalancerTagsRequest {
	this := CreateLoadBalancerTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateLoadBalancerTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateLoadBalancerTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateLoadBalancerTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerNames returns the LoadBalancerNames field value
func (o *CreateLoadBalancerTagsRequest) GetLoadBalancerNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.LoadBalancerNames
}

// GetLoadBalancerNamesOk returns a tuple with the LoadBalancerNames field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerTagsRequest) GetLoadBalancerNamesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerNames, true
}

// SetLoadBalancerNames sets field value
func (o *CreateLoadBalancerTagsRequest) SetLoadBalancerNames(v []string) {
	o.LoadBalancerNames = v
}

// GetTags returns the Tags field value
func (o *CreateLoadBalancerTagsRequest) GetTags() []ResourceTag {
	if o == nil  {
		var ret []ResourceTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerTagsRequest) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *CreateLoadBalancerTagsRequest) SetTags(v []ResourceTag) {
	o.Tags = v
}

func (o CreateLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerNames"] = o.LoadBalancerNames
	}
	if true {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerTagsRequest struct {
	value *CreateLoadBalancerTagsRequest
	isSet bool
}

func (v NullableCreateLoadBalancerTagsRequest) Get() *CreateLoadBalancerTagsRequest {
	return v.value
}

func (v *NullableCreateLoadBalancerTagsRequest) Set(val *CreateLoadBalancerTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerTagsRequest(val *CreateLoadBalancerTagsRequest) *NullableCreateLoadBalancerTagsRequest {
	return &NullableCreateLoadBalancerTagsRequest{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateLoadBalancerTagsResponse struct for CreateLoadBalancerTagsResponse
type CreateLoadBalancerTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateLoadBalancerTagsResponse instantiates a new CreateLoadBalancerTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerTagsResponse() *CreateLoadBalancerTagsResponse {
	this := CreateLoadBalancerTagsResponse{}
	return &this
}

// NewCreateLoadBalancerTagsResponseWithDefaults instantiates a new CreateLoadBalancerTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerTagsResponseWithDefaults() *CreateLoadBalancerTagsResponse {
	this := CreateLoadBalancerTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateLoadBalancerTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateLoadBalancerTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateLoadBalancerTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLoadBalancerTagsResponse struct {
	value *CreateLoadBalancerTagsResponse
	isSet bool
}

func (v NullableCreateLoadBalancerTagsResponse) Get() *CreateLoadBalancerTagsResponse {
	return v.value
}

func (v *NullableCreateLoadBalancerTagsResponse) Set(val *CreateLoadBalancerTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerTagsResponse(val *CreateLoadBalancerTagsResponse) *NullableCreateLoadBalancerTagsResponse {
	return &NullableCreateLoadBalancerTagsResponse{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNatServiceRequest struct for CreateNatServiceRequest
type CreateNatServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The allocation ID of the EIP to associate with the NAT service.<br /> If the EIP is already associated with another resource, you must first disassociate it.
	PublicIpId string `json:"PublicIpId"`
	// The ID of the Subnet in which you want to create the NAT service.
	SubnetId string `json:"SubnetId"`
}

// NewCreateNatServiceRequest instantiates a new CreateNatServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNatServiceRequest(publicIpId string, subnetId string, ) *CreateNatServiceRequest {
	this := CreateNatServiceRequest{}
	this.PublicIpId = publicIpId
	this.SubnetId = subnetId
	return &this
}

// NewCreateNatServiceRequestWithDefaults instantiates a new CreateNatServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNatServiceRequestWithDefaults() *CreateNatServiceRequest {
	this := CreateNatServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNatServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNatServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNatServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNatServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPublicIpId returns the PublicIpId field value
func (o *CreateNatServiceRequest) GetPublicIpId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value
// and a boolean to check if the value has been set.
func (o *CreateNatServiceRequest) GetPublicIpIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PublicIpId, true
}

// SetPublicIpId sets field value
func (o *CreateNatServiceRequest) SetPublicIpId(v string) {
	o.PublicIpId = v
}

// GetSubnetId returns the SubnetId field value
func (o *CreateNatServiceRequest) GetSubnetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *CreateNatServiceRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *CreateNatServiceRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o CreateNatServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	if true {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNatServiceRequest struct {
	value *CreateNatServiceRequest
	isSet bool
}

func (v NullableCreateNatServiceRequest) Get() *CreateNatServiceRequest {
	return v.value
}

func (v *NullableCreateNatServiceRequest) Set(val *CreateNatServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNatServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNatServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNatServiceRequest(val *CreateNatServiceRequest) *NullableCreateNatServiceRequest {
	return &NullableCreateNatServiceRequest{value: val, isSet: true}
}

func (v NullableCreateNatServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNatServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNatServiceResponse struct for CreateNatServiceResponse
type CreateNatServiceResponse struct {
	NatService *NatService `json:"NatService,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateNatServiceResponse instantiates a new CreateNatServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNatServiceResponse() *CreateNatServiceResponse {
	this := CreateNatServiceResponse{}
	return &this
}

// NewCreateNatServiceResponseWithDefaults instantiates a new CreateNatServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNatServiceResponseWithDefaults() *CreateNatServiceResponse {
	this := CreateNatServiceResponse{}
	return &this
}

// GetNatService returns the NatService field value if set, zero value otherwise.
func (o *CreateNatServiceResponse) GetNatService() NatService {
	if o == nil || o.NatService == nil {
		var ret NatService
		return ret
	}
	return *o.NatService
}

// GetNatServiceOk returns a tuple with the NatService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNatServiceResponse) GetNatServiceOk() (*NatService, bool) {
	if o == nil || o.NatService == nil {
		return nil, false
	}
	return o.NatService, true
}

// HasNatService returns a boolean if a field has been set.
func (o *CreateNatServiceResponse) HasNatService() bool {
	if o != nil && o.NatService != nil {
		return true
	}

	return false
}

// SetNatService gets a reference to the given NatService and assigns it to the NatService field.
func (o *CreateNatServiceResponse) SetNatService(v NatService) {
	o.NatService = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateNatServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNatServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateNatServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateNatServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateNatServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatService != nil {
		toSerialize["NatService"] = o.NatService
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNatServiceResponse struct {
	value *CreateNatServiceResponse
	isSet bool
}

func (v NullableCreateNatServiceResponse) Get() *CreateNatServiceResponse {
	return v.value
}

func (v *NullableCreateNatServiceResponse) Set(val *CreateNatServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNatServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNatServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNatServiceResponse(val *CreateNatServiceResponse) *NullableCreateNatServiceResponse {
	return &NullableCreateNatServiceResponse{value: val, isSet: true}
}

func (v NullableCreateNatServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNatServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetAccessPointRequest struct for CreateNetAccessPointRequest
type CreateNetAccessPointRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net.
	NetId string `json:"NetId"`
	// One or more IDs of route tables to use for the connection.
	RouteTableIds *[]string `json:"RouteTableIds,omitempty"`
	// The prefix list name corresponding to the service (for example, `com.outscale.eu-west-2.osu` for OSU).
	ServiceName string `json:"ServiceName"`
}

// NewCreateNetAccessPointRequest instantiates a new CreateNetAccessPointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetAccessPointRequest(netId string, serviceName string, ) *CreateNetAccessPointRequest {
	this := CreateNetAccessPointRequest{}
	this.NetId = netId
	this.ServiceName = serviceName
	return &this
}

// NewCreateNetAccessPointRequestWithDefaults instantiates a new CreateNetAccessPointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetAccessPointRequestWithDefaults() *CreateNetAccessPointRequest {
	this := CreateNetAccessPointRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNetAccessPointRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNetAccessPointRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNetAccessPointRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *CreateNetAccessPointRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *CreateNetAccessPointRequest) SetNetId(v string) {
	o.NetId = v
}

// GetRouteTableIds returns the RouteTableIds field value if set, zero value otherwise.
func (o *CreateNetAccessPointRequest) GetRouteTableIds() []string {
	if o == nil || o.RouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteTableIds
}

// GetRouteTableIdsOk returns a tuple with the RouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.RouteTableIds == nil {
		return nil, false
	}
	return o.RouteTableIds, true
}

// HasRouteTableIds returns a boolean if a field has been set.
func (o *CreateNetAccessPointRequest) HasRouteTableIds() bool {
	if o != nil && o.RouteTableIds != nil {
		return true
	}

	return false
}

// SetRouteTableIds gets a reference to the given []string and assigns it to the RouteTableIds field.
func (o *CreateNetAccessPointRequest) SetRouteTableIds(v []string) {
	o.RouteTableIds = &v
}

// GetServiceName returns the ServiceName field value
func (o *CreateNetAccessPointRequest) GetServiceName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetServiceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *CreateNetAccessPointRequest) SetServiceName(v string) {
	o.ServiceName = v
}

func (o CreateNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	if o.RouteTableIds != nil {
		toSerialize["RouteTableIds"] = o.RouteTableIds
	}
	if true {
		toSerialize["ServiceName"] = o.ServiceName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetAccessPointRequest struct {
	value *CreateNetAccessPointRequest
	isSet bool
}

func (v NullableCreateNetAccessPointRequest) Get() *CreateNetAccessPointRequest {
	return v.value
}

func (v *NullableCreateNetAccessPointRequest) Set(val *CreateNetAccessPointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetAccessPointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetAccessPointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetAccessPointRequest(val *CreateNetAccessPointRequest) *NullableCreateNetAccessPointRequest {
	return &NullableCreateNetAccessPointRequest{value: val, isSet: true}
}

func (v NullableCreateNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetAccessPointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetAccessPointResponse struct for CreateNetAccessPointResponse
type CreateNetAccessPointResponse struct {
	NetAccessPoint *NetAccessPoint `json:"NetAccessPoint,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateNetAccessPointResponse instantiates a new CreateNetAccessPointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetAccessPointResponse() *CreateNetAccessPointResponse {
	this := CreateNetAccessPointResponse{}
	return &this
}

// NewCreateNetAccessPointResponseWithDefaults instantiates a new CreateNetAccessPointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetAccessPointResponseWithDefaults() *CreateNetAccessPointResponse {
	this := CreateNetAccessPointResponse{}
	return &this
}

// GetNetAccessPoint returns the NetAccessPoint field value if set, zero value otherwise.
func (o *CreateNetAccessPointResponse) GetNetAccessPoint() NetAccessPoint {
	if o == nil || o.NetAccessPoint == nil {
		var ret NetAccessPoint
		return ret
	}
	return *o.NetAccessPoint
}

// GetNetAccessPointOk returns a tuple with the NetAccessPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointResponse) GetNetAccessPointOk() (*NetAccessPoint, bool) {
	if o == nil || o.NetAccessPoint == nil {
		return nil, false
	}
	return o.NetAccessPoint, true
}

// HasNetAccessPoint returns a boolean if a field has been set.
func (o *CreateNetAccessPointResponse) HasNetAccessPoint() bool {
	if o != nil && o.NetAccessPoint != nil {
		return true
	}

	return false
}

// SetNetAccessPoint gets a reference to the given NetAccessPoint and assigns it to the NetAccessPoint field.
func (o *CreateNetAccessPointResponse) SetNetAccessPoint(v NetAccessPoint) {
	o.NetAccessPoint = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateNetAccessPointResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateNetAccessPointResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateNetAccessPointResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetAccessPoint != nil {
		toSerialize["NetAccessPoint"] = o.NetAccessPoint
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetAccessPointResponse struct {
	value *CreateNetAccessPointResponse
	isSet bool
}

func (v NullableCreateNetAccessPointResponse) Get() *CreateNetAccessPointResponse {
	return v.value
}

func (v *NullableCreateNetAccessPointResponse) Set(val *CreateNetAccessPointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetAccessPointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetAccessPointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetAccessPointResponse(val *CreateNetAccessPointResponse) *NullableCreateNetAccessPointResponse {
	return &NullableCreateNetAccessPointResponse{value: val, isSet: true}
}

func (v NullableCreateNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetAccessPointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetPeeringRequest struct for CreateNetPeeringRequest
type CreateNetPeeringRequest struct {
	// The ID of the Net you want to connect with.
	AccepterNetId string `json:"AccepterNetId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net you send the peering request from.
	SourceNetId string `json:"SourceNetId"`
}

// NewCreateNetPeeringRequest instantiates a new CreateNetPeeringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetPeeringRequest(accepterNetId string, sourceNetId string, ) *CreateNetPeeringRequest {
	this := CreateNetPeeringRequest{}
	this.AccepterNetId = accepterNetId
	this.SourceNetId = sourceNetId
	return &this
}

// NewCreateNetPeeringRequestWithDefaults instantiates a new CreateNetPeeringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetPeeringRequestWithDefaults() *CreateNetPeeringRequest {
	this := CreateNetPeeringRequest{}
	return &this
}

// GetAccepterNetId returns the AccepterNetId field value
func (o *CreateNetPeeringRequest) GetAccepterNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccepterNetId
}

// GetAccepterNetIdOk returns a tuple with the AccepterNetId field value
// and a boolean to check if the value has been set.
func (o *CreateNetPeeringRequest) GetAccepterNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccepterNetId, true
}

// SetAccepterNetId sets field value
func (o *CreateNetPeeringRequest) SetAccepterNetId(v string) {
	o.AccepterNetId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNetPeeringRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetPeeringRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNetPeeringRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNetPeeringRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetSourceNetId returns the SourceNetId field value
func (o *CreateNetPeeringRequest) GetSourceNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SourceNetId
}

// GetSourceNetIdOk returns a tuple with the SourceNetId field value
// and a boolean to check if the value has been set.
func (o *CreateNetPeeringRequest) GetSourceNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceNetId, true
}

// SetSourceNetId sets field value
func (o *CreateNetPeeringRequest) SetSourceNetId(v string) {
	o.SourceNetId = v
}

func (o CreateNetPeeringRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AccepterNetId"] = o.AccepterNetId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["SourceNetId"] = o.SourceNetId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetPeeringRequest struct {
	value *CreateNetPeeringRequest
	isSet bool
}

func (v NullableCreateNetPeeringRequest) Get() *CreateNetPeeringRequest {
	return v.value
}

func (v *NullableCreateNetPeeringRequest) Set(val *CreateNetPeeringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetPeeringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetPeeringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetPeeringRequest(val *CreateNetPeeringRequest) *NullableCreateNetPeeringRequest {
	return &NullableCreateNetPeeringRequest{value: val, isSet: true}
}

func (v NullableCreateNetPeeringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetPeeringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetPeeringResponse struct for CreateNetPeeringResponse
type CreateNetPeeringResponse struct {
	NetPeering *NetPeering `json:"NetPeering,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateNetPeeringResponse instantiates a new CreateNetPeeringResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetPeeringResponse() *CreateNetPeeringResponse {
	this := CreateNetPeeringResponse{}
	return &this
}

// NewCreateNetPeeringResponseWithDefaults instantiates a new CreateNetPeeringResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetPeeringResponseWithDefaults() *CreateNetPeeringResponse {
	this := CreateNetPeeringResponse{}
	return &this
}

// GetNetPeering returns the NetPeering field value if set, zero value otherwise.
func (o *CreateNetPeeringResponse) GetNetPeering() NetPeering {
	if o == nil || o.NetPeering == nil {
		var ret NetPeering
		return ret
	}
	return *o.NetPeering
}

// GetNetPeeringOk returns a tuple with the NetPeering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetPeeringResponse) GetNetPeeringOk() (*NetPeering, bool) {
	if o == nil || o.NetPeering == nil {
		return nil, false
	}
	return o.NetPeering, true
}

// HasNetPeering returns a boolean if a field has been set.
func (o *CreateNetPeeringResponse) HasNetPeering() bool {
	if o != nil && o.NetPeering != nil {
		return true
	}

	return false
}

// SetNetPeering gets a reference to the given NetPeering and assigns it to the NetPeering field.
func (o *CreateNetPeeringResponse) SetNetPeering(v NetPeering) {
	o.NetPeering = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateNetPeeringResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetPeeringResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateNetPeeringResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateNetPeeringResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateNetPeeringResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetPeering != nil {
		toSerialize["NetPeering"] = o.NetPeering
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetPeeringResponse struct {
	value *CreateNetPeeringResponse
	isSet bool
}

func (v NullableCreateNetPeeringResponse) Get() *CreateNetPeeringResponse {
	return v.value
}

func (v *NullableCreateNetPeeringResponse) Set(val *CreateNetPeeringResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetPeeringResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetPeeringResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetPeeringResponse(val *CreateNetPeeringResponse) *NullableCreateNetPeeringResponse {
	return &NullableCreateNetPeeringResponse{value: val, isSet: true}
}

func (v NullableCreateNetPeeringResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetPeeringResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetRequest struct for CreateNetRequest
type CreateNetRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16).
	IpRange string `json:"IpRange"`
	// The tenancy options for the VMs (`default` if a VM created in a Net can be launched with any tenancy, `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware).
	Tenancy *string `json:"Tenancy,omitempty"`
}

// NewCreateNetRequest instantiates a new CreateNetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetRequest(ipRange string, ) *CreateNetRequest {
	this := CreateNetRequest{}
	this.IpRange = ipRange
	return &this
}

// NewCreateNetRequestWithDefaults instantiates a new CreateNetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetRequestWithDefaults() *CreateNetRequest {
	this := CreateNetRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetIpRange returns the IpRange field value
func (o *CreateNetRequest) GetIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value
// and a boolean to check if the value has been set.
func (o *CreateNetRequest) GetIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpRange, true
}

// SetIpRange sets field value
func (o *CreateNetRequest) SetIpRange(v string) {
	o.IpRange = v
}

// GetTenancy returns the Tenancy field value if set, zero value otherwise.
func (o *CreateNetRequest) GetTenancy() string {
	if o == nil || o.Tenancy == nil {
		var ret string
		return ret
	}
	return *o.Tenancy
}

// GetTenancyOk returns a tuple with the Tenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetRequest) GetTenancyOk() (*string, bool) {
	if o == nil || o.Tenancy == nil {
		return nil, false
	}
	return o.Tenancy, true
}

// HasTenancy returns a boolean if a field has been set.
func (o *CreateNetRequest) HasTenancy() bool {
	if o != nil && o.Tenancy != nil {
		return true
	}

	return false
}

// SetTenancy gets a reference to the given string and assigns it to the Tenancy field.
func (o *CreateNetRequest) SetTenancy(v string) {
	o.Tenancy = &v
}

func (o CreateNetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.Tenancy != nil {
		toSerialize["Tenancy"] = o.Tenancy
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetRequest struct {
	value *CreateNetRequest
	isSet bool
}

func (v NullableCreateNetRequest) Get() *CreateNetRequest {
	return v.value
}

func (v *NullableCreateNetRequest) Set(val *CreateNetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetRequest(val *CreateNetRequest) *NullableCreateNetRequest {
	return &NullableCreateNetRequest{value: val, isSet: true}
}

func (v NullableCreateNetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNetResponse struct for CreateNetResponse
type CreateNetResponse struct {
	Net *Net `json:"Net,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateNetResponse instantiates a new CreateNetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetResponse() *CreateNetResponse {
	this := CreateNetResponse{}
	return &this
}

// NewCreateNetResponseWithDefaults instantiates a new CreateNetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetResponseWithDefaults() *CreateNetResponse {
	this := CreateNetResponse{}
	return &this
}

// GetNet returns the Net field value if set, zero value otherwise.
func (o *CreateNetResponse) GetNet() Net {
	if o == nil || o.Net == nil {
		var ret Net
		return ret
	}
	return *o.Net
}

// GetNetOk returns a tuple with the Net field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetResponse) GetNetOk() (*Net, bool) {
	if o == nil || o.Net == nil {
		return nil, false
	}
	return o.Net, true
}

// HasNet returns a boolean if a field has been set.
func (o *CreateNetResponse) HasNet() bool {
	if o != nil && o.Net != nil {
		return true
	}

	return false
}

// SetNet gets a reference to the given Net and assigns it to the Net field.
func (o *CreateNetResponse) SetNet(v Net) {
	o.Net = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateNetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateNetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateNetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateNetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Net != nil {
		toSerialize["Net"] = o.Net
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetResponse struct {
	value *CreateNetResponse
	isSet bool
}

func (v NullableCreateNetResponse) Get() *CreateNetResponse {
	return v.value
}

func (v *NullableCreateNetResponse) Set(val *CreateNetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetResponse(val *CreateNetResponse) *NullableCreateNetResponse {
	return &NullableCreateNetResponse{value: val, isSet: true}
}

func (v NullableCreateNetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNicRequest struct for CreateNicRequest
type CreateNicRequest struct {
	// A description for the NIC.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The primary private IP address for the NIC.<br /><br />  This IP address must be within the IP address range of the Subnet that you specify with the `SubnetId` attribute.<br /> If you do not specify this attribute, a random private IP address is selected within the IP address range of the Subnet.
	PrivateIps *[]PrivateIpLight `json:"PrivateIps,omitempty"`
	// One or more IDs of security groups for the NIC.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
	// The ID of the Subnet in which you want to create the NIC.
	SubnetId string `json:"SubnetId"`
}

// NewCreateNicRequest instantiates a new CreateNicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNicRequest(subnetId string, ) *CreateNicRequest {
	this := CreateNicRequest{}
	this.SubnetId = subnetId
	return &this
}

// NewCreateNicRequestWithDefaults instantiates a new CreateNicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNicRequestWithDefaults() *CreateNicRequest {
	this := CreateNicRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateNicRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateNicRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateNicRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *CreateNicRequest) GetPrivateIps() []PrivateIpLight {
	if o == nil || o.PrivateIps == nil {
		var ret []PrivateIpLight
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicRequest) GetPrivateIpsOk() (*[]PrivateIpLight, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *CreateNicRequest) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []PrivateIpLight and assigns it to the PrivateIps field.
func (o *CreateNicRequest) SetPrivateIps(v []PrivateIpLight) {
	o.PrivateIps = &v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *CreateNicRequest) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicRequest) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *CreateNicRequest) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *CreateNicRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

// GetSubnetId returns the SubnetId field value
func (o *CreateNicRequest) GetSubnetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *CreateNicRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *CreateNicRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o CreateNicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	if true {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNicRequest struct {
	value *CreateNicRequest
	isSet bool
}

func (v NullableCreateNicRequest) Get() *CreateNicRequest {
	return v.value
}

func (v *NullableCreateNicRequest) Set(val *CreateNicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNicRequest(val *CreateNicRequest) *NullableCreateNicRequest {
	return &NullableCreateNicRequest{value: val, isSet: true}
}

func (v NullableCreateNicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateNicResponse struct for CreateNicResponse
type CreateNicResponse struct {
	Nic *Nic `json:"Nic,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateNicResponse instantiates a new CreateNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNicResponse() *CreateNicResponse {
	this := CreateNicResponse{}
	return &this
}

// NewCreateNicResponseWithDefaults instantiates a new CreateNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNicResponseWithDefaults() *CreateNicResponse {
	this := CreateNicResponse{}
	return &this
}

// GetNic returns the Nic field value if set, zero value otherwise.
func (o *CreateNicResponse) GetNic() Nic {
	if o == nil || o.Nic == nil {
		var ret Nic
		return ret
	}
	return *o.Nic
}

// GetNicOk returns a tuple with the Nic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicResponse) GetNicOk() (*Nic, bool) {
	if o == nil || o.Nic == nil {
		return nil, false
	}
	return o.Nic, true
}

// HasNic returns a boolean if a field has been set.
func (o *CreateNicResponse) HasNic() bool {
	if o != nil && o.Nic != nil {
		return true
	}

	return false
}

// SetNic gets a reference to the given Nic and assigns it to the Nic field.
func (o *CreateNicResponse) SetNic(v Nic) {
	o.Nic = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateNicResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNicResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateNicResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateNicResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nic != nil {
		toSerialize["Nic"] = o.Nic
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNicResponse struct {
	value *CreateNicResponse
	isSet bool
}

func (v NullableCreateNicResponse) Get() *CreateNicResponse {
	return v.value
}

func (v *NullableCreateNicResponse) Set(val *CreateNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNicResponse(val *CreateNicResponse) *NullableCreateNicResponse {
	return &NullableCreateNicResponse{value: val, isSet: true}
}

func (v NullableCreateNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreatePublicIpRequest struct for CreatePublicIpRequest
type CreatePublicIpRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewCreatePublicIpRequest instantiates a new CreatePublicIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePublicIpRequest() *CreatePublicIpRequest {
	this := CreatePublicIpRequest{}
	return &this
}

// NewCreatePublicIpRequestWithDefaults instantiates a new CreatePublicIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePublicIpRequestWithDefaults() *CreatePublicIpRequest {
	this := CreatePublicIpRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreatePublicIpRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublicIpRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreatePublicIpRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreatePublicIpRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o CreatePublicIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePublicIpRequest struct {
	value *CreatePublicIpRequest
	isSet bool
}

func (v NullableCreatePublicIpRequest) Get() *CreatePublicIpRequest {
	return v.value
}

func (v *NullableCreatePublicIpRequest) Set(val *CreatePublicIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePublicIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePublicIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePublicIpRequest(val *CreatePublicIpRequest) *NullableCreatePublicIpRequest {
	return &NullableCreatePublicIpRequest{value: val, isSet: true}
}

func (v NullableCreatePublicIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePublicIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreatePublicIpResponse struct for CreatePublicIpResponse
type CreatePublicIpResponse struct {
	PublicIp *PublicIp `json:"PublicIp,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreatePublicIpResponse instantiates a new CreatePublicIpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePublicIpResponse() *CreatePublicIpResponse {
	this := CreatePublicIpResponse{}
	return &this
}

// NewCreatePublicIpResponseWithDefaults instantiates a new CreatePublicIpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePublicIpResponseWithDefaults() *CreatePublicIpResponse {
	this := CreatePublicIpResponse{}
	return &this
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *CreatePublicIpResponse) GetPublicIp() PublicIp {
	if o == nil || o.PublicIp == nil {
		var ret PublicIp
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublicIpResponse) GetPublicIpOk() (*PublicIp, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *CreatePublicIpResponse) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given PublicIp and assigns it to the PublicIp field.
func (o *CreatePublicIpResponse) SetPublicIp(v PublicIp) {
	o.PublicIp = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreatePublicIpResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublicIpResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreatePublicIpResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreatePublicIpResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreatePublicIpResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePublicIpResponse struct {
	value *CreatePublicIpResponse
	isSet bool
}

func (v NullableCreatePublicIpResponse) Get() *CreatePublicIpResponse {
	return v.value
}

func (v *NullableCreatePublicIpResponse) Set(val *CreatePublicIpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePublicIpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePublicIpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePublicIpResponse(val *CreatePublicIpResponse) *NullableCreatePublicIpResponse {
	return &NullableCreatePublicIpResponse{value: val, isSet: true}
}

func (v NullableCreatePublicIpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePublicIpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateRouteRequest struct for CreateRouteRequest
type CreateRouteRequest struct {
	// The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24).
	DestinationIpRange string `json:"DestinationIpRange"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of an Internet service or virtual gateway attached to your Net.
	GatewayId *string `json:"GatewayId,omitempty"`
	// The ID of a NAT service.
	NatServiceId *string `json:"NatServiceId,omitempty"`
	// The ID of a Net peering connection.
	NetPeeringId *string `json:"NetPeeringId,omitempty"`
	// The ID of a NIC.
	NicId *string `json:"NicId,omitempty"`
	// The ID of the route table for which you want to create a route.
	RouteTableId string `json:"RouteTableId"`
	// The ID of a NAT VM in your Net (attached to exactly one NIC).
	VmId *string `json:"VmId,omitempty"`
}

// NewCreateRouteRequest instantiates a new CreateRouteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRouteRequest(destinationIpRange string, routeTableId string, ) *CreateRouteRequest {
	this := CreateRouteRequest{}
	this.DestinationIpRange = destinationIpRange
	this.RouteTableId = routeTableId
	return &this
}

// NewCreateRouteRequestWithDefaults instantiates a new CreateRouteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRouteRequestWithDefaults() *CreateRouteRequest {
	this := CreateRouteRequest{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value
func (o *CreateRouteRequest) GetDestinationIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationIpRange, true
}

// SetDestinationIpRange sets field value
func (o *CreateRouteRequest) SetDestinationIpRange(v string) {
	o.DestinationIpRange = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateRouteRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetGatewayId() string {
	if o == nil || o.GatewayId == nil {
		var ret string
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetGatewayIdOk() (*string, bool) {
	if o == nil || o.GatewayId == nil {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasGatewayId() bool {
	if o != nil && o.GatewayId != nil {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given string and assigns it to the GatewayId field.
func (o *CreateRouteRequest) SetGatewayId(v string) {
	o.GatewayId = &v
}

// GetNatServiceId returns the NatServiceId field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetNatServiceId() string {
	if o == nil || o.NatServiceId == nil {
		var ret string
		return ret
	}
	return *o.NatServiceId
}

// GetNatServiceIdOk returns a tuple with the NatServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetNatServiceIdOk() (*string, bool) {
	if o == nil || o.NatServiceId == nil {
		return nil, false
	}
	return o.NatServiceId, true
}

// HasNatServiceId returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasNatServiceId() bool {
	if o != nil && o.NatServiceId != nil {
		return true
	}

	return false
}

// SetNatServiceId gets a reference to the given string and assigns it to the NatServiceId field.
func (o *CreateRouteRequest) SetNatServiceId(v string) {
	o.NatServiceId = &v
}

// GetNetPeeringId returns the NetPeeringId field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetNetPeeringId() string {
	if o == nil || o.NetPeeringId == nil {
		var ret string
		return ret
	}
	return *o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetNetPeeringIdOk() (*string, bool) {
	if o == nil || o.NetPeeringId == nil {
		return nil, false
	}
	return o.NetPeeringId, true
}

// HasNetPeeringId returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasNetPeeringId() bool {
	if o != nil && o.NetPeeringId != nil {
		return true
	}

	return false
}

// SetNetPeeringId gets a reference to the given string and assigns it to the NetPeeringId field.
func (o *CreateRouteRequest) SetNetPeeringId(v string) {
	o.NetPeeringId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *CreateRouteRequest) SetNicId(v string) {
	o.NicId = &v
}

// GetRouteTableId returns the RouteTableId field value
func (o *CreateRouteRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *CreateRouteRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *CreateRouteRequest) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteRequest) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *CreateRouteRequest) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *CreateRouteRequest) SetVmId(v string) {
	o.VmId = &v
}

func (o CreateRouteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.GatewayId != nil {
		toSerialize["GatewayId"] = o.GatewayId
	}
	if o.NatServiceId != nil {
		toSerialize["NatServiceId"] = o.NatServiceId
	}
	if o.NetPeeringId != nil {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRouteRequest struct {
	value *CreateRouteRequest
	isSet bool
}

func (v NullableCreateRouteRequest) Get() *CreateRouteRequest {
	return v.value
}

func (v *NullableCreateRouteRequest) Set(val *CreateRouteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRouteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRouteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRouteRequest(val *CreateRouteRequest) *NullableCreateRouteRequest {
	return &NullableCreateRouteRequest{value: val, isSet: true}
}

func (v NullableCreateRouteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRouteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateRouteResponse struct for CreateRouteResponse
type CreateRouteResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	RouteTable *RouteTable `json:"RouteTable,omitempty"`
}

// NewCreateRouteResponse instantiates a new CreateRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRouteResponse() *CreateRouteResponse {
	this := CreateRouteResponse{}
	return &this
}

// NewCreateRouteResponseWithDefaults instantiates a new CreateRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRouteResponseWithDefaults() *CreateRouteResponse {
	this := CreateRouteResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateRouteResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateRouteResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateRouteResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *CreateRouteResponse) GetRouteTable() RouteTable {
	if o == nil || o.RouteTable == nil {
		var ret RouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteResponse) GetRouteTableOk() (*RouteTable, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *CreateRouteResponse) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given RouteTable and assigns it to the RouteTable field.
func (o *CreateRouteResponse) SetRouteTable(v RouteTable) {
	o.RouteTable = &v
}

func (o CreateRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTable != nil {
		toSerialize["RouteTable"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRouteResponse struct {
	value *CreateRouteResponse
	isSet bool
}

func (v NullableCreateRouteResponse) Get() *CreateRouteResponse {
	return v.value
}

func (v *NullableCreateRouteResponse) Set(val *CreateRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRouteResponse(val *CreateRouteResponse) *NullableCreateRouteResponse {
	return &NullableCreateRouteResponse{value: val, isSet: true}
}

func (v NullableCreateRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateRouteTableRequest struct for CreateRouteTableRequest
type CreateRouteTableRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net for which you want to create a route table.
	NetId string `json:"NetId"`
}

// NewCreateRouteTableRequest instantiates a new CreateRouteTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRouteTableRequest(netId string, ) *CreateRouteTableRequest {
	this := CreateRouteTableRequest{}
	this.NetId = netId
	return &this
}

// NewCreateRouteTableRequestWithDefaults instantiates a new CreateRouteTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRouteTableRequestWithDefaults() *CreateRouteTableRequest {
	this := CreateRouteTableRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateRouteTableRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteTableRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateRouteTableRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateRouteTableRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *CreateRouteTableRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *CreateRouteTableRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *CreateRouteTableRequest) SetNetId(v string) {
	o.NetId = v
}

func (o CreateRouteTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRouteTableRequest struct {
	value *CreateRouteTableRequest
	isSet bool
}

func (v NullableCreateRouteTableRequest) Get() *CreateRouteTableRequest {
	return v.value
}

func (v *NullableCreateRouteTableRequest) Set(val *CreateRouteTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRouteTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRouteTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRouteTableRequest(val *CreateRouteTableRequest) *NullableCreateRouteTableRequest {
	return &NullableCreateRouteTableRequest{value: val, isSet: true}
}

func (v NullableCreateRouteTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRouteTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateRouteTableResponse struct for CreateRouteTableResponse
type CreateRouteTableResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	RouteTable *RouteTable `json:"RouteTable,omitempty"`
}

// NewCreateRouteTableResponse instantiates a new CreateRouteTableResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRouteTableResponse() *CreateRouteTableResponse {
	this := CreateRouteTableResponse{}
	return &this
}

// NewCreateRouteTableResponseWithDefaults instantiates a new CreateRouteTableResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRouteTableResponseWithDefaults() *CreateRouteTableResponse {
	this := CreateRouteTableResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateRouteTableResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteTableResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateRouteTableResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateRouteTableResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *CreateRouteTableResponse) GetRouteTable() RouteTable {
	if o == nil || o.RouteTable == nil {
		var ret RouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRouteTableResponse) GetRouteTableOk() (*RouteTable, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *CreateRouteTableResponse) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given RouteTable and assigns it to the RouteTable field.
func (o *CreateRouteTableResponse) SetRouteTable(v RouteTable) {
	o.RouteTable = &v
}

func (o CreateRouteTableResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTable != nil {
		toSerialize["RouteTable"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRouteTableResponse struct {
	value *CreateRouteTableResponse
	isSet bool
}

func (v NullableCreateRouteTableResponse) Get() *CreateRouteTableResponse {
	return v.value
}

func (v *NullableCreateRouteTableResponse) Set(val *CreateRouteTableResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRouteTableResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRouteTableResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRouteTableResponse(val *CreateRouteTableResponse) *NullableCreateRouteTableResponse {
	return &NullableCreateRouteTableResponse{value: val, isSet: true}
}

func (v NullableCreateRouteTableResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRouteTableResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSecurityGroupRequest struct for CreateSecurityGroupRequest
type CreateSecurityGroupRequest struct {
	// A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
	Description string `json:"Description"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net for the security group.
	NetId *string `json:"NetId,omitempty"`
	// The name of the security group.<br /> This name must not start with `sg-`.</br> This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.
	SecurityGroupName string `json:"SecurityGroupName"`
}

// NewCreateSecurityGroupRequest instantiates a new CreateSecurityGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSecurityGroupRequest(description string, securityGroupName string, ) *CreateSecurityGroupRequest {
	this := CreateSecurityGroupRequest{}
	this.Description = description
	this.SecurityGroupName = securityGroupName
	return &this
}

// NewCreateSecurityGroupRequestWithDefaults instantiates a new CreateSecurityGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSecurityGroupRequestWithDefaults() *CreateSecurityGroupRequest {
	this := CreateSecurityGroupRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateSecurityGroupRequest) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateSecurityGroupRequest) SetDescription(v string) {
	o.Description = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateSecurityGroupRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateSecurityGroupRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateSecurityGroupRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *CreateSecurityGroupRequest) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRequest) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *CreateSecurityGroupRequest) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *CreateSecurityGroupRequest) SetNetId(v string) {
	o.NetId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value
func (o *CreateSecurityGroupRequest) GetSecurityGroupName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRequest) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SecurityGroupName, true
}

// SetSecurityGroupName sets field value
func (o *CreateSecurityGroupRequest) SetSecurityGroupName(v string) {
	o.SecurityGroupName = v
}

func (o CreateSecurityGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if true {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSecurityGroupRequest struct {
	value *CreateSecurityGroupRequest
	isSet bool
}

func (v NullableCreateSecurityGroupRequest) Get() *CreateSecurityGroupRequest {
	return v.value
}

func (v *NullableCreateSecurityGroupRequest) Set(val *CreateSecurityGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSecurityGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSecurityGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSecurityGroupRequest(val *CreateSecurityGroupRequest) *NullableCreateSecurityGroupRequest {
	return &NullableCreateSecurityGroupRequest{value: val, isSet: true}
}

func (v NullableCreateSecurityGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSecurityGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSecurityGroupResponse struct for CreateSecurityGroupResponse
type CreateSecurityGroupResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	SecurityGroup *SecurityGroup `json:"SecurityGroup,omitempty"`
}

// NewCreateSecurityGroupResponse instantiates a new CreateSecurityGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSecurityGroupResponse() *CreateSecurityGroupResponse {
	this := CreateSecurityGroupResponse{}
	return &this
}

// NewCreateSecurityGroupResponseWithDefaults instantiates a new CreateSecurityGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSecurityGroupResponseWithDefaults() *CreateSecurityGroupResponse {
	this := CreateSecurityGroupResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateSecurityGroupResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateSecurityGroupResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateSecurityGroupResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSecurityGroup returns the SecurityGroup field value if set, zero value otherwise.
func (o *CreateSecurityGroupResponse) GetSecurityGroup() SecurityGroup {
	if o == nil || o.SecurityGroup == nil {
		var ret SecurityGroup
		return ret
	}
	return *o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupResponse) GetSecurityGroupOk() (*SecurityGroup, bool) {
	if o == nil || o.SecurityGroup == nil {
		return nil, false
	}
	return o.SecurityGroup, true
}

// HasSecurityGroup returns a boolean if a field has been set.
func (o *CreateSecurityGroupResponse) HasSecurityGroup() bool {
	if o != nil && o.SecurityGroup != nil {
		return true
	}

	return false
}

// SetSecurityGroup gets a reference to the given SecurityGroup and assigns it to the SecurityGroup field.
func (o *CreateSecurityGroupResponse) SetSecurityGroup(v SecurityGroup) {
	o.SecurityGroup = &v
}

func (o CreateSecurityGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SecurityGroup != nil {
		toSerialize["SecurityGroup"] = o.SecurityGroup
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSecurityGroupResponse struct {
	value *CreateSecurityGroupResponse
	isSet bool
}

func (v NullableCreateSecurityGroupResponse) Get() *CreateSecurityGroupResponse {
	return v.value
}

func (v *NullableCreateSecurityGroupResponse) Set(val *CreateSecurityGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSecurityGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSecurityGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSecurityGroupResponse(val *CreateSecurityGroupResponse) *NullableCreateSecurityGroupResponse {
	return &NullableCreateSecurityGroupResponse{value: val, isSet: true}
}

func (v NullableCreateSecurityGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSecurityGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSecurityGroupRuleRequest struct for CreateSecurityGroupRuleRequest
type CreateSecurityGroupRuleRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
	Flow string `json:"Flow"`
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int32 `json:"FromPortRange,omitempty"`
	// The IP protocol name (`tcp`, `udp`, `icmp`) or protocol number. By default, `-1`, which means all protocols.
	IpProtocol *string `json:"IpProtocol,omitempty"`
	// The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// Information about the security group rule to create.
	Rules *[]SecurityGroupRule `json:"Rules,omitempty"`
	// The account ID of the owner of the security group for which you want to create a rule.
	SecurityGroupAccountIdToLink *string `json:"SecurityGroupAccountIdToLink,omitempty"`
	// The ID of the security group for which you want to create a rule.
	SecurityGroupId string `json:"SecurityGroupId"`
	// The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group.
	SecurityGroupNameToLink *string `json:"SecurityGroupNameToLink,omitempty"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP type number.
	ToPortRange *int32 `json:"ToPortRange,omitempty"`
}

// NewCreateSecurityGroupRuleRequest instantiates a new CreateSecurityGroupRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSecurityGroupRuleRequest(flow string, securityGroupId string, ) *CreateSecurityGroupRuleRequest {
	this := CreateSecurityGroupRuleRequest{}
	this.Flow = flow
	this.SecurityGroupId = securityGroupId
	return &this
}

// NewCreateSecurityGroupRuleRequestWithDefaults instantiates a new CreateSecurityGroupRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSecurityGroupRuleRequestWithDefaults() *CreateSecurityGroupRuleRequest {
	this := CreateSecurityGroupRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateSecurityGroupRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlow returns the Flow field value
func (o *CreateSecurityGroupRuleRequest) GetFlow() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Flow
}

// GetFlowOk returns a tuple with the Flow field value
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetFlowOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Flow, true
}

// SetFlow sets field value
func (o *CreateSecurityGroupRuleRequest) SetFlow(v string) {
	o.Flow = v
}

// GetFromPortRange returns the FromPortRange field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetFromPortRange() int32 {
	if o == nil || o.FromPortRange == nil {
		var ret int32
		return ret
	}
	return *o.FromPortRange
}

// GetFromPortRangeOk returns a tuple with the FromPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetFromPortRangeOk() (*int32, bool) {
	if o == nil || o.FromPortRange == nil {
		return nil, false
	}
	return o.FromPortRange, true
}

// HasFromPortRange returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasFromPortRange() bool {
	if o != nil && o.FromPortRange != nil {
		return true
	}

	return false
}

// SetFromPortRange gets a reference to the given int32 and assigns it to the FromPortRange field.
func (o *CreateSecurityGroupRuleRequest) SetFromPortRange(v int32) {
	o.FromPortRange = &v
}

// GetIpProtocol returns the IpProtocol field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetIpProtocol() string {
	if o == nil || o.IpProtocol == nil {
		var ret string
		return ret
	}
	return *o.IpProtocol
}

// GetIpProtocolOk returns a tuple with the IpProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetIpProtocolOk() (*string, bool) {
	if o == nil || o.IpProtocol == nil {
		return nil, false
	}
	return o.IpProtocol, true
}

// HasIpProtocol returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasIpProtocol() bool {
	if o != nil && o.IpProtocol != nil {
		return true
	}

	return false
}

// SetIpProtocol gets a reference to the given string and assigns it to the IpProtocol field.
func (o *CreateSecurityGroupRuleRequest) SetIpProtocol(v string) {
	o.IpProtocol = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *CreateSecurityGroupRuleRequest) SetIpRange(v string) {
	o.IpRange = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetRules() []SecurityGroupRule {
	if o == nil || o.Rules == nil {
		var ret []SecurityGroupRule
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetRulesOk() (*[]SecurityGroupRule, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SecurityGroupRule and assigns it to the Rules field.
func (o *CreateSecurityGroupRuleRequest) SetRules(v []SecurityGroupRule) {
	o.Rules = &v
}

// GetSecurityGroupAccountIdToLink returns the SecurityGroupAccountIdToLink field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupAccountIdToLink() string {
	if o == nil || o.SecurityGroupAccountIdToLink == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupAccountIdToLink
}

// GetSecurityGroupAccountIdToLinkOk returns a tuple with the SecurityGroupAccountIdToLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupAccountIdToLinkOk() (*string, bool) {
	if o == nil || o.SecurityGroupAccountIdToLink == nil {
		return nil, false
	}
	return o.SecurityGroupAccountIdToLink, true
}

// HasSecurityGroupAccountIdToLink returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasSecurityGroupAccountIdToLink() bool {
	if o != nil && o.SecurityGroupAccountIdToLink != nil {
		return true
	}

	return false
}

// SetSecurityGroupAccountIdToLink gets a reference to the given string and assigns it to the SecurityGroupAccountIdToLink field.
func (o *CreateSecurityGroupRuleRequest) SetSecurityGroupAccountIdToLink(v string) {
	o.SecurityGroupAccountIdToLink = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SecurityGroupId, true
}

// SetSecurityGroupId sets field value
func (o *CreateSecurityGroupRuleRequest) SetSecurityGroupId(v string) {
	o.SecurityGroupId = v
}

// GetSecurityGroupNameToLink returns the SecurityGroupNameToLink field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupNameToLink() string {
	if o == nil || o.SecurityGroupNameToLink == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupNameToLink
}

// GetSecurityGroupNameToLinkOk returns a tuple with the SecurityGroupNameToLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetSecurityGroupNameToLinkOk() (*string, bool) {
	if o == nil || o.SecurityGroupNameToLink == nil {
		return nil, false
	}
	return o.SecurityGroupNameToLink, true
}

// HasSecurityGroupNameToLink returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasSecurityGroupNameToLink() bool {
	if o != nil && o.SecurityGroupNameToLink != nil {
		return true
	}

	return false
}

// SetSecurityGroupNameToLink gets a reference to the given string and assigns it to the SecurityGroupNameToLink field.
func (o *CreateSecurityGroupRuleRequest) SetSecurityGroupNameToLink(v string) {
	o.SecurityGroupNameToLink = &v
}

// GetToPortRange returns the ToPortRange field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleRequest) GetToPortRange() int32 {
	if o == nil || o.ToPortRange == nil {
		var ret int32
		return ret
	}
	return *o.ToPortRange
}

// GetToPortRangeOk returns a tuple with the ToPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleRequest) GetToPortRangeOk() (*int32, bool) {
	if o == nil || o.ToPortRange == nil {
		return nil, false
	}
	return o.ToPortRange, true
}

// HasToPortRange returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleRequest) HasToPortRange() bool {
	if o != nil && o.ToPortRange != nil {
		return true
	}

	return false
}

// SetToPortRange gets a reference to the given int32 and assigns it to the ToPortRange field.
func (o *CreateSecurityGroupRuleRequest) SetToPortRange(v int32) {
	o.ToPortRange = &v
}

func (o CreateSecurityGroupRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Flow"] = o.Flow
	}
	if o.FromPortRange != nil {
		toSerialize["FromPortRange"] = o.FromPortRange
	}
	if o.IpProtocol != nil {
		toSerialize["IpProtocol"] = o.IpProtocol
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.Rules != nil {
		toSerialize["Rules"] = o.Rules
	}
	if o.SecurityGroupAccountIdToLink != nil {
		toSerialize["SecurityGroupAccountIdToLink"] = o.SecurityGroupAccountIdToLink
	}
	if true {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupNameToLink != nil {
		toSerialize["SecurityGroupNameToLink"] = o.SecurityGroupNameToLink
	}
	if o.ToPortRange != nil {
		toSerialize["ToPortRange"] = o.ToPortRange
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSecurityGroupRuleRequest struct {
	value *CreateSecurityGroupRuleRequest
	isSet bool
}

func (v NullableCreateSecurityGroupRuleRequest) Get() *CreateSecurityGroupRuleRequest {
	return v.value
}

func (v *NullableCreateSecurityGroupRuleRequest) Set(val *CreateSecurityGroupRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSecurityGroupRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSecurityGroupRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSecurityGroupRuleRequest(val *CreateSecurityGroupRuleRequest) *NullableCreateSecurityGroupRuleRequest {
	return &NullableCreateSecurityGroupRuleRequest{value: val, isSet: true}
}

func (v NullableCreateSecurityGroupRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSecurityGroupRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSecurityGroupRuleResponse struct for CreateSecurityGroupRuleResponse
type CreateSecurityGroupRuleResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	SecurityGroup *SecurityGroup `json:"SecurityGroup,omitempty"`
}

// NewCreateSecurityGroupRuleResponse instantiates a new CreateSecurityGroupRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSecurityGroupRuleResponse() *CreateSecurityGroupRuleResponse {
	this := CreateSecurityGroupRuleResponse{}
	return &this
}

// NewCreateSecurityGroupRuleResponseWithDefaults instantiates a new CreateSecurityGroupRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSecurityGroupRuleResponseWithDefaults() *CreateSecurityGroupRuleResponse {
	this := CreateSecurityGroupRuleResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateSecurityGroupRuleResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSecurityGroup returns the SecurityGroup field value if set, zero value otherwise.
func (o *CreateSecurityGroupRuleResponse) GetSecurityGroup() SecurityGroup {
	if o == nil || o.SecurityGroup == nil {
		var ret SecurityGroup
		return ret
	}
	return *o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupRuleResponse) GetSecurityGroupOk() (*SecurityGroup, bool) {
	if o == nil || o.SecurityGroup == nil {
		return nil, false
	}
	return o.SecurityGroup, true
}

// HasSecurityGroup returns a boolean if a field has been set.
func (o *CreateSecurityGroupRuleResponse) HasSecurityGroup() bool {
	if o != nil && o.SecurityGroup != nil {
		return true
	}

	return false
}

// SetSecurityGroup gets a reference to the given SecurityGroup and assigns it to the SecurityGroup field.
func (o *CreateSecurityGroupRuleResponse) SetSecurityGroup(v SecurityGroup) {
	o.SecurityGroup = &v
}

func (o CreateSecurityGroupRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SecurityGroup != nil {
		toSerialize["SecurityGroup"] = o.SecurityGroup
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSecurityGroupRuleResponse struct {
	value *CreateSecurityGroupRuleResponse
	isSet bool
}

func (v NullableCreateSecurityGroupRuleResponse) Get() *CreateSecurityGroupRuleResponse {
	return v.value
}

func (v *NullableCreateSecurityGroupRuleResponse) Set(val *CreateSecurityGroupRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSecurityGroupRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSecurityGroupRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSecurityGroupRuleResponse(val *CreateSecurityGroupRuleResponse) *NullableCreateSecurityGroupRuleResponse {
	return &NullableCreateSecurityGroupRuleResponse{value: val, isSet: true}
}

func (v NullableCreateSecurityGroupRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSecurityGroupRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateServerCertificateRequest struct for CreateServerCertificateRequest
type CreateServerCertificateRequest struct {
	// The PEM-encoded X509 certificate.
	Body string `json:"Body"`
	// The PEM-encoded intermediate certification authorities.
	Chain *string `json:"Chain,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// A unique name for the certificate. Constraints: 1-128 alphanumeric characters, pluses (+), equals (=), commas (,), periods (.), at signs (@), minuses (-), or underscores (_).
	Name string `json:"Name"`
	// The path to the server certificate, set to a slash (/) if not specified.
	Path *string `json:"Path,omitempty"`
	// The PEM-encoded private key matching the certificate.
	PrivateKey string `json:"PrivateKey"`
}

// NewCreateServerCertificateRequest instantiates a new CreateServerCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerCertificateRequest(body string, name string, privateKey string, ) *CreateServerCertificateRequest {
	this := CreateServerCertificateRequest{}
	this.Body = body
	this.Name = name
	this.PrivateKey = privateKey
	return &this
}

// NewCreateServerCertificateRequestWithDefaults instantiates a new CreateServerCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerCertificateRequestWithDefaults() *CreateServerCertificateRequest {
	this := CreateServerCertificateRequest{}
	return &this
}

// GetBody returns the Body field value
func (o *CreateServerCertificateRequest) GetBody() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetBodyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *CreateServerCertificateRequest) SetBody(v string) {
	o.Body = v
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *CreateServerCertificateRequest) GetChain() string {
	if o == nil || o.Chain == nil {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetChainOk() (*string, bool) {
	if o == nil || o.Chain == nil {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *CreateServerCertificateRequest) HasChain() bool {
	if o != nil && o.Chain != nil {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *CreateServerCertificateRequest) SetChain(v string) {
	o.Chain = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateServerCertificateRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateServerCertificateRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateServerCertificateRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetName returns the Name field value
func (o *CreateServerCertificateRequest) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateServerCertificateRequest) SetName(v string) {
	o.Name = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CreateServerCertificateRequest) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CreateServerCertificateRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CreateServerCertificateRequest) SetPath(v string) {
	o.Path = &v
}

// GetPrivateKey returns the PrivateKey field value
func (o *CreateServerCertificateRequest) GetPrivateKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *CreateServerCertificateRequest) SetPrivateKey(v string) {
	o.PrivateKey = v
}

func (o CreateServerCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Body"] = o.Body
	}
	if o.Chain != nil {
		toSerialize["Chain"] = o.Chain
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Name"] = o.Name
	}
	if o.Path != nil {
		toSerialize["Path"] = o.Path
	}
	if true {
		toSerialize["PrivateKey"] = o.PrivateKey
	}
	return json.Marshal(toSerialize)
}

type NullableCreateServerCertificateRequest struct {
	value *CreateServerCertificateRequest
	isSet bool
}

func (v NullableCreateServerCertificateRequest) Get() *CreateServerCertificateRequest {
	return v.value
}

func (v *NullableCreateServerCertificateRequest) Set(val *CreateServerCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerCertificateRequest(val *CreateServerCertificateRequest) *NullableCreateServerCertificateRequest {
	return &NullableCreateServerCertificateRequest{value: val, isSet: true}
}

func (v NullableCreateServerCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateServerCertificateResponse struct for CreateServerCertificateResponse
type CreateServerCertificateResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	ServerCertificate *ServerCertificate `json:"ServerCertificate,omitempty"`
}

// NewCreateServerCertificateResponse instantiates a new CreateServerCertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerCertificateResponse() *CreateServerCertificateResponse {
	this := CreateServerCertificateResponse{}
	return &this
}

// NewCreateServerCertificateResponseWithDefaults instantiates a new CreateServerCertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerCertificateResponseWithDefaults() *CreateServerCertificateResponse {
	this := CreateServerCertificateResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateServerCertificateResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateServerCertificateResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateServerCertificateResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetServerCertificate returns the ServerCertificate field value if set, zero value otherwise.
func (o *CreateServerCertificateResponse) GetServerCertificate() ServerCertificate {
	if o == nil || o.ServerCertificate == nil {
		var ret ServerCertificate
		return ret
	}
	return *o.ServerCertificate
}

// GetServerCertificateOk returns a tuple with the ServerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerCertificateResponse) GetServerCertificateOk() (*ServerCertificate, bool) {
	if o == nil || o.ServerCertificate == nil {
		return nil, false
	}
	return o.ServerCertificate, true
}

// HasServerCertificate returns a boolean if a field has been set.
func (o *CreateServerCertificateResponse) HasServerCertificate() bool {
	if o != nil && o.ServerCertificate != nil {
		return true
	}

	return false
}

// SetServerCertificate gets a reference to the given ServerCertificate and assigns it to the ServerCertificate field.
func (o *CreateServerCertificateResponse) SetServerCertificate(v ServerCertificate) {
	o.ServerCertificate = &v
}

func (o CreateServerCertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.ServerCertificate != nil {
		toSerialize["ServerCertificate"] = o.ServerCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableCreateServerCertificateResponse struct {
	value *CreateServerCertificateResponse
	isSet bool
}

func (v NullableCreateServerCertificateResponse) Get() *CreateServerCertificateResponse {
	return v.value
}

func (v *NullableCreateServerCertificateResponse) Set(val *CreateServerCertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerCertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerCertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerCertificateResponse(val *CreateServerCertificateResponse) *NullableCreateServerCertificateResponse {
	return &NullableCreateServerCertificateResponse{value: val, isSet: true}
}

func (v NullableCreateServerCertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerCertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSnapshotExportTaskRequest struct for CreateSnapshotExportTaskRequest
type CreateSnapshotExportTaskRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	OsuExport OsuExport `json:"OsuExport"`
	// The ID of the snapshot to export.
	SnapshotId string `json:"SnapshotId"`
}

// NewCreateSnapshotExportTaskRequest instantiates a new CreateSnapshotExportTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotExportTaskRequest(osuExport OsuExport, snapshotId string, ) *CreateSnapshotExportTaskRequest {
	this := CreateSnapshotExportTaskRequest{}
	this.OsuExport = osuExport
	this.SnapshotId = snapshotId
	return &this
}

// NewCreateSnapshotExportTaskRequestWithDefaults instantiates a new CreateSnapshotExportTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotExportTaskRequestWithDefaults() *CreateSnapshotExportTaskRequest {
	this := CreateSnapshotExportTaskRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateSnapshotExportTaskRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotExportTaskRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateSnapshotExportTaskRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateSnapshotExportTaskRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetOsuExport returns the OsuExport field value
func (o *CreateSnapshotExportTaskRequest) GetOsuExport() OsuExport {
	if o == nil  {
		var ret OsuExport
		return ret
	}

	return o.OsuExport
}

// GetOsuExportOk returns a tuple with the OsuExport field value
// and a boolean to check if the value has been set.
func (o *CreateSnapshotExportTaskRequest) GetOsuExportOk() (*OsuExport, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OsuExport, true
}

// SetOsuExport sets field value
func (o *CreateSnapshotExportTaskRequest) SetOsuExport(v OsuExport) {
	o.OsuExport = v
}

// GetSnapshotId returns the SnapshotId field value
func (o *CreateSnapshotExportTaskRequest) GetSnapshotId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *CreateSnapshotExportTaskRequest) GetSnapshotIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *CreateSnapshotExportTaskRequest) SetSnapshotId(v string) {
	o.SnapshotId = v
}

func (o CreateSnapshotExportTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["OsuExport"] = o.OsuExport
	}
	if true {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSnapshotExportTaskRequest struct {
	value *CreateSnapshotExportTaskRequest
	isSet bool
}

func (v NullableCreateSnapshotExportTaskRequest) Get() *CreateSnapshotExportTaskRequest {
	return v.value
}

func (v *NullableCreateSnapshotExportTaskRequest) Set(val *CreateSnapshotExportTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotExportTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotExportTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotExportTaskRequest(val *CreateSnapshotExportTaskRequest) *NullableCreateSnapshotExportTaskRequest {
	return &NullableCreateSnapshotExportTaskRequest{value: val, isSet: true}
}

func (v NullableCreateSnapshotExportTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotExportTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSnapshotExportTaskResponse struct for CreateSnapshotExportTaskResponse
type CreateSnapshotExportTaskResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	SnapshotExportTask *SnapshotExportTask `json:"SnapshotExportTask,omitempty"`
}

// NewCreateSnapshotExportTaskResponse instantiates a new CreateSnapshotExportTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotExportTaskResponse() *CreateSnapshotExportTaskResponse {
	this := CreateSnapshotExportTaskResponse{}
	return &this
}

// NewCreateSnapshotExportTaskResponseWithDefaults instantiates a new CreateSnapshotExportTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotExportTaskResponseWithDefaults() *CreateSnapshotExportTaskResponse {
	this := CreateSnapshotExportTaskResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateSnapshotExportTaskResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotExportTaskResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateSnapshotExportTaskResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateSnapshotExportTaskResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSnapshotExportTask returns the SnapshotExportTask field value if set, zero value otherwise.
func (o *CreateSnapshotExportTaskResponse) GetSnapshotExportTask() SnapshotExportTask {
	if o == nil || o.SnapshotExportTask == nil {
		var ret SnapshotExportTask
		return ret
	}
	return *o.SnapshotExportTask
}

// GetSnapshotExportTaskOk returns a tuple with the SnapshotExportTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotExportTaskResponse) GetSnapshotExportTaskOk() (*SnapshotExportTask, bool) {
	if o == nil || o.SnapshotExportTask == nil {
		return nil, false
	}
	return o.SnapshotExportTask, true
}

// HasSnapshotExportTask returns a boolean if a field has been set.
func (o *CreateSnapshotExportTaskResponse) HasSnapshotExportTask() bool {
	if o != nil && o.SnapshotExportTask != nil {
		return true
	}

	return false
}

// SetSnapshotExportTask gets a reference to the given SnapshotExportTask and assigns it to the SnapshotExportTask field.
func (o *CreateSnapshotExportTaskResponse) SetSnapshotExportTask(v SnapshotExportTask) {
	o.SnapshotExportTask = &v
}

func (o CreateSnapshotExportTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SnapshotExportTask != nil {
		toSerialize["SnapshotExportTask"] = o.SnapshotExportTask
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSnapshotExportTaskResponse struct {
	value *CreateSnapshotExportTaskResponse
	isSet bool
}

func (v NullableCreateSnapshotExportTaskResponse) Get() *CreateSnapshotExportTaskResponse {
	return v.value
}

func (v *NullableCreateSnapshotExportTaskResponse) Set(val *CreateSnapshotExportTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotExportTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotExportTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotExportTaskResponse(val *CreateSnapshotExportTaskResponse) *NullableCreateSnapshotExportTaskResponse {
	return &NullableCreateSnapshotExportTaskResponse{value: val, isSet: true}
}

func (v NullableCreateSnapshotExportTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotExportTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSnapshotRequest struct for CreateSnapshotRequest
type CreateSnapshotRequest struct {
	// A description for the snapshot.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The pre-signed URL of the snapshot you want to import from the OSU bucket.
	FileLocation *string `json:"FileLocation,omitempty"`
	// The size of the snapshot created in your account, in bytes. This size must be exactly the same as the source snapshot one.
	SnapshotSize *int64 `json:"SnapshotSize,omitempty"`
	// The name of the source Region, which must be the same as the Region of your account.
	SourceRegionName *string `json:"SourceRegionName,omitempty"`
	// The ID of the snapshot you want to copy.
	SourceSnapshotId *string `json:"SourceSnapshotId,omitempty"`
	// The ID of the volume you want to create a snapshot of.
	VolumeId *string `json:"VolumeId,omitempty"`
}

// NewCreateSnapshotRequest instantiates a new CreateSnapshotRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotRequest() *CreateSnapshotRequest {
	this := CreateSnapshotRequest{}
	return &this
}

// NewCreateSnapshotRequestWithDefaults instantiates a new CreateSnapshotRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotRequestWithDefaults() *CreateSnapshotRequest {
	this := CreateSnapshotRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSnapshotRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateSnapshotRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFileLocation returns the FileLocation field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetFileLocation() string {
	if o == nil || o.FileLocation == nil {
		var ret string
		return ret
	}
	return *o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetFileLocationOk() (*string, bool) {
	if o == nil || o.FileLocation == nil {
		return nil, false
	}
	return o.FileLocation, true
}

// HasFileLocation returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasFileLocation() bool {
	if o != nil && o.FileLocation != nil {
		return true
	}

	return false
}

// SetFileLocation gets a reference to the given string and assigns it to the FileLocation field.
func (o *CreateSnapshotRequest) SetFileLocation(v string) {
	o.FileLocation = &v
}

// GetSnapshotSize returns the SnapshotSize field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetSnapshotSize() int64 {
	if o == nil || o.SnapshotSize == nil {
		var ret int64
		return ret
	}
	return *o.SnapshotSize
}

// GetSnapshotSizeOk returns a tuple with the SnapshotSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetSnapshotSizeOk() (*int64, bool) {
	if o == nil || o.SnapshotSize == nil {
		return nil, false
	}
	return o.SnapshotSize, true
}

// HasSnapshotSize returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasSnapshotSize() bool {
	if o != nil && o.SnapshotSize != nil {
		return true
	}

	return false
}

// SetSnapshotSize gets a reference to the given int64 and assigns it to the SnapshotSize field.
func (o *CreateSnapshotRequest) SetSnapshotSize(v int64) {
	o.SnapshotSize = &v
}

// GetSourceRegionName returns the SourceRegionName field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetSourceRegionName() string {
	if o == nil || o.SourceRegionName == nil {
		var ret string
		return ret
	}
	return *o.SourceRegionName
}

// GetSourceRegionNameOk returns a tuple with the SourceRegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetSourceRegionNameOk() (*string, bool) {
	if o == nil || o.SourceRegionName == nil {
		return nil, false
	}
	return o.SourceRegionName, true
}

// HasSourceRegionName returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasSourceRegionName() bool {
	if o != nil && o.SourceRegionName != nil {
		return true
	}

	return false
}

// SetSourceRegionName gets a reference to the given string and assigns it to the SourceRegionName field.
func (o *CreateSnapshotRequest) SetSourceRegionName(v string) {
	o.SourceRegionName = &v
}

// GetSourceSnapshotId returns the SourceSnapshotId field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetSourceSnapshotId() string {
	if o == nil || o.SourceSnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SourceSnapshotId
}

// GetSourceSnapshotIdOk returns a tuple with the SourceSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetSourceSnapshotIdOk() (*string, bool) {
	if o == nil || o.SourceSnapshotId == nil {
		return nil, false
	}
	return o.SourceSnapshotId, true
}

// HasSourceSnapshotId returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasSourceSnapshotId() bool {
	if o != nil && o.SourceSnapshotId != nil {
		return true
	}

	return false
}

// SetSourceSnapshotId gets a reference to the given string and assigns it to the SourceSnapshotId field.
func (o *CreateSnapshotRequest) SetSourceSnapshotId(v string) {
	o.SourceSnapshotId = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *CreateSnapshotRequest) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *CreateSnapshotRequest) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *CreateSnapshotRequest) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o CreateSnapshotRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.FileLocation != nil {
		toSerialize["FileLocation"] = o.FileLocation
	}
	if o.SnapshotSize != nil {
		toSerialize["SnapshotSize"] = o.SnapshotSize
	}
	if o.SourceRegionName != nil {
		toSerialize["SourceRegionName"] = o.SourceRegionName
	}
	if o.SourceSnapshotId != nil {
		toSerialize["SourceSnapshotId"] = o.SourceSnapshotId
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSnapshotRequest struct {
	value *CreateSnapshotRequest
	isSet bool
}

func (v NullableCreateSnapshotRequest) Get() *CreateSnapshotRequest {
	return v.value
}

func (v *NullableCreateSnapshotRequest) Set(val *CreateSnapshotRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotRequest(val *CreateSnapshotRequest) *NullableCreateSnapshotRequest {
	return &NullableCreateSnapshotRequest{value: val, isSet: true}
}

func (v NullableCreateSnapshotRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSnapshotResponse struct for CreateSnapshotResponse
type CreateSnapshotResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Snapshot *Snapshot `json:"Snapshot,omitempty"`
}

// NewCreateSnapshotResponse instantiates a new CreateSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotResponse() *CreateSnapshotResponse {
	this := CreateSnapshotResponse{}
	return &this
}

// NewCreateSnapshotResponseWithDefaults instantiates a new CreateSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotResponseWithDefaults() *CreateSnapshotResponse {
	this := CreateSnapshotResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateSnapshotResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateSnapshotResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateSnapshotResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *CreateSnapshotResponse) GetSnapshot() Snapshot {
	if o == nil || o.Snapshot == nil {
		var ret Snapshot
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotResponse) GetSnapshotOk() (*Snapshot, bool) {
	if o == nil || o.Snapshot == nil {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *CreateSnapshotResponse) HasSnapshot() bool {
	if o != nil && o.Snapshot != nil {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given Snapshot and assigns it to the Snapshot field.
func (o *CreateSnapshotResponse) SetSnapshot(v Snapshot) {
	o.Snapshot = &v
}

func (o CreateSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Snapshot != nil {
		toSerialize["Snapshot"] = o.Snapshot
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSnapshotResponse struct {
	value *CreateSnapshotResponse
	isSet bool
}

func (v NullableCreateSnapshotResponse) Get() *CreateSnapshotResponse {
	return v.value
}

func (v *NullableCreateSnapshotResponse) Set(val *CreateSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotResponse(val *CreateSnapshotResponse) *NullableCreateSnapshotResponse {
	return &NullableCreateSnapshotResponse{value: val, isSet: true}
}

func (v NullableCreateSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSubnetRequest struct for CreateSubnetRequest
type CreateSubnetRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16).
	IpRange string `json:"IpRange"`
	// The ID of the Net for which you want to create a Subnet.
	NetId string `json:"NetId"`
	// The name of the Subregion in which you want to create the Subnet.
	SubregionName *string `json:"SubregionName,omitempty"`
}

// NewCreateSubnetRequest instantiates a new CreateSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubnetRequest(ipRange string, netId string, ) *CreateSubnetRequest {
	this := CreateSubnetRequest{}
	this.IpRange = ipRange
	this.NetId = netId
	return &this
}

// NewCreateSubnetRequestWithDefaults instantiates a new CreateSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubnetRequestWithDefaults() *CreateSubnetRequest {
	this := CreateSubnetRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateSubnetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateSubnetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateSubnetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetIpRange returns the IpRange field value
func (o *CreateSubnetRequest) GetIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpRange, true
}

// SetIpRange sets field value
func (o *CreateSubnetRequest) SetIpRange(v string) {
	o.IpRange = v
}

// GetNetId returns the NetId field value
func (o *CreateSubnetRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *CreateSubnetRequest) SetNetId(v string) {
	o.NetId = v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *CreateSubnetRequest) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *CreateSubnetRequest) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *CreateSubnetRequest) SetSubregionName(v string) {
	o.SubregionName = &v
}

func (o CreateSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["IpRange"] = o.IpRange
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubnetRequest struct {
	value *CreateSubnetRequest
	isSet bool
}

func (v NullableCreateSubnetRequest) Get() *CreateSubnetRequest {
	return v.value
}

func (v *NullableCreateSubnetRequest) Set(val *CreateSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubnetRequest(val *CreateSubnetRequest) *NullableCreateSubnetRequest {
	return &NullableCreateSubnetRequest{value: val, isSet: true}
}

func (v NullableCreateSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateSubnetResponse struct for CreateSubnetResponse
type CreateSubnetResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Subnet *Subnet `json:"Subnet,omitempty"`
}

// NewCreateSubnetResponse instantiates a new CreateSubnetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubnetResponse() *CreateSubnetResponse {
	this := CreateSubnetResponse{}
	return &this
}

// NewCreateSubnetResponseWithDefaults instantiates a new CreateSubnetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubnetResponseWithDefaults() *CreateSubnetResponse {
	this := CreateSubnetResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateSubnetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateSubnetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateSubnetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *CreateSubnetResponse) GetSubnet() Subnet {
	if o == nil || o.Subnet == nil {
		var ret Subnet
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetResponse) GetSubnetOk() (*Subnet, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *CreateSubnetResponse) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given Subnet and assigns it to the Subnet field.
func (o *CreateSubnetResponse) SetSubnet(v Subnet) {
	o.Subnet = &v
}

func (o CreateSubnetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Subnet != nil {
		toSerialize["Subnet"] = o.Subnet
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubnetResponse struct {
	value *CreateSubnetResponse
	isSet bool
}

func (v NullableCreateSubnetResponse) Get() *CreateSubnetResponse {
	return v.value
}

func (v *NullableCreateSubnetResponse) Set(val *CreateSubnetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubnetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubnetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubnetResponse(val *CreateSubnetResponse) *NullableCreateSubnetResponse {
	return &NullableCreateSubnetResponse{value: val, isSet: true}
}

func (v NullableCreateSubnetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubnetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateTagsRequest struct for CreateTagsRequest
type CreateTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more resource IDs.
	ResourceIds []string `json:"ResourceIds"`
	// One or more tags to add to the specified resources.
	Tags []ResourceTag `json:"Tags"`
}

// NewCreateTagsRequest instantiates a new CreateTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTagsRequest(resourceIds []string, tags []ResourceTag, ) *CreateTagsRequest {
	this := CreateTagsRequest{}
	this.ResourceIds = resourceIds
	this.Tags = tags
	return &this
}

// NewCreateTagsRequestWithDefaults instantiates a new CreateTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTagsRequestWithDefaults() *CreateTagsRequest {
	this := CreateTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetResourceIds returns the ResourceIds field value
func (o *CreateTagsRequest) GetResourceIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value
// and a boolean to check if the value has been set.
func (o *CreateTagsRequest) GetResourceIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceIds, true
}

// SetResourceIds sets field value
func (o *CreateTagsRequest) SetResourceIds(v []string) {
	o.ResourceIds = v
}

// GetTags returns the Tags field value
func (o *CreateTagsRequest) GetTags() []ResourceTag {
	if o == nil  {
		var ret []ResourceTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *CreateTagsRequest) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *CreateTagsRequest) SetTags(v []ResourceTag) {
	o.Tags = v
}

func (o CreateTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ResourceIds"] = o.ResourceIds
	}
	if true {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTagsRequest struct {
	value *CreateTagsRequest
	isSet bool
}

func (v NullableCreateTagsRequest) Get() *CreateTagsRequest {
	return v.value
}

func (v *NullableCreateTagsRequest) Set(val *CreateTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTagsRequest(val *CreateTagsRequest) *NullableCreateTagsRequest {
	return &NullableCreateTagsRequest{value: val, isSet: true}
}

func (v NullableCreateTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateTagsResponse struct for CreateTagsResponse
type CreateTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateTagsResponse instantiates a new CreateTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTagsResponse() *CreateTagsResponse {
	this := CreateTagsResponse{}
	return &this
}

// NewCreateTagsResponseWithDefaults instantiates a new CreateTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTagsResponseWithDefaults() *CreateTagsResponse {
	this := CreateTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTagsResponse struct {
	value *CreateTagsResponse
	isSet bool
}

func (v NullableCreateTagsResponse) Get() *CreateTagsResponse {
	return v.value
}

func (v *NullableCreateTagsResponse) Set(val *CreateTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTagsResponse(val *CreateTagsResponse) *NullableCreateTagsResponse {
	return &NullableCreateTagsResponse{value: val, isSet: true}
}

func (v NullableCreateTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVirtualGatewayRequest struct for CreateVirtualGatewayRequest
type CreateVirtualGatewayRequest struct {
	// The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).
	ConnectionType string `json:"ConnectionType"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewCreateVirtualGatewayRequest instantiates a new CreateVirtualGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVirtualGatewayRequest(connectionType string, ) *CreateVirtualGatewayRequest {
	this := CreateVirtualGatewayRequest{}
	this.ConnectionType = connectionType
	return &this
}

// NewCreateVirtualGatewayRequestWithDefaults instantiates a new CreateVirtualGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVirtualGatewayRequestWithDefaults() *CreateVirtualGatewayRequest {
	this := CreateVirtualGatewayRequest{}
	return &this
}

// GetConnectionType returns the ConnectionType field value
func (o *CreateVirtualGatewayRequest) GetConnectionType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *CreateVirtualGatewayRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *CreateVirtualGatewayRequest) SetConnectionType(v string) {
	o.ConnectionType = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVirtualGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVirtualGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVirtualGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVirtualGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o CreateVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVirtualGatewayRequest struct {
	value *CreateVirtualGatewayRequest
	isSet bool
}

func (v NullableCreateVirtualGatewayRequest) Get() *CreateVirtualGatewayRequest {
	return v.value
}

func (v *NullableCreateVirtualGatewayRequest) Set(val *CreateVirtualGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVirtualGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVirtualGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVirtualGatewayRequest(val *CreateVirtualGatewayRequest) *NullableCreateVirtualGatewayRequest {
	return &NullableCreateVirtualGatewayRequest{value: val, isSet: true}
}

func (v NullableCreateVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVirtualGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVirtualGatewayResponse struct for CreateVirtualGatewayResponse
type CreateVirtualGatewayResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	VirtualGateway *VirtualGateway `json:"VirtualGateway,omitempty"`
}

// NewCreateVirtualGatewayResponse instantiates a new CreateVirtualGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVirtualGatewayResponse() *CreateVirtualGatewayResponse {
	this := CreateVirtualGatewayResponse{}
	return &this
}

// NewCreateVirtualGatewayResponseWithDefaults instantiates a new CreateVirtualGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVirtualGatewayResponseWithDefaults() *CreateVirtualGatewayResponse {
	this := CreateVirtualGatewayResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateVirtualGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVirtualGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateVirtualGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateVirtualGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVirtualGateway returns the VirtualGateway field value if set, zero value otherwise.
func (o *CreateVirtualGatewayResponse) GetVirtualGateway() VirtualGateway {
	if o == nil || o.VirtualGateway == nil {
		var ret VirtualGateway
		return ret
	}
	return *o.VirtualGateway
}

// GetVirtualGatewayOk returns a tuple with the VirtualGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVirtualGatewayResponse) GetVirtualGatewayOk() (*VirtualGateway, bool) {
	if o == nil || o.VirtualGateway == nil {
		return nil, false
	}
	return o.VirtualGateway, true
}

// HasVirtualGateway returns a boolean if a field has been set.
func (o *CreateVirtualGatewayResponse) HasVirtualGateway() bool {
	if o != nil && o.VirtualGateway != nil {
		return true
	}

	return false
}

// SetVirtualGateway gets a reference to the given VirtualGateway and assigns it to the VirtualGateway field.
func (o *CreateVirtualGatewayResponse) SetVirtualGateway(v VirtualGateway) {
	o.VirtualGateway = &v
}

func (o CreateVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VirtualGateway != nil {
		toSerialize["VirtualGateway"] = o.VirtualGateway
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVirtualGatewayResponse struct {
	value *CreateVirtualGatewayResponse
	isSet bool
}

func (v NullableCreateVirtualGatewayResponse) Get() *CreateVirtualGatewayResponse {
	return v.value
}

func (v *NullableCreateVirtualGatewayResponse) Set(val *CreateVirtualGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVirtualGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVirtualGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVirtualGatewayResponse(val *CreateVirtualGatewayResponse) *NullableCreateVirtualGatewayResponse {
	return &NullableCreateVirtualGatewayResponse{value: val, isSet: true}
}

func (v NullableCreateVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVirtualGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVmsRequest struct for CreateVmsRequest
type CreateVmsRequest struct {
	// One or more block device mappings.
	BlockDeviceMappings *[]BlockDeviceMappingVmCreation `json:"BlockDeviceMappings,omitempty"`
	// By default or if `true`, the VM is started on creation. If `false`, the VM is stopped on creation.
	BootOnCreation *bool `json:"BootOnCreation,omitempty"`
	// If `true`, the VM is created with optimized BSU I/O.
	BsuOptimized *bool `json:"BsuOptimized,omitempty"`
	// A unique identifier which enables you to manage the idempotency.
	ClientToken *string `json:"ClientToken,omitempty"`
	// If `true`, you cannot terminate the VM using Cockpit, the CLI or the API. If `false`, you can.
	DeletionProtection *bool `json:"DeletionProtection,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](#readimages) method.
	ImageId string `json:"ImageId"`
	// The name of the keypair.
	KeypairName *string `json:"KeypairName,omitempty"`
	// The maximum number of VMs you want to create. If all the VMs cannot be created, the largest possible number of VMs above MinVmsCount is created.
	MaxVmsCount *int32 `json:"MaxVmsCount,omitempty"`
	// The minimum number of VMs you want to create. If this number of VMs cannot be created, no VMs are created.
	MinVmsCount *int32 `json:"MinVmsCount,omitempty"`
	// One or more NICs. If you specify this parameter, you must define one NIC as the primary network interface of the VM with `0` as its device number.
	Nics *[]NicForVmCreation `json:"Nics,omitempty"`
	// The performance of the VM (`standard` \\| `high` \\|  `highest`).
	Performance *string `json:"Performance,omitempty"`
	Placement *Placement `json:"Placement,omitempty"`
	// One or more private IP addresses of the VM.
	PrivateIps *[]string `json:"PrivateIps,omitempty"`
	// One or more IDs of security group for the VMs.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
	// One or more names of security groups for the VMs.
	SecurityGroups *[]string `json:"SecurityGroups,omitempty"`
	// The ID of the Subnet in which you want to create the VM.
	SubnetId *string `json:"SubnetId,omitempty"`
	// Data or script used to add a specific configuration to the VM. It must be base64-encoded.
	UserData *string `json:"UserData,omitempty"`
	// The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
	VmInitiatedShutdownBehavior *string `json:"VmInitiatedShutdownBehavior,omitempty"`
	// The type of VM (`t2.small` by default).<br /> For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).
	VmType *string `json:"VmType,omitempty"`
}

// NewCreateVmsRequest instantiates a new CreateVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVmsRequest(imageId string, ) *CreateVmsRequest {
	this := CreateVmsRequest{}
	this.ImageId = imageId
	var performance string = "high"
	this.Performance = &performance
	return &this
}

// NewCreateVmsRequestWithDefaults instantiates a new CreateVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVmsRequestWithDefaults() *CreateVmsRequest {
	this := CreateVmsRequest{}
	var performance string = "high"
	this.Performance = &performance
	return &this
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetBlockDeviceMappings() []BlockDeviceMappingVmCreation {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingVmCreation
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetBlockDeviceMappingsOk() (*[]BlockDeviceMappingVmCreation, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		return nil, false
	}
	return o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingVmCreation and assigns it to the BlockDeviceMappings field.
func (o *CreateVmsRequest) SetBlockDeviceMappings(v []BlockDeviceMappingVmCreation) {
	o.BlockDeviceMappings = &v
}

// GetBootOnCreation returns the BootOnCreation field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetBootOnCreation() bool {
	if o == nil || o.BootOnCreation == nil {
		var ret bool
		return ret
	}
	return *o.BootOnCreation
}

// GetBootOnCreationOk returns a tuple with the BootOnCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetBootOnCreationOk() (*bool, bool) {
	if o == nil || o.BootOnCreation == nil {
		return nil, false
	}
	return o.BootOnCreation, true
}

// HasBootOnCreation returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasBootOnCreation() bool {
	if o != nil && o.BootOnCreation != nil {
		return true
	}

	return false
}

// SetBootOnCreation gets a reference to the given bool and assigns it to the BootOnCreation field.
func (o *CreateVmsRequest) SetBootOnCreation(v bool) {
	o.BootOnCreation = &v
}

// GetBsuOptimized returns the BsuOptimized field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetBsuOptimized() bool {
	if o == nil || o.BsuOptimized == nil {
		var ret bool
		return ret
	}
	return *o.BsuOptimized
}

// GetBsuOptimizedOk returns a tuple with the BsuOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetBsuOptimizedOk() (*bool, bool) {
	if o == nil || o.BsuOptimized == nil {
		return nil, false
	}
	return o.BsuOptimized, true
}

// HasBsuOptimized returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasBsuOptimized() bool {
	if o != nil && o.BsuOptimized != nil {
		return true
	}

	return false
}

// SetBsuOptimized gets a reference to the given bool and assigns it to the BsuOptimized field.
func (o *CreateVmsRequest) SetBsuOptimized(v bool) {
	o.BsuOptimized = &v
}

// GetClientToken returns the ClientToken field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetClientToken() string {
	if o == nil || o.ClientToken == nil {
		var ret string
		return ret
	}
	return *o.ClientToken
}

// GetClientTokenOk returns a tuple with the ClientToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetClientTokenOk() (*string, bool) {
	if o == nil || o.ClientToken == nil {
		return nil, false
	}
	return o.ClientToken, true
}

// HasClientToken returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasClientToken() bool {
	if o != nil && o.ClientToken != nil {
		return true
	}

	return false
}

// SetClientToken gets a reference to the given string and assigns it to the ClientToken field.
func (o *CreateVmsRequest) SetClientToken(v string) {
	o.ClientToken = &v
}

// GetDeletionProtection returns the DeletionProtection field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetDeletionProtection() bool {
	if o == nil || o.DeletionProtection == nil {
		var ret bool
		return ret
	}
	return *o.DeletionProtection
}

// GetDeletionProtectionOk returns a tuple with the DeletionProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetDeletionProtectionOk() (*bool, bool) {
	if o == nil || o.DeletionProtection == nil {
		return nil, false
	}
	return o.DeletionProtection, true
}

// HasDeletionProtection returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasDeletionProtection() bool {
	if o != nil && o.DeletionProtection != nil {
		return true
	}

	return false
}

// SetDeletionProtection gets a reference to the given bool and assigns it to the DeletionProtection field.
func (o *CreateVmsRequest) SetDeletionProtection(v bool) {
	o.DeletionProtection = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetImageId returns the ImageId field value
func (o *CreateVmsRequest) GetImageId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *CreateVmsRequest) SetImageId(v string) {
	o.ImageId = v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil || o.KeypairName == nil {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *CreateVmsRequest) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetMaxVmsCount returns the MaxVmsCount field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetMaxVmsCount() int32 {
	if o == nil || o.MaxVmsCount == nil {
		var ret int32
		return ret
	}
	return *o.MaxVmsCount
}

// GetMaxVmsCountOk returns a tuple with the MaxVmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetMaxVmsCountOk() (*int32, bool) {
	if o == nil || o.MaxVmsCount == nil {
		return nil, false
	}
	return o.MaxVmsCount, true
}

// HasMaxVmsCount returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasMaxVmsCount() bool {
	if o != nil && o.MaxVmsCount != nil {
		return true
	}

	return false
}

// SetMaxVmsCount gets a reference to the given int32 and assigns it to the MaxVmsCount field.
func (o *CreateVmsRequest) SetMaxVmsCount(v int32) {
	o.MaxVmsCount = &v
}

// GetMinVmsCount returns the MinVmsCount field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetMinVmsCount() int32 {
	if o == nil || o.MinVmsCount == nil {
		var ret int32
		return ret
	}
	return *o.MinVmsCount
}

// GetMinVmsCountOk returns a tuple with the MinVmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetMinVmsCountOk() (*int32, bool) {
	if o == nil || o.MinVmsCount == nil {
		return nil, false
	}
	return o.MinVmsCount, true
}

// HasMinVmsCount returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasMinVmsCount() bool {
	if o != nil && o.MinVmsCount != nil {
		return true
	}

	return false
}

// SetMinVmsCount gets a reference to the given int32 and assigns it to the MinVmsCount field.
func (o *CreateVmsRequest) SetMinVmsCount(v int32) {
	o.MinVmsCount = &v
}

// GetNics returns the Nics field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetNics() []NicForVmCreation {
	if o == nil || o.Nics == nil {
		var ret []NicForVmCreation
		return ret
	}
	return *o.Nics
}

// GetNicsOk returns a tuple with the Nics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetNicsOk() (*[]NicForVmCreation, bool) {
	if o == nil || o.Nics == nil {
		return nil, false
	}
	return o.Nics, true
}

// HasNics returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasNics() bool {
	if o != nil && o.Nics != nil {
		return true
	}

	return false
}

// SetNics gets a reference to the given []NicForVmCreation and assigns it to the Nics field.
func (o *CreateVmsRequest) SetNics(v []NicForVmCreation) {
	o.Nics = &v
}

// GetPerformance returns the Performance field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetPerformance() string {
	if o == nil || o.Performance == nil {
		var ret string
		return ret
	}
	return *o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetPerformanceOk() (*string, bool) {
	if o == nil || o.Performance == nil {
		return nil, false
	}
	return o.Performance, true
}

// HasPerformance returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasPerformance() bool {
	if o != nil && o.Performance != nil {
		return true
	}

	return false
}

// SetPerformance gets a reference to the given string and assigns it to the Performance field.
func (o *CreateVmsRequest) SetPerformance(v string) {
	o.Performance = &v
}

// GetPlacement returns the Placement field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetPlacement() Placement {
	if o == nil || o.Placement == nil {
		var ret Placement
		return ret
	}
	return *o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetPlacementOk() (*Placement, bool) {
	if o == nil || o.Placement == nil {
		return nil, false
	}
	return o.Placement, true
}

// HasPlacement returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasPlacement() bool {
	if o != nil && o.Placement != nil {
		return true
	}

	return false
}

// SetPlacement gets a reference to the given Placement and assigns it to the Placement field.
func (o *CreateVmsRequest) SetPlacement(v Placement) {
	o.Placement = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetPrivateIps() []string {
	if o == nil || o.PrivateIps == nil {
		var ret []string
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetPrivateIpsOk() (*[]string, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []string and assigns it to the PrivateIps field.
func (o *CreateVmsRequest) SetPrivateIps(v []string) {
	o.PrivateIps = &v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *CreateVmsRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetSecurityGroups() []string {
	if o == nil || o.SecurityGroups == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetSecurityGroupsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *CreateVmsRequest) SetSecurityGroups(v []string) {
	o.SecurityGroups = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *CreateVmsRequest) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetUserData() string {
	if o == nil || o.UserData == nil {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetUserDataOk() (*string, bool) {
	if o == nil || o.UserData == nil {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasUserData() bool {
	if o != nil && o.UserData != nil {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *CreateVmsRequest) SetUserData(v string) {
	o.UserData = &v
}

// GetVmInitiatedShutdownBehavior returns the VmInitiatedShutdownBehavior field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetVmInitiatedShutdownBehavior() string {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		var ret string
		return ret
	}
	return *o.VmInitiatedShutdownBehavior
}

// GetVmInitiatedShutdownBehaviorOk returns a tuple with the VmInitiatedShutdownBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetVmInitiatedShutdownBehaviorOk() (*string, bool) {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		return nil, false
	}
	return o.VmInitiatedShutdownBehavior, true
}

// HasVmInitiatedShutdownBehavior returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasVmInitiatedShutdownBehavior() bool {
	if o != nil && o.VmInitiatedShutdownBehavior != nil {
		return true
	}

	return false
}

// SetVmInitiatedShutdownBehavior gets a reference to the given string and assigns it to the VmInitiatedShutdownBehavior field.
func (o *CreateVmsRequest) SetVmInitiatedShutdownBehavior(v string) {
	o.VmInitiatedShutdownBehavior = &v
}

// GetVmType returns the VmType field value if set, zero value otherwise.
func (o *CreateVmsRequest) GetVmType() string {
	if o == nil || o.VmType == nil {
		var ret string
		return ret
	}
	return *o.VmType
}

// GetVmTypeOk returns a tuple with the VmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsRequest) GetVmTypeOk() (*string, bool) {
	if o == nil || o.VmType == nil {
		return nil, false
	}
	return o.VmType, true
}

// HasVmType returns a boolean if a field has been set.
func (o *CreateVmsRequest) HasVmType() bool {
	if o != nil && o.VmType != nil {
		return true
	}

	return false
}

// SetVmType gets a reference to the given string and assigns it to the VmType field.
func (o *CreateVmsRequest) SetVmType(v string) {
	o.VmType = &v
}

func (o CreateVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockDeviceMappings != nil {
		toSerialize["BlockDeviceMappings"] = o.BlockDeviceMappings
	}
	if o.BootOnCreation != nil {
		toSerialize["BootOnCreation"] = o.BootOnCreation
	}
	if o.BsuOptimized != nil {
		toSerialize["BsuOptimized"] = o.BsuOptimized
	}
	if o.ClientToken != nil {
		toSerialize["ClientToken"] = o.ClientToken
	}
	if o.DeletionProtection != nil {
		toSerialize["DeletionProtection"] = o.DeletionProtection
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ImageId"] = o.ImageId
	}
	if o.KeypairName != nil {
		toSerialize["KeypairName"] = o.KeypairName
	}
	if o.MaxVmsCount != nil {
		toSerialize["MaxVmsCount"] = o.MaxVmsCount
	}
	if o.MinVmsCount != nil {
		toSerialize["MinVmsCount"] = o.MinVmsCount
	}
	if o.Nics != nil {
		toSerialize["Nics"] = o.Nics
	}
	if o.Performance != nil {
		toSerialize["Performance"] = o.Performance
	}
	if o.Placement != nil {
		toSerialize["Placement"] = o.Placement
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	if o.UserData != nil {
		toSerialize["UserData"] = o.UserData
	}
	if o.VmInitiatedShutdownBehavior != nil {
		toSerialize["VmInitiatedShutdownBehavior"] = o.VmInitiatedShutdownBehavior
	}
	if o.VmType != nil {
		toSerialize["VmType"] = o.VmType
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVmsRequest struct {
	value *CreateVmsRequest
	isSet bool
}

func (v NullableCreateVmsRequest) Get() *CreateVmsRequest {
	return v.value
}

func (v *NullableCreateVmsRequest) Set(val *CreateVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVmsRequest(val *CreateVmsRequest) *NullableCreateVmsRequest {
	return &NullableCreateVmsRequest{value: val, isSet: true}
}

func (v NullableCreateVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVmsResponse struct for CreateVmsResponse
type CreateVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more created VMs.
	Vms *[]Vm `json:"Vms,omitempty"`
}

// NewCreateVmsResponse instantiates a new CreateVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVmsResponse() *CreateVmsResponse {
	this := CreateVmsResponse{}
	return &this
}

// NewCreateVmsResponseWithDefaults instantiates a new CreateVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVmsResponseWithDefaults() *CreateVmsResponse {
	this := CreateVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *CreateVmsResponse) GetVms() []Vm {
	if o == nil || o.Vms == nil {
		var ret []Vm
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVmsResponse) GetVmsOk() (*[]Vm, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *CreateVmsResponse) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []Vm and assigns it to the Vms field.
func (o *CreateVmsResponse) SetVms(v []Vm) {
	o.Vms = &v
}

func (o CreateVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vms != nil {
		toSerialize["Vms"] = o.Vms
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVmsResponse struct {
	value *CreateVmsResponse
	isSet bool
}

func (v NullableCreateVmsResponse) Get() *CreateVmsResponse {
	return v.value
}

func (v *NullableCreateVmsResponse) Set(val *CreateVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVmsResponse(val *CreateVmsResponse) *NullableCreateVmsResponse {
	return &NullableCreateVmsResponse{value: val, isSet: true}
}

func (v NullableCreateVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVolumeRequest struct for CreateVolumeRequest
type CreateVolumeRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`.
	Iops *int32 `json:"Iops,omitempty"`
	// The size of the volume, in gibibytes (GiB). The maximum allowed size for a volume is 14,901 GiB. This parameter is required if the volume is not created from a snapshot (`SnapshotId` unspecified). 
	Size *int32 `json:"Size,omitempty"`
	// The ID of the snapshot from which you want to create the volume.
	SnapshotId *string `json:"SnapshotId,omitempty"`
	// The Subregion in which you want to create the volume.
	SubregionName string `json:"SubregionName"`
	// The type of volume you want to create (`io1` \\| `gp2` \\| `standard`). If not specified, a `standard` volume is created.<br /> For more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS).
	VolumeType *string `json:"VolumeType,omitempty"`
}

// NewCreateVolumeRequest instantiates a new CreateVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeRequest(subregionName string, ) *CreateVolumeRequest {
	this := CreateVolumeRequest{}
	this.SubregionName = subregionName
	return &this
}

// NewCreateVolumeRequestWithDefaults instantiates a new CreateVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeRequestWithDefaults() *CreateVolumeRequest {
	this := CreateVolumeRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVolumeRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetIops returns the Iops field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetIops() int32 {
	if o == nil || o.Iops == nil {
		var ret int32
		return ret
	}
	return *o.Iops
}

// GetIopsOk returns a tuple with the Iops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetIopsOk() (*int32, bool) {
	if o == nil || o.Iops == nil {
		return nil, false
	}
	return o.Iops, true
}

// HasIops returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasIops() bool {
	if o != nil && o.Iops != nil {
		return true
	}

	return false
}

// SetIops gets a reference to the given int32 and assigns it to the Iops field.
func (o *CreateVolumeRequest) SetIops(v int32) {
	o.Iops = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *CreateVolumeRequest) SetSize(v int32) {
	o.Size = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetSnapshotId() string {
	if o == nil || o.SnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetSnapshotIdOk() (*string, bool) {
	if o == nil || o.SnapshotId == nil {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *CreateVolumeRequest) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetSubregionName returns the SubregionName field value
func (o *CreateVolumeRequest) GetSubregionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetSubregionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubregionName, true
}

// SetSubregionName sets field value
func (o *CreateVolumeRequest) SetSubregionName(v string) {
	o.SubregionName = v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetVolumeType() string {
	if o == nil || o.VolumeType == nil {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetVolumeTypeOk() (*string, bool) {
	if o == nil || o.VolumeType == nil {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasVolumeType() bool {
	if o != nil && o.VolumeType != nil {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *CreateVolumeRequest) SetVolumeType(v string) {
	o.VolumeType = &v
}

func (o CreateVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Iops != nil {
		toSerialize["Iops"] = o.Iops
	}
	if o.Size != nil {
		toSerialize["Size"] = o.Size
	}
	if o.SnapshotId != nil {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	if true {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.VolumeType != nil {
		toSerialize["VolumeType"] = o.VolumeType
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVolumeRequest struct {
	value *CreateVolumeRequest
	isSet bool
}

func (v NullableCreateVolumeRequest) Get() *CreateVolumeRequest {
	return v.value
}

func (v *NullableCreateVolumeRequest) Set(val *CreateVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeRequest(val *CreateVolumeRequest) *NullableCreateVolumeRequest {
	return &NullableCreateVolumeRequest{value: val, isSet: true}
}

func (v NullableCreateVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVolumeResponse struct for CreateVolumeResponse
type CreateVolumeResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Volume *Volume `json:"Volume,omitempty"`
}

// NewCreateVolumeResponse instantiates a new CreateVolumeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeResponse() *CreateVolumeResponse {
	this := CreateVolumeResponse{}
	return &this
}

// NewCreateVolumeResponseWithDefaults instantiates a new CreateVolumeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeResponseWithDefaults() *CreateVolumeResponse {
	this := CreateVolumeResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateVolumeResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateVolumeResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateVolumeResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *CreateVolumeResponse) GetVolume() Volume {
	if o == nil || o.Volume == nil {
		var ret Volume
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeResponse) GetVolumeOk() (*Volume, bool) {
	if o == nil || o.Volume == nil {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *CreateVolumeResponse) HasVolume() bool {
	if o != nil && o.Volume != nil {
		return true
	}

	return false
}

// SetVolume gets a reference to the given Volume and assigns it to the Volume field.
func (o *CreateVolumeResponse) SetVolume(v Volume) {
	o.Volume = &v
}

func (o CreateVolumeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Volume != nil {
		toSerialize["Volume"] = o.Volume
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVolumeResponse struct {
	value *CreateVolumeResponse
	isSet bool
}

func (v NullableCreateVolumeResponse) Get() *CreateVolumeResponse {
	return v.value
}

func (v *NullableCreateVolumeResponse) Set(val *CreateVolumeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeResponse(val *CreateVolumeResponse) *NullableCreateVolumeResponse {
	return &NullableCreateVolumeResponse{value: val, isSet: true}
}

func (v NullableCreateVolumeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVpnConnectionRequest struct for CreateVpnConnectionRequest
type CreateVpnConnectionRequest struct {
	// The ID of the client gateway.
	ClientGatewayId string `json:"ClientGatewayId"`
	// The type of VPN connection (only `ipsec.1` is supported).
	ConnectionType string `json:"ConnectionType"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// If `false`, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If `true`, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
	StaticRoutesOnly *bool `json:"StaticRoutesOnly,omitempty"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// NewCreateVpnConnectionRequest instantiates a new CreateVpnConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpnConnectionRequest(clientGatewayId string, connectionType string, virtualGatewayId string, ) *CreateVpnConnectionRequest {
	this := CreateVpnConnectionRequest{}
	this.ClientGatewayId = clientGatewayId
	this.ConnectionType = connectionType
	this.VirtualGatewayId = virtualGatewayId
	return &this
}

// NewCreateVpnConnectionRequestWithDefaults instantiates a new CreateVpnConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpnConnectionRequestWithDefaults() *CreateVpnConnectionRequest {
	this := CreateVpnConnectionRequest{}
	return &this
}

// GetClientGatewayId returns the ClientGatewayId field value
func (o *CreateVpnConnectionRequest) GetClientGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ClientGatewayId
}

// GetClientGatewayIdOk returns a tuple with the ClientGatewayId field value
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetClientGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientGatewayId, true
}

// SetClientGatewayId sets field value
func (o *CreateVpnConnectionRequest) SetClientGatewayId(v string) {
	o.ClientGatewayId = v
}

// GetConnectionType returns the ConnectionType field value
func (o *CreateVpnConnectionRequest) GetConnectionType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *CreateVpnConnectionRequest) SetConnectionType(v string) {
	o.ConnectionType = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVpnConnectionRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVpnConnectionRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVpnConnectionRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetStaticRoutesOnly returns the StaticRoutesOnly field value if set, zero value otherwise.
func (o *CreateVpnConnectionRequest) GetStaticRoutesOnly() bool {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret
	}
	return *o.StaticRoutesOnly
}

// GetStaticRoutesOnlyOk returns a tuple with the StaticRoutesOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetStaticRoutesOnlyOk() (*bool, bool) {
	if o == nil || o.StaticRoutesOnly == nil {
		return nil, false
	}
	return o.StaticRoutesOnly, true
}

// HasStaticRoutesOnly returns a boolean if a field has been set.
func (o *CreateVpnConnectionRequest) HasStaticRoutesOnly() bool {
	if o != nil && o.StaticRoutesOnly != nil {
		return true
	}

	return false
}

// SetStaticRoutesOnly gets a reference to the given bool and assigns it to the StaticRoutesOnly field.
func (o *CreateVpnConnectionRequest) SetStaticRoutesOnly(v bool) {
	o.StaticRoutesOnly = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *CreateVpnConnectionRequest) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *CreateVpnConnectionRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

func (o CreateVpnConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ClientGatewayId"] = o.ClientGatewayId
	}
	if true {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.StaticRoutesOnly != nil {
		toSerialize["StaticRoutesOnly"] = o.StaticRoutesOnly
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpnConnectionRequest struct {
	value *CreateVpnConnectionRequest
	isSet bool
}

func (v NullableCreateVpnConnectionRequest) Get() *CreateVpnConnectionRequest {
	return v.value
}

func (v *NullableCreateVpnConnectionRequest) Set(val *CreateVpnConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpnConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpnConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpnConnectionRequest(val *CreateVpnConnectionRequest) *NullableCreateVpnConnectionRequest {
	return &NullableCreateVpnConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateVpnConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpnConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVpnConnectionResponse struct for CreateVpnConnectionResponse
type CreateVpnConnectionResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	VpnConnection *VpnConnection `json:"VpnConnection,omitempty"`
}

// NewCreateVpnConnectionResponse instantiates a new CreateVpnConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpnConnectionResponse() *CreateVpnConnectionResponse {
	this := CreateVpnConnectionResponse{}
	return &this
}

// NewCreateVpnConnectionResponseWithDefaults instantiates a new CreateVpnConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpnConnectionResponseWithDefaults() *CreateVpnConnectionResponse {
	this := CreateVpnConnectionResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateVpnConnectionResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateVpnConnectionResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateVpnConnectionResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVpnConnection returns the VpnConnection field value if set, zero value otherwise.
func (o *CreateVpnConnectionResponse) GetVpnConnection() VpnConnection {
	if o == nil || o.VpnConnection == nil {
		var ret VpnConnection
		return ret
	}
	return *o.VpnConnection
}

// GetVpnConnectionOk returns a tuple with the VpnConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionResponse) GetVpnConnectionOk() (*VpnConnection, bool) {
	if o == nil || o.VpnConnection == nil {
		return nil, false
	}
	return o.VpnConnection, true
}

// HasVpnConnection returns a boolean if a field has been set.
func (o *CreateVpnConnectionResponse) HasVpnConnection() bool {
	if o != nil && o.VpnConnection != nil {
		return true
	}

	return false
}

// SetVpnConnection gets a reference to the given VpnConnection and assigns it to the VpnConnection field.
func (o *CreateVpnConnectionResponse) SetVpnConnection(v VpnConnection) {
	o.VpnConnection = &v
}

func (o CreateVpnConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VpnConnection != nil {
		toSerialize["VpnConnection"] = o.VpnConnection
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpnConnectionResponse struct {
	value *CreateVpnConnectionResponse
	isSet bool
}

func (v NullableCreateVpnConnectionResponse) Get() *CreateVpnConnectionResponse {
	return v.value
}

func (v *NullableCreateVpnConnectionResponse) Set(val *CreateVpnConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpnConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpnConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpnConnectionResponse(val *CreateVpnConnectionResponse) *NullableCreateVpnConnectionResponse {
	return &NullableCreateVpnConnectionResponse{value: val, isSet: true}
}

func (v NullableCreateVpnConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpnConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVpnConnectionRouteRequest struct for CreateVpnConnectionRouteRequest
type CreateVpnConnectionRouteRequest struct {
	// The network prefix of the route, in CIDR notation (for example, 10.12.0.0/16).
	DestinationIpRange string `json:"DestinationIpRange"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the target VPN connection of the static route.
	VpnConnectionId string `json:"VpnConnectionId"`
}

// NewCreateVpnConnectionRouteRequest instantiates a new CreateVpnConnectionRouteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpnConnectionRouteRequest(destinationIpRange string, vpnConnectionId string, ) *CreateVpnConnectionRouteRequest {
	this := CreateVpnConnectionRouteRequest{}
	this.DestinationIpRange = destinationIpRange
	this.VpnConnectionId = vpnConnectionId
	return &this
}

// NewCreateVpnConnectionRouteRequestWithDefaults instantiates a new CreateVpnConnectionRouteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpnConnectionRouteRequestWithDefaults() *CreateVpnConnectionRouteRequest {
	this := CreateVpnConnectionRouteRequest{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value
func (o *CreateVpnConnectionRouteRequest) GetDestinationIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRouteRequest) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationIpRange, true
}

// SetDestinationIpRange sets field value
func (o *CreateVpnConnectionRouteRequest) SetDestinationIpRange(v string) {
	o.DestinationIpRange = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVpnConnectionRouteRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRouteRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVpnConnectionRouteRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVpnConnectionRouteRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value
func (o *CreateVpnConnectionRouteRequest) GetVpnConnectionId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRouteRequest) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VpnConnectionId, true
}

// SetVpnConnectionId sets field value
func (o *CreateVpnConnectionRouteRequest) SetVpnConnectionId(v string) {
	o.VpnConnectionId = v
}

func (o CreateVpnConnectionRouteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VpnConnectionId"] = o.VpnConnectionId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpnConnectionRouteRequest struct {
	value *CreateVpnConnectionRouteRequest
	isSet bool
}

func (v NullableCreateVpnConnectionRouteRequest) Get() *CreateVpnConnectionRouteRequest {
	return v.value
}

func (v *NullableCreateVpnConnectionRouteRequest) Set(val *CreateVpnConnectionRouteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpnConnectionRouteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpnConnectionRouteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpnConnectionRouteRequest(val *CreateVpnConnectionRouteRequest) *NullableCreateVpnConnectionRouteRequest {
	return &NullableCreateVpnConnectionRouteRequest{value: val, isSet: true}
}

func (v NullableCreateVpnConnectionRouteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpnConnectionRouteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// CreateVpnConnectionRouteResponse struct for CreateVpnConnectionRouteResponse
type CreateVpnConnectionRouteResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateVpnConnectionRouteResponse instantiates a new CreateVpnConnectionRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpnConnectionRouteResponse() *CreateVpnConnectionRouteResponse {
	this := CreateVpnConnectionRouteResponse{}
	return &this
}

// NewCreateVpnConnectionRouteResponseWithDefaults instantiates a new CreateVpnConnectionRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpnConnectionRouteResponseWithDefaults() *CreateVpnConnectionRouteResponse {
	this := CreateVpnConnectionRouteResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateVpnConnectionRouteResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRouteResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateVpnConnectionRouteResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateVpnConnectionRouteResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateVpnConnectionRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpnConnectionRouteResponse struct {
	value *CreateVpnConnectionRouteResponse
	isSet bool
}

func (v NullableCreateVpnConnectionRouteResponse) Get() *CreateVpnConnectionRouteResponse {
	return v.value
}

func (v *NullableCreateVpnConnectionRouteResponse) Set(val *CreateVpnConnectionRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpnConnectionRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpnConnectionRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpnConnectionRouteResponse(val *CreateVpnConnectionRouteResponse) *NullableCreateVpnConnectionRouteResponse {
	return &NullableCreateVpnConnectionRouteResponse{value: val, isSet: true}
}

func (v NullableCreateVpnConnectionRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpnConnectionRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteAccessKeyRequest struct for DeleteAccessKeyRequest
type DeleteAccessKeyRequest struct {
	// The ID of the access key you want to delete.
	AccessKeyId string `json:"AccessKeyId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewDeleteAccessKeyRequest instantiates a new DeleteAccessKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAccessKeyRequest(accessKeyId string, ) *DeleteAccessKeyRequest {
	this := DeleteAccessKeyRequest{}
	this.AccessKeyId = accessKeyId
	return &this
}

// NewDeleteAccessKeyRequestWithDefaults instantiates a new DeleteAccessKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAccessKeyRequestWithDefaults() *DeleteAccessKeyRequest {
	this := DeleteAccessKeyRequest{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value
func (o *DeleteAccessKeyRequest) GetAccessKeyId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
func (o *DeleteAccessKeyRequest) GetAccessKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKeyId, true
}

// SetAccessKeyId sets field value
func (o *DeleteAccessKeyRequest) SetAccessKeyId(v string) {
	o.AccessKeyId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteAccessKeyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAccessKeyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteAccessKeyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteAccessKeyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o DeleteAccessKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AccessKeyId"] = o.AccessKeyId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteAccessKeyRequest struct {
	value *DeleteAccessKeyRequest
	isSet bool
}

func (v NullableDeleteAccessKeyRequest) Get() *DeleteAccessKeyRequest {
	return v.value
}

func (v *NullableDeleteAccessKeyRequest) Set(val *DeleteAccessKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAccessKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAccessKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAccessKeyRequest(val *DeleteAccessKeyRequest) *NullableDeleteAccessKeyRequest {
	return &NullableDeleteAccessKeyRequest{value: val, isSet: true}
}

func (v NullableDeleteAccessKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAccessKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteAccessKeyResponse struct for DeleteAccessKeyResponse
type DeleteAccessKeyResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteAccessKeyResponse instantiates a new DeleteAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAccessKeyResponse() *DeleteAccessKeyResponse {
	this := DeleteAccessKeyResponse{}
	return &this
}

// NewDeleteAccessKeyResponseWithDefaults instantiates a new DeleteAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAccessKeyResponseWithDefaults() *DeleteAccessKeyResponse {
	this := DeleteAccessKeyResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteAccessKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAccessKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteAccessKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteAccessKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteAccessKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteAccessKeyResponse struct {
	value *DeleteAccessKeyResponse
	isSet bool
}

func (v NullableDeleteAccessKeyResponse) Get() *DeleteAccessKeyResponse {
	return v.value
}

func (v *NullableDeleteAccessKeyResponse) Set(val *DeleteAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAccessKeyResponse(val *DeleteAccessKeyResponse) *NullableDeleteAccessKeyResponse {
	return &NullableDeleteAccessKeyResponse{value: val, isSet: true}
}

func (v NullableDeleteAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteClientGatewayRequest struct for DeleteClientGatewayRequest
type DeleteClientGatewayRequest struct {
	// The ID of the client gateway you want to delete.
	ClientGatewayId string `json:"ClientGatewayId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewDeleteClientGatewayRequest instantiates a new DeleteClientGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteClientGatewayRequest(clientGatewayId string, ) *DeleteClientGatewayRequest {
	this := DeleteClientGatewayRequest{}
	this.ClientGatewayId = clientGatewayId
	return &this
}

// NewDeleteClientGatewayRequestWithDefaults instantiates a new DeleteClientGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteClientGatewayRequestWithDefaults() *DeleteClientGatewayRequest {
	this := DeleteClientGatewayRequest{}
	return &this
}

// GetClientGatewayId returns the ClientGatewayId field value
func (o *DeleteClientGatewayRequest) GetClientGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ClientGatewayId
}

// GetClientGatewayIdOk returns a tuple with the ClientGatewayId field value
// and a boolean to check if the value has been set.
func (o *DeleteClientGatewayRequest) GetClientGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientGatewayId, true
}

// SetClientGatewayId sets field value
func (o *DeleteClientGatewayRequest) SetClientGatewayId(v string) {
	o.ClientGatewayId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteClientGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteClientGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteClientGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteClientGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o DeleteClientGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ClientGatewayId"] = o.ClientGatewayId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteClientGatewayRequest struct {
	value *DeleteClientGatewayRequest
	isSet bool
}

func (v NullableDeleteClientGatewayRequest) Get() *DeleteClientGatewayRequest {
	return v.value
}

func (v *NullableDeleteClientGatewayRequest) Set(val *DeleteClientGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteClientGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteClientGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteClientGatewayRequest(val *DeleteClientGatewayRequest) *NullableDeleteClientGatewayRequest {
	return &NullableDeleteClientGatewayRequest{value: val, isSet: true}
}

func (v NullableDeleteClientGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteClientGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteClientGatewayResponse struct for DeleteClientGatewayResponse
type DeleteClientGatewayResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteClientGatewayResponse instantiates a new DeleteClientGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteClientGatewayResponse() *DeleteClientGatewayResponse {
	this := DeleteClientGatewayResponse{}
	return &this
}

// NewDeleteClientGatewayResponseWithDefaults instantiates a new DeleteClientGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteClientGatewayResponseWithDefaults() *DeleteClientGatewayResponse {
	this := DeleteClientGatewayResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteClientGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteClientGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteClientGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteClientGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteClientGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteClientGatewayResponse struct {
	value *DeleteClientGatewayResponse
	isSet bool
}

func (v NullableDeleteClientGatewayResponse) Get() *DeleteClientGatewayResponse {
	return v.value
}

func (v *NullableDeleteClientGatewayResponse) Set(val *DeleteClientGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteClientGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteClientGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteClientGatewayResponse(val *DeleteClientGatewayResponse) *NullableDeleteClientGatewayResponse {
	return &NullableDeleteClientGatewayResponse{value: val, isSet: true}
}

func (v NullableDeleteClientGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteClientGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDhcpOptionsRequest struct for DeleteDhcpOptionsRequest
type DeleteDhcpOptionsRequest struct {
	// The ID of the DHCP options set you want to delete.
	DhcpOptionsSetId string `json:"DhcpOptionsSetId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewDeleteDhcpOptionsRequest instantiates a new DeleteDhcpOptionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDhcpOptionsRequest(dhcpOptionsSetId string, ) *DeleteDhcpOptionsRequest {
	this := DeleteDhcpOptionsRequest{}
	this.DhcpOptionsSetId = dhcpOptionsSetId
	return &this
}

// NewDeleteDhcpOptionsRequestWithDefaults instantiates a new DeleteDhcpOptionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDhcpOptionsRequestWithDefaults() *DeleteDhcpOptionsRequest {
	this := DeleteDhcpOptionsRequest{}
	return &this
}

// GetDhcpOptionsSetId returns the DhcpOptionsSetId field value
func (o *DeleteDhcpOptionsRequest) GetDhcpOptionsSetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DhcpOptionsSetId
}

// GetDhcpOptionsSetIdOk returns a tuple with the DhcpOptionsSetId field value
// and a boolean to check if the value has been set.
func (o *DeleteDhcpOptionsRequest) GetDhcpOptionsSetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DhcpOptionsSetId, true
}

// SetDhcpOptionsSetId sets field value
func (o *DeleteDhcpOptionsRequest) SetDhcpOptionsSetId(v string) {
	o.DhcpOptionsSetId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteDhcpOptionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDhcpOptionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteDhcpOptionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteDhcpOptionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o DeleteDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DhcpOptionsSetId"] = o.DhcpOptionsSetId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDhcpOptionsRequest struct {
	value *DeleteDhcpOptionsRequest
	isSet bool
}

func (v NullableDeleteDhcpOptionsRequest) Get() *DeleteDhcpOptionsRequest {
	return v.value
}

func (v *NullableDeleteDhcpOptionsRequest) Set(val *DeleteDhcpOptionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDhcpOptionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDhcpOptionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDhcpOptionsRequest(val *DeleteDhcpOptionsRequest) *NullableDeleteDhcpOptionsRequest {
	return &NullableDeleteDhcpOptionsRequest{value: val, isSet: true}
}

func (v NullableDeleteDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDhcpOptionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDhcpOptionsResponse struct for DeleteDhcpOptionsResponse
type DeleteDhcpOptionsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteDhcpOptionsResponse instantiates a new DeleteDhcpOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDhcpOptionsResponse() *DeleteDhcpOptionsResponse {
	this := DeleteDhcpOptionsResponse{}
	return &this
}

// NewDeleteDhcpOptionsResponseWithDefaults instantiates a new DeleteDhcpOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDhcpOptionsResponseWithDefaults() *DeleteDhcpOptionsResponse {
	this := DeleteDhcpOptionsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteDhcpOptionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDhcpOptionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteDhcpOptionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteDhcpOptionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDhcpOptionsResponse struct {
	value *DeleteDhcpOptionsResponse
	isSet bool
}

func (v NullableDeleteDhcpOptionsResponse) Get() *DeleteDhcpOptionsResponse {
	return v.value
}

func (v *NullableDeleteDhcpOptionsResponse) Set(val *DeleteDhcpOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDhcpOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDhcpOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDhcpOptionsResponse(val *DeleteDhcpOptionsResponse) *NullableDeleteDhcpOptionsResponse {
	return &NullableDeleteDhcpOptionsResponse{value: val, isSet: true}
}

func (v NullableDeleteDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDhcpOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDirectLinkInterfaceRequest struct for DeleteDirectLinkInterfaceRequest
type DeleteDirectLinkInterfaceRequest struct {
	// The ID of the DirectLink interface you want to delete.
	DirectLinkInterfaceId string `json:"DirectLinkInterfaceId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewDeleteDirectLinkInterfaceRequest instantiates a new DeleteDirectLinkInterfaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDirectLinkInterfaceRequest(directLinkInterfaceId string, ) *DeleteDirectLinkInterfaceRequest {
	this := DeleteDirectLinkInterfaceRequest{}
	this.DirectLinkInterfaceId = directLinkInterfaceId
	return &this
}

// NewDeleteDirectLinkInterfaceRequestWithDefaults instantiates a new DeleteDirectLinkInterfaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDirectLinkInterfaceRequestWithDefaults() *DeleteDirectLinkInterfaceRequest {
	this := DeleteDirectLinkInterfaceRequest{}
	return &this
}

// GetDirectLinkInterfaceId returns the DirectLinkInterfaceId field value
func (o *DeleteDirectLinkInterfaceRequest) GetDirectLinkInterfaceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DirectLinkInterfaceId
}

// GetDirectLinkInterfaceIdOk returns a tuple with the DirectLinkInterfaceId field value
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkInterfaceRequest) GetDirectLinkInterfaceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkInterfaceId, true
}

// SetDirectLinkInterfaceId sets field value
func (o *DeleteDirectLinkInterfaceRequest) SetDirectLinkInterfaceId(v string) {
	o.DirectLinkInterfaceId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteDirectLinkInterfaceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkInterfaceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteDirectLinkInterfaceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteDirectLinkInterfaceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o DeleteDirectLinkInterfaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DirectLinkInterfaceId"] = o.DirectLinkInterfaceId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDirectLinkInterfaceRequest struct {
	value *DeleteDirectLinkInterfaceRequest
	isSet bool
}

func (v NullableDeleteDirectLinkInterfaceRequest) Get() *DeleteDirectLinkInterfaceRequest {
	return v.value
}

func (v *NullableDeleteDirectLinkInterfaceRequest) Set(val *DeleteDirectLinkInterfaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDirectLinkInterfaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDirectLinkInterfaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDirectLinkInterfaceRequest(val *DeleteDirectLinkInterfaceRequest) *NullableDeleteDirectLinkInterfaceRequest {
	return &NullableDeleteDirectLinkInterfaceRequest{value: val, isSet: true}
}

func (v NullableDeleteDirectLinkInterfaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDirectLinkInterfaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDirectLinkInterfaceResponse struct for DeleteDirectLinkInterfaceResponse
type DeleteDirectLinkInterfaceResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteDirectLinkInterfaceResponse instantiates a new DeleteDirectLinkInterfaceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDirectLinkInterfaceResponse() *DeleteDirectLinkInterfaceResponse {
	this := DeleteDirectLinkInterfaceResponse{}
	return &this
}

// NewDeleteDirectLinkInterfaceResponseWithDefaults instantiates a new DeleteDirectLinkInterfaceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDirectLinkInterfaceResponseWithDefaults() *DeleteDirectLinkInterfaceResponse {
	this := DeleteDirectLinkInterfaceResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteDirectLinkInterfaceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkInterfaceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteDirectLinkInterfaceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteDirectLinkInterfaceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteDirectLinkInterfaceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDirectLinkInterfaceResponse struct {
	value *DeleteDirectLinkInterfaceResponse
	isSet bool
}

func (v NullableDeleteDirectLinkInterfaceResponse) Get() *DeleteDirectLinkInterfaceResponse {
	return v.value
}

func (v *NullableDeleteDirectLinkInterfaceResponse) Set(val *DeleteDirectLinkInterfaceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDirectLinkInterfaceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDirectLinkInterfaceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDirectLinkInterfaceResponse(val *DeleteDirectLinkInterfaceResponse) *NullableDeleteDirectLinkInterfaceResponse {
	return &NullableDeleteDirectLinkInterfaceResponse{value: val, isSet: true}
}

func (v NullableDeleteDirectLinkInterfaceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDirectLinkInterfaceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDirectLinkRequest struct for DeleteDirectLinkRequest
type DeleteDirectLinkRequest struct {
	// The ID of the DirectLink you want to delete.
	DirectLinkId string `json:"DirectLinkId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewDeleteDirectLinkRequest instantiates a new DeleteDirectLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDirectLinkRequest(directLinkId string, ) *DeleteDirectLinkRequest {
	this := DeleteDirectLinkRequest{}
	this.DirectLinkId = directLinkId
	return &this
}

// NewDeleteDirectLinkRequestWithDefaults instantiates a new DeleteDirectLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDirectLinkRequestWithDefaults() *DeleteDirectLinkRequest {
	this := DeleteDirectLinkRequest{}
	return &this
}

// GetDirectLinkId returns the DirectLinkId field value
func (o *DeleteDirectLinkRequest) GetDirectLinkId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DirectLinkId
}

// GetDirectLinkIdOk returns a tuple with the DirectLinkId field value
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkRequest) GetDirectLinkIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkId, true
}

// SetDirectLinkId sets field value
func (o *DeleteDirectLinkRequest) SetDirectLinkId(v string) {
	o.DirectLinkId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteDirectLinkRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteDirectLinkRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteDirectLinkRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o DeleteDirectLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DirectLinkId"] = o.DirectLinkId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDirectLinkRequest struct {
	value *DeleteDirectLinkRequest
	isSet bool
}

func (v NullableDeleteDirectLinkRequest) Get() *DeleteDirectLinkRequest {
	return v.value
}

func (v *NullableDeleteDirectLinkRequest) Set(val *DeleteDirectLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDirectLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDirectLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDirectLinkRequest(val *DeleteDirectLinkRequest) *NullableDeleteDirectLinkRequest {
	return &NullableDeleteDirectLinkRequest{value: val, isSet: true}
}

func (v NullableDeleteDirectLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDirectLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteDirectLinkResponse struct for DeleteDirectLinkResponse
type DeleteDirectLinkResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteDirectLinkResponse instantiates a new DeleteDirectLinkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDirectLinkResponse() *DeleteDirectLinkResponse {
	this := DeleteDirectLinkResponse{}
	return &this
}

// NewDeleteDirectLinkResponseWithDefaults instantiates a new DeleteDirectLinkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDirectLinkResponseWithDefaults() *DeleteDirectLinkResponse {
	this := DeleteDirectLinkResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteDirectLinkResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDirectLinkResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteDirectLinkResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteDirectLinkResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteDirectLinkResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteDirectLinkResponse struct {
	value *DeleteDirectLinkResponse
	isSet bool
}

func (v NullableDeleteDirectLinkResponse) Get() *DeleteDirectLinkResponse {
	return v.value
}

func (v *NullableDeleteDirectLinkResponse) Set(val *DeleteDirectLinkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDirectLinkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDirectLinkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDirectLinkResponse(val *DeleteDirectLinkResponse) *NullableDeleteDirectLinkResponse {
	return &NullableDeleteDirectLinkResponse{value: val, isSet: true}
}

func (v NullableDeleteDirectLinkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDirectLinkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteExportTaskRequest struct for DeleteExportTaskRequest
type DeleteExportTaskRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the export task to delete.
	ExportTaskId string `json:"ExportTaskId"`
}

// NewDeleteExportTaskRequest instantiates a new DeleteExportTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteExportTaskRequest(exportTaskId string, ) *DeleteExportTaskRequest {
	this := DeleteExportTaskRequest{}
	this.ExportTaskId = exportTaskId
	return &this
}

// NewDeleteExportTaskRequestWithDefaults instantiates a new DeleteExportTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteExportTaskRequestWithDefaults() *DeleteExportTaskRequest {
	this := DeleteExportTaskRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteExportTaskRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteExportTaskRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteExportTaskRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteExportTaskRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetExportTaskId returns the ExportTaskId field value
func (o *DeleteExportTaskRequest) GetExportTaskId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ExportTaskId
}

// GetExportTaskIdOk returns a tuple with the ExportTaskId field value
// and a boolean to check if the value has been set.
func (o *DeleteExportTaskRequest) GetExportTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExportTaskId, true
}

// SetExportTaskId sets field value
func (o *DeleteExportTaskRequest) SetExportTaskId(v string) {
	o.ExportTaskId = v
}

func (o DeleteExportTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ExportTaskId"] = o.ExportTaskId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteExportTaskRequest struct {
	value *DeleteExportTaskRequest
	isSet bool
}

func (v NullableDeleteExportTaskRequest) Get() *DeleteExportTaskRequest {
	return v.value
}

func (v *NullableDeleteExportTaskRequest) Set(val *DeleteExportTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteExportTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteExportTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteExportTaskRequest(val *DeleteExportTaskRequest) *NullableDeleteExportTaskRequest {
	return &NullableDeleteExportTaskRequest{value: val, isSet: true}
}

func (v NullableDeleteExportTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteExportTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteExportTaskResponse struct for DeleteExportTaskResponse
type DeleteExportTaskResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteExportTaskResponse instantiates a new DeleteExportTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteExportTaskResponse() *DeleteExportTaskResponse {
	this := DeleteExportTaskResponse{}
	return &this
}

// NewDeleteExportTaskResponseWithDefaults instantiates a new DeleteExportTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteExportTaskResponseWithDefaults() *DeleteExportTaskResponse {
	this := DeleteExportTaskResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteExportTaskResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteExportTaskResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteExportTaskResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteExportTaskResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteExportTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteExportTaskResponse struct {
	value *DeleteExportTaskResponse
	isSet bool
}

func (v NullableDeleteExportTaskResponse) Get() *DeleteExportTaskResponse {
	return v.value
}

func (v *NullableDeleteExportTaskResponse) Set(val *DeleteExportTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteExportTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteExportTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteExportTaskResponse(val *DeleteExportTaskResponse) *NullableDeleteExportTaskResponse {
	return &NullableDeleteExportTaskResponse{value: val, isSet: true}
}

func (v NullableDeleteExportTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteExportTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteFlexibleGpuRequest struct for DeleteFlexibleGpuRequest
type DeleteFlexibleGpuRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the fGPU you want to delete.
	FlexibleGpuId string `json:"FlexibleGpuId"`
}

// NewDeleteFlexibleGpuRequest instantiates a new DeleteFlexibleGpuRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFlexibleGpuRequest(flexibleGpuId string, ) *DeleteFlexibleGpuRequest {
	this := DeleteFlexibleGpuRequest{}
	this.FlexibleGpuId = flexibleGpuId
	return &this
}

// NewDeleteFlexibleGpuRequestWithDefaults instantiates a new DeleteFlexibleGpuRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFlexibleGpuRequestWithDefaults() *DeleteFlexibleGpuRequest {
	this := DeleteFlexibleGpuRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteFlexibleGpuRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFlexibleGpuRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteFlexibleGpuRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteFlexibleGpuRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value
func (o *DeleteFlexibleGpuRequest) GetFlexibleGpuId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value
// and a boolean to check if the value has been set.
func (o *DeleteFlexibleGpuRequest) GetFlexibleGpuIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlexibleGpuId, true
}

// SetFlexibleGpuId sets field value
func (o *DeleteFlexibleGpuRequest) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = v
}

func (o DeleteFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["FlexibleGpuId"] = o.FlexibleGpuId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteFlexibleGpuRequest struct {
	value *DeleteFlexibleGpuRequest
	isSet bool
}

func (v NullableDeleteFlexibleGpuRequest) Get() *DeleteFlexibleGpuRequest {
	return v.value
}

func (v *NullableDeleteFlexibleGpuRequest) Set(val *DeleteFlexibleGpuRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFlexibleGpuRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFlexibleGpuRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFlexibleGpuRequest(val *DeleteFlexibleGpuRequest) *NullableDeleteFlexibleGpuRequest {
	return &NullableDeleteFlexibleGpuRequest{value: val, isSet: true}
}

func (v NullableDeleteFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFlexibleGpuRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteFlexibleGpuResponse struct for DeleteFlexibleGpuResponse
type DeleteFlexibleGpuResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteFlexibleGpuResponse instantiates a new DeleteFlexibleGpuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFlexibleGpuResponse() *DeleteFlexibleGpuResponse {
	this := DeleteFlexibleGpuResponse{}
	return &this
}

// NewDeleteFlexibleGpuResponseWithDefaults instantiates a new DeleteFlexibleGpuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFlexibleGpuResponseWithDefaults() *DeleteFlexibleGpuResponse {
	this := DeleteFlexibleGpuResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteFlexibleGpuResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFlexibleGpuResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteFlexibleGpuResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteFlexibleGpuResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteFlexibleGpuResponse struct {
	value *DeleteFlexibleGpuResponse
	isSet bool
}

func (v NullableDeleteFlexibleGpuResponse) Get() *DeleteFlexibleGpuResponse {
	return v.value
}

func (v *NullableDeleteFlexibleGpuResponse) Set(val *DeleteFlexibleGpuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFlexibleGpuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFlexibleGpuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFlexibleGpuResponse(val *DeleteFlexibleGpuResponse) *NullableDeleteFlexibleGpuResponse {
	return &NullableDeleteFlexibleGpuResponse{value: val, isSet: true}
}

func (v NullableDeleteFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFlexibleGpuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteImageRequest struct for DeleteImageRequest
type DeleteImageRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the OMI you want to delete.
	ImageId string `json:"ImageId"`
}

// NewDeleteImageRequest instantiates a new DeleteImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteImageRequest(imageId string, ) *DeleteImageRequest {
	this := DeleteImageRequest{}
	this.ImageId = imageId
	return &this
}

// NewDeleteImageRequestWithDefaults instantiates a new DeleteImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteImageRequestWithDefaults() *DeleteImageRequest {
	this := DeleteImageRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteImageRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteImageRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteImageRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteImageRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetImageId returns the ImageId field value
func (o *DeleteImageRequest) GetImageId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *DeleteImageRequest) GetImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *DeleteImageRequest) SetImageId(v string) {
	o.ImageId = v
}

func (o DeleteImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ImageId"] = o.ImageId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteImageRequest struct {
	value *DeleteImageRequest
	isSet bool
}

func (v NullableDeleteImageRequest) Get() *DeleteImageRequest {
	return v.value
}

func (v *NullableDeleteImageRequest) Set(val *DeleteImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteImageRequest(val *DeleteImageRequest) *NullableDeleteImageRequest {
	return &NullableDeleteImageRequest{value: val, isSet: true}
}

func (v NullableDeleteImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteImageResponse struct for DeleteImageResponse
type DeleteImageResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteImageResponse instantiates a new DeleteImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteImageResponse() *DeleteImageResponse {
	this := DeleteImageResponse{}
	return &this
}

// NewDeleteImageResponseWithDefaults instantiates a new DeleteImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteImageResponseWithDefaults() *DeleteImageResponse {
	this := DeleteImageResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteImageResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteImageResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteImageResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteImageResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteImageResponse struct {
	value *DeleteImageResponse
	isSet bool
}

func (v NullableDeleteImageResponse) Get() *DeleteImageResponse {
	return v.value
}

func (v *NullableDeleteImageResponse) Set(val *DeleteImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteImageResponse(val *DeleteImageResponse) *NullableDeleteImageResponse {
	return &NullableDeleteImageResponse{value: val, isSet: true}
}

func (v NullableDeleteImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteInternetServiceRequest struct for DeleteInternetServiceRequest
type DeleteInternetServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Internet service you want to delete.
	InternetServiceId string `json:"InternetServiceId"`
}

// NewDeleteInternetServiceRequest instantiates a new DeleteInternetServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteInternetServiceRequest(internetServiceId string, ) *DeleteInternetServiceRequest {
	this := DeleteInternetServiceRequest{}
	this.InternetServiceId = internetServiceId
	return &this
}

// NewDeleteInternetServiceRequestWithDefaults instantiates a new DeleteInternetServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteInternetServiceRequestWithDefaults() *DeleteInternetServiceRequest {
	this := DeleteInternetServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteInternetServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteInternetServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteInternetServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteInternetServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetInternetServiceId returns the InternetServiceId field value
func (o *DeleteInternetServiceRequest) GetInternetServiceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InternetServiceId
}

// GetInternetServiceIdOk returns a tuple with the InternetServiceId field value
// and a boolean to check if the value has been set.
func (o *DeleteInternetServiceRequest) GetInternetServiceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InternetServiceId, true
}

// SetInternetServiceId sets field value
func (o *DeleteInternetServiceRequest) SetInternetServiceId(v string) {
	o.InternetServiceId = v
}

func (o DeleteInternetServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["InternetServiceId"] = o.InternetServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteInternetServiceRequest struct {
	value *DeleteInternetServiceRequest
	isSet bool
}

func (v NullableDeleteInternetServiceRequest) Get() *DeleteInternetServiceRequest {
	return v.value
}

func (v *NullableDeleteInternetServiceRequest) Set(val *DeleteInternetServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteInternetServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteInternetServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteInternetServiceRequest(val *DeleteInternetServiceRequest) *NullableDeleteInternetServiceRequest {
	return &NullableDeleteInternetServiceRequest{value: val, isSet: true}
}

func (v NullableDeleteInternetServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteInternetServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteInternetServiceResponse struct for DeleteInternetServiceResponse
type DeleteInternetServiceResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteInternetServiceResponse instantiates a new DeleteInternetServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteInternetServiceResponse() *DeleteInternetServiceResponse {
	this := DeleteInternetServiceResponse{}
	return &this
}

// NewDeleteInternetServiceResponseWithDefaults instantiates a new DeleteInternetServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteInternetServiceResponseWithDefaults() *DeleteInternetServiceResponse {
	this := DeleteInternetServiceResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteInternetServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteInternetServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteInternetServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteInternetServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteInternetServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteInternetServiceResponse struct {
	value *DeleteInternetServiceResponse
	isSet bool
}

func (v NullableDeleteInternetServiceResponse) Get() *DeleteInternetServiceResponse {
	return v.value
}

func (v *NullableDeleteInternetServiceResponse) Set(val *DeleteInternetServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteInternetServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteInternetServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteInternetServiceResponse(val *DeleteInternetServiceResponse) *NullableDeleteInternetServiceResponse {
	return &NullableDeleteInternetServiceResponse{value: val, isSet: true}
}

func (v NullableDeleteInternetServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteInternetServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteKeypairRequest struct for DeleteKeypairRequest
type DeleteKeypairRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the keypair you want to delete.
	KeypairName string `json:"KeypairName"`
}

// NewDeleteKeypairRequest instantiates a new DeleteKeypairRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteKeypairRequest(keypairName string, ) *DeleteKeypairRequest {
	this := DeleteKeypairRequest{}
	this.KeypairName = keypairName
	return &this
}

// NewDeleteKeypairRequestWithDefaults instantiates a new DeleteKeypairRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteKeypairRequestWithDefaults() *DeleteKeypairRequest {
	this := DeleteKeypairRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteKeypairRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteKeypairRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteKeypairRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteKeypairRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetKeypairName returns the KeypairName field value
func (o *DeleteKeypairRequest) GetKeypairName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value
// and a boolean to check if the value has been set.
func (o *DeleteKeypairRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeypairName, true
}

// SetKeypairName sets field value
func (o *DeleteKeypairRequest) SetKeypairName(v string) {
	o.KeypairName = v
}

func (o DeleteKeypairRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["KeypairName"] = o.KeypairName
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteKeypairRequest struct {
	value *DeleteKeypairRequest
	isSet bool
}

func (v NullableDeleteKeypairRequest) Get() *DeleteKeypairRequest {
	return v.value
}

func (v *NullableDeleteKeypairRequest) Set(val *DeleteKeypairRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteKeypairRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteKeypairRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteKeypairRequest(val *DeleteKeypairRequest) *NullableDeleteKeypairRequest {
	return &NullableDeleteKeypairRequest{value: val, isSet: true}
}

func (v NullableDeleteKeypairRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteKeypairRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteKeypairResponse struct for DeleteKeypairResponse
type DeleteKeypairResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteKeypairResponse instantiates a new DeleteKeypairResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteKeypairResponse() *DeleteKeypairResponse {
	this := DeleteKeypairResponse{}
	return &this
}

// NewDeleteKeypairResponseWithDefaults instantiates a new DeleteKeypairResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteKeypairResponseWithDefaults() *DeleteKeypairResponse {
	this := DeleteKeypairResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteKeypairResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteKeypairResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteKeypairResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteKeypairResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteKeypairResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteKeypairResponse struct {
	value *DeleteKeypairResponse
	isSet bool
}

func (v NullableDeleteKeypairResponse) Get() *DeleteKeypairResponse {
	return v.value
}

func (v *NullableDeleteKeypairResponse) Set(val *DeleteKeypairResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteKeypairResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteKeypairResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteKeypairResponse(val *DeleteKeypairResponse) *NullableDeleteKeypairResponse {
	return &NullableDeleteKeypairResponse{value: val, isSet: true}
}

func (v NullableDeleteKeypairResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteKeypairResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteListenerRuleRequest struct for DeleteListenerRuleRequest
type DeleteListenerRuleRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the rule you want to delete.
	ListenerRuleName string `json:"ListenerRuleName"`
}

// NewDeleteListenerRuleRequest instantiates a new DeleteListenerRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteListenerRuleRequest(listenerRuleName string, ) *DeleteListenerRuleRequest {
	this := DeleteListenerRuleRequest{}
	this.ListenerRuleName = listenerRuleName
	return &this
}

// NewDeleteListenerRuleRequestWithDefaults instantiates a new DeleteListenerRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteListenerRuleRequestWithDefaults() *DeleteListenerRuleRequest {
	this := DeleteListenerRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteListenerRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteListenerRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteListenerRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteListenerRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetListenerRuleName returns the ListenerRuleName field value
func (o *DeleteListenerRuleRequest) GetListenerRuleName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value
// and a boolean to check if the value has been set.
func (o *DeleteListenerRuleRequest) GetListenerRuleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ListenerRuleName, true
}

// SetListenerRuleName sets field value
func (o *DeleteListenerRuleRequest) SetListenerRuleName(v string) {
	o.ListenerRuleName = v
}

func (o DeleteListenerRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ListenerRuleName"] = o.ListenerRuleName
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteListenerRuleRequest struct {
	value *DeleteListenerRuleRequest
	isSet bool
}

func (v NullableDeleteListenerRuleRequest) Get() *DeleteListenerRuleRequest {
	return v.value
}

func (v *NullableDeleteListenerRuleRequest) Set(val *DeleteListenerRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteListenerRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteListenerRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteListenerRuleRequest(val *DeleteListenerRuleRequest) *NullableDeleteListenerRuleRequest {
	return &NullableDeleteListenerRuleRequest{value: val, isSet: true}
}

func (v NullableDeleteListenerRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteListenerRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteListenerRuleResponse struct for DeleteListenerRuleResponse
type DeleteListenerRuleResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteListenerRuleResponse instantiates a new DeleteListenerRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteListenerRuleResponse() *DeleteListenerRuleResponse {
	this := DeleteListenerRuleResponse{}
	return &this
}

// NewDeleteListenerRuleResponseWithDefaults instantiates a new DeleteListenerRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteListenerRuleResponseWithDefaults() *DeleteListenerRuleResponse {
	this := DeleteListenerRuleResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteListenerRuleResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteListenerRuleResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteListenerRuleResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteListenerRuleResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteListenerRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteListenerRuleResponse struct {
	value *DeleteListenerRuleResponse
	isSet bool
}

func (v NullableDeleteListenerRuleResponse) Get() *DeleteListenerRuleResponse {
	return v.value
}

func (v *NullableDeleteListenerRuleResponse) Set(val *DeleteListenerRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteListenerRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteListenerRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteListenerRuleResponse(val *DeleteListenerRuleResponse) *NullableDeleteListenerRuleResponse {
	return &NullableDeleteListenerRuleResponse{value: val, isSet: true}
}

func (v NullableDeleteListenerRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteListenerRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerListenersRequest struct for DeleteLoadBalancerListenersRequest
type DeleteLoadBalancerListenersRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer for which you want to delete listeners.
	LoadBalancerName string `json:"LoadBalancerName"`
	// One or more port numbers of the listeners you want to delete.
	LoadBalancerPorts []int32 `json:"LoadBalancerPorts"`
}

// NewDeleteLoadBalancerListenersRequest instantiates a new DeleteLoadBalancerListenersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerListenersRequest(loadBalancerName string, loadBalancerPorts []int32, ) *DeleteLoadBalancerListenersRequest {
	this := DeleteLoadBalancerListenersRequest{}
	this.LoadBalancerName = loadBalancerName
	this.LoadBalancerPorts = loadBalancerPorts
	return &this
}

// NewDeleteLoadBalancerListenersRequestWithDefaults instantiates a new DeleteLoadBalancerListenersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerListenersRequestWithDefaults() *DeleteLoadBalancerListenersRequest {
	this := DeleteLoadBalancerListenersRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteLoadBalancerListenersRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerListenersRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteLoadBalancerListenersRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteLoadBalancerListenersRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *DeleteLoadBalancerListenersRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerListenersRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *DeleteLoadBalancerListenersRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetLoadBalancerPorts returns the LoadBalancerPorts field value
func (o *DeleteLoadBalancerListenersRequest) GetLoadBalancerPorts() []int32 {
	if o == nil  {
		var ret []int32
		return ret
	}

	return o.LoadBalancerPorts
}

// GetLoadBalancerPortsOk returns a tuple with the LoadBalancerPorts field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerListenersRequest) GetLoadBalancerPortsOk() (*[]int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerPorts, true
}

// SetLoadBalancerPorts sets field value
func (o *DeleteLoadBalancerListenersRequest) SetLoadBalancerPorts(v []int32) {
	o.LoadBalancerPorts = v
}

func (o DeleteLoadBalancerListenersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if true {
		toSerialize["LoadBalancerPorts"] = o.LoadBalancerPorts
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerListenersRequest struct {
	value *DeleteLoadBalancerListenersRequest
	isSet bool
}

func (v NullableDeleteLoadBalancerListenersRequest) Get() *DeleteLoadBalancerListenersRequest {
	return v.value
}

func (v *NullableDeleteLoadBalancerListenersRequest) Set(val *DeleteLoadBalancerListenersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerListenersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerListenersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerListenersRequest(val *DeleteLoadBalancerListenersRequest) *NullableDeleteLoadBalancerListenersRequest {
	return &NullableDeleteLoadBalancerListenersRequest{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerListenersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerListenersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerListenersResponse struct for DeleteLoadBalancerListenersResponse
type DeleteLoadBalancerListenersResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteLoadBalancerListenersResponse instantiates a new DeleteLoadBalancerListenersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerListenersResponse() *DeleteLoadBalancerListenersResponse {
	this := DeleteLoadBalancerListenersResponse{}
	return &this
}

// NewDeleteLoadBalancerListenersResponseWithDefaults instantiates a new DeleteLoadBalancerListenersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerListenersResponseWithDefaults() *DeleteLoadBalancerListenersResponse {
	this := DeleteLoadBalancerListenersResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *DeleteLoadBalancerListenersResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerListenersResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *DeleteLoadBalancerListenersResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *DeleteLoadBalancerListenersResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteLoadBalancerListenersResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerListenersResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteLoadBalancerListenersResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteLoadBalancerListenersResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteLoadBalancerListenersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerListenersResponse struct {
	value *DeleteLoadBalancerListenersResponse
	isSet bool
}

func (v NullableDeleteLoadBalancerListenersResponse) Get() *DeleteLoadBalancerListenersResponse {
	return v.value
}

func (v *NullableDeleteLoadBalancerListenersResponse) Set(val *DeleteLoadBalancerListenersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerListenersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerListenersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerListenersResponse(val *DeleteLoadBalancerListenersResponse) *NullableDeleteLoadBalancerListenersResponse {
	return &NullableDeleteLoadBalancerListenersResponse{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerListenersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerListenersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerPolicyRequest struct for DeleteLoadBalancerPolicyRequest
type DeleteLoadBalancerPolicyRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer for which you want to delete a policy.
	LoadBalancerName string `json:"LoadBalancerName"`
	// The name of the policy you want to delete.
	PolicyName string `json:"PolicyName"`
}

// NewDeleteLoadBalancerPolicyRequest instantiates a new DeleteLoadBalancerPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerPolicyRequest(loadBalancerName string, policyName string, ) *DeleteLoadBalancerPolicyRequest {
	this := DeleteLoadBalancerPolicyRequest{}
	this.LoadBalancerName = loadBalancerName
	this.PolicyName = policyName
	return &this
}

// NewDeleteLoadBalancerPolicyRequestWithDefaults instantiates a new DeleteLoadBalancerPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerPolicyRequestWithDefaults() *DeleteLoadBalancerPolicyRequest {
	this := DeleteLoadBalancerPolicyRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteLoadBalancerPolicyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerPolicyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteLoadBalancerPolicyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteLoadBalancerPolicyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *DeleteLoadBalancerPolicyRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerPolicyRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *DeleteLoadBalancerPolicyRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetPolicyName returns the PolicyName field value
func (o *DeleteLoadBalancerPolicyRequest) GetPolicyName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerPolicyRequest) GetPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *DeleteLoadBalancerPolicyRequest) SetPolicyName(v string) {
	o.PolicyName = v
}

func (o DeleteLoadBalancerPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if true {
		toSerialize["PolicyName"] = o.PolicyName
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerPolicyRequest struct {
	value *DeleteLoadBalancerPolicyRequest
	isSet bool
}

func (v NullableDeleteLoadBalancerPolicyRequest) Get() *DeleteLoadBalancerPolicyRequest {
	return v.value
}

func (v *NullableDeleteLoadBalancerPolicyRequest) Set(val *DeleteLoadBalancerPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerPolicyRequest(val *DeleteLoadBalancerPolicyRequest) *NullableDeleteLoadBalancerPolicyRequest {
	return &NullableDeleteLoadBalancerPolicyRequest{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerPolicyResponse struct for DeleteLoadBalancerPolicyResponse
type DeleteLoadBalancerPolicyResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteLoadBalancerPolicyResponse instantiates a new DeleteLoadBalancerPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerPolicyResponse() *DeleteLoadBalancerPolicyResponse {
	this := DeleteLoadBalancerPolicyResponse{}
	return &this
}

// NewDeleteLoadBalancerPolicyResponseWithDefaults instantiates a new DeleteLoadBalancerPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerPolicyResponseWithDefaults() *DeleteLoadBalancerPolicyResponse {
	this := DeleteLoadBalancerPolicyResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *DeleteLoadBalancerPolicyResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerPolicyResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *DeleteLoadBalancerPolicyResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *DeleteLoadBalancerPolicyResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteLoadBalancerPolicyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerPolicyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteLoadBalancerPolicyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteLoadBalancerPolicyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteLoadBalancerPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerPolicyResponse struct {
	value *DeleteLoadBalancerPolicyResponse
	isSet bool
}

func (v NullableDeleteLoadBalancerPolicyResponse) Get() *DeleteLoadBalancerPolicyResponse {
	return v.value
}

func (v *NullableDeleteLoadBalancerPolicyResponse) Set(val *DeleteLoadBalancerPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerPolicyResponse(val *DeleteLoadBalancerPolicyResponse) *NullableDeleteLoadBalancerPolicyResponse {
	return &NullableDeleteLoadBalancerPolicyResponse{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerRequest struct for DeleteLoadBalancerRequest
type DeleteLoadBalancerRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer you want to delete.
	LoadBalancerName string `json:"LoadBalancerName"`
}

// NewDeleteLoadBalancerRequest instantiates a new DeleteLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerRequest(loadBalancerName string, ) *DeleteLoadBalancerRequest {
	this := DeleteLoadBalancerRequest{}
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewDeleteLoadBalancerRequestWithDefaults instantiates a new DeleteLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerRequestWithDefaults() *DeleteLoadBalancerRequest {
	this := DeleteLoadBalancerRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteLoadBalancerRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteLoadBalancerRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteLoadBalancerRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *DeleteLoadBalancerRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *DeleteLoadBalancerRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

func (o DeleteLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerRequest struct {
	value *DeleteLoadBalancerRequest
	isSet bool
}

func (v NullableDeleteLoadBalancerRequest) Get() *DeleteLoadBalancerRequest {
	return v.value
}

func (v *NullableDeleteLoadBalancerRequest) Set(val *DeleteLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerRequest(val *DeleteLoadBalancerRequest) *NullableDeleteLoadBalancerRequest {
	return &NullableDeleteLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerResponse struct for DeleteLoadBalancerResponse
type DeleteLoadBalancerResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteLoadBalancerResponse instantiates a new DeleteLoadBalancerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerResponse() *DeleteLoadBalancerResponse {
	this := DeleteLoadBalancerResponse{}
	return &this
}

// NewDeleteLoadBalancerResponseWithDefaults instantiates a new DeleteLoadBalancerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerResponseWithDefaults() *DeleteLoadBalancerResponse {
	this := DeleteLoadBalancerResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteLoadBalancerResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteLoadBalancerResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteLoadBalancerResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerResponse struct {
	value *DeleteLoadBalancerResponse
	isSet bool
}

func (v NullableDeleteLoadBalancerResponse) Get() *DeleteLoadBalancerResponse {
	return v.value
}

func (v *NullableDeleteLoadBalancerResponse) Set(val *DeleteLoadBalancerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerResponse(val *DeleteLoadBalancerResponse) *NullableDeleteLoadBalancerResponse {
	return &NullableDeleteLoadBalancerResponse{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerTagsRequest struct for DeleteLoadBalancerTagsRequest
type DeleteLoadBalancerTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more load balancer names.
	LoadBalancerNames []string `json:"LoadBalancerNames"`
	// One or more tags to delete from the load balancers.
	Tags []ResourceLoadBalancerTag `json:"Tags"`
}

// NewDeleteLoadBalancerTagsRequest instantiates a new DeleteLoadBalancerTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerTagsRequest(loadBalancerNames []string, tags []ResourceLoadBalancerTag, ) *DeleteLoadBalancerTagsRequest {
	this := DeleteLoadBalancerTagsRequest{}
	this.LoadBalancerNames = loadBalancerNames
	this.Tags = tags
	return &this
}

// NewDeleteLoadBalancerTagsRequestWithDefaults instantiates a new DeleteLoadBalancerTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerTagsRequestWithDefaults() *DeleteLoadBalancerTagsRequest {
	this := DeleteLoadBalancerTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteLoadBalancerTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteLoadBalancerTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteLoadBalancerTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerNames returns the LoadBalancerNames field value
func (o *DeleteLoadBalancerTagsRequest) GetLoadBalancerNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.LoadBalancerNames
}

// GetLoadBalancerNamesOk returns a tuple with the LoadBalancerNames field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerTagsRequest) GetLoadBalancerNamesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerNames, true
}

// SetLoadBalancerNames sets field value
func (o *DeleteLoadBalancerTagsRequest) SetLoadBalancerNames(v []string) {
	o.LoadBalancerNames = v
}

// GetTags returns the Tags field value
func (o *DeleteLoadBalancerTagsRequest) GetTags() []ResourceLoadBalancerTag {
	if o == nil  {
		var ret []ResourceLoadBalancerTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerTagsRequest) GetTagsOk() (*[]ResourceLoadBalancerTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *DeleteLoadBalancerTagsRequest) SetTags(v []ResourceLoadBalancerTag) {
	o.Tags = v
}

func (o DeleteLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerNames"] = o.LoadBalancerNames
	}
	if true {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerTagsRequest struct {
	value *DeleteLoadBalancerTagsRequest
	isSet bool
}

func (v NullableDeleteLoadBalancerTagsRequest) Get() *DeleteLoadBalancerTagsRequest {
	return v.value
}

func (v *NullableDeleteLoadBalancerTagsRequest) Set(val *DeleteLoadBalancerTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerTagsRequest(val *DeleteLoadBalancerTagsRequest) *NullableDeleteLoadBalancerTagsRequest {
	return &NullableDeleteLoadBalancerTagsRequest{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteLoadBalancerTagsResponse struct for DeleteLoadBalancerTagsResponse
type DeleteLoadBalancerTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteLoadBalancerTagsResponse instantiates a new DeleteLoadBalancerTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteLoadBalancerTagsResponse() *DeleteLoadBalancerTagsResponse {
	this := DeleteLoadBalancerTagsResponse{}
	return &this
}

// NewDeleteLoadBalancerTagsResponseWithDefaults instantiates a new DeleteLoadBalancerTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteLoadBalancerTagsResponseWithDefaults() *DeleteLoadBalancerTagsResponse {
	this := DeleteLoadBalancerTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteLoadBalancerTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteLoadBalancerTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteLoadBalancerTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteLoadBalancerTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteLoadBalancerTagsResponse struct {
	value *DeleteLoadBalancerTagsResponse
	isSet bool
}

func (v NullableDeleteLoadBalancerTagsResponse) Get() *DeleteLoadBalancerTagsResponse {
	return v.value
}

func (v *NullableDeleteLoadBalancerTagsResponse) Set(val *DeleteLoadBalancerTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteLoadBalancerTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteLoadBalancerTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteLoadBalancerTagsResponse(val *DeleteLoadBalancerTagsResponse) *NullableDeleteLoadBalancerTagsResponse {
	return &NullableDeleteLoadBalancerTagsResponse{value: val, isSet: true}
}

func (v NullableDeleteLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteLoadBalancerTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNatServiceRequest struct for DeleteNatServiceRequest
type DeleteNatServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the NAT service you want to delete.
	NatServiceId string `json:"NatServiceId"`
}

// NewDeleteNatServiceRequest instantiates a new DeleteNatServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNatServiceRequest(natServiceId string, ) *DeleteNatServiceRequest {
	this := DeleteNatServiceRequest{}
	this.NatServiceId = natServiceId
	return &this
}

// NewDeleteNatServiceRequestWithDefaults instantiates a new DeleteNatServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNatServiceRequestWithDefaults() *DeleteNatServiceRequest {
	this := DeleteNatServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteNatServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNatServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteNatServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteNatServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNatServiceId returns the NatServiceId field value
func (o *DeleteNatServiceRequest) GetNatServiceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NatServiceId
}

// GetNatServiceIdOk returns a tuple with the NatServiceId field value
// and a boolean to check if the value has been set.
func (o *DeleteNatServiceRequest) GetNatServiceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NatServiceId, true
}

// SetNatServiceId sets field value
func (o *DeleteNatServiceRequest) SetNatServiceId(v string) {
	o.NatServiceId = v
}

func (o DeleteNatServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NatServiceId"] = o.NatServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNatServiceRequest struct {
	value *DeleteNatServiceRequest
	isSet bool
}

func (v NullableDeleteNatServiceRequest) Get() *DeleteNatServiceRequest {
	return v.value
}

func (v *NullableDeleteNatServiceRequest) Set(val *DeleteNatServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNatServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNatServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNatServiceRequest(val *DeleteNatServiceRequest) *NullableDeleteNatServiceRequest {
	return &NullableDeleteNatServiceRequest{value: val, isSet: true}
}

func (v NullableDeleteNatServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNatServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNatServiceResponse struct for DeleteNatServiceResponse
type DeleteNatServiceResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteNatServiceResponse instantiates a new DeleteNatServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNatServiceResponse() *DeleteNatServiceResponse {
	this := DeleteNatServiceResponse{}
	return &this
}

// NewDeleteNatServiceResponseWithDefaults instantiates a new DeleteNatServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNatServiceResponseWithDefaults() *DeleteNatServiceResponse {
	this := DeleteNatServiceResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteNatServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNatServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteNatServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteNatServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteNatServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNatServiceResponse struct {
	value *DeleteNatServiceResponse
	isSet bool
}

func (v NullableDeleteNatServiceResponse) Get() *DeleteNatServiceResponse {
	return v.value
}

func (v *NullableDeleteNatServiceResponse) Set(val *DeleteNatServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNatServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNatServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNatServiceResponse(val *DeleteNatServiceResponse) *NullableDeleteNatServiceResponse {
	return &NullableDeleteNatServiceResponse{value: val, isSet: true}
}

func (v NullableDeleteNatServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNatServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetAccessPointRequest struct for DeleteNetAccessPointRequest
type DeleteNetAccessPointRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net access point.
	NetAccessPointId string `json:"NetAccessPointId"`
}

// NewDeleteNetAccessPointRequest instantiates a new DeleteNetAccessPointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetAccessPointRequest(netAccessPointId string, ) *DeleteNetAccessPointRequest {
	this := DeleteNetAccessPointRequest{}
	this.NetAccessPointId = netAccessPointId
	return &this
}

// NewDeleteNetAccessPointRequestWithDefaults instantiates a new DeleteNetAccessPointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetAccessPointRequestWithDefaults() *DeleteNetAccessPointRequest {
	this := DeleteNetAccessPointRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteNetAccessPointRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetAccessPointRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteNetAccessPointRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteNetAccessPointRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetAccessPointId returns the NetAccessPointId field value
func (o *DeleteNetAccessPointRequest) GetNetAccessPointId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetAccessPointId
}

// GetNetAccessPointIdOk returns a tuple with the NetAccessPointId field value
// and a boolean to check if the value has been set.
func (o *DeleteNetAccessPointRequest) GetNetAccessPointIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetAccessPointId, true
}

// SetNetAccessPointId sets field value
func (o *DeleteNetAccessPointRequest) SetNetAccessPointId(v string) {
	o.NetAccessPointId = v
}

func (o DeleteNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetAccessPointId"] = o.NetAccessPointId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetAccessPointRequest struct {
	value *DeleteNetAccessPointRequest
	isSet bool
}

func (v NullableDeleteNetAccessPointRequest) Get() *DeleteNetAccessPointRequest {
	return v.value
}

func (v *NullableDeleteNetAccessPointRequest) Set(val *DeleteNetAccessPointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetAccessPointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetAccessPointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetAccessPointRequest(val *DeleteNetAccessPointRequest) *NullableDeleteNetAccessPointRequest {
	return &NullableDeleteNetAccessPointRequest{value: val, isSet: true}
}

func (v NullableDeleteNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetAccessPointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetAccessPointResponse struct for DeleteNetAccessPointResponse
type DeleteNetAccessPointResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteNetAccessPointResponse instantiates a new DeleteNetAccessPointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetAccessPointResponse() *DeleteNetAccessPointResponse {
	this := DeleteNetAccessPointResponse{}
	return &this
}

// NewDeleteNetAccessPointResponseWithDefaults instantiates a new DeleteNetAccessPointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetAccessPointResponseWithDefaults() *DeleteNetAccessPointResponse {
	this := DeleteNetAccessPointResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteNetAccessPointResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetAccessPointResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteNetAccessPointResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteNetAccessPointResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetAccessPointResponse struct {
	value *DeleteNetAccessPointResponse
	isSet bool
}

func (v NullableDeleteNetAccessPointResponse) Get() *DeleteNetAccessPointResponse {
	return v.value
}

func (v *NullableDeleteNetAccessPointResponse) Set(val *DeleteNetAccessPointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetAccessPointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetAccessPointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetAccessPointResponse(val *DeleteNetAccessPointResponse) *NullableDeleteNetAccessPointResponse {
	return &NullableDeleteNetAccessPointResponse{value: val, isSet: true}
}

func (v NullableDeleteNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetAccessPointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetPeeringRequest struct for DeleteNetPeeringRequest
type DeleteNetPeeringRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net peering connection you want to delete.
	NetPeeringId string `json:"NetPeeringId"`
}

// NewDeleteNetPeeringRequest instantiates a new DeleteNetPeeringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetPeeringRequest(netPeeringId string, ) *DeleteNetPeeringRequest {
	this := DeleteNetPeeringRequest{}
	this.NetPeeringId = netPeeringId
	return &this
}

// NewDeleteNetPeeringRequestWithDefaults instantiates a new DeleteNetPeeringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetPeeringRequestWithDefaults() *DeleteNetPeeringRequest {
	this := DeleteNetPeeringRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteNetPeeringRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetPeeringRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteNetPeeringRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteNetPeeringRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetPeeringId returns the NetPeeringId field value
func (o *DeleteNetPeeringRequest) GetNetPeeringId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value
// and a boolean to check if the value has been set.
func (o *DeleteNetPeeringRequest) GetNetPeeringIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetPeeringId, true
}

// SetNetPeeringId sets field value
func (o *DeleteNetPeeringRequest) SetNetPeeringId(v string) {
	o.NetPeeringId = v
}

func (o DeleteNetPeeringRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetPeeringRequest struct {
	value *DeleteNetPeeringRequest
	isSet bool
}

func (v NullableDeleteNetPeeringRequest) Get() *DeleteNetPeeringRequest {
	return v.value
}

func (v *NullableDeleteNetPeeringRequest) Set(val *DeleteNetPeeringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetPeeringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetPeeringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetPeeringRequest(val *DeleteNetPeeringRequest) *NullableDeleteNetPeeringRequest {
	return &NullableDeleteNetPeeringRequest{value: val, isSet: true}
}

func (v NullableDeleteNetPeeringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetPeeringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetPeeringResponse struct for DeleteNetPeeringResponse
type DeleteNetPeeringResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteNetPeeringResponse instantiates a new DeleteNetPeeringResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetPeeringResponse() *DeleteNetPeeringResponse {
	this := DeleteNetPeeringResponse{}
	return &this
}

// NewDeleteNetPeeringResponseWithDefaults instantiates a new DeleteNetPeeringResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetPeeringResponseWithDefaults() *DeleteNetPeeringResponse {
	this := DeleteNetPeeringResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteNetPeeringResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetPeeringResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteNetPeeringResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteNetPeeringResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteNetPeeringResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetPeeringResponse struct {
	value *DeleteNetPeeringResponse
	isSet bool
}

func (v NullableDeleteNetPeeringResponse) Get() *DeleteNetPeeringResponse {
	return v.value
}

func (v *NullableDeleteNetPeeringResponse) Set(val *DeleteNetPeeringResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetPeeringResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetPeeringResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetPeeringResponse(val *DeleteNetPeeringResponse) *NullableDeleteNetPeeringResponse {
	return &NullableDeleteNetPeeringResponse{value: val, isSet: true}
}

func (v NullableDeleteNetPeeringResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetPeeringResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetRequest struct for DeleteNetRequest
type DeleteNetRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net you want to delete.
	NetId string `json:"NetId"`
}

// NewDeleteNetRequest instantiates a new DeleteNetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetRequest(netId string, ) *DeleteNetRequest {
	this := DeleteNetRequest{}
	this.NetId = netId
	return &this
}

// NewDeleteNetRequestWithDefaults instantiates a new DeleteNetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetRequestWithDefaults() *DeleteNetRequest {
	this := DeleteNetRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteNetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteNetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteNetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *DeleteNetRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *DeleteNetRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *DeleteNetRequest) SetNetId(v string) {
	o.NetId = v
}

func (o DeleteNetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetRequest struct {
	value *DeleteNetRequest
	isSet bool
}

func (v NullableDeleteNetRequest) Get() *DeleteNetRequest {
	return v.value
}

func (v *NullableDeleteNetRequest) Set(val *DeleteNetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetRequest(val *DeleteNetRequest) *NullableDeleteNetRequest {
	return &NullableDeleteNetRequest{value: val, isSet: true}
}

func (v NullableDeleteNetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNetResponse struct for DeleteNetResponse
type DeleteNetResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteNetResponse instantiates a new DeleteNetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNetResponse() *DeleteNetResponse {
	this := DeleteNetResponse{}
	return &this
}

// NewDeleteNetResponseWithDefaults instantiates a new DeleteNetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNetResponseWithDefaults() *DeleteNetResponse {
	this := DeleteNetResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteNetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteNetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteNetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteNetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNetResponse struct {
	value *DeleteNetResponse
	isSet bool
}

func (v NullableDeleteNetResponse) Get() *DeleteNetResponse {
	return v.value
}

func (v *NullableDeleteNetResponse) Set(val *DeleteNetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNetResponse(val *DeleteNetResponse) *NullableDeleteNetResponse {
	return &NullableDeleteNetResponse{value: val, isSet: true}
}

func (v NullableDeleteNetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNicRequest struct for DeleteNicRequest
type DeleteNicRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the NIC you want to delete.
	NicId string `json:"NicId"`
}

// NewDeleteNicRequest instantiates a new DeleteNicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNicRequest(nicId string, ) *DeleteNicRequest {
	this := DeleteNicRequest{}
	this.NicId = nicId
	return &this
}

// NewDeleteNicRequestWithDefaults instantiates a new DeleteNicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNicRequestWithDefaults() *DeleteNicRequest {
	this := DeleteNicRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNicRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNicId returns the NicId field value
func (o *DeleteNicRequest) GetNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value
// and a boolean to check if the value has been set.
func (o *DeleteNicRequest) GetNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NicId, true
}

// SetNicId sets field value
func (o *DeleteNicRequest) SetNicId(v string) {
	o.NicId = v
}

func (o DeleteNicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NicId"] = o.NicId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNicRequest struct {
	value *DeleteNicRequest
	isSet bool
}

func (v NullableDeleteNicRequest) Get() *DeleteNicRequest {
	return v.value
}

func (v *NullableDeleteNicRequest) Set(val *DeleteNicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNicRequest(val *DeleteNicRequest) *NullableDeleteNicRequest {
	return &NullableDeleteNicRequest{value: val, isSet: true}
}

func (v NullableDeleteNicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteNicResponse struct for DeleteNicResponse
type DeleteNicResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteNicResponse instantiates a new DeleteNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteNicResponse() *DeleteNicResponse {
	this := DeleteNicResponse{}
	return &this
}

// NewDeleteNicResponseWithDefaults instantiates a new DeleteNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteNicResponseWithDefaults() *DeleteNicResponse {
	this := DeleteNicResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteNicResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteNicResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteNicResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteNicResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteNicResponse struct {
	value *DeleteNicResponse
	isSet bool
}

func (v NullableDeleteNicResponse) Get() *DeleteNicResponse {
	return v.value
}

func (v *NullableDeleteNicResponse) Set(val *DeleteNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteNicResponse(val *DeleteNicResponse) *NullableDeleteNicResponse {
	return &NullableDeleteNicResponse{value: val, isSet: true}
}

func (v NullableDeleteNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeletePublicIpRequest struct for DeletePublicIpRequest
type DeletePublicIpRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The EIP. In the public Cloud, this parameter is required.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The ID representing the association of the EIP with the VM or the NIC. In a Net, this parameter is required.
	PublicIpId *string `json:"PublicIpId,omitempty"`
}

// NewDeletePublicIpRequest instantiates a new DeletePublicIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePublicIpRequest() *DeletePublicIpRequest {
	this := DeletePublicIpRequest{}
	return &this
}

// NewDeletePublicIpRequestWithDefaults instantiates a new DeletePublicIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePublicIpRequestWithDefaults() *DeletePublicIpRequest {
	this := DeletePublicIpRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeletePublicIpRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePublicIpRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeletePublicIpRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeletePublicIpRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *DeletePublicIpRequest) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePublicIpRequest) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *DeletePublicIpRequest) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *DeletePublicIpRequest) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpId returns the PublicIpId field value if set, zero value otherwise.
func (o *DeletePublicIpRequest) GetPublicIpId() string {
	if o == nil || o.PublicIpId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePublicIpRequest) GetPublicIpIdOk() (*string, bool) {
	if o == nil || o.PublicIpId == nil {
		return nil, false
	}
	return o.PublicIpId, true
}

// HasPublicIpId returns a boolean if a field has been set.
func (o *DeletePublicIpRequest) HasPublicIpId() bool {
	if o != nil && o.PublicIpId != nil {
		return true
	}

	return false
}

// SetPublicIpId gets a reference to the given string and assigns it to the PublicIpId field.
func (o *DeletePublicIpRequest) SetPublicIpId(v string) {
	o.PublicIpId = &v
}

func (o DeletePublicIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpId != nil {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	return json.Marshal(toSerialize)
}

type NullableDeletePublicIpRequest struct {
	value *DeletePublicIpRequest
	isSet bool
}

func (v NullableDeletePublicIpRequest) Get() *DeletePublicIpRequest {
	return v.value
}

func (v *NullableDeletePublicIpRequest) Set(val *DeletePublicIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePublicIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePublicIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePublicIpRequest(val *DeletePublicIpRequest) *NullableDeletePublicIpRequest {
	return &NullableDeletePublicIpRequest{value: val, isSet: true}
}

func (v NullableDeletePublicIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePublicIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeletePublicIpResponse struct for DeletePublicIpResponse
type DeletePublicIpResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeletePublicIpResponse instantiates a new DeletePublicIpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePublicIpResponse() *DeletePublicIpResponse {
	this := DeletePublicIpResponse{}
	return &this
}

// NewDeletePublicIpResponseWithDefaults instantiates a new DeletePublicIpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePublicIpResponseWithDefaults() *DeletePublicIpResponse {
	this := DeletePublicIpResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeletePublicIpResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePublicIpResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeletePublicIpResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeletePublicIpResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeletePublicIpResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeletePublicIpResponse struct {
	value *DeletePublicIpResponse
	isSet bool
}

func (v NullableDeletePublicIpResponse) Get() *DeletePublicIpResponse {
	return v.value
}

func (v *NullableDeletePublicIpResponse) Set(val *DeletePublicIpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePublicIpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePublicIpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePublicIpResponse(val *DeletePublicIpResponse) *NullableDeletePublicIpResponse {
	return &NullableDeletePublicIpResponse{value: val, isSet: true}
}

func (v NullableDeletePublicIpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePublicIpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteRouteRequest struct for DeleteRouteRequest
type DeleteRouteRequest struct {
	// The exact IP range for the route.
	DestinationIpRange string `json:"DestinationIpRange"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the route table from which you want to delete a route.
	RouteTableId string `json:"RouteTableId"`
}

// NewDeleteRouteRequest instantiates a new DeleteRouteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRouteRequest(destinationIpRange string, routeTableId string, ) *DeleteRouteRequest {
	this := DeleteRouteRequest{}
	this.DestinationIpRange = destinationIpRange
	this.RouteTableId = routeTableId
	return &this
}

// NewDeleteRouteRequestWithDefaults instantiates a new DeleteRouteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRouteRequestWithDefaults() *DeleteRouteRequest {
	this := DeleteRouteRequest{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value
func (o *DeleteRouteRequest) GetDestinationIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value
// and a boolean to check if the value has been set.
func (o *DeleteRouteRequest) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationIpRange, true
}

// SetDestinationIpRange sets field value
func (o *DeleteRouteRequest) SetDestinationIpRange(v string) {
	o.DestinationIpRange = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteRouteRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRouteRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteRouteRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteRouteRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetRouteTableId returns the RouteTableId field value
func (o *DeleteRouteRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *DeleteRouteRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *DeleteRouteRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

func (o DeleteRouteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteRouteRequest struct {
	value *DeleteRouteRequest
	isSet bool
}

func (v NullableDeleteRouteRequest) Get() *DeleteRouteRequest {
	return v.value
}

func (v *NullableDeleteRouteRequest) Set(val *DeleteRouteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRouteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRouteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRouteRequest(val *DeleteRouteRequest) *NullableDeleteRouteRequest {
	return &NullableDeleteRouteRequest{value: val, isSet: true}
}

func (v NullableDeleteRouteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRouteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteRouteResponse struct for DeleteRouteResponse
type DeleteRouteResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	RouteTable *RouteTable `json:"RouteTable,omitempty"`
}

// NewDeleteRouteResponse instantiates a new DeleteRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRouteResponse() *DeleteRouteResponse {
	this := DeleteRouteResponse{}
	return &this
}

// NewDeleteRouteResponseWithDefaults instantiates a new DeleteRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRouteResponseWithDefaults() *DeleteRouteResponse {
	this := DeleteRouteResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteRouteResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRouteResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteRouteResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteRouteResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *DeleteRouteResponse) GetRouteTable() RouteTable {
	if o == nil || o.RouteTable == nil {
		var ret RouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRouteResponse) GetRouteTableOk() (*RouteTable, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *DeleteRouteResponse) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given RouteTable and assigns it to the RouteTable field.
func (o *DeleteRouteResponse) SetRouteTable(v RouteTable) {
	o.RouteTable = &v
}

func (o DeleteRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTable != nil {
		toSerialize["RouteTable"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteRouteResponse struct {
	value *DeleteRouteResponse
	isSet bool
}

func (v NullableDeleteRouteResponse) Get() *DeleteRouteResponse {
	return v.value
}

func (v *NullableDeleteRouteResponse) Set(val *DeleteRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRouteResponse(val *DeleteRouteResponse) *NullableDeleteRouteResponse {
	return &NullableDeleteRouteResponse{value: val, isSet: true}
}

func (v NullableDeleteRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteRouteTableRequest struct for DeleteRouteTableRequest
type DeleteRouteTableRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the route table you want to delete.
	RouteTableId string `json:"RouteTableId"`
}

// NewDeleteRouteTableRequest instantiates a new DeleteRouteTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRouteTableRequest(routeTableId string, ) *DeleteRouteTableRequest {
	this := DeleteRouteTableRequest{}
	this.RouteTableId = routeTableId
	return &this
}

// NewDeleteRouteTableRequestWithDefaults instantiates a new DeleteRouteTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRouteTableRequestWithDefaults() *DeleteRouteTableRequest {
	this := DeleteRouteTableRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteRouteTableRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRouteTableRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteRouteTableRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteRouteTableRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetRouteTableId returns the RouteTableId field value
func (o *DeleteRouteTableRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *DeleteRouteTableRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *DeleteRouteTableRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

func (o DeleteRouteTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteRouteTableRequest struct {
	value *DeleteRouteTableRequest
	isSet bool
}

func (v NullableDeleteRouteTableRequest) Get() *DeleteRouteTableRequest {
	return v.value
}

func (v *NullableDeleteRouteTableRequest) Set(val *DeleteRouteTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRouteTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRouteTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRouteTableRequest(val *DeleteRouteTableRequest) *NullableDeleteRouteTableRequest {
	return &NullableDeleteRouteTableRequest{value: val, isSet: true}
}

func (v NullableDeleteRouteTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRouteTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteRouteTableResponse struct for DeleteRouteTableResponse
type DeleteRouteTableResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteRouteTableResponse instantiates a new DeleteRouteTableResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRouteTableResponse() *DeleteRouteTableResponse {
	this := DeleteRouteTableResponse{}
	return &this
}

// NewDeleteRouteTableResponseWithDefaults instantiates a new DeleteRouteTableResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRouteTableResponseWithDefaults() *DeleteRouteTableResponse {
	this := DeleteRouteTableResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteRouteTableResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRouteTableResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteRouteTableResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteRouteTableResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteRouteTableResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteRouteTableResponse struct {
	value *DeleteRouteTableResponse
	isSet bool
}

func (v NullableDeleteRouteTableResponse) Get() *DeleteRouteTableResponse {
	return v.value
}

func (v *NullableDeleteRouteTableResponse) Set(val *DeleteRouteTableResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRouteTableResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRouteTableResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRouteTableResponse(val *DeleteRouteTableResponse) *NullableDeleteRouteTableResponse {
	return &NullableDeleteRouteTableResponse{value: val, isSet: true}
}

func (v NullableDeleteRouteTableResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRouteTableResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSecurityGroupRequest struct for DeleteSecurityGroupRequest
type DeleteSecurityGroupRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the security group you want to delete.
	SecurityGroupId *string `json:"SecurityGroupId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
}

// NewDeleteSecurityGroupRequest instantiates a new DeleteSecurityGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSecurityGroupRequest() *DeleteSecurityGroupRequest {
	this := DeleteSecurityGroupRequest{}
	return &this
}

// NewDeleteSecurityGroupRequestWithDefaults instantiates a new DeleteSecurityGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSecurityGroupRequestWithDefaults() *DeleteSecurityGroupRequest {
	this := DeleteSecurityGroupRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteSecurityGroupRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRequest) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRequest) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupId == nil {
		return nil, false
	}
	return o.SecurityGroupId, true
}

// HasSecurityGroupId returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRequest) HasSecurityGroupId() bool {
	if o != nil && o.SecurityGroupId != nil {
		return true
	}

	return false
}

// SetSecurityGroupId gets a reference to the given string and assigns it to the SecurityGroupId field.
func (o *DeleteSecurityGroupRequest) SetSecurityGroupId(v string) {
	o.SecurityGroupId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRequest) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRequest) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRequest) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *DeleteSecurityGroupRequest) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

func (o DeleteSecurityGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.SecurityGroupId != nil {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSecurityGroupRequest struct {
	value *DeleteSecurityGroupRequest
	isSet bool
}

func (v NullableDeleteSecurityGroupRequest) Get() *DeleteSecurityGroupRequest {
	return v.value
}

func (v *NullableDeleteSecurityGroupRequest) Set(val *DeleteSecurityGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSecurityGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSecurityGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSecurityGroupRequest(val *DeleteSecurityGroupRequest) *NullableDeleteSecurityGroupRequest {
	return &NullableDeleteSecurityGroupRequest{value: val, isSet: true}
}

func (v NullableDeleteSecurityGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSecurityGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSecurityGroupResponse struct for DeleteSecurityGroupResponse
type DeleteSecurityGroupResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteSecurityGroupResponse instantiates a new DeleteSecurityGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSecurityGroupResponse() *DeleteSecurityGroupResponse {
	this := DeleteSecurityGroupResponse{}
	return &this
}

// NewDeleteSecurityGroupResponseWithDefaults instantiates a new DeleteSecurityGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSecurityGroupResponseWithDefaults() *DeleteSecurityGroupResponse {
	this := DeleteSecurityGroupResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteSecurityGroupResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteSecurityGroupResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteSecurityGroupResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteSecurityGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSecurityGroupResponse struct {
	value *DeleteSecurityGroupResponse
	isSet bool
}

func (v NullableDeleteSecurityGroupResponse) Get() *DeleteSecurityGroupResponse {
	return v.value
}

func (v *NullableDeleteSecurityGroupResponse) Set(val *DeleteSecurityGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSecurityGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSecurityGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSecurityGroupResponse(val *DeleteSecurityGroupResponse) *NullableDeleteSecurityGroupResponse {
	return &NullableDeleteSecurityGroupResponse{value: val, isSet: true}
}

func (v NullableDeleteSecurityGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSecurityGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSecurityGroupRuleRequest struct for DeleteSecurityGroupRuleRequest
type DeleteSecurityGroupRuleRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
	Flow string `json:"Flow"`
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int32 `json:"FromPortRange,omitempty"`
	// The IP protocol name (`tcp`, `udp`, `icmp`) or protocol number. By default, `-1`, which means all protocols.
	IpProtocol *string `json:"IpProtocol,omitempty"`
	// The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// One or more rules you want to delete from the security group.
	Rules *[]SecurityGroupRule `json:"Rules,omitempty"`
	// The account ID of the owner of the security group you want to delete a rule from.
	SecurityGroupAccountIdToUnlink *string `json:"SecurityGroupAccountIdToUnlink,omitempty"`
	// The ID of the security group you want to delete a rule from.
	SecurityGroupId string `json:"SecurityGroupId"`
	// The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group.
	SecurityGroupNameToUnlink *string `json:"SecurityGroupNameToUnlink,omitempty"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP type number.
	ToPortRange *int32 `json:"ToPortRange,omitempty"`
}

// NewDeleteSecurityGroupRuleRequest instantiates a new DeleteSecurityGroupRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSecurityGroupRuleRequest(flow string, securityGroupId string, ) *DeleteSecurityGroupRuleRequest {
	this := DeleteSecurityGroupRuleRequest{}
	this.Flow = flow
	this.SecurityGroupId = securityGroupId
	return &this
}

// NewDeleteSecurityGroupRuleRequestWithDefaults instantiates a new DeleteSecurityGroupRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSecurityGroupRuleRequestWithDefaults() *DeleteSecurityGroupRuleRequest {
	this := DeleteSecurityGroupRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteSecurityGroupRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlow returns the Flow field value
func (o *DeleteSecurityGroupRuleRequest) GetFlow() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Flow
}

// GetFlowOk returns a tuple with the Flow field value
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetFlowOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Flow, true
}

// SetFlow sets field value
func (o *DeleteSecurityGroupRuleRequest) SetFlow(v string) {
	o.Flow = v
}

// GetFromPortRange returns the FromPortRange field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetFromPortRange() int32 {
	if o == nil || o.FromPortRange == nil {
		var ret int32
		return ret
	}
	return *o.FromPortRange
}

// GetFromPortRangeOk returns a tuple with the FromPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetFromPortRangeOk() (*int32, bool) {
	if o == nil || o.FromPortRange == nil {
		return nil, false
	}
	return o.FromPortRange, true
}

// HasFromPortRange returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasFromPortRange() bool {
	if o != nil && o.FromPortRange != nil {
		return true
	}

	return false
}

// SetFromPortRange gets a reference to the given int32 and assigns it to the FromPortRange field.
func (o *DeleteSecurityGroupRuleRequest) SetFromPortRange(v int32) {
	o.FromPortRange = &v
}

// GetIpProtocol returns the IpProtocol field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetIpProtocol() string {
	if o == nil || o.IpProtocol == nil {
		var ret string
		return ret
	}
	return *o.IpProtocol
}

// GetIpProtocolOk returns a tuple with the IpProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetIpProtocolOk() (*string, bool) {
	if o == nil || o.IpProtocol == nil {
		return nil, false
	}
	return o.IpProtocol, true
}

// HasIpProtocol returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasIpProtocol() bool {
	if o != nil && o.IpProtocol != nil {
		return true
	}

	return false
}

// SetIpProtocol gets a reference to the given string and assigns it to the IpProtocol field.
func (o *DeleteSecurityGroupRuleRequest) SetIpProtocol(v string) {
	o.IpProtocol = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *DeleteSecurityGroupRuleRequest) SetIpRange(v string) {
	o.IpRange = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetRules() []SecurityGroupRule {
	if o == nil || o.Rules == nil {
		var ret []SecurityGroupRule
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetRulesOk() (*[]SecurityGroupRule, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SecurityGroupRule and assigns it to the Rules field.
func (o *DeleteSecurityGroupRuleRequest) SetRules(v []SecurityGroupRule) {
	o.Rules = &v
}

// GetSecurityGroupAccountIdToUnlink returns the SecurityGroupAccountIdToUnlink field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupAccountIdToUnlink() string {
	if o == nil || o.SecurityGroupAccountIdToUnlink == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupAccountIdToUnlink
}

// GetSecurityGroupAccountIdToUnlinkOk returns a tuple with the SecurityGroupAccountIdToUnlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupAccountIdToUnlinkOk() (*string, bool) {
	if o == nil || o.SecurityGroupAccountIdToUnlink == nil {
		return nil, false
	}
	return o.SecurityGroupAccountIdToUnlink, true
}

// HasSecurityGroupAccountIdToUnlink returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasSecurityGroupAccountIdToUnlink() bool {
	if o != nil && o.SecurityGroupAccountIdToUnlink != nil {
		return true
	}

	return false
}

// SetSecurityGroupAccountIdToUnlink gets a reference to the given string and assigns it to the SecurityGroupAccountIdToUnlink field.
func (o *DeleteSecurityGroupRuleRequest) SetSecurityGroupAccountIdToUnlink(v string) {
	o.SecurityGroupAccountIdToUnlink = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SecurityGroupId, true
}

// SetSecurityGroupId sets field value
func (o *DeleteSecurityGroupRuleRequest) SetSecurityGroupId(v string) {
	o.SecurityGroupId = v
}

// GetSecurityGroupNameToUnlink returns the SecurityGroupNameToUnlink field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupNameToUnlink() string {
	if o == nil || o.SecurityGroupNameToUnlink == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupNameToUnlink
}

// GetSecurityGroupNameToUnlinkOk returns a tuple with the SecurityGroupNameToUnlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetSecurityGroupNameToUnlinkOk() (*string, bool) {
	if o == nil || o.SecurityGroupNameToUnlink == nil {
		return nil, false
	}
	return o.SecurityGroupNameToUnlink, true
}

// HasSecurityGroupNameToUnlink returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasSecurityGroupNameToUnlink() bool {
	if o != nil && o.SecurityGroupNameToUnlink != nil {
		return true
	}

	return false
}

// SetSecurityGroupNameToUnlink gets a reference to the given string and assigns it to the SecurityGroupNameToUnlink field.
func (o *DeleteSecurityGroupRuleRequest) SetSecurityGroupNameToUnlink(v string) {
	o.SecurityGroupNameToUnlink = &v
}

// GetToPortRange returns the ToPortRange field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleRequest) GetToPortRange() int32 {
	if o == nil || o.ToPortRange == nil {
		var ret int32
		return ret
	}
	return *o.ToPortRange
}

// GetToPortRangeOk returns a tuple with the ToPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleRequest) GetToPortRangeOk() (*int32, bool) {
	if o == nil || o.ToPortRange == nil {
		return nil, false
	}
	return o.ToPortRange, true
}

// HasToPortRange returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleRequest) HasToPortRange() bool {
	if o != nil && o.ToPortRange != nil {
		return true
	}

	return false
}

// SetToPortRange gets a reference to the given int32 and assigns it to the ToPortRange field.
func (o *DeleteSecurityGroupRuleRequest) SetToPortRange(v int32) {
	o.ToPortRange = &v
}

func (o DeleteSecurityGroupRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Flow"] = o.Flow
	}
	if o.FromPortRange != nil {
		toSerialize["FromPortRange"] = o.FromPortRange
	}
	if o.IpProtocol != nil {
		toSerialize["IpProtocol"] = o.IpProtocol
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.Rules != nil {
		toSerialize["Rules"] = o.Rules
	}
	if o.SecurityGroupAccountIdToUnlink != nil {
		toSerialize["SecurityGroupAccountIdToUnlink"] = o.SecurityGroupAccountIdToUnlink
	}
	if true {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupNameToUnlink != nil {
		toSerialize["SecurityGroupNameToUnlink"] = o.SecurityGroupNameToUnlink
	}
	if o.ToPortRange != nil {
		toSerialize["ToPortRange"] = o.ToPortRange
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSecurityGroupRuleRequest struct {
	value *DeleteSecurityGroupRuleRequest
	isSet bool
}

func (v NullableDeleteSecurityGroupRuleRequest) Get() *DeleteSecurityGroupRuleRequest {
	return v.value
}

func (v *NullableDeleteSecurityGroupRuleRequest) Set(val *DeleteSecurityGroupRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSecurityGroupRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSecurityGroupRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSecurityGroupRuleRequest(val *DeleteSecurityGroupRuleRequest) *NullableDeleteSecurityGroupRuleRequest {
	return &NullableDeleteSecurityGroupRuleRequest{value: val, isSet: true}
}

func (v NullableDeleteSecurityGroupRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSecurityGroupRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSecurityGroupRuleResponse struct for DeleteSecurityGroupRuleResponse
type DeleteSecurityGroupRuleResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	SecurityGroup *SecurityGroup `json:"SecurityGroup,omitempty"`
}

// NewDeleteSecurityGroupRuleResponse instantiates a new DeleteSecurityGroupRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSecurityGroupRuleResponse() *DeleteSecurityGroupRuleResponse {
	this := DeleteSecurityGroupRuleResponse{}
	return &this
}

// NewDeleteSecurityGroupRuleResponseWithDefaults instantiates a new DeleteSecurityGroupRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSecurityGroupRuleResponseWithDefaults() *DeleteSecurityGroupRuleResponse {
	this := DeleteSecurityGroupRuleResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteSecurityGroupRuleResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSecurityGroup returns the SecurityGroup field value if set, zero value otherwise.
func (o *DeleteSecurityGroupRuleResponse) GetSecurityGroup() SecurityGroup {
	if o == nil || o.SecurityGroup == nil {
		var ret SecurityGroup
		return ret
	}
	return *o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSecurityGroupRuleResponse) GetSecurityGroupOk() (*SecurityGroup, bool) {
	if o == nil || o.SecurityGroup == nil {
		return nil, false
	}
	return o.SecurityGroup, true
}

// HasSecurityGroup returns a boolean if a field has been set.
func (o *DeleteSecurityGroupRuleResponse) HasSecurityGroup() bool {
	if o != nil && o.SecurityGroup != nil {
		return true
	}

	return false
}

// SetSecurityGroup gets a reference to the given SecurityGroup and assigns it to the SecurityGroup field.
func (o *DeleteSecurityGroupRuleResponse) SetSecurityGroup(v SecurityGroup) {
	o.SecurityGroup = &v
}

func (o DeleteSecurityGroupRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SecurityGroup != nil {
		toSerialize["SecurityGroup"] = o.SecurityGroup
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSecurityGroupRuleResponse struct {
	value *DeleteSecurityGroupRuleResponse
	isSet bool
}

func (v NullableDeleteSecurityGroupRuleResponse) Get() *DeleteSecurityGroupRuleResponse {
	return v.value
}

func (v *NullableDeleteSecurityGroupRuleResponse) Set(val *DeleteSecurityGroupRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSecurityGroupRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSecurityGroupRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSecurityGroupRuleResponse(val *DeleteSecurityGroupRuleResponse) *NullableDeleteSecurityGroupRuleResponse {
	return &NullableDeleteSecurityGroupRuleResponse{value: val, isSet: true}
}

func (v NullableDeleteSecurityGroupRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSecurityGroupRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteServerCertificateRequest struct for DeleteServerCertificateRequest
type DeleteServerCertificateRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the server certificate you want to delete.
	Name string `json:"Name"`
}

// NewDeleteServerCertificateRequest instantiates a new DeleteServerCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteServerCertificateRequest(name string, ) *DeleteServerCertificateRequest {
	this := DeleteServerCertificateRequest{}
	this.Name = name
	return &this
}

// NewDeleteServerCertificateRequestWithDefaults instantiates a new DeleteServerCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteServerCertificateRequestWithDefaults() *DeleteServerCertificateRequest {
	this := DeleteServerCertificateRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteServerCertificateRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteServerCertificateRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteServerCertificateRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteServerCertificateRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetName returns the Name field value
func (o *DeleteServerCertificateRequest) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DeleteServerCertificateRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DeleteServerCertificateRequest) SetName(v string) {
	o.Name = v
}

func (o DeleteServerCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteServerCertificateRequest struct {
	value *DeleteServerCertificateRequest
	isSet bool
}

func (v NullableDeleteServerCertificateRequest) Get() *DeleteServerCertificateRequest {
	return v.value
}

func (v *NullableDeleteServerCertificateRequest) Set(val *DeleteServerCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteServerCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteServerCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteServerCertificateRequest(val *DeleteServerCertificateRequest) *NullableDeleteServerCertificateRequest {
	return &NullableDeleteServerCertificateRequest{value: val, isSet: true}
}

func (v NullableDeleteServerCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteServerCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteServerCertificateResponse struct for DeleteServerCertificateResponse
type DeleteServerCertificateResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteServerCertificateResponse instantiates a new DeleteServerCertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteServerCertificateResponse() *DeleteServerCertificateResponse {
	this := DeleteServerCertificateResponse{}
	return &this
}

// NewDeleteServerCertificateResponseWithDefaults instantiates a new DeleteServerCertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteServerCertificateResponseWithDefaults() *DeleteServerCertificateResponse {
	this := DeleteServerCertificateResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteServerCertificateResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteServerCertificateResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteServerCertificateResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteServerCertificateResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteServerCertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteServerCertificateResponse struct {
	value *DeleteServerCertificateResponse
	isSet bool
}

func (v NullableDeleteServerCertificateResponse) Get() *DeleteServerCertificateResponse {
	return v.value
}

func (v *NullableDeleteServerCertificateResponse) Set(val *DeleteServerCertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteServerCertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteServerCertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteServerCertificateResponse(val *DeleteServerCertificateResponse) *NullableDeleteServerCertificateResponse {
	return &NullableDeleteServerCertificateResponse{value: val, isSet: true}
}

func (v NullableDeleteServerCertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteServerCertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSnapshotRequest struct for DeleteSnapshotRequest
type DeleteSnapshotRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the snapshot you want to delete.
	SnapshotId string `json:"SnapshotId"`
}

// NewDeleteSnapshotRequest instantiates a new DeleteSnapshotRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSnapshotRequest(snapshotId string, ) *DeleteSnapshotRequest {
	this := DeleteSnapshotRequest{}
	this.SnapshotId = snapshotId
	return &this
}

// NewDeleteSnapshotRequestWithDefaults instantiates a new DeleteSnapshotRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSnapshotRequestWithDefaults() *DeleteSnapshotRequest {
	this := DeleteSnapshotRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteSnapshotRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSnapshotRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteSnapshotRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteSnapshotRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetSnapshotId returns the SnapshotId field value
func (o *DeleteSnapshotRequest) GetSnapshotId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *DeleteSnapshotRequest) GetSnapshotIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *DeleteSnapshotRequest) SetSnapshotId(v string) {
	o.SnapshotId = v
}

func (o DeleteSnapshotRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSnapshotRequest struct {
	value *DeleteSnapshotRequest
	isSet bool
}

func (v NullableDeleteSnapshotRequest) Get() *DeleteSnapshotRequest {
	return v.value
}

func (v *NullableDeleteSnapshotRequest) Set(val *DeleteSnapshotRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSnapshotRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSnapshotRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSnapshotRequest(val *DeleteSnapshotRequest) *NullableDeleteSnapshotRequest {
	return &NullableDeleteSnapshotRequest{value: val, isSet: true}
}

func (v NullableDeleteSnapshotRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSnapshotRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSnapshotResponse struct for DeleteSnapshotResponse
type DeleteSnapshotResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteSnapshotResponse instantiates a new DeleteSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSnapshotResponse() *DeleteSnapshotResponse {
	this := DeleteSnapshotResponse{}
	return &this
}

// NewDeleteSnapshotResponseWithDefaults instantiates a new DeleteSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSnapshotResponseWithDefaults() *DeleteSnapshotResponse {
	this := DeleteSnapshotResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteSnapshotResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSnapshotResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteSnapshotResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteSnapshotResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSnapshotResponse struct {
	value *DeleteSnapshotResponse
	isSet bool
}

func (v NullableDeleteSnapshotResponse) Get() *DeleteSnapshotResponse {
	return v.value
}

func (v *NullableDeleteSnapshotResponse) Set(val *DeleteSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSnapshotResponse(val *DeleteSnapshotResponse) *NullableDeleteSnapshotResponse {
	return &NullableDeleteSnapshotResponse{value: val, isSet: true}
}

func (v NullableDeleteSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSubnetRequest struct for DeleteSubnetRequest
type DeleteSubnetRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Subnet you want to delete.
	SubnetId string `json:"SubnetId"`
}

// NewDeleteSubnetRequest instantiates a new DeleteSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSubnetRequest(subnetId string, ) *DeleteSubnetRequest {
	this := DeleteSubnetRequest{}
	this.SubnetId = subnetId
	return &this
}

// NewDeleteSubnetRequestWithDefaults instantiates a new DeleteSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSubnetRequestWithDefaults() *DeleteSubnetRequest {
	this := DeleteSubnetRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteSubnetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSubnetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteSubnetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteSubnetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetSubnetId returns the SubnetId field value
func (o *DeleteSubnetRequest) GetSubnetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *DeleteSubnetRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *DeleteSubnetRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o DeleteSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSubnetRequest struct {
	value *DeleteSubnetRequest
	isSet bool
}

func (v NullableDeleteSubnetRequest) Get() *DeleteSubnetRequest {
	return v.value
}

func (v *NullableDeleteSubnetRequest) Set(val *DeleteSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSubnetRequest(val *DeleteSubnetRequest) *NullableDeleteSubnetRequest {
	return &NullableDeleteSubnetRequest{value: val, isSet: true}
}

func (v NullableDeleteSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteSubnetResponse struct for DeleteSubnetResponse
type DeleteSubnetResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteSubnetResponse instantiates a new DeleteSubnetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSubnetResponse() *DeleteSubnetResponse {
	this := DeleteSubnetResponse{}
	return &this
}

// NewDeleteSubnetResponseWithDefaults instantiates a new DeleteSubnetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSubnetResponseWithDefaults() *DeleteSubnetResponse {
	this := DeleteSubnetResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteSubnetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSubnetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteSubnetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteSubnetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteSubnetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteSubnetResponse struct {
	value *DeleteSubnetResponse
	isSet bool
}

func (v NullableDeleteSubnetResponse) Get() *DeleteSubnetResponse {
	return v.value
}

func (v *NullableDeleteSubnetResponse) Set(val *DeleteSubnetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSubnetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSubnetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSubnetResponse(val *DeleteSubnetResponse) *NullableDeleteSubnetResponse {
	return &NullableDeleteSubnetResponse{value: val, isSet: true}
}

func (v NullableDeleteSubnetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSubnetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteTagsRequest struct for DeleteTagsRequest
type DeleteTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more resource IDs.
	ResourceIds []string `json:"ResourceIds"`
	// One or more tags to delete (if you set a tag value, only the tags matching exactly this value are deleted).
	Tags []ResourceTag `json:"Tags"`
}

// NewDeleteTagsRequest instantiates a new DeleteTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTagsRequest(resourceIds []string, tags []ResourceTag, ) *DeleteTagsRequest {
	this := DeleteTagsRequest{}
	this.ResourceIds = resourceIds
	this.Tags = tags
	return &this
}

// NewDeleteTagsRequestWithDefaults instantiates a new DeleteTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTagsRequestWithDefaults() *DeleteTagsRequest {
	this := DeleteTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetResourceIds returns the ResourceIds field value
func (o *DeleteTagsRequest) GetResourceIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value
// and a boolean to check if the value has been set.
func (o *DeleteTagsRequest) GetResourceIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceIds, true
}

// SetResourceIds sets field value
func (o *DeleteTagsRequest) SetResourceIds(v []string) {
	o.ResourceIds = v
}

// GetTags returns the Tags field value
func (o *DeleteTagsRequest) GetTags() []ResourceTag {
	if o == nil  {
		var ret []ResourceTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *DeleteTagsRequest) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *DeleteTagsRequest) SetTags(v []ResourceTag) {
	o.Tags = v
}

func (o DeleteTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ResourceIds"] = o.ResourceIds
	}
	if true {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteTagsRequest struct {
	value *DeleteTagsRequest
	isSet bool
}

func (v NullableDeleteTagsRequest) Get() *DeleteTagsRequest {
	return v.value
}

func (v *NullableDeleteTagsRequest) Set(val *DeleteTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTagsRequest(val *DeleteTagsRequest) *NullableDeleteTagsRequest {
	return &NullableDeleteTagsRequest{value: val, isSet: true}
}

func (v NullableDeleteTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteTagsResponse struct for DeleteTagsResponse
type DeleteTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteTagsResponse instantiates a new DeleteTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTagsResponse() *DeleteTagsResponse {
	this := DeleteTagsResponse{}
	return &this
}

// NewDeleteTagsResponseWithDefaults instantiates a new DeleteTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTagsResponseWithDefaults() *DeleteTagsResponse {
	this := DeleteTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteTagsResponse struct {
	value *DeleteTagsResponse
	isSet bool
}

func (v NullableDeleteTagsResponse) Get() *DeleteTagsResponse {
	return v.value
}

func (v *NullableDeleteTagsResponse) Set(val *DeleteTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTagsResponse(val *DeleteTagsResponse) *NullableDeleteTagsResponse {
	return &NullableDeleteTagsResponse{value: val, isSet: true}
}

func (v NullableDeleteTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVirtualGatewayRequest struct for DeleteVirtualGatewayRequest
type DeleteVirtualGatewayRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the virtual gateway you want to delete.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// NewDeleteVirtualGatewayRequest instantiates a new DeleteVirtualGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVirtualGatewayRequest(virtualGatewayId string, ) *DeleteVirtualGatewayRequest {
	this := DeleteVirtualGatewayRequest{}
	this.VirtualGatewayId = virtualGatewayId
	return &this
}

// NewDeleteVirtualGatewayRequestWithDefaults instantiates a new DeleteVirtualGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVirtualGatewayRequestWithDefaults() *DeleteVirtualGatewayRequest {
	this := DeleteVirtualGatewayRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteVirtualGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVirtualGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteVirtualGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteVirtualGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *DeleteVirtualGatewayRequest) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *DeleteVirtualGatewayRequest) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *DeleteVirtualGatewayRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

func (o DeleteVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVirtualGatewayRequest struct {
	value *DeleteVirtualGatewayRequest
	isSet bool
}

func (v NullableDeleteVirtualGatewayRequest) Get() *DeleteVirtualGatewayRequest {
	return v.value
}

func (v *NullableDeleteVirtualGatewayRequest) Set(val *DeleteVirtualGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVirtualGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVirtualGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVirtualGatewayRequest(val *DeleteVirtualGatewayRequest) *NullableDeleteVirtualGatewayRequest {
	return &NullableDeleteVirtualGatewayRequest{value: val, isSet: true}
}

func (v NullableDeleteVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVirtualGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVirtualGatewayResponse struct for DeleteVirtualGatewayResponse
type DeleteVirtualGatewayResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteVirtualGatewayResponse instantiates a new DeleteVirtualGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVirtualGatewayResponse() *DeleteVirtualGatewayResponse {
	this := DeleteVirtualGatewayResponse{}
	return &this
}

// NewDeleteVirtualGatewayResponseWithDefaults instantiates a new DeleteVirtualGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVirtualGatewayResponseWithDefaults() *DeleteVirtualGatewayResponse {
	this := DeleteVirtualGatewayResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteVirtualGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVirtualGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteVirtualGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteVirtualGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVirtualGatewayResponse struct {
	value *DeleteVirtualGatewayResponse
	isSet bool
}

func (v NullableDeleteVirtualGatewayResponse) Get() *DeleteVirtualGatewayResponse {
	return v.value
}

func (v *NullableDeleteVirtualGatewayResponse) Set(val *DeleteVirtualGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVirtualGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVirtualGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVirtualGatewayResponse(val *DeleteVirtualGatewayResponse) *NullableDeleteVirtualGatewayResponse {
	return &NullableDeleteVirtualGatewayResponse{value: val, isSet: true}
}

func (v NullableDeleteVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVirtualGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVmsRequest struct for DeleteVmsRequest
type DeleteVmsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more IDs of VMs.
	VmIds []string `json:"VmIds"`
}

// NewDeleteVmsRequest instantiates a new DeleteVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVmsRequest(vmIds []string, ) *DeleteVmsRequest {
	this := DeleteVmsRequest{}
	this.VmIds = vmIds
	return &this
}

// NewDeleteVmsRequestWithDefaults instantiates a new DeleteVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVmsRequestWithDefaults() *DeleteVmsRequest {
	this := DeleteVmsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmIds returns the VmIds field value
func (o *DeleteVmsRequest) GetVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *DeleteVmsRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *DeleteVmsRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o DeleteVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVmsRequest struct {
	value *DeleteVmsRequest
	isSet bool
}

func (v NullableDeleteVmsRequest) Get() *DeleteVmsRequest {
	return v.value
}

func (v *NullableDeleteVmsRequest) Set(val *DeleteVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVmsRequest(val *DeleteVmsRequest) *NullableDeleteVmsRequest {
	return &NullableDeleteVmsRequest{value: val, isSet: true}
}

func (v NullableDeleteVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVmsResponse struct for DeleteVmsResponse
type DeleteVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more terminated VMs.
	Vms *[]VmState `json:"Vms,omitempty"`
}

// NewDeleteVmsResponse instantiates a new DeleteVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVmsResponse() *DeleteVmsResponse {
	this := DeleteVmsResponse{}
	return &this
}

// NewDeleteVmsResponseWithDefaults instantiates a new DeleteVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVmsResponseWithDefaults() *DeleteVmsResponse {
	this := DeleteVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *DeleteVmsResponse) GetVms() []VmState {
	if o == nil || o.Vms == nil {
		var ret []VmState
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVmsResponse) GetVmsOk() (*[]VmState, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *DeleteVmsResponse) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []VmState and assigns it to the Vms field.
func (o *DeleteVmsResponse) SetVms(v []VmState) {
	o.Vms = &v
}

func (o DeleteVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vms != nil {
		toSerialize["Vms"] = o.Vms
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVmsResponse struct {
	value *DeleteVmsResponse
	isSet bool
}

func (v NullableDeleteVmsResponse) Get() *DeleteVmsResponse {
	return v.value
}

func (v *NullableDeleteVmsResponse) Set(val *DeleteVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVmsResponse(val *DeleteVmsResponse) *NullableDeleteVmsResponse {
	return &NullableDeleteVmsResponse{value: val, isSet: true}
}

func (v NullableDeleteVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVolumeRequest struct for DeleteVolumeRequest
type DeleteVolumeRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the volume you want to delete.
	VolumeId string `json:"VolumeId"`
}

// NewDeleteVolumeRequest instantiates a new DeleteVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVolumeRequest(volumeId string, ) *DeleteVolumeRequest {
	this := DeleteVolumeRequest{}
	this.VolumeId = volumeId
	return &this
}

// NewDeleteVolumeRequestWithDefaults instantiates a new DeleteVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVolumeRequestWithDefaults() *DeleteVolumeRequest {
	this := DeleteVolumeRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteVolumeRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVolumeRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteVolumeRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteVolumeRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVolumeId returns the VolumeId field value
func (o *DeleteVolumeRequest) GetVolumeId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *DeleteVolumeRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *DeleteVolumeRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o DeleteVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVolumeRequest struct {
	value *DeleteVolumeRequest
	isSet bool
}

func (v NullableDeleteVolumeRequest) Get() *DeleteVolumeRequest {
	return v.value
}

func (v *NullableDeleteVolumeRequest) Set(val *DeleteVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVolumeRequest(val *DeleteVolumeRequest) *NullableDeleteVolumeRequest {
	return &NullableDeleteVolumeRequest{value: val, isSet: true}
}

func (v NullableDeleteVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVolumeResponse struct for DeleteVolumeResponse
type DeleteVolumeResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteVolumeResponse instantiates a new DeleteVolumeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVolumeResponse() *DeleteVolumeResponse {
	this := DeleteVolumeResponse{}
	return &this
}

// NewDeleteVolumeResponseWithDefaults instantiates a new DeleteVolumeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVolumeResponseWithDefaults() *DeleteVolumeResponse {
	this := DeleteVolumeResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteVolumeResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVolumeResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteVolumeResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteVolumeResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteVolumeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVolumeResponse struct {
	value *DeleteVolumeResponse
	isSet bool
}

func (v NullableDeleteVolumeResponse) Get() *DeleteVolumeResponse {
	return v.value
}

func (v *NullableDeleteVolumeResponse) Set(val *DeleteVolumeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVolumeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVolumeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVolumeResponse(val *DeleteVolumeResponse) *NullableDeleteVolumeResponse {
	return &NullableDeleteVolumeResponse{value: val, isSet: true}
}

func (v NullableDeleteVolumeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVolumeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVpnConnectionRequest struct for DeleteVpnConnectionRequest
type DeleteVpnConnectionRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the VPN connection you want to delete.
	VpnConnectionId string `json:"VpnConnectionId"`
}

// NewDeleteVpnConnectionRequest instantiates a new DeleteVpnConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVpnConnectionRequest(vpnConnectionId string, ) *DeleteVpnConnectionRequest {
	this := DeleteVpnConnectionRequest{}
	this.VpnConnectionId = vpnConnectionId
	return &this
}

// NewDeleteVpnConnectionRequestWithDefaults instantiates a new DeleteVpnConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVpnConnectionRequestWithDefaults() *DeleteVpnConnectionRequest {
	this := DeleteVpnConnectionRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteVpnConnectionRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteVpnConnectionRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteVpnConnectionRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value
func (o *DeleteVpnConnectionRequest) GetVpnConnectionId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRequest) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VpnConnectionId, true
}

// SetVpnConnectionId sets field value
func (o *DeleteVpnConnectionRequest) SetVpnConnectionId(v string) {
	o.VpnConnectionId = v
}

func (o DeleteVpnConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VpnConnectionId"] = o.VpnConnectionId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVpnConnectionRequest struct {
	value *DeleteVpnConnectionRequest
	isSet bool
}

func (v NullableDeleteVpnConnectionRequest) Get() *DeleteVpnConnectionRequest {
	return v.value
}

func (v *NullableDeleteVpnConnectionRequest) Set(val *DeleteVpnConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVpnConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVpnConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVpnConnectionRequest(val *DeleteVpnConnectionRequest) *NullableDeleteVpnConnectionRequest {
	return &NullableDeleteVpnConnectionRequest{value: val, isSet: true}
}

func (v NullableDeleteVpnConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVpnConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVpnConnectionResponse struct for DeleteVpnConnectionResponse
type DeleteVpnConnectionResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteVpnConnectionResponse instantiates a new DeleteVpnConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVpnConnectionResponse() *DeleteVpnConnectionResponse {
	this := DeleteVpnConnectionResponse{}
	return &this
}

// NewDeleteVpnConnectionResponseWithDefaults instantiates a new DeleteVpnConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVpnConnectionResponseWithDefaults() *DeleteVpnConnectionResponse {
	this := DeleteVpnConnectionResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteVpnConnectionResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteVpnConnectionResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteVpnConnectionResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteVpnConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVpnConnectionResponse struct {
	value *DeleteVpnConnectionResponse
	isSet bool
}

func (v NullableDeleteVpnConnectionResponse) Get() *DeleteVpnConnectionResponse {
	return v.value
}

func (v *NullableDeleteVpnConnectionResponse) Set(val *DeleteVpnConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVpnConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVpnConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVpnConnectionResponse(val *DeleteVpnConnectionResponse) *NullableDeleteVpnConnectionResponse {
	return &NullableDeleteVpnConnectionResponse{value: val, isSet: true}
}

func (v NullableDeleteVpnConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVpnConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVpnConnectionRouteRequest struct for DeleteVpnConnectionRouteRequest
type DeleteVpnConnectionRouteRequest struct {
	// The network prefix of the route to delete, in CIDR notation (for example, 10.12.0.0/16).
	DestinationIpRange string `json:"DestinationIpRange"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the target VPN connection of the static route to delete.
	VpnConnectionId string `json:"VpnConnectionId"`
}

// NewDeleteVpnConnectionRouteRequest instantiates a new DeleteVpnConnectionRouteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVpnConnectionRouteRequest(destinationIpRange string, vpnConnectionId string, ) *DeleteVpnConnectionRouteRequest {
	this := DeleteVpnConnectionRouteRequest{}
	this.DestinationIpRange = destinationIpRange
	this.VpnConnectionId = vpnConnectionId
	return &this
}

// NewDeleteVpnConnectionRouteRequestWithDefaults instantiates a new DeleteVpnConnectionRouteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVpnConnectionRouteRequestWithDefaults() *DeleteVpnConnectionRouteRequest {
	this := DeleteVpnConnectionRouteRequest{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value
func (o *DeleteVpnConnectionRouteRequest) GetDestinationIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRouteRequest) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationIpRange, true
}

// SetDestinationIpRange sets field value
func (o *DeleteVpnConnectionRouteRequest) SetDestinationIpRange(v string) {
	o.DestinationIpRange = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteVpnConnectionRouteRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRouteRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteVpnConnectionRouteRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteVpnConnectionRouteRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value
func (o *DeleteVpnConnectionRouteRequest) GetVpnConnectionId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRouteRequest) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VpnConnectionId, true
}

// SetVpnConnectionId sets field value
func (o *DeleteVpnConnectionRouteRequest) SetVpnConnectionId(v string) {
	o.VpnConnectionId = v
}

func (o DeleteVpnConnectionRouteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VpnConnectionId"] = o.VpnConnectionId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVpnConnectionRouteRequest struct {
	value *DeleteVpnConnectionRouteRequest
	isSet bool
}

func (v NullableDeleteVpnConnectionRouteRequest) Get() *DeleteVpnConnectionRouteRequest {
	return v.value
}

func (v *NullableDeleteVpnConnectionRouteRequest) Set(val *DeleteVpnConnectionRouteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVpnConnectionRouteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVpnConnectionRouteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVpnConnectionRouteRequest(val *DeleteVpnConnectionRouteRequest) *NullableDeleteVpnConnectionRouteRequest {
	return &NullableDeleteVpnConnectionRouteRequest{value: val, isSet: true}
}

func (v NullableDeleteVpnConnectionRouteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVpnConnectionRouteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeleteVpnConnectionRouteResponse struct for DeleteVpnConnectionRouteResponse
type DeleteVpnConnectionRouteResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeleteVpnConnectionRouteResponse instantiates a new DeleteVpnConnectionRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVpnConnectionRouteResponse() *DeleteVpnConnectionRouteResponse {
	this := DeleteVpnConnectionRouteResponse{}
	return &this
}

// NewDeleteVpnConnectionRouteResponseWithDefaults instantiates a new DeleteVpnConnectionRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVpnConnectionRouteResponseWithDefaults() *DeleteVpnConnectionRouteResponse {
	this := DeleteVpnConnectionRouteResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeleteVpnConnectionRouteResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVpnConnectionRouteResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeleteVpnConnectionRouteResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeleteVpnConnectionRouteResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeleteVpnConnectionRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteVpnConnectionRouteResponse struct {
	value *DeleteVpnConnectionRouteResponse
	isSet bool
}

func (v NullableDeleteVpnConnectionRouteResponse) Get() *DeleteVpnConnectionRouteResponse {
	return v.value
}

func (v *NullableDeleteVpnConnectionRouteResponse) Set(val *DeleteVpnConnectionRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVpnConnectionRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVpnConnectionRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVpnConnectionRouteResponse(val *DeleteVpnConnectionRouteResponse) *NullableDeleteVpnConnectionRouteResponse {
	return &NullableDeleteVpnConnectionRouteResponse{value: val, isSet: true}
}

func (v NullableDeleteVpnConnectionRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVpnConnectionRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeregisterVmsInLoadBalancerRequest struct for DeregisterVmsInLoadBalancerRequest
type DeregisterVmsInLoadBalancerRequest struct {
	// One or more IDs of back-end VMs.
	BackendVmIds []string `json:"BackendVmIds"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer.
	LoadBalancerName string `json:"LoadBalancerName"`
}

// NewDeregisterVmsInLoadBalancerRequest instantiates a new DeregisterVmsInLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeregisterVmsInLoadBalancerRequest(backendVmIds []string, loadBalancerName string, ) *DeregisterVmsInLoadBalancerRequest {
	this := DeregisterVmsInLoadBalancerRequest{}
	this.BackendVmIds = backendVmIds
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewDeregisterVmsInLoadBalancerRequestWithDefaults instantiates a new DeregisterVmsInLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeregisterVmsInLoadBalancerRequestWithDefaults() *DeregisterVmsInLoadBalancerRequest {
	this := DeregisterVmsInLoadBalancerRequest{}
	return &this
}

// GetBackendVmIds returns the BackendVmIds field value
func (o *DeregisterVmsInLoadBalancerRequest) GetBackendVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.BackendVmIds
}

// GetBackendVmIdsOk returns a tuple with the BackendVmIds field value
// and a boolean to check if the value has been set.
func (o *DeregisterVmsInLoadBalancerRequest) GetBackendVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackendVmIds, true
}

// SetBackendVmIds sets field value
func (o *DeregisterVmsInLoadBalancerRequest) SetBackendVmIds(v []string) {
	o.BackendVmIds = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeregisterVmsInLoadBalancerRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeregisterVmsInLoadBalancerRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeregisterVmsInLoadBalancerRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeregisterVmsInLoadBalancerRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *DeregisterVmsInLoadBalancerRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *DeregisterVmsInLoadBalancerRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *DeregisterVmsInLoadBalancerRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

func (o DeregisterVmsInLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BackendVmIds"] = o.BackendVmIds
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	return json.Marshal(toSerialize)
}

type NullableDeregisterVmsInLoadBalancerRequest struct {
	value *DeregisterVmsInLoadBalancerRequest
	isSet bool
}

func (v NullableDeregisterVmsInLoadBalancerRequest) Get() *DeregisterVmsInLoadBalancerRequest {
	return v.value
}

func (v *NullableDeregisterVmsInLoadBalancerRequest) Set(val *DeregisterVmsInLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeregisterVmsInLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeregisterVmsInLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeregisterVmsInLoadBalancerRequest(val *DeregisterVmsInLoadBalancerRequest) *NullableDeregisterVmsInLoadBalancerRequest {
	return &NullableDeregisterVmsInLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableDeregisterVmsInLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeregisterVmsInLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DeregisterVmsInLoadBalancerResponse struct for DeregisterVmsInLoadBalancerResponse
type DeregisterVmsInLoadBalancerResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewDeregisterVmsInLoadBalancerResponse instantiates a new DeregisterVmsInLoadBalancerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeregisterVmsInLoadBalancerResponse() *DeregisterVmsInLoadBalancerResponse {
	this := DeregisterVmsInLoadBalancerResponse{}
	return &this
}

// NewDeregisterVmsInLoadBalancerResponseWithDefaults instantiates a new DeregisterVmsInLoadBalancerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeregisterVmsInLoadBalancerResponseWithDefaults() *DeregisterVmsInLoadBalancerResponse {
	this := DeregisterVmsInLoadBalancerResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *DeregisterVmsInLoadBalancerResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeregisterVmsInLoadBalancerResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *DeregisterVmsInLoadBalancerResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *DeregisterVmsInLoadBalancerResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o DeregisterVmsInLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableDeregisterVmsInLoadBalancerResponse struct {
	value *DeregisterVmsInLoadBalancerResponse
	isSet bool
}

func (v NullableDeregisterVmsInLoadBalancerResponse) Get() *DeregisterVmsInLoadBalancerResponse {
	return v.value
}

func (v *NullableDeregisterVmsInLoadBalancerResponse) Set(val *DeregisterVmsInLoadBalancerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeregisterVmsInLoadBalancerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeregisterVmsInLoadBalancerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeregisterVmsInLoadBalancerResponse(val *DeregisterVmsInLoadBalancerResponse) *NullableDeregisterVmsInLoadBalancerResponse {
	return &NullableDeregisterVmsInLoadBalancerResponse{value: val, isSet: true}
}

func (v NullableDeregisterVmsInLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeregisterVmsInLoadBalancerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DhcpOptionsSet Information about the DHCP options set.
type DhcpOptionsSet struct {
	// If `true`, the DHCP options set is a default one. If `false`, it is not.
	Default *bool `json:"Default,omitempty"`
	// The name of the DHCP options set.
	DhcpOptionsName *string `json:"DhcpOptionsName,omitempty"`
	// The ID of the DHCP options set.
	DhcpOptionsSetId *string `json:"DhcpOptionsSetId,omitempty"`
	// The domain name.
	DomainName *string `json:"DomainName,omitempty"`
	// One or more IP addresses for the domain name servers.
	DomainNameServers *[]string `json:"DomainNameServers,omitempty"`
	// One or more IP addresses for the NTP servers.
	NtpServers *[]string `json:"NtpServers,omitempty"`
	// One or more tags associated with the DHCP options set.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewDhcpOptionsSet instantiates a new DhcpOptionsSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhcpOptionsSet() *DhcpOptionsSet {
	this := DhcpOptionsSet{}
	return &this
}

// NewDhcpOptionsSetWithDefaults instantiates a new DhcpOptionsSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhcpOptionsSetWithDefaults() *DhcpOptionsSet {
	this := DhcpOptionsSet{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *DhcpOptionsSet) SetDefault(v bool) {
	o.Default = &v
}

// GetDhcpOptionsName returns the DhcpOptionsName field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetDhcpOptionsName() string {
	if o == nil || o.DhcpOptionsName == nil {
		var ret string
		return ret
	}
	return *o.DhcpOptionsName
}

// GetDhcpOptionsNameOk returns a tuple with the DhcpOptionsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetDhcpOptionsNameOk() (*string, bool) {
	if o == nil || o.DhcpOptionsName == nil {
		return nil, false
	}
	return o.DhcpOptionsName, true
}

// HasDhcpOptionsName returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasDhcpOptionsName() bool {
	if o != nil && o.DhcpOptionsName != nil {
		return true
	}

	return false
}

// SetDhcpOptionsName gets a reference to the given string and assigns it to the DhcpOptionsName field.
func (o *DhcpOptionsSet) SetDhcpOptionsName(v string) {
	o.DhcpOptionsName = &v
}

// GetDhcpOptionsSetId returns the DhcpOptionsSetId field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetDhcpOptionsSetId() string {
	if o == nil || o.DhcpOptionsSetId == nil {
		var ret string
		return ret
	}
	return *o.DhcpOptionsSetId
}

// GetDhcpOptionsSetIdOk returns a tuple with the DhcpOptionsSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetDhcpOptionsSetIdOk() (*string, bool) {
	if o == nil || o.DhcpOptionsSetId == nil {
		return nil, false
	}
	return o.DhcpOptionsSetId, true
}

// HasDhcpOptionsSetId returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasDhcpOptionsSetId() bool {
	if o != nil && o.DhcpOptionsSetId != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSetId gets a reference to the given string and assigns it to the DhcpOptionsSetId field.
func (o *DhcpOptionsSet) SetDhcpOptionsSetId(v string) {
	o.DhcpOptionsSetId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *DhcpOptionsSet) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainNameServers returns the DomainNameServers field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetDomainNameServers() []string {
	if o == nil || o.DomainNameServers == nil {
		var ret []string
		return ret
	}
	return *o.DomainNameServers
}

// GetDomainNameServersOk returns a tuple with the DomainNameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetDomainNameServersOk() (*[]string, bool) {
	if o == nil || o.DomainNameServers == nil {
		return nil, false
	}
	return o.DomainNameServers, true
}

// HasDomainNameServers returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasDomainNameServers() bool {
	if o != nil && o.DomainNameServers != nil {
		return true
	}

	return false
}

// SetDomainNameServers gets a reference to the given []string and assigns it to the DomainNameServers field.
func (o *DhcpOptionsSet) SetDomainNameServers(v []string) {
	o.DomainNameServers = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetNtpServers() []string {
	if o == nil || o.NtpServers == nil {
		var ret []string
		return ret
	}
	return *o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetNtpServersOk() (*[]string, bool) {
	if o == nil || o.NtpServers == nil {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasNtpServers() bool {
	if o != nil && o.NtpServers != nil {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *DhcpOptionsSet) SetNtpServers(v []string) {
	o.NtpServers = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DhcpOptionsSet) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DhcpOptionsSet) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DhcpOptionsSet) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *DhcpOptionsSet) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o DhcpOptionsSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["Default"] = o.Default
	}
	if o.DhcpOptionsName != nil {
		toSerialize["DhcpOptionsName"] = o.DhcpOptionsName
	}
	if o.DhcpOptionsSetId != nil {
		toSerialize["DhcpOptionsSetId"] = o.DhcpOptionsSetId
	}
	if o.DomainName != nil {
		toSerialize["DomainName"] = o.DomainName
	}
	if o.DomainNameServers != nil {
		toSerialize["DomainNameServers"] = o.DomainNameServers
	}
	if o.NtpServers != nil {
		toSerialize["NtpServers"] = o.NtpServers
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableDhcpOptionsSet struct {
	value *DhcpOptionsSet
	isSet bool
}

func (v NullableDhcpOptionsSet) Get() *DhcpOptionsSet {
	return v.value
}

func (v *NullableDhcpOptionsSet) Set(val *DhcpOptionsSet) {
	v.value = val
	v.isSet = true
}

func (v NullableDhcpOptionsSet) IsSet() bool {
	return v.isSet
}

func (v *NullableDhcpOptionsSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhcpOptionsSet(val *DhcpOptionsSet) *NullableDhcpOptionsSet {
	return &NullableDhcpOptionsSet{value: val, isSet: true}
}

func (v NullableDhcpOptionsSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhcpOptionsSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DirectLink Information about the DirectLink.
type DirectLink struct {
	// The account ID of the owner of the DirectLink.
	AccountId *string `json:"AccountId,omitempty"`
	// The physical link bandwidth (either 1 Gbps or 10 Gbps).
	Bandwidth *string `json:"Bandwidth,omitempty"`
	// The ID of the DirectLink (for example, dxcon-xxxxxxxx).
	DirectLinkId *string `json:"DirectLinkId,omitempty"`
	// The name of the DirectLink.
	DirectLinkName *string `json:"DirectLinkName,omitempty"`
	// The datacenter where the DirectLink is located.
	Location *string `json:"Location,omitempty"`
	// The Region in which the DirectLink has been created.
	RegionName *string `json:"RegionName,omitempty"`
	// The state of the DirectLink.<br /> * `requested`: The DirectLink is requested but the request has not been validated yet.<br /> * `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br /> * `available`: The physical link is established and the connection is ready to use.<br /> * `deleting`: The deletion process is in progress.<br /> * `deleted`: The DirectLink is deleted.
	State *string `json:"State,omitempty"`
}

// NewDirectLink instantiates a new DirectLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectLink() *DirectLink {
	this := DirectLink{}
	return &this
}

// NewDirectLinkWithDefaults instantiates a new DirectLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectLinkWithDefaults() *DirectLink {
	this := DirectLink{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *DirectLink) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DirectLink) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DirectLink) SetAccountId(v string) {
	o.AccountId = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *DirectLink) GetBandwidth() string {
	if o == nil || o.Bandwidth == nil {
		var ret string
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetBandwidthOk() (*string, bool) {
	if o == nil || o.Bandwidth == nil {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *DirectLink) HasBandwidth() bool {
	if o != nil && o.Bandwidth != nil {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given string and assigns it to the Bandwidth field.
func (o *DirectLink) SetBandwidth(v string) {
	o.Bandwidth = &v
}

// GetDirectLinkId returns the DirectLinkId field value if set, zero value otherwise.
func (o *DirectLink) GetDirectLinkId() string {
	if o == nil || o.DirectLinkId == nil {
		var ret string
		return ret
	}
	return *o.DirectLinkId
}

// GetDirectLinkIdOk returns a tuple with the DirectLinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetDirectLinkIdOk() (*string, bool) {
	if o == nil || o.DirectLinkId == nil {
		return nil, false
	}
	return o.DirectLinkId, true
}

// HasDirectLinkId returns a boolean if a field has been set.
func (o *DirectLink) HasDirectLinkId() bool {
	if o != nil && o.DirectLinkId != nil {
		return true
	}

	return false
}

// SetDirectLinkId gets a reference to the given string and assigns it to the DirectLinkId field.
func (o *DirectLink) SetDirectLinkId(v string) {
	o.DirectLinkId = &v
}

// GetDirectLinkName returns the DirectLinkName field value if set, zero value otherwise.
func (o *DirectLink) GetDirectLinkName() string {
	if o == nil || o.DirectLinkName == nil {
		var ret string
		return ret
	}
	return *o.DirectLinkName
}

// GetDirectLinkNameOk returns a tuple with the DirectLinkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetDirectLinkNameOk() (*string, bool) {
	if o == nil || o.DirectLinkName == nil {
		return nil, false
	}
	return o.DirectLinkName, true
}

// HasDirectLinkName returns a boolean if a field has been set.
func (o *DirectLink) HasDirectLinkName() bool {
	if o != nil && o.DirectLinkName != nil {
		return true
	}

	return false
}

// SetDirectLinkName gets a reference to the given string and assigns it to the DirectLinkName field.
func (o *DirectLink) SetDirectLinkName(v string) {
	o.DirectLinkName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *DirectLink) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *DirectLink) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *DirectLink) SetLocation(v string) {
	o.Location = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *DirectLink) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *DirectLink) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *DirectLink) SetRegionName(v string) {
	o.RegionName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DirectLink) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLink) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DirectLink) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DirectLink) SetState(v string) {
	o.State = &v
}

func (o DirectLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Bandwidth != nil {
		toSerialize["Bandwidth"] = o.Bandwidth
	}
	if o.DirectLinkId != nil {
		toSerialize["DirectLinkId"] = o.DirectLinkId
	}
	if o.DirectLinkName != nil {
		toSerialize["DirectLinkName"] = o.DirectLinkName
	}
	if o.Location != nil {
		toSerialize["Location"] = o.Location
	}
	if o.RegionName != nil {
		toSerialize["RegionName"] = o.RegionName
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableDirectLink struct {
	value *DirectLink
	isSet bool
}

func (v NullableDirectLink) Get() *DirectLink {
	return v.value
}

func (v *NullableDirectLink) Set(val *DirectLink) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectLink) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectLink(val *DirectLink) *NullableDirectLink {
	return &NullableDirectLink{value: val, isSet: true}
}

func (v NullableDirectLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DirectLinkInterface Information about the DirectLink interface.
type DirectLinkInterface struct {
	// The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface.
	BgpAsn int32 `json:"BgpAsn"`
	// The BGP authentication key.
	BgpKey *string `json:"BgpKey,omitempty"`
	// The IP address on the customer's side of the DirectLink interface.
	ClientPrivateIp *string `json:"ClientPrivateIp,omitempty"`
	// The name of the DirectLink interface.
	DirectLinkInterfaceName string `json:"DirectLinkInterfaceName"`
	// The IP address on 3DS OUTSCALE's side of the DirectLink interface.
	OutscalePrivateIp *string `json:"OutscalePrivateIp,omitempty"`
	// The ID of the target virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
	// The VLAN number associated with the DirectLink interface.
	Vlan int32 `json:"Vlan"`
}

// NewDirectLinkInterface instantiates a new DirectLinkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectLinkInterface(bgpAsn int32, directLinkInterfaceName string, virtualGatewayId string, vlan int32, ) *DirectLinkInterface {
	this := DirectLinkInterface{}
	this.BgpAsn = bgpAsn
	this.DirectLinkInterfaceName = directLinkInterfaceName
	this.VirtualGatewayId = virtualGatewayId
	this.Vlan = vlan
	return &this
}

// NewDirectLinkInterfaceWithDefaults instantiates a new DirectLinkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectLinkInterfaceWithDefaults() *DirectLinkInterface {
	this := DirectLinkInterface{}
	return &this
}

// GetBgpAsn returns the BgpAsn field value
func (o *DirectLinkInterface) GetBgpAsn() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.BgpAsn
}

// GetBgpAsnOk returns a tuple with the BgpAsn field value
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetBgpAsnOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BgpAsn, true
}

// SetBgpAsn sets field value
func (o *DirectLinkInterface) SetBgpAsn(v int32) {
	o.BgpAsn = v
}

// GetBgpKey returns the BgpKey field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetBgpKey() string {
	if o == nil || o.BgpKey == nil {
		var ret string
		return ret
	}
	return *o.BgpKey
}

// GetBgpKeyOk returns a tuple with the BgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetBgpKeyOk() (*string, bool) {
	if o == nil || o.BgpKey == nil {
		return nil, false
	}
	return o.BgpKey, true
}

// HasBgpKey returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasBgpKey() bool {
	if o != nil && o.BgpKey != nil {
		return true
	}

	return false
}

// SetBgpKey gets a reference to the given string and assigns it to the BgpKey field.
func (o *DirectLinkInterface) SetBgpKey(v string) {
	o.BgpKey = &v
}

// GetClientPrivateIp returns the ClientPrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetClientPrivateIp() string {
	if o == nil || o.ClientPrivateIp == nil {
		var ret string
		return ret
	}
	return *o.ClientPrivateIp
}

// GetClientPrivateIpOk returns a tuple with the ClientPrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetClientPrivateIpOk() (*string, bool) {
	if o == nil || o.ClientPrivateIp == nil {
		return nil, false
	}
	return o.ClientPrivateIp, true
}

// HasClientPrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasClientPrivateIp() bool {
	if o != nil && o.ClientPrivateIp != nil {
		return true
	}

	return false
}

// SetClientPrivateIp gets a reference to the given string and assigns it to the ClientPrivateIp field.
func (o *DirectLinkInterface) SetClientPrivateIp(v string) {
	o.ClientPrivateIp = &v
}

// GetDirectLinkInterfaceName returns the DirectLinkInterfaceName field value
func (o *DirectLinkInterface) GetDirectLinkInterfaceName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DirectLinkInterfaceName
}

// GetDirectLinkInterfaceNameOk returns a tuple with the DirectLinkInterfaceName field value
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetDirectLinkInterfaceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectLinkInterfaceName, true
}

// SetDirectLinkInterfaceName sets field value
func (o *DirectLinkInterface) SetDirectLinkInterfaceName(v string) {
	o.DirectLinkInterfaceName = v
}

// GetOutscalePrivateIp returns the OutscalePrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetOutscalePrivateIp() string {
	if o == nil || o.OutscalePrivateIp == nil {
		var ret string
		return ret
	}
	return *o.OutscalePrivateIp
}

// GetOutscalePrivateIpOk returns a tuple with the OutscalePrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetOutscalePrivateIpOk() (*string, bool) {
	if o == nil || o.OutscalePrivateIp == nil {
		return nil, false
	}
	return o.OutscalePrivateIp, true
}

// HasOutscalePrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasOutscalePrivateIp() bool {
	if o != nil && o.OutscalePrivateIp != nil {
		return true
	}

	return false
}

// SetOutscalePrivateIp gets a reference to the given string and assigns it to the OutscalePrivateIp field.
func (o *DirectLinkInterface) SetOutscalePrivateIp(v string) {
	o.OutscalePrivateIp = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *DirectLinkInterface) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *DirectLinkInterface) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

// GetVlan returns the Vlan field value
func (o *DirectLinkInterface) GetVlan() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetVlanOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vlan, true
}

// SetVlan sets field value
func (o *DirectLinkInterface) SetVlan(v int32) {
	o.Vlan = v
}

func (o DirectLinkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BgpAsn"] = o.BgpAsn
	}
	if o.BgpKey != nil {
		toSerialize["BgpKey"] = o.BgpKey
	}
	if o.ClientPrivateIp != nil {
		toSerialize["ClientPrivateIp"] = o.ClientPrivateIp
	}
	if true {
		toSerialize["DirectLinkInterfaceName"] = o.DirectLinkInterfaceName
	}
	if o.OutscalePrivateIp != nil {
		toSerialize["OutscalePrivateIp"] = o.OutscalePrivateIp
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	if true {
		toSerialize["Vlan"] = o.Vlan
	}
	return json.Marshal(toSerialize)
}

type NullableDirectLinkInterface struct {
	value *DirectLinkInterface
	isSet bool
}

func (v NullableDirectLinkInterface) Get() *DirectLinkInterface {
	return v.value
}

func (v *NullableDirectLinkInterface) Set(val *DirectLinkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectLinkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectLinkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectLinkInterface(val *DirectLinkInterface) *NullableDirectLinkInterface {
	return &NullableDirectLinkInterface{value: val, isSet: true}
}

func (v NullableDirectLinkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectLinkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// DirectLinkInterfaces Information about the DirectLink interfaces.
type DirectLinkInterfaces struct {
	// The account ID of the owner of the DirectLink interface.
	AccountId *string `json:"AccountId,omitempty"`
	// The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface.
	BgpAsn *int32 `json:"BgpAsn,omitempty"`
	// The BGP authentication key.
	BgpKey *string `json:"BgpKey,omitempty"`
	// The IP address on the customer's side of the DirectLink interface.
	ClientPrivateIp *string `json:"ClientPrivateIp,omitempty"`
	// The ID of the DirectLink.
	DirectLinkId *string `json:"DirectLinkId,omitempty"`
	// The ID of the DirectLink interface.
	DirectLinkInterfaceId *string `json:"DirectLinkInterfaceId,omitempty"`
	// The name of the DirectLink interface.
	DirectLinkInterfaceName *string `json:"DirectLinkInterfaceName,omitempty"`
	// The type of the DirectLink interface (always `private`).
	InterfaceType *string `json:"InterfaceType,omitempty"`
	// The datacenter where the DirectLink interface is located.
	Location *string `json:"Location,omitempty"`
	// The IP address on 3DS OUTSCALE's side of the DirectLink interface.
	OutscalePrivateIp *string `json:"OutscalePrivateIp,omitempty"`
	// The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`).
	State *string `json:"State,omitempty"`
	// The ID of the target virtual gateway.
	VirtualGatewayId *string `json:"VirtualGatewayId,omitempty"`
	// The VLAN number associated with the DirectLink interface.
	Vlan *int32 `json:"Vlan,omitempty"`
}

// NewDirectLinkInterfaces instantiates a new DirectLinkInterfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectLinkInterfaces() *DirectLinkInterfaces {
	this := DirectLinkInterfaces{}
	return &this
}

// NewDirectLinkInterfacesWithDefaults instantiates a new DirectLinkInterfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectLinkInterfacesWithDefaults() *DirectLinkInterfaces {
	this := DirectLinkInterfaces{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DirectLinkInterfaces) SetAccountId(v string) {
	o.AccountId = &v
}

// GetBgpAsn returns the BgpAsn field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetBgpAsn() int32 {
	if o == nil || o.BgpAsn == nil {
		var ret int32
		return ret
	}
	return *o.BgpAsn
}

// GetBgpAsnOk returns a tuple with the BgpAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetBgpAsnOk() (*int32, bool) {
	if o == nil || o.BgpAsn == nil {
		return nil, false
	}
	return o.BgpAsn, true
}

// HasBgpAsn returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasBgpAsn() bool {
	if o != nil && o.BgpAsn != nil {
		return true
	}

	return false
}

// SetBgpAsn gets a reference to the given int32 and assigns it to the BgpAsn field.
func (o *DirectLinkInterfaces) SetBgpAsn(v int32) {
	o.BgpAsn = &v
}

// GetBgpKey returns the BgpKey field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetBgpKey() string {
	if o == nil || o.BgpKey == nil {
		var ret string
		return ret
	}
	return *o.BgpKey
}

// GetBgpKeyOk returns a tuple with the BgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetBgpKeyOk() (*string, bool) {
	if o == nil || o.BgpKey == nil {
		return nil, false
	}
	return o.BgpKey, true
}

// HasBgpKey returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasBgpKey() bool {
	if o != nil && o.BgpKey != nil {
		return true
	}

	return false
}

// SetBgpKey gets a reference to the given string and assigns it to the BgpKey field.
func (o *DirectLinkInterfaces) SetBgpKey(v string) {
	o.BgpKey = &v
}

// GetClientPrivateIp returns the ClientPrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetClientPrivateIp() string {
	if o == nil || o.ClientPrivateIp == nil {
		var ret string
		return ret
	}
	return *o.ClientPrivateIp
}

// GetClientPrivateIpOk returns a tuple with the ClientPrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetClientPrivateIpOk() (*string, bool) {
	if o == nil || o.ClientPrivateIp == nil {
		return nil, false
	}
	return o.ClientPrivateIp, true
}

// HasClientPrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasClientPrivateIp() bool {
	if o != nil && o.ClientPrivateIp != nil {
		return true
	}

	return false
}

// SetClientPrivateIp gets a reference to the given string and assigns it to the ClientPrivateIp field.
func (o *DirectLinkInterfaces) SetClientPrivateIp(v string) {
	o.ClientPrivateIp = &v
}

// GetDirectLinkId returns the DirectLinkId field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetDirectLinkId() string {
	if o == nil || o.DirectLinkId == nil {
		var ret string
		return ret
	}
	return *o.DirectLinkId
}

// GetDirectLinkIdOk returns a tuple with the DirectLinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetDirectLinkIdOk() (*string, bool) {
	if o == nil || o.DirectLinkId == nil {
		return nil, false
	}
	return o.DirectLinkId, true
}

// HasDirectLinkId returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasDirectLinkId() bool {
	if o != nil && o.DirectLinkId != nil {
		return true
	}

	return false
}

// SetDirectLinkId gets a reference to the given string and assigns it to the DirectLinkId field.
func (o *DirectLinkInterfaces) SetDirectLinkId(v string) {
	o.DirectLinkId = &v
}

// GetDirectLinkInterfaceId returns the DirectLinkInterfaceId field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetDirectLinkInterfaceId() string {
	if o == nil || o.DirectLinkInterfaceId == nil {
		var ret string
		return ret
	}
	return *o.DirectLinkInterfaceId
}

// GetDirectLinkInterfaceIdOk returns a tuple with the DirectLinkInterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetDirectLinkInterfaceIdOk() (*string, bool) {
	if o == nil || o.DirectLinkInterfaceId == nil {
		return nil, false
	}
	return o.DirectLinkInterfaceId, true
}

// HasDirectLinkInterfaceId returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasDirectLinkInterfaceId() bool {
	if o != nil && o.DirectLinkInterfaceId != nil {
		return true
	}

	return false
}

// SetDirectLinkInterfaceId gets a reference to the given string and assigns it to the DirectLinkInterfaceId field.
func (o *DirectLinkInterfaces) SetDirectLinkInterfaceId(v string) {
	o.DirectLinkInterfaceId = &v
}

// GetDirectLinkInterfaceName returns the DirectLinkInterfaceName field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetDirectLinkInterfaceName() string {
	if o == nil || o.DirectLinkInterfaceName == nil {
		var ret string
		return ret
	}
	return *o.DirectLinkInterfaceName
}

// GetDirectLinkInterfaceNameOk returns a tuple with the DirectLinkInterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetDirectLinkInterfaceNameOk() (*string, bool) {
	if o == nil || o.DirectLinkInterfaceName == nil {
		return nil, false
	}
	return o.DirectLinkInterfaceName, true
}

// HasDirectLinkInterfaceName returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasDirectLinkInterfaceName() bool {
	if o != nil && o.DirectLinkInterfaceName != nil {
		return true
	}

	return false
}

// SetDirectLinkInterfaceName gets a reference to the given string and assigns it to the DirectLinkInterfaceName field.
func (o *DirectLinkInterfaces) SetDirectLinkInterfaceName(v string) {
	o.DirectLinkInterfaceName = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetInterfaceType() string {
	if o == nil || o.InterfaceType == nil {
		var ret string
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetInterfaceTypeOk() (*string, bool) {
	if o == nil || o.InterfaceType == nil {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasInterfaceType() bool {
	if o != nil && o.InterfaceType != nil {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given string and assigns it to the InterfaceType field.
func (o *DirectLinkInterfaces) SetInterfaceType(v string) {
	o.InterfaceType = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *DirectLinkInterfaces) SetLocation(v string) {
	o.Location = &v
}

// GetOutscalePrivateIp returns the OutscalePrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetOutscalePrivateIp() string {
	if o == nil || o.OutscalePrivateIp == nil {
		var ret string
		return ret
	}
	return *o.OutscalePrivateIp
}

// GetOutscalePrivateIpOk returns a tuple with the OutscalePrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetOutscalePrivateIpOk() (*string, bool) {
	if o == nil || o.OutscalePrivateIp == nil {
		return nil, false
	}
	return o.OutscalePrivateIp, true
}

// HasOutscalePrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasOutscalePrivateIp() bool {
	if o != nil && o.OutscalePrivateIp != nil {
		return true
	}

	return false
}

// SetOutscalePrivateIp gets a reference to the given string and assigns it to the OutscalePrivateIp field.
func (o *DirectLinkInterfaces) SetOutscalePrivateIp(v string) {
	o.OutscalePrivateIp = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DirectLinkInterfaces) SetState(v string) {
	o.State = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetVirtualGatewayId() string {
	if o == nil || o.VirtualGatewayId == nil {
		var ret string
		return ret
	}
	return *o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil || o.VirtualGatewayId == nil {
		return nil, false
	}
	return o.VirtualGatewayId, true
}

// HasVirtualGatewayId returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasVirtualGatewayId() bool {
	if o != nil && o.VirtualGatewayId != nil {
		return true
	}

	return false
}

// SetVirtualGatewayId gets a reference to the given string and assigns it to the VirtualGatewayId field.
func (o *DirectLinkInterfaces) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *DirectLinkInterfaces) GetVlan() int32 {
	if o == nil || o.Vlan == nil {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterfaces) GetVlanOk() (*int32, bool) {
	if o == nil || o.Vlan == nil {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *DirectLinkInterfaces) HasVlan() bool {
	if o != nil && o.Vlan != nil {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *DirectLinkInterfaces) SetVlan(v int32) {
	o.Vlan = &v
}

func (o DirectLinkInterfaces) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.BgpAsn != nil {
		toSerialize["BgpAsn"] = o.BgpAsn
	}
	if o.BgpKey != nil {
		toSerialize["BgpKey"] = o.BgpKey
	}
	if o.ClientPrivateIp != nil {
		toSerialize["ClientPrivateIp"] = o.ClientPrivateIp
	}
	if o.DirectLinkId != nil {
		toSerialize["DirectLinkId"] = o.DirectLinkId
	}
	if o.DirectLinkInterfaceId != nil {
		toSerialize["DirectLinkInterfaceId"] = o.DirectLinkInterfaceId
	}
	if o.DirectLinkInterfaceName != nil {
		toSerialize["DirectLinkInterfaceName"] = o.DirectLinkInterfaceName
	}
	if o.InterfaceType != nil {
		toSerialize["InterfaceType"] = o.InterfaceType
	}
	if o.Location != nil {
		toSerialize["Location"] = o.Location
	}
	if o.OutscalePrivateIp != nil {
		toSerialize["OutscalePrivateIp"] = o.OutscalePrivateIp
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.VirtualGatewayId != nil {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	if o.Vlan != nil {
		toSerialize["Vlan"] = o.Vlan
	}
	return json.Marshal(toSerialize)
}

type NullableDirectLinkInterfaces struct {
	value *DirectLinkInterfaces
	isSet bool
}

func (v NullableDirectLinkInterfaces) Get() *DirectLinkInterfaces {
	return v.value
}

func (v *NullableDirectLinkInterfaces) Set(val *DirectLinkInterfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectLinkInterfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectLinkInterfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectLinkInterfaces(val *DirectLinkInterfaces) *NullableDirectLinkInterfaces {
	return &NullableDirectLinkInterfaces{value: val, isSet: true}
}

func (v NullableDirectLinkInterfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectLinkInterfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ErrorResponse struct for ErrorResponse
type ErrorResponse struct {
	// One or more errors.
	Errors *[]Errors `json:"Errors,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewErrorResponse instantiates a new ErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponse() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// NewErrorResponseWithDefaults instantiates a new ErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseWithDefaults() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ErrorResponse) GetErrors() []Errors {
	if o == nil || o.Errors == nil {
		var ret []Errors
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetErrorsOk() (*[]Errors, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ErrorResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Errors and assigns it to the Errors field.
func (o *ErrorResponse) SetErrors(v []Errors) {
	o.Errors = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ErrorResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ErrorResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ErrorResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["Errors"] = o.Errors
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableErrorResponse struct {
	value *ErrorResponse
	isSet bool
}

func (v NullableErrorResponse) Get() *ErrorResponse {
	return v.value
}

func (v *NullableErrorResponse) Set(val *ErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponse(val *ErrorResponse) *NullableErrorResponse {
	return &NullableErrorResponse{value: val, isSet: true}
}

func (v NullableErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Errors Information about the errors.
type Errors struct {
	// The code of the error.
	Code *string `json:"Code,omitempty"`
	// The details of the error.
	Details *string `json:"Details,omitempty"`
	// The type of the error.
	Type *string `json:"Type,omitempty"`
}

// NewErrors instantiates a new Errors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrors() *Errors {
	this := Errors{}
	return &this
}

// NewErrorsWithDefaults instantiates a new Errors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorsWithDefaults() *Errors {
	this := Errors{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Errors) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Errors) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Errors) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Errors) SetCode(v string) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Errors) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Errors) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Errors) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *Errors) SetDetails(v string) {
	o.Details = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Errors) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Errors) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Errors) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Errors) SetType(v string) {
	o.Type = &v
}

func (o Errors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Details != nil {
		toSerialize["Details"] = o.Details
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableErrors struct {
	value *Errors
	isSet bool
}

func (v NullableErrors) Get() *Errors {
	return v.value
}

func (v *NullableErrors) Set(val *Errors) {
	v.value = val
	v.isSet = true
}

func (v NullableErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrors(val *Errors) *NullableErrors {
	return &NullableErrors{value: val, isSet: true}
}

func (v NullableErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersAccessKeys One or more filters.
type FiltersAccessKeys struct {
	// The IDs of the access keys.
	AccessKeyIds *[]string `json:"AccessKeyIds,omitempty"`
	// The states of the access keys (`ACTIVE` \\| `INACTIVE`).
	States *[]string `json:"States,omitempty"`
}

// NewFiltersAccessKeys instantiates a new FiltersAccessKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersAccessKeys() *FiltersAccessKeys {
	this := FiltersAccessKeys{}
	return &this
}

// NewFiltersAccessKeysWithDefaults instantiates a new FiltersAccessKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersAccessKeysWithDefaults() *FiltersAccessKeys {
	this := FiltersAccessKeys{}
	return &this
}

// GetAccessKeyIds returns the AccessKeyIds field value if set, zero value otherwise.
func (o *FiltersAccessKeys) GetAccessKeyIds() []string {
	if o == nil || o.AccessKeyIds == nil {
		var ret []string
		return ret
	}
	return *o.AccessKeyIds
}

// GetAccessKeyIdsOk returns a tuple with the AccessKeyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersAccessKeys) GetAccessKeyIdsOk() (*[]string, bool) {
	if o == nil || o.AccessKeyIds == nil {
		return nil, false
	}
	return o.AccessKeyIds, true
}

// HasAccessKeyIds returns a boolean if a field has been set.
func (o *FiltersAccessKeys) HasAccessKeyIds() bool {
	if o != nil && o.AccessKeyIds != nil {
		return true
	}

	return false
}

// SetAccessKeyIds gets a reference to the given []string and assigns it to the AccessKeyIds field.
func (o *FiltersAccessKeys) SetAccessKeyIds(v []string) {
	o.AccessKeyIds = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersAccessKeys) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersAccessKeys) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersAccessKeys) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersAccessKeys) SetStates(v []string) {
	o.States = &v
}

func (o FiltersAccessKeys) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyIds != nil {
		toSerialize["AccessKeyIds"] = o.AccessKeyIds
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersAccessKeys struct {
	value *FiltersAccessKeys
	isSet bool
}

func (v NullableFiltersAccessKeys) Get() *FiltersAccessKeys {
	return v.value
}

func (v *NullableFiltersAccessKeys) Set(val *FiltersAccessKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersAccessKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersAccessKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersAccessKeys(val *FiltersAccessKeys) *NullableFiltersAccessKeys {
	return &NullableFiltersAccessKeys{value: val, isSet: true}
}

func (v NullableFiltersAccessKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersAccessKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersApiLog One or more filters.
type FiltersApiLog struct {
	// One or more API keys used for the query.
	QueryAccessKeys *[]string `json:"QueryAccessKeys,omitempty"`
	// The name of one or more API services used for the query.
	QueryApiNames *[]string `json:"QueryApiNames,omitempty"`
	// The name of one or more calls.
	QueryCallNames *[]string `json:"QueryCallNames,omitempty"`
	// The logs of the queries made after the date you specify, in ISO 8601 format (for example, `2017-06-14`).
	QueryDateAfter *string `json:"QueryDateAfter,omitempty"`
	// The logs of the queries made before the date you specify, in ISO 8601 format (for example, `2017-06-14`).
	QueryDateBefore *string `json:"QueryDateBefore,omitempty"`
	// One or more IP addresses used for the query.
	QueryIpAddresses *[]string `json:"QueryIpAddresses,omitempty"`
	// One or more user agents used for the HTTP request.
	QueryUserAgents *[]string `json:"QueryUserAgents,omitempty"`
	// One or more request IDs.
	RequestIds *[]string `json:"RequestIds,omitempty"`
	// One or more HTTP codes provided by the responses.
	ResponseStatusCodes *[]int32 `json:"ResponseStatusCodes,omitempty"`
}

// NewFiltersApiLog instantiates a new FiltersApiLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersApiLog() *FiltersApiLog {
	this := FiltersApiLog{}
	return &this
}

// NewFiltersApiLogWithDefaults instantiates a new FiltersApiLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersApiLogWithDefaults() *FiltersApiLog {
	this := FiltersApiLog{}
	return &this
}

// GetQueryAccessKeys returns the QueryAccessKeys field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryAccessKeys() []string {
	if o == nil || o.QueryAccessKeys == nil {
		var ret []string
		return ret
	}
	return *o.QueryAccessKeys
}

// GetQueryAccessKeysOk returns a tuple with the QueryAccessKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryAccessKeysOk() (*[]string, bool) {
	if o == nil || o.QueryAccessKeys == nil {
		return nil, false
	}
	return o.QueryAccessKeys, true
}

// HasQueryAccessKeys returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryAccessKeys() bool {
	if o != nil && o.QueryAccessKeys != nil {
		return true
	}

	return false
}

// SetQueryAccessKeys gets a reference to the given []string and assigns it to the QueryAccessKeys field.
func (o *FiltersApiLog) SetQueryAccessKeys(v []string) {
	o.QueryAccessKeys = &v
}

// GetQueryApiNames returns the QueryApiNames field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryApiNames() []string {
	if o == nil || o.QueryApiNames == nil {
		var ret []string
		return ret
	}
	return *o.QueryApiNames
}

// GetQueryApiNamesOk returns a tuple with the QueryApiNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryApiNamesOk() (*[]string, bool) {
	if o == nil || o.QueryApiNames == nil {
		return nil, false
	}
	return o.QueryApiNames, true
}

// HasQueryApiNames returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryApiNames() bool {
	if o != nil && o.QueryApiNames != nil {
		return true
	}

	return false
}

// SetQueryApiNames gets a reference to the given []string and assigns it to the QueryApiNames field.
func (o *FiltersApiLog) SetQueryApiNames(v []string) {
	o.QueryApiNames = &v
}

// GetQueryCallNames returns the QueryCallNames field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryCallNames() []string {
	if o == nil || o.QueryCallNames == nil {
		var ret []string
		return ret
	}
	return *o.QueryCallNames
}

// GetQueryCallNamesOk returns a tuple with the QueryCallNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryCallNamesOk() (*[]string, bool) {
	if o == nil || o.QueryCallNames == nil {
		return nil, false
	}
	return o.QueryCallNames, true
}

// HasQueryCallNames returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryCallNames() bool {
	if o != nil && o.QueryCallNames != nil {
		return true
	}

	return false
}

// SetQueryCallNames gets a reference to the given []string and assigns it to the QueryCallNames field.
func (o *FiltersApiLog) SetQueryCallNames(v []string) {
	o.QueryCallNames = &v
}

// GetQueryDateAfter returns the QueryDateAfter field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryDateAfter() string {
	if o == nil || o.QueryDateAfter == nil {
		var ret string
		return ret
	}
	return *o.QueryDateAfter
}

// GetQueryDateAfterOk returns a tuple with the QueryDateAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryDateAfterOk() (*string, bool) {
	if o == nil || o.QueryDateAfter == nil {
		return nil, false
	}
	return o.QueryDateAfter, true
}

// HasQueryDateAfter returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryDateAfter() bool {
	if o != nil && o.QueryDateAfter != nil {
		return true
	}

	return false
}

// SetQueryDateAfter gets a reference to the given string and assigns it to the QueryDateAfter field.
func (o *FiltersApiLog) SetQueryDateAfter(v string) {
	o.QueryDateAfter = &v
}

// GetQueryDateBefore returns the QueryDateBefore field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryDateBefore() string {
	if o == nil || o.QueryDateBefore == nil {
		var ret string
		return ret
	}
	return *o.QueryDateBefore
}

// GetQueryDateBeforeOk returns a tuple with the QueryDateBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryDateBeforeOk() (*string, bool) {
	if o == nil || o.QueryDateBefore == nil {
		return nil, false
	}
	return o.QueryDateBefore, true
}

// HasQueryDateBefore returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryDateBefore() bool {
	if o != nil && o.QueryDateBefore != nil {
		return true
	}

	return false
}

// SetQueryDateBefore gets a reference to the given string and assigns it to the QueryDateBefore field.
func (o *FiltersApiLog) SetQueryDateBefore(v string) {
	o.QueryDateBefore = &v
}

// GetQueryIpAddresses returns the QueryIpAddresses field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryIpAddresses() []string {
	if o == nil || o.QueryIpAddresses == nil {
		var ret []string
		return ret
	}
	return *o.QueryIpAddresses
}

// GetQueryIpAddressesOk returns a tuple with the QueryIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryIpAddressesOk() (*[]string, bool) {
	if o == nil || o.QueryIpAddresses == nil {
		return nil, false
	}
	return o.QueryIpAddresses, true
}

// HasQueryIpAddresses returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryIpAddresses() bool {
	if o != nil && o.QueryIpAddresses != nil {
		return true
	}

	return false
}

// SetQueryIpAddresses gets a reference to the given []string and assigns it to the QueryIpAddresses field.
func (o *FiltersApiLog) SetQueryIpAddresses(v []string) {
	o.QueryIpAddresses = &v
}

// GetQueryUserAgents returns the QueryUserAgents field value if set, zero value otherwise.
func (o *FiltersApiLog) GetQueryUserAgents() []string {
	if o == nil || o.QueryUserAgents == nil {
		var ret []string
		return ret
	}
	return *o.QueryUserAgents
}

// GetQueryUserAgentsOk returns a tuple with the QueryUserAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetQueryUserAgentsOk() (*[]string, bool) {
	if o == nil || o.QueryUserAgents == nil {
		return nil, false
	}
	return o.QueryUserAgents, true
}

// HasQueryUserAgents returns a boolean if a field has been set.
func (o *FiltersApiLog) HasQueryUserAgents() bool {
	if o != nil && o.QueryUserAgents != nil {
		return true
	}

	return false
}

// SetQueryUserAgents gets a reference to the given []string and assigns it to the QueryUserAgents field.
func (o *FiltersApiLog) SetQueryUserAgents(v []string) {
	o.QueryUserAgents = &v
}

// GetRequestIds returns the RequestIds field value if set, zero value otherwise.
func (o *FiltersApiLog) GetRequestIds() []string {
	if o == nil || o.RequestIds == nil {
		var ret []string
		return ret
	}
	return *o.RequestIds
}

// GetRequestIdsOk returns a tuple with the RequestIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetRequestIdsOk() (*[]string, bool) {
	if o == nil || o.RequestIds == nil {
		return nil, false
	}
	return o.RequestIds, true
}

// HasRequestIds returns a boolean if a field has been set.
func (o *FiltersApiLog) HasRequestIds() bool {
	if o != nil && o.RequestIds != nil {
		return true
	}

	return false
}

// SetRequestIds gets a reference to the given []string and assigns it to the RequestIds field.
func (o *FiltersApiLog) SetRequestIds(v []string) {
	o.RequestIds = &v
}

// GetResponseStatusCodes returns the ResponseStatusCodes field value if set, zero value otherwise.
func (o *FiltersApiLog) GetResponseStatusCodes() []int32 {
	if o == nil || o.ResponseStatusCodes == nil {
		var ret []int32
		return ret
	}
	return *o.ResponseStatusCodes
}

// GetResponseStatusCodesOk returns a tuple with the ResponseStatusCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersApiLog) GetResponseStatusCodesOk() (*[]int32, bool) {
	if o == nil || o.ResponseStatusCodes == nil {
		return nil, false
	}
	return o.ResponseStatusCodes, true
}

// HasResponseStatusCodes returns a boolean if a field has been set.
func (o *FiltersApiLog) HasResponseStatusCodes() bool {
	if o != nil && o.ResponseStatusCodes != nil {
		return true
	}

	return false
}

// SetResponseStatusCodes gets a reference to the given []int32 and assigns it to the ResponseStatusCodes field.
func (o *FiltersApiLog) SetResponseStatusCodes(v []int32) {
	o.ResponseStatusCodes = &v
}

func (o FiltersApiLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QueryAccessKeys != nil {
		toSerialize["QueryAccessKeys"] = o.QueryAccessKeys
	}
	if o.QueryApiNames != nil {
		toSerialize["QueryApiNames"] = o.QueryApiNames
	}
	if o.QueryCallNames != nil {
		toSerialize["QueryCallNames"] = o.QueryCallNames
	}
	if o.QueryDateAfter != nil {
		toSerialize["QueryDateAfter"] = o.QueryDateAfter
	}
	if o.QueryDateBefore != nil {
		toSerialize["QueryDateBefore"] = o.QueryDateBefore
	}
	if o.QueryIpAddresses != nil {
		toSerialize["QueryIpAddresses"] = o.QueryIpAddresses
	}
	if o.QueryUserAgents != nil {
		toSerialize["QueryUserAgents"] = o.QueryUserAgents
	}
	if o.RequestIds != nil {
		toSerialize["RequestIds"] = o.RequestIds
	}
	if o.ResponseStatusCodes != nil {
		toSerialize["ResponseStatusCodes"] = o.ResponseStatusCodes
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersApiLog struct {
	value *FiltersApiLog
	isSet bool
}

func (v NullableFiltersApiLog) Get() *FiltersApiLog {
	return v.value
}

func (v *NullableFiltersApiLog) Set(val *FiltersApiLog) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersApiLog) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersApiLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersApiLog(val *FiltersApiLog) *NullableFiltersApiLog {
	return &NullableFiltersApiLog{value: val, isSet: true}
}

func (v NullableFiltersApiLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersApiLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersClientGateway One or more filters.
type FiltersClientGateway struct {
	// The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
	BgpAsns *[]int32 `json:"BgpAsns,omitempty"`
	// The IDs of the client gateways.
	ClientGatewayIds *[]string `json:"ClientGatewayIds,omitempty"`
	// The types of communication tunnels used by the client gateways (only `ipsec.1` is supported).
	ConnectionTypes *[]string `json:"ConnectionTypes,omitempty"`
	// The public IPv4 addresses of the client gateways.
	PublicIps *[]string `json:"PublicIps,omitempty"`
	// The states of the client gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the client gateways.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the client gateways.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the client gateways, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersClientGateway instantiates a new FiltersClientGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersClientGateway() *FiltersClientGateway {
	this := FiltersClientGateway{}
	return &this
}

// NewFiltersClientGatewayWithDefaults instantiates a new FiltersClientGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersClientGatewayWithDefaults() *FiltersClientGateway {
	this := FiltersClientGateway{}
	return &this
}

// GetBgpAsns returns the BgpAsns field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetBgpAsns() []int32 {
	if o == nil || o.BgpAsns == nil {
		var ret []int32
		return ret
	}
	return *o.BgpAsns
}

// GetBgpAsnsOk returns a tuple with the BgpAsns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetBgpAsnsOk() (*[]int32, bool) {
	if o == nil || o.BgpAsns == nil {
		return nil, false
	}
	return o.BgpAsns, true
}

// HasBgpAsns returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasBgpAsns() bool {
	if o != nil && o.BgpAsns != nil {
		return true
	}

	return false
}

// SetBgpAsns gets a reference to the given []int32 and assigns it to the BgpAsns field.
func (o *FiltersClientGateway) SetBgpAsns(v []int32) {
	o.BgpAsns = &v
}

// GetClientGatewayIds returns the ClientGatewayIds field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetClientGatewayIds() []string {
	if o == nil || o.ClientGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.ClientGatewayIds
}

// GetClientGatewayIdsOk returns a tuple with the ClientGatewayIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetClientGatewayIdsOk() (*[]string, bool) {
	if o == nil || o.ClientGatewayIds == nil {
		return nil, false
	}
	return o.ClientGatewayIds, true
}

// HasClientGatewayIds returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasClientGatewayIds() bool {
	if o != nil && o.ClientGatewayIds != nil {
		return true
	}

	return false
}

// SetClientGatewayIds gets a reference to the given []string and assigns it to the ClientGatewayIds field.
func (o *FiltersClientGateway) SetClientGatewayIds(v []string) {
	o.ClientGatewayIds = &v
}

// GetConnectionTypes returns the ConnectionTypes field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetConnectionTypes() []string {
	if o == nil || o.ConnectionTypes == nil {
		var ret []string
		return ret
	}
	return *o.ConnectionTypes
}

// GetConnectionTypesOk returns a tuple with the ConnectionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetConnectionTypesOk() (*[]string, bool) {
	if o == nil || o.ConnectionTypes == nil {
		return nil, false
	}
	return o.ConnectionTypes, true
}

// HasConnectionTypes returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasConnectionTypes() bool {
	if o != nil && o.ConnectionTypes != nil {
		return true
	}

	return false
}

// SetConnectionTypes gets a reference to the given []string and assigns it to the ConnectionTypes field.
func (o *FiltersClientGateway) SetConnectionTypes(v []string) {
	o.ConnectionTypes = &v
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetPublicIps() []string {
	if o == nil || o.PublicIps == nil {
		var ret []string
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetPublicIpsOk() (*[]string, bool) {
	if o == nil || o.PublicIps == nil {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasPublicIps() bool {
	if o != nil && o.PublicIps != nil {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []string and assigns it to the PublicIps field.
func (o *FiltersClientGateway) SetPublicIps(v []string) {
	o.PublicIps = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersClientGateway) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersClientGateway) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersClientGateway) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersClientGateway) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersClientGateway) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersClientGateway) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersClientGateway) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersClientGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BgpAsns != nil {
		toSerialize["BgpAsns"] = o.BgpAsns
	}
	if o.ClientGatewayIds != nil {
		toSerialize["ClientGatewayIds"] = o.ClientGatewayIds
	}
	if o.ConnectionTypes != nil {
		toSerialize["ConnectionTypes"] = o.ConnectionTypes
	}
	if o.PublicIps != nil {
		toSerialize["PublicIps"] = o.PublicIps
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersClientGateway struct {
	value *FiltersClientGateway
	isSet bool
}

func (v NullableFiltersClientGateway) Get() *FiltersClientGateway {
	return v.value
}

func (v *NullableFiltersClientGateway) Set(val *FiltersClientGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersClientGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersClientGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersClientGateway(val *FiltersClientGateway) *NullableFiltersClientGateway {
	return &NullableFiltersClientGateway{value: val, isSet: true}
}

func (v NullableFiltersClientGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersClientGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersDhcpOptions One or more filters.
type FiltersDhcpOptions struct {
	// If `true`, lists all default DHCP options set. If `false`, lists all non-default DHCP options set.
	Default *bool `json:"Default,omitempty"`
	// The IDs of the DHCP options sets.
	DhcpOptionsSetIds *[]string `json:"DhcpOptionsSetIds,omitempty"`
	// The domain name servers used for the DHCP options sets.
	DomainNameServers *[]string `json:"DomainNameServers,omitempty"`
	// The domain names used for the DHCP options sets.
	DomainNames *[]string `json:"DomainNames,omitempty"`
	// The Network Time Protocol (NTP) servers used for the DHCP options sets.
	NtpServers *[]string `json:"NtpServers,omitempty"`
	// The keys of the tags associated with the DHCP options sets.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the DHCP options sets.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the DHCP options sets, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersDhcpOptions instantiates a new FiltersDhcpOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersDhcpOptions() *FiltersDhcpOptions {
	this := FiltersDhcpOptions{}
	return &this
}

// NewFiltersDhcpOptionsWithDefaults instantiates a new FiltersDhcpOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersDhcpOptionsWithDefaults() *FiltersDhcpOptions {
	this := FiltersDhcpOptions{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *FiltersDhcpOptions) SetDefault(v bool) {
	o.Default = &v
}

// GetDhcpOptionsSetIds returns the DhcpOptionsSetIds field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetDhcpOptionsSetIds() []string {
	if o == nil || o.DhcpOptionsSetIds == nil {
		var ret []string
		return ret
	}
	return *o.DhcpOptionsSetIds
}

// GetDhcpOptionsSetIdsOk returns a tuple with the DhcpOptionsSetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetDhcpOptionsSetIdsOk() (*[]string, bool) {
	if o == nil || o.DhcpOptionsSetIds == nil {
		return nil, false
	}
	return o.DhcpOptionsSetIds, true
}

// HasDhcpOptionsSetIds returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasDhcpOptionsSetIds() bool {
	if o != nil && o.DhcpOptionsSetIds != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSetIds gets a reference to the given []string and assigns it to the DhcpOptionsSetIds field.
func (o *FiltersDhcpOptions) SetDhcpOptionsSetIds(v []string) {
	o.DhcpOptionsSetIds = &v
}

// GetDomainNameServers returns the DomainNameServers field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetDomainNameServers() []string {
	if o == nil || o.DomainNameServers == nil {
		var ret []string
		return ret
	}
	return *o.DomainNameServers
}

// GetDomainNameServersOk returns a tuple with the DomainNameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetDomainNameServersOk() (*[]string, bool) {
	if o == nil || o.DomainNameServers == nil {
		return nil, false
	}
	return o.DomainNameServers, true
}

// HasDomainNameServers returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasDomainNameServers() bool {
	if o != nil && o.DomainNameServers != nil {
		return true
	}

	return false
}

// SetDomainNameServers gets a reference to the given []string and assigns it to the DomainNameServers field.
func (o *FiltersDhcpOptions) SetDomainNameServers(v []string) {
	o.DomainNameServers = &v
}

// GetDomainNames returns the DomainNames field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetDomainNames() []string {
	if o == nil || o.DomainNames == nil {
		var ret []string
		return ret
	}
	return *o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetDomainNamesOk() (*[]string, bool) {
	if o == nil || o.DomainNames == nil {
		return nil, false
	}
	return o.DomainNames, true
}

// HasDomainNames returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasDomainNames() bool {
	if o != nil && o.DomainNames != nil {
		return true
	}

	return false
}

// SetDomainNames gets a reference to the given []string and assigns it to the DomainNames field.
func (o *FiltersDhcpOptions) SetDomainNames(v []string) {
	o.DomainNames = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetNtpServers() []string {
	if o == nil || o.NtpServers == nil {
		var ret []string
		return ret
	}
	return *o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetNtpServersOk() (*[]string, bool) {
	if o == nil || o.NtpServers == nil {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasNtpServers() bool {
	if o != nil && o.NtpServers != nil {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *FiltersDhcpOptions) SetNtpServers(v []string) {
	o.NtpServers = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersDhcpOptions) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersDhcpOptions) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersDhcpOptions) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDhcpOptions) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersDhcpOptions) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersDhcpOptions) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersDhcpOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["Default"] = o.Default
	}
	if o.DhcpOptionsSetIds != nil {
		toSerialize["DhcpOptionsSetIds"] = o.DhcpOptionsSetIds
	}
	if o.DomainNameServers != nil {
		toSerialize["DomainNameServers"] = o.DomainNameServers
	}
	if o.DomainNames != nil {
		toSerialize["DomainNames"] = o.DomainNames
	}
	if o.NtpServers != nil {
		toSerialize["NtpServers"] = o.NtpServers
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersDhcpOptions struct {
	value *FiltersDhcpOptions
	isSet bool
}

func (v NullableFiltersDhcpOptions) Get() *FiltersDhcpOptions {
	return v.value
}

func (v *NullableFiltersDhcpOptions) Set(val *FiltersDhcpOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersDhcpOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersDhcpOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersDhcpOptions(val *FiltersDhcpOptions) *NullableFiltersDhcpOptions {
	return &NullableFiltersDhcpOptions{value: val, isSet: true}
}

func (v NullableFiltersDhcpOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersDhcpOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersDirectLink One or more filters.
type FiltersDirectLink struct {
	// The IDs of the DirectLinks.
	DirectLinkIds *[]string `json:"DirectLinkIds,omitempty"`
}

// NewFiltersDirectLink instantiates a new FiltersDirectLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersDirectLink() *FiltersDirectLink {
	this := FiltersDirectLink{}
	return &this
}

// NewFiltersDirectLinkWithDefaults instantiates a new FiltersDirectLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersDirectLinkWithDefaults() *FiltersDirectLink {
	this := FiltersDirectLink{}
	return &this
}

// GetDirectLinkIds returns the DirectLinkIds field value if set, zero value otherwise.
func (o *FiltersDirectLink) GetDirectLinkIds() []string {
	if o == nil || o.DirectLinkIds == nil {
		var ret []string
		return ret
	}
	return *o.DirectLinkIds
}

// GetDirectLinkIdsOk returns a tuple with the DirectLinkIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDirectLink) GetDirectLinkIdsOk() (*[]string, bool) {
	if o == nil || o.DirectLinkIds == nil {
		return nil, false
	}
	return o.DirectLinkIds, true
}

// HasDirectLinkIds returns a boolean if a field has been set.
func (o *FiltersDirectLink) HasDirectLinkIds() bool {
	if o != nil && o.DirectLinkIds != nil {
		return true
	}

	return false
}

// SetDirectLinkIds gets a reference to the given []string and assigns it to the DirectLinkIds field.
func (o *FiltersDirectLink) SetDirectLinkIds(v []string) {
	o.DirectLinkIds = &v
}

func (o FiltersDirectLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinkIds != nil {
		toSerialize["DirectLinkIds"] = o.DirectLinkIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersDirectLink struct {
	value *FiltersDirectLink
	isSet bool
}

func (v NullableFiltersDirectLink) Get() *FiltersDirectLink {
	return v.value
}

func (v *NullableFiltersDirectLink) Set(val *FiltersDirectLink) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersDirectLink) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersDirectLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersDirectLink(val *FiltersDirectLink) *NullableFiltersDirectLink {
	return &NullableFiltersDirectLink{value: val, isSet: true}
}

func (v NullableFiltersDirectLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersDirectLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersDirectLinkInterface One or more filters.
type FiltersDirectLinkInterface struct {
	// The IDs of the DirectLinks.
	DirectLinkIds *[]string `json:"DirectLinkIds,omitempty"`
	// The IDs of the DirectLink interfaces.
	DirectLinkInterfaceIds *[]string `json:"DirectLinkInterfaceIds,omitempty"`
}

// NewFiltersDirectLinkInterface instantiates a new FiltersDirectLinkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersDirectLinkInterface() *FiltersDirectLinkInterface {
	this := FiltersDirectLinkInterface{}
	return &this
}

// NewFiltersDirectLinkInterfaceWithDefaults instantiates a new FiltersDirectLinkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersDirectLinkInterfaceWithDefaults() *FiltersDirectLinkInterface {
	this := FiltersDirectLinkInterface{}
	return &this
}

// GetDirectLinkIds returns the DirectLinkIds field value if set, zero value otherwise.
func (o *FiltersDirectLinkInterface) GetDirectLinkIds() []string {
	if o == nil || o.DirectLinkIds == nil {
		var ret []string
		return ret
	}
	return *o.DirectLinkIds
}

// GetDirectLinkIdsOk returns a tuple with the DirectLinkIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDirectLinkInterface) GetDirectLinkIdsOk() (*[]string, bool) {
	if o == nil || o.DirectLinkIds == nil {
		return nil, false
	}
	return o.DirectLinkIds, true
}

// HasDirectLinkIds returns a boolean if a field has been set.
func (o *FiltersDirectLinkInterface) HasDirectLinkIds() bool {
	if o != nil && o.DirectLinkIds != nil {
		return true
	}

	return false
}

// SetDirectLinkIds gets a reference to the given []string and assigns it to the DirectLinkIds field.
func (o *FiltersDirectLinkInterface) SetDirectLinkIds(v []string) {
	o.DirectLinkIds = &v
}

// GetDirectLinkInterfaceIds returns the DirectLinkInterfaceIds field value if set, zero value otherwise.
func (o *FiltersDirectLinkInterface) GetDirectLinkInterfaceIds() []string {
	if o == nil || o.DirectLinkInterfaceIds == nil {
		var ret []string
		return ret
	}
	return *o.DirectLinkInterfaceIds
}

// GetDirectLinkInterfaceIdsOk returns a tuple with the DirectLinkInterfaceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDirectLinkInterface) GetDirectLinkInterfaceIdsOk() (*[]string, bool) {
	if o == nil || o.DirectLinkInterfaceIds == nil {
		return nil, false
	}
	return o.DirectLinkInterfaceIds, true
}

// HasDirectLinkInterfaceIds returns a boolean if a field has been set.
func (o *FiltersDirectLinkInterface) HasDirectLinkInterfaceIds() bool {
	if o != nil && o.DirectLinkInterfaceIds != nil {
		return true
	}

	return false
}

// SetDirectLinkInterfaceIds gets a reference to the given []string and assigns it to the DirectLinkInterfaceIds field.
func (o *FiltersDirectLinkInterface) SetDirectLinkInterfaceIds(v []string) {
	o.DirectLinkInterfaceIds = &v
}

func (o FiltersDirectLinkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinkIds != nil {
		toSerialize["DirectLinkIds"] = o.DirectLinkIds
	}
	if o.DirectLinkInterfaceIds != nil {
		toSerialize["DirectLinkInterfaceIds"] = o.DirectLinkInterfaceIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersDirectLinkInterface struct {
	value *FiltersDirectLinkInterface
	isSet bool
}

func (v NullableFiltersDirectLinkInterface) Get() *FiltersDirectLinkInterface {
	return v.value
}

func (v *NullableFiltersDirectLinkInterface) Set(val *FiltersDirectLinkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersDirectLinkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersDirectLinkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersDirectLinkInterface(val *FiltersDirectLinkInterface) *NullableFiltersDirectLinkInterface {
	return &NullableFiltersDirectLinkInterface{value: val, isSet: true}
}

func (v NullableFiltersDirectLinkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersDirectLinkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersExportTask One or more filters.
type FiltersExportTask struct {
	// The IDs of the export tasks.
	TaskIds *[]string `json:"TaskIds,omitempty"`
}

// NewFiltersExportTask instantiates a new FiltersExportTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersExportTask() *FiltersExportTask {
	this := FiltersExportTask{}
	return &this
}

// NewFiltersExportTaskWithDefaults instantiates a new FiltersExportTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersExportTaskWithDefaults() *FiltersExportTask {
	this := FiltersExportTask{}
	return &this
}

// GetTaskIds returns the TaskIds field value if set, zero value otherwise.
func (o *FiltersExportTask) GetTaskIds() []string {
	if o == nil || o.TaskIds == nil {
		var ret []string
		return ret
	}
	return *o.TaskIds
}

// GetTaskIdsOk returns a tuple with the TaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersExportTask) GetTaskIdsOk() (*[]string, bool) {
	if o == nil || o.TaskIds == nil {
		return nil, false
	}
	return o.TaskIds, true
}

// HasTaskIds returns a boolean if a field has been set.
func (o *FiltersExportTask) HasTaskIds() bool {
	if o != nil && o.TaskIds != nil {
		return true
	}

	return false
}

// SetTaskIds gets a reference to the given []string and assigns it to the TaskIds field.
func (o *FiltersExportTask) SetTaskIds(v []string) {
	o.TaskIds = &v
}

func (o FiltersExportTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaskIds != nil {
		toSerialize["TaskIds"] = o.TaskIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersExportTask struct {
	value *FiltersExportTask
	isSet bool
}

func (v NullableFiltersExportTask) Get() *FiltersExportTask {
	return v.value
}

func (v *NullableFiltersExportTask) Set(val *FiltersExportTask) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersExportTask) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersExportTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersExportTask(val *FiltersExportTask) *NullableFiltersExportTask {
	return &NullableFiltersExportTask{value: val, isSet: true}
}

func (v NullableFiltersExportTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersExportTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersFlexibleGpu One or more filters.
type FiltersFlexibleGpu struct {
	// Indicates whether the fGPU is deleted when terminating the VM.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// One or more IDs of fGPUs.
	FlexibleGpuIds *[]string `json:"FlexibleGpuIds,omitempty"`
	// The processor generations that the fGPUs are compatible with.
	Generations *[]string `json:"Generations,omitempty"`
	// One or more models of fGPUs. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).
	ModelNames *[]string `json:"ModelNames,omitempty"`
	// The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).
	States *[]string `json:"States,omitempty"`
	// The Subregions where the fGPUs are located.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more IDs of VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// NewFiltersFlexibleGpu instantiates a new FiltersFlexibleGpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersFlexibleGpu() *FiltersFlexibleGpu {
	this := FiltersFlexibleGpu{}
	return &this
}

// NewFiltersFlexibleGpuWithDefaults instantiates a new FiltersFlexibleGpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersFlexibleGpuWithDefaults() *FiltersFlexibleGpu {
	this := FiltersFlexibleGpu{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *FiltersFlexibleGpu) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetFlexibleGpuIds returns the FlexibleGpuIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIds() []string {
	if o == nil || o.FlexibleGpuIds == nil {
		var ret []string
		return ret
	}
	return *o.FlexibleGpuIds
}

// GetFlexibleGpuIdsOk returns a tuple with the FlexibleGpuIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIdsOk() (*[]string, bool) {
	if o == nil || o.FlexibleGpuIds == nil {
		return nil, false
	}
	return o.FlexibleGpuIds, true
}

// HasFlexibleGpuIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasFlexibleGpuIds() bool {
	if o != nil && o.FlexibleGpuIds != nil {
		return true
	}

	return false
}

// SetFlexibleGpuIds gets a reference to the given []string and assigns it to the FlexibleGpuIds field.
func (o *FiltersFlexibleGpu) SetFlexibleGpuIds(v []string) {
	o.FlexibleGpuIds = &v
}

// GetGenerations returns the Generations field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetGenerations() []string {
	if o == nil || o.Generations == nil {
		var ret []string
		return ret
	}
	return *o.Generations
}

// GetGenerationsOk returns a tuple with the Generations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetGenerationsOk() (*[]string, bool) {
	if o == nil || o.Generations == nil {
		return nil, false
	}
	return o.Generations, true
}

// HasGenerations returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasGenerations() bool {
	if o != nil && o.Generations != nil {
		return true
	}

	return false
}

// SetGenerations gets a reference to the given []string and assigns it to the Generations field.
func (o *FiltersFlexibleGpu) SetGenerations(v []string) {
	o.Generations = &v
}

// GetModelNames returns the ModelNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetModelNames() []string {
	if o == nil || o.ModelNames == nil {
		var ret []string
		return ret
	}
	return *o.ModelNames
}

// GetModelNamesOk returns a tuple with the ModelNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetModelNamesOk() (*[]string, bool) {
	if o == nil || o.ModelNames == nil {
		return nil, false
	}
	return o.ModelNames, true
}

// HasModelNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasModelNames() bool {
	if o != nil && o.ModelNames != nil {
		return true
	}

	return false
}

// SetModelNames gets a reference to the given []string and assigns it to the ModelNames field.
func (o *FiltersFlexibleGpu) SetModelNames(v []string) {
	o.ModelNames = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersFlexibleGpu) SetStates(v []string) {
	o.States = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersFlexibleGpu) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersFlexibleGpu) SetVmIds(v []string) {
	o.VmIds = &v
}

func (o FiltersFlexibleGpu) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.FlexibleGpuIds != nil {
		toSerialize["FlexibleGpuIds"] = o.FlexibleGpuIds
	}
	if o.Generations != nil {
		toSerialize["Generations"] = o.Generations
	}
	if o.ModelNames != nil {
		toSerialize["ModelNames"] = o.ModelNames
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersFlexibleGpu struct {
	value *FiltersFlexibleGpu
	isSet bool
}

func (v NullableFiltersFlexibleGpu) Get() *FiltersFlexibleGpu {
	return v.value
}

func (v *NullableFiltersFlexibleGpu) Set(val *FiltersFlexibleGpu) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersFlexibleGpu) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersFlexibleGpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersFlexibleGpu(val *FiltersFlexibleGpu) *NullableFiltersFlexibleGpu {
	return &NullableFiltersFlexibleGpu{value: val, isSet: true}
}

func (v NullableFiltersFlexibleGpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersFlexibleGpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersImage One or more filters.
type FiltersImage struct {
	// The account aliases of the owners of the OMIs.
	AccountAliases *[]string `json:"AccountAliases,omitempty"`
	// The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.
	AccountIds *[]string `json:"AccountIds,omitempty"`
	// The architectures of the OMIs (`i386` \\| `x86_64`).
	Architectures *[]string `json:"Architectures,omitempty"`
	// Indicates whether the block device mapping is deleted when terminating the VM.
	BlockDeviceMappingDeleteOnVmDeletion *bool `json:"BlockDeviceMappingDeleteOnVmDeletion,omitempty"`
	// The device names for the volumes.
	BlockDeviceMappingDeviceNames *[]string `json:"BlockDeviceMappingDeviceNames,omitempty"`
	// The IDs of the snapshots used to create the volumes.
	BlockDeviceMappingSnapshotIds *[]string `json:"BlockDeviceMappingSnapshotIds,omitempty"`
	// The sizes of the volumes, in gibibytes (GiB).
	BlockDeviceMappingVolumeSizes *[]int32 `json:"BlockDeviceMappingVolumeSizes,omitempty"`
	// The types of volumes (`standard` \\| `gp2` \\| `io1`).
	BlockDeviceMappingVolumeTypes *[]string `json:"BlockDeviceMappingVolumeTypes,omitempty"`
	// The descriptions of the OMIs, provided when they were created.
	Descriptions *[]string `json:"Descriptions,omitempty"`
	// The locations where the OMI files are stored on Object Storage Unit (OSU).
	FileLocations *[]string `json:"FileLocations,omitempty"`
	// The IDs of the OMIs.
	ImageIds *[]string `json:"ImageIds,omitempty"`
	// The names of the OMIs, provided when they were created.
	ImageNames *[]string `json:"ImageNames,omitempty"`
	// The account IDs of the users who have launch permissions for the OMIs.
	PermissionsToLaunchAccountIds *[]string `json:"PermissionsToLaunchAccountIds,omitempty"`
	// If `true`, lists all public OMIs. If `false`, lists all private OMIs.
	PermissionsToLaunchGlobalPermission *bool `json:"PermissionsToLaunchGlobalPermission,omitempty"`
	// The device names of the root devices (for example, `/dev/sda1`).
	RootDeviceNames *[]string `json:"RootDeviceNames,omitempty"`
	// The types of root device used by the OMIs (always `bsu`).
	RootDeviceTypes *[]string `json:"RootDeviceTypes,omitempty"`
	// The states of the OMIs (`pending` \\| `available` \\| `failed`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the OMIs.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the OMIs.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the OMIs, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The virtualization types (always `hvm`).
	VirtualizationTypes *[]string `json:"VirtualizationTypes,omitempty"`
}

// NewFiltersImage instantiates a new FiltersImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersImage() *FiltersImage {
	this := FiltersImage{}
	return &this
}

// NewFiltersImageWithDefaults instantiates a new FiltersImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersImageWithDefaults() *FiltersImage {
	this := FiltersImage{}
	return &this
}

// GetAccountAliases returns the AccountAliases field value if set, zero value otherwise.
func (o *FiltersImage) GetAccountAliases() []string {
	if o == nil || o.AccountAliases == nil {
		var ret []string
		return ret
	}
	return *o.AccountAliases
}

// GetAccountAliasesOk returns a tuple with the AccountAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetAccountAliasesOk() (*[]string, bool) {
	if o == nil || o.AccountAliases == nil {
		return nil, false
	}
	return o.AccountAliases, true
}

// HasAccountAliases returns a boolean if a field has been set.
func (o *FiltersImage) HasAccountAliases() bool {
	if o != nil && o.AccountAliases != nil {
		return true
	}

	return false
}

// SetAccountAliases gets a reference to the given []string and assigns it to the AccountAliases field.
func (o *FiltersImage) SetAccountAliases(v []string) {
	o.AccountAliases = &v
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *FiltersImage) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *FiltersImage) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *FiltersImage) SetAccountIds(v []string) {
	o.AccountIds = &v
}

// GetArchitectures returns the Architectures field value if set, zero value otherwise.
func (o *FiltersImage) GetArchitectures() []string {
	if o == nil || o.Architectures == nil {
		var ret []string
		return ret
	}
	return *o.Architectures
}

// GetArchitecturesOk returns a tuple with the Architectures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetArchitecturesOk() (*[]string, bool) {
	if o == nil || o.Architectures == nil {
		return nil, false
	}
	return o.Architectures, true
}

// HasArchitectures returns a boolean if a field has been set.
func (o *FiltersImage) HasArchitectures() bool {
	if o != nil && o.Architectures != nil {
		return true
	}

	return false
}

// SetArchitectures gets a reference to the given []string and assigns it to the Architectures field.
func (o *FiltersImage) SetArchitectures(v []string) {
	o.Architectures = &v
}

// GetBlockDeviceMappingDeleteOnVmDeletion returns the BlockDeviceMappingDeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersImage) GetBlockDeviceMappingDeleteOnVmDeletion() bool {
	if o == nil || o.BlockDeviceMappingDeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.BlockDeviceMappingDeleteOnVmDeletion
}

// GetBlockDeviceMappingDeleteOnVmDeletionOk returns a tuple with the BlockDeviceMappingDeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetBlockDeviceMappingDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.BlockDeviceMappingDeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.BlockDeviceMappingDeleteOnVmDeletion, true
}

// HasBlockDeviceMappingDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersImage) HasBlockDeviceMappingDeleteOnVmDeletion() bool {
	if o != nil && o.BlockDeviceMappingDeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappingDeleteOnVmDeletion gets a reference to the given bool and assigns it to the BlockDeviceMappingDeleteOnVmDeletion field.
func (o *FiltersImage) SetBlockDeviceMappingDeleteOnVmDeletion(v bool) {
	o.BlockDeviceMappingDeleteOnVmDeletion = &v
}

// GetBlockDeviceMappingDeviceNames returns the BlockDeviceMappingDeviceNames field value if set, zero value otherwise.
func (o *FiltersImage) GetBlockDeviceMappingDeviceNames() []string {
	if o == nil || o.BlockDeviceMappingDeviceNames == nil {
		var ret []string
		return ret
	}
	return *o.BlockDeviceMappingDeviceNames
}

// GetBlockDeviceMappingDeviceNamesOk returns a tuple with the BlockDeviceMappingDeviceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetBlockDeviceMappingDeviceNamesOk() (*[]string, bool) {
	if o == nil || o.BlockDeviceMappingDeviceNames == nil {
		return nil, false
	}
	return o.BlockDeviceMappingDeviceNames, true
}

// HasBlockDeviceMappingDeviceNames returns a boolean if a field has been set.
func (o *FiltersImage) HasBlockDeviceMappingDeviceNames() bool {
	if o != nil && o.BlockDeviceMappingDeviceNames != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappingDeviceNames gets a reference to the given []string and assigns it to the BlockDeviceMappingDeviceNames field.
func (o *FiltersImage) SetBlockDeviceMappingDeviceNames(v []string) {
	o.BlockDeviceMappingDeviceNames = &v
}

// GetBlockDeviceMappingSnapshotIds returns the BlockDeviceMappingSnapshotIds field value if set, zero value otherwise.
func (o *FiltersImage) GetBlockDeviceMappingSnapshotIds() []string {
	if o == nil || o.BlockDeviceMappingSnapshotIds == nil {
		var ret []string
		return ret
	}
	return *o.BlockDeviceMappingSnapshotIds
}

// GetBlockDeviceMappingSnapshotIdsOk returns a tuple with the BlockDeviceMappingSnapshotIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetBlockDeviceMappingSnapshotIdsOk() (*[]string, bool) {
	if o == nil || o.BlockDeviceMappingSnapshotIds == nil {
		return nil, false
	}
	return o.BlockDeviceMappingSnapshotIds, true
}

// HasBlockDeviceMappingSnapshotIds returns a boolean if a field has been set.
func (o *FiltersImage) HasBlockDeviceMappingSnapshotIds() bool {
	if o != nil && o.BlockDeviceMappingSnapshotIds != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappingSnapshotIds gets a reference to the given []string and assigns it to the BlockDeviceMappingSnapshotIds field.
func (o *FiltersImage) SetBlockDeviceMappingSnapshotIds(v []string) {
	o.BlockDeviceMappingSnapshotIds = &v
}

// GetBlockDeviceMappingVolumeSizes returns the BlockDeviceMappingVolumeSizes field value if set, zero value otherwise.
func (o *FiltersImage) GetBlockDeviceMappingVolumeSizes() []int32 {
	if o == nil || o.BlockDeviceMappingVolumeSizes == nil {
		var ret []int32
		return ret
	}
	return *o.BlockDeviceMappingVolumeSizes
}

// GetBlockDeviceMappingVolumeSizesOk returns a tuple with the BlockDeviceMappingVolumeSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetBlockDeviceMappingVolumeSizesOk() (*[]int32, bool) {
	if o == nil || o.BlockDeviceMappingVolumeSizes == nil {
		return nil, false
	}
	return o.BlockDeviceMappingVolumeSizes, true
}

// HasBlockDeviceMappingVolumeSizes returns a boolean if a field has been set.
func (o *FiltersImage) HasBlockDeviceMappingVolumeSizes() bool {
	if o != nil && o.BlockDeviceMappingVolumeSizes != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappingVolumeSizes gets a reference to the given []int32 and assigns it to the BlockDeviceMappingVolumeSizes field.
func (o *FiltersImage) SetBlockDeviceMappingVolumeSizes(v []int32) {
	o.BlockDeviceMappingVolumeSizes = &v
}

// GetBlockDeviceMappingVolumeTypes returns the BlockDeviceMappingVolumeTypes field value if set, zero value otherwise.
func (o *FiltersImage) GetBlockDeviceMappingVolumeTypes() []string {
	if o == nil || o.BlockDeviceMappingVolumeTypes == nil {
		var ret []string
		return ret
	}
	return *o.BlockDeviceMappingVolumeTypes
}

// GetBlockDeviceMappingVolumeTypesOk returns a tuple with the BlockDeviceMappingVolumeTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetBlockDeviceMappingVolumeTypesOk() (*[]string, bool) {
	if o == nil || o.BlockDeviceMappingVolumeTypes == nil {
		return nil, false
	}
	return o.BlockDeviceMappingVolumeTypes, true
}

// HasBlockDeviceMappingVolumeTypes returns a boolean if a field has been set.
func (o *FiltersImage) HasBlockDeviceMappingVolumeTypes() bool {
	if o != nil && o.BlockDeviceMappingVolumeTypes != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappingVolumeTypes gets a reference to the given []string and assigns it to the BlockDeviceMappingVolumeTypes field.
func (o *FiltersImage) SetBlockDeviceMappingVolumeTypes(v []string) {
	o.BlockDeviceMappingVolumeTypes = &v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *FiltersImage) GetDescriptions() []string {
	if o == nil || o.Descriptions == nil {
		var ret []string
		return ret
	}
	return *o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetDescriptionsOk() (*[]string, bool) {
	if o == nil || o.Descriptions == nil {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *FiltersImage) HasDescriptions() bool {
	if o != nil && o.Descriptions != nil {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []string and assigns it to the Descriptions field.
func (o *FiltersImage) SetDescriptions(v []string) {
	o.Descriptions = &v
}

// GetFileLocations returns the FileLocations field value if set, zero value otherwise.
func (o *FiltersImage) GetFileLocations() []string {
	if o == nil || o.FileLocations == nil {
		var ret []string
		return ret
	}
	return *o.FileLocations
}

// GetFileLocationsOk returns a tuple with the FileLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetFileLocationsOk() (*[]string, bool) {
	if o == nil || o.FileLocations == nil {
		return nil, false
	}
	return o.FileLocations, true
}

// HasFileLocations returns a boolean if a field has been set.
func (o *FiltersImage) HasFileLocations() bool {
	if o != nil && o.FileLocations != nil {
		return true
	}

	return false
}

// SetFileLocations gets a reference to the given []string and assigns it to the FileLocations field.
func (o *FiltersImage) SetFileLocations(v []string) {
	o.FileLocations = &v
}

// GetImageIds returns the ImageIds field value if set, zero value otherwise.
func (o *FiltersImage) GetImageIds() []string {
	if o == nil || o.ImageIds == nil {
		var ret []string
		return ret
	}
	return *o.ImageIds
}

// GetImageIdsOk returns a tuple with the ImageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetImageIdsOk() (*[]string, bool) {
	if o == nil || o.ImageIds == nil {
		return nil, false
	}
	return o.ImageIds, true
}

// HasImageIds returns a boolean if a field has been set.
func (o *FiltersImage) HasImageIds() bool {
	if o != nil && o.ImageIds != nil {
		return true
	}

	return false
}

// SetImageIds gets a reference to the given []string and assigns it to the ImageIds field.
func (o *FiltersImage) SetImageIds(v []string) {
	o.ImageIds = &v
}

// GetImageNames returns the ImageNames field value if set, zero value otherwise.
func (o *FiltersImage) GetImageNames() []string {
	if o == nil || o.ImageNames == nil {
		var ret []string
		return ret
	}
	return *o.ImageNames
}

// GetImageNamesOk returns a tuple with the ImageNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetImageNamesOk() (*[]string, bool) {
	if o == nil || o.ImageNames == nil {
		return nil, false
	}
	return o.ImageNames, true
}

// HasImageNames returns a boolean if a field has been set.
func (o *FiltersImage) HasImageNames() bool {
	if o != nil && o.ImageNames != nil {
		return true
	}

	return false
}

// SetImageNames gets a reference to the given []string and assigns it to the ImageNames field.
func (o *FiltersImage) SetImageNames(v []string) {
	o.ImageNames = &v
}

// GetPermissionsToLaunchAccountIds returns the PermissionsToLaunchAccountIds field value if set, zero value otherwise.
func (o *FiltersImage) GetPermissionsToLaunchAccountIds() []string {
	if o == nil || o.PermissionsToLaunchAccountIds == nil {
		var ret []string
		return ret
	}
	return *o.PermissionsToLaunchAccountIds
}

// GetPermissionsToLaunchAccountIdsOk returns a tuple with the PermissionsToLaunchAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetPermissionsToLaunchAccountIdsOk() (*[]string, bool) {
	if o == nil || o.PermissionsToLaunchAccountIds == nil {
		return nil, false
	}
	return o.PermissionsToLaunchAccountIds, true
}

// HasPermissionsToLaunchAccountIds returns a boolean if a field has been set.
func (o *FiltersImage) HasPermissionsToLaunchAccountIds() bool {
	if o != nil && o.PermissionsToLaunchAccountIds != nil {
		return true
	}

	return false
}

// SetPermissionsToLaunchAccountIds gets a reference to the given []string and assigns it to the PermissionsToLaunchAccountIds field.
func (o *FiltersImage) SetPermissionsToLaunchAccountIds(v []string) {
	o.PermissionsToLaunchAccountIds = &v
}

// GetPermissionsToLaunchGlobalPermission returns the PermissionsToLaunchGlobalPermission field value if set, zero value otherwise.
func (o *FiltersImage) GetPermissionsToLaunchGlobalPermission() bool {
	if o == nil || o.PermissionsToLaunchGlobalPermission == nil {
		var ret bool
		return ret
	}
	return *o.PermissionsToLaunchGlobalPermission
}

// GetPermissionsToLaunchGlobalPermissionOk returns a tuple with the PermissionsToLaunchGlobalPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetPermissionsToLaunchGlobalPermissionOk() (*bool, bool) {
	if o == nil || o.PermissionsToLaunchGlobalPermission == nil {
		return nil, false
	}
	return o.PermissionsToLaunchGlobalPermission, true
}

// HasPermissionsToLaunchGlobalPermission returns a boolean if a field has been set.
func (o *FiltersImage) HasPermissionsToLaunchGlobalPermission() bool {
	if o != nil && o.PermissionsToLaunchGlobalPermission != nil {
		return true
	}

	return false
}

// SetPermissionsToLaunchGlobalPermission gets a reference to the given bool and assigns it to the PermissionsToLaunchGlobalPermission field.
func (o *FiltersImage) SetPermissionsToLaunchGlobalPermission(v bool) {
	o.PermissionsToLaunchGlobalPermission = &v
}

// GetRootDeviceNames returns the RootDeviceNames field value if set, zero value otherwise.
func (o *FiltersImage) GetRootDeviceNames() []string {
	if o == nil || o.RootDeviceNames == nil {
		var ret []string
		return ret
	}
	return *o.RootDeviceNames
}

// GetRootDeviceNamesOk returns a tuple with the RootDeviceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetRootDeviceNamesOk() (*[]string, bool) {
	if o == nil || o.RootDeviceNames == nil {
		return nil, false
	}
	return o.RootDeviceNames, true
}

// HasRootDeviceNames returns a boolean if a field has been set.
func (o *FiltersImage) HasRootDeviceNames() bool {
	if o != nil && o.RootDeviceNames != nil {
		return true
	}

	return false
}

// SetRootDeviceNames gets a reference to the given []string and assigns it to the RootDeviceNames field.
func (o *FiltersImage) SetRootDeviceNames(v []string) {
	o.RootDeviceNames = &v
}

// GetRootDeviceTypes returns the RootDeviceTypes field value if set, zero value otherwise.
func (o *FiltersImage) GetRootDeviceTypes() []string {
	if o == nil || o.RootDeviceTypes == nil {
		var ret []string
		return ret
	}
	return *o.RootDeviceTypes
}

// GetRootDeviceTypesOk returns a tuple with the RootDeviceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetRootDeviceTypesOk() (*[]string, bool) {
	if o == nil || o.RootDeviceTypes == nil {
		return nil, false
	}
	return o.RootDeviceTypes, true
}

// HasRootDeviceTypes returns a boolean if a field has been set.
func (o *FiltersImage) HasRootDeviceTypes() bool {
	if o != nil && o.RootDeviceTypes != nil {
		return true
	}

	return false
}

// SetRootDeviceTypes gets a reference to the given []string and assigns it to the RootDeviceTypes field.
func (o *FiltersImage) SetRootDeviceTypes(v []string) {
	o.RootDeviceTypes = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersImage) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersImage) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersImage) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersImage) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersImage) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersImage) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersImage) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersImage) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersImage) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersImage) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersImage) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersImage) SetTags(v []string) {
	o.Tags = &v
}

// GetVirtualizationTypes returns the VirtualizationTypes field value if set, zero value otherwise.
func (o *FiltersImage) GetVirtualizationTypes() []string {
	if o == nil || o.VirtualizationTypes == nil {
		var ret []string
		return ret
	}
	return *o.VirtualizationTypes
}

// GetVirtualizationTypesOk returns a tuple with the VirtualizationTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersImage) GetVirtualizationTypesOk() (*[]string, bool) {
	if o == nil || o.VirtualizationTypes == nil {
		return nil, false
	}
	return o.VirtualizationTypes, true
}

// HasVirtualizationTypes returns a boolean if a field has been set.
func (o *FiltersImage) HasVirtualizationTypes() bool {
	if o != nil && o.VirtualizationTypes != nil {
		return true
	}

	return false
}

// SetVirtualizationTypes gets a reference to the given []string and assigns it to the VirtualizationTypes field.
func (o *FiltersImage) SetVirtualizationTypes(v []string) {
	o.VirtualizationTypes = &v
}

func (o FiltersImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountAliases != nil {
		toSerialize["AccountAliases"] = o.AccountAliases
	}
	if o.AccountIds != nil {
		toSerialize["AccountIds"] = o.AccountIds
	}
	if o.Architectures != nil {
		toSerialize["Architectures"] = o.Architectures
	}
	if o.BlockDeviceMappingDeleteOnVmDeletion != nil {
		toSerialize["BlockDeviceMappingDeleteOnVmDeletion"] = o.BlockDeviceMappingDeleteOnVmDeletion
	}
	if o.BlockDeviceMappingDeviceNames != nil {
		toSerialize["BlockDeviceMappingDeviceNames"] = o.BlockDeviceMappingDeviceNames
	}
	if o.BlockDeviceMappingSnapshotIds != nil {
		toSerialize["BlockDeviceMappingSnapshotIds"] = o.BlockDeviceMappingSnapshotIds
	}
	if o.BlockDeviceMappingVolumeSizes != nil {
		toSerialize["BlockDeviceMappingVolumeSizes"] = o.BlockDeviceMappingVolumeSizes
	}
	if o.BlockDeviceMappingVolumeTypes != nil {
		toSerialize["BlockDeviceMappingVolumeTypes"] = o.BlockDeviceMappingVolumeTypes
	}
	if o.Descriptions != nil {
		toSerialize["Descriptions"] = o.Descriptions
	}
	if o.FileLocations != nil {
		toSerialize["FileLocations"] = o.FileLocations
	}
	if o.ImageIds != nil {
		toSerialize["ImageIds"] = o.ImageIds
	}
	if o.ImageNames != nil {
		toSerialize["ImageNames"] = o.ImageNames
	}
	if o.PermissionsToLaunchAccountIds != nil {
		toSerialize["PermissionsToLaunchAccountIds"] = o.PermissionsToLaunchAccountIds
	}
	if o.PermissionsToLaunchGlobalPermission != nil {
		toSerialize["PermissionsToLaunchGlobalPermission"] = o.PermissionsToLaunchGlobalPermission
	}
	if o.RootDeviceNames != nil {
		toSerialize["RootDeviceNames"] = o.RootDeviceNames
	}
	if o.RootDeviceTypes != nil {
		toSerialize["RootDeviceTypes"] = o.RootDeviceTypes
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VirtualizationTypes != nil {
		toSerialize["VirtualizationTypes"] = o.VirtualizationTypes
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersImage struct {
	value *FiltersImage
	isSet bool
}

func (v NullableFiltersImage) Get() *FiltersImage {
	return v.value
}

func (v *NullableFiltersImage) Set(val *FiltersImage) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersImage) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersImage(val *FiltersImage) *NullableFiltersImage {
	return &NullableFiltersImage{value: val, isSet: true}
}

func (v NullableFiltersImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersInternetService One or more filters.
type FiltersInternetService struct {
	// The IDs of the Internet services.
	InternetServiceIds *[]string `json:"InternetServiceIds,omitempty"`
	// The IDs of the Nets the Internet services are attached to.
	LinkNetIds *[]string `json:"LinkNetIds,omitempty"`
	// The current states of the attachments between the Internet services and the Nets (only `available`, if the Internet gateway is attached to a VPC).
	LinkStates *[]string `json:"LinkStates,omitempty"`
	// The keys of the tags associated with the Internet services.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the Internet services.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the Internet services, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersInternetService instantiates a new FiltersInternetService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersInternetService() *FiltersInternetService {
	this := FiltersInternetService{}
	return &this
}

// NewFiltersInternetServiceWithDefaults instantiates a new FiltersInternetService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersInternetServiceWithDefaults() *FiltersInternetService {
	this := FiltersInternetService{}
	return &this
}

// GetInternetServiceIds returns the InternetServiceIds field value if set, zero value otherwise.
func (o *FiltersInternetService) GetInternetServiceIds() []string {
	if o == nil || o.InternetServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.InternetServiceIds
}

// GetInternetServiceIdsOk returns a tuple with the InternetServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetInternetServiceIdsOk() (*[]string, bool) {
	if o == nil || o.InternetServiceIds == nil {
		return nil, false
	}
	return o.InternetServiceIds, true
}

// HasInternetServiceIds returns a boolean if a field has been set.
func (o *FiltersInternetService) HasInternetServiceIds() bool {
	if o != nil && o.InternetServiceIds != nil {
		return true
	}

	return false
}

// SetInternetServiceIds gets a reference to the given []string and assigns it to the InternetServiceIds field.
func (o *FiltersInternetService) SetInternetServiceIds(v []string) {
	o.InternetServiceIds = &v
}

// GetLinkNetIds returns the LinkNetIds field value if set, zero value otherwise.
func (o *FiltersInternetService) GetLinkNetIds() []string {
	if o == nil || o.LinkNetIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkNetIds
}

// GetLinkNetIdsOk returns a tuple with the LinkNetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetLinkNetIdsOk() (*[]string, bool) {
	if o == nil || o.LinkNetIds == nil {
		return nil, false
	}
	return o.LinkNetIds, true
}

// HasLinkNetIds returns a boolean if a field has been set.
func (o *FiltersInternetService) HasLinkNetIds() bool {
	if o != nil && o.LinkNetIds != nil {
		return true
	}

	return false
}

// SetLinkNetIds gets a reference to the given []string and assigns it to the LinkNetIds field.
func (o *FiltersInternetService) SetLinkNetIds(v []string) {
	o.LinkNetIds = &v
}

// GetLinkStates returns the LinkStates field value if set, zero value otherwise.
func (o *FiltersInternetService) GetLinkStates() []string {
	if o == nil || o.LinkStates == nil {
		var ret []string
		return ret
	}
	return *o.LinkStates
}

// GetLinkStatesOk returns a tuple with the LinkStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetLinkStatesOk() (*[]string, bool) {
	if o == nil || o.LinkStates == nil {
		return nil, false
	}
	return o.LinkStates, true
}

// HasLinkStates returns a boolean if a field has been set.
func (o *FiltersInternetService) HasLinkStates() bool {
	if o != nil && o.LinkStates != nil {
		return true
	}

	return false
}

// SetLinkStates gets a reference to the given []string and assigns it to the LinkStates field.
func (o *FiltersInternetService) SetLinkStates(v []string) {
	o.LinkStates = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersInternetService) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersInternetService) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersInternetService) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersInternetService) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersInternetService) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersInternetService) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersInternetService) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersInternetService) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersInternetService) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersInternetService) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersInternetService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternetServiceIds != nil {
		toSerialize["InternetServiceIds"] = o.InternetServiceIds
	}
	if o.LinkNetIds != nil {
		toSerialize["LinkNetIds"] = o.LinkNetIds
	}
	if o.LinkStates != nil {
		toSerialize["LinkStates"] = o.LinkStates
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersInternetService struct {
	value *FiltersInternetService
	isSet bool
}

func (v NullableFiltersInternetService) Get() *FiltersInternetService {
	return v.value
}

func (v *NullableFiltersInternetService) Set(val *FiltersInternetService) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersInternetService) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersInternetService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersInternetService(val *FiltersInternetService) *NullableFiltersInternetService {
	return &NullableFiltersInternetService{value: val, isSet: true}
}

func (v NullableFiltersInternetService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersInternetService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersKeypair One or more filters.
type FiltersKeypair struct {
	// The fingerprints of the keypairs.
	KeypairFingerprints *[]string `json:"KeypairFingerprints,omitempty"`
	// The names of the keypairs.
	KeypairNames *[]string `json:"KeypairNames,omitempty"`
}

// NewFiltersKeypair instantiates a new FiltersKeypair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersKeypair() *FiltersKeypair {
	this := FiltersKeypair{}
	return &this
}

// NewFiltersKeypairWithDefaults instantiates a new FiltersKeypair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersKeypairWithDefaults() *FiltersKeypair {
	this := FiltersKeypair{}
	return &this
}

// GetKeypairFingerprints returns the KeypairFingerprints field value if set, zero value otherwise.
func (o *FiltersKeypair) GetKeypairFingerprints() []string {
	if o == nil || o.KeypairFingerprints == nil {
		var ret []string
		return ret
	}
	return *o.KeypairFingerprints
}

// GetKeypairFingerprintsOk returns a tuple with the KeypairFingerprints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersKeypair) GetKeypairFingerprintsOk() (*[]string, bool) {
	if o == nil || o.KeypairFingerprints == nil {
		return nil, false
	}
	return o.KeypairFingerprints, true
}

// HasKeypairFingerprints returns a boolean if a field has been set.
func (o *FiltersKeypair) HasKeypairFingerprints() bool {
	if o != nil && o.KeypairFingerprints != nil {
		return true
	}

	return false
}

// SetKeypairFingerprints gets a reference to the given []string and assigns it to the KeypairFingerprints field.
func (o *FiltersKeypair) SetKeypairFingerprints(v []string) {
	o.KeypairFingerprints = &v
}

// GetKeypairNames returns the KeypairNames field value if set, zero value otherwise.
func (o *FiltersKeypair) GetKeypairNames() []string {
	if o == nil || o.KeypairNames == nil {
		var ret []string
		return ret
	}
	return *o.KeypairNames
}

// GetKeypairNamesOk returns a tuple with the KeypairNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersKeypair) GetKeypairNamesOk() (*[]string, bool) {
	if o == nil || o.KeypairNames == nil {
		return nil, false
	}
	return o.KeypairNames, true
}

// HasKeypairNames returns a boolean if a field has been set.
func (o *FiltersKeypair) HasKeypairNames() bool {
	if o != nil && o.KeypairNames != nil {
		return true
	}

	return false
}

// SetKeypairNames gets a reference to the given []string and assigns it to the KeypairNames field.
func (o *FiltersKeypair) SetKeypairNames(v []string) {
	o.KeypairNames = &v
}

func (o FiltersKeypair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeypairFingerprints != nil {
		toSerialize["KeypairFingerprints"] = o.KeypairFingerprints
	}
	if o.KeypairNames != nil {
		toSerialize["KeypairNames"] = o.KeypairNames
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersKeypair struct {
	value *FiltersKeypair
	isSet bool
}

func (v NullableFiltersKeypair) Get() *FiltersKeypair {
	return v.value
}

func (v *NullableFiltersKeypair) Set(val *FiltersKeypair) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersKeypair) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersKeypair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersKeypair(val *FiltersKeypair) *NullableFiltersKeypair {
	return &NullableFiltersKeypair{value: val, isSet: true}
}

func (v NullableFiltersKeypair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersKeypair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersListenerRule One or more filters.
type FiltersListenerRule struct {
	// The names of the listener rules.
	ListenerRuleNames *[]string `json:"ListenerRuleNames,omitempty"`
}

// NewFiltersListenerRule instantiates a new FiltersListenerRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersListenerRule() *FiltersListenerRule {
	this := FiltersListenerRule{}
	return &this
}

// NewFiltersListenerRuleWithDefaults instantiates a new FiltersListenerRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersListenerRuleWithDefaults() *FiltersListenerRule {
	this := FiltersListenerRule{}
	return &this
}

// GetListenerRuleNames returns the ListenerRuleNames field value if set, zero value otherwise.
func (o *FiltersListenerRule) GetListenerRuleNames() []string {
	if o == nil || o.ListenerRuleNames == nil {
		var ret []string
		return ret
	}
	return *o.ListenerRuleNames
}

// GetListenerRuleNamesOk returns a tuple with the ListenerRuleNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersListenerRule) GetListenerRuleNamesOk() (*[]string, bool) {
	if o == nil || o.ListenerRuleNames == nil {
		return nil, false
	}
	return o.ListenerRuleNames, true
}

// HasListenerRuleNames returns a boolean if a field has been set.
func (o *FiltersListenerRule) HasListenerRuleNames() bool {
	if o != nil && o.ListenerRuleNames != nil {
		return true
	}

	return false
}

// SetListenerRuleNames gets a reference to the given []string and assigns it to the ListenerRuleNames field.
func (o *FiltersListenerRule) SetListenerRuleNames(v []string) {
	o.ListenerRuleNames = &v
}

func (o FiltersListenerRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ListenerRuleNames != nil {
		toSerialize["ListenerRuleNames"] = o.ListenerRuleNames
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersListenerRule struct {
	value *FiltersListenerRule
	isSet bool
}

func (v NullableFiltersListenerRule) Get() *FiltersListenerRule {
	return v.value
}

func (v *NullableFiltersListenerRule) Set(val *FiltersListenerRule) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersListenerRule) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersListenerRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersListenerRule(val *FiltersListenerRule) *NullableFiltersListenerRule {
	return &NullableFiltersListenerRule{value: val, isSet: true}
}

func (v NullableFiltersListenerRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersListenerRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersLoadBalancer One or more filters.
type FiltersLoadBalancer struct {
	// The names of the load balancers.
	LoadBalancerNames *[]string `json:"LoadBalancerNames,omitempty"`
}

// NewFiltersLoadBalancer instantiates a new FiltersLoadBalancer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersLoadBalancer() *FiltersLoadBalancer {
	this := FiltersLoadBalancer{}
	return &this
}

// NewFiltersLoadBalancerWithDefaults instantiates a new FiltersLoadBalancer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersLoadBalancerWithDefaults() *FiltersLoadBalancer {
	this := FiltersLoadBalancer{}
	return &this
}

// GetLoadBalancerNames returns the LoadBalancerNames field value if set, zero value otherwise.
func (o *FiltersLoadBalancer) GetLoadBalancerNames() []string {
	if o == nil || o.LoadBalancerNames == nil {
		var ret []string
		return ret
	}
	return *o.LoadBalancerNames
}

// GetLoadBalancerNamesOk returns a tuple with the LoadBalancerNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersLoadBalancer) GetLoadBalancerNamesOk() (*[]string, bool) {
	if o == nil || o.LoadBalancerNames == nil {
		return nil, false
	}
	return o.LoadBalancerNames, true
}

// HasLoadBalancerNames returns a boolean if a field has been set.
func (o *FiltersLoadBalancer) HasLoadBalancerNames() bool {
	if o != nil && o.LoadBalancerNames != nil {
		return true
	}

	return false
}

// SetLoadBalancerNames gets a reference to the given []string and assigns it to the LoadBalancerNames field.
func (o *FiltersLoadBalancer) SetLoadBalancerNames(v []string) {
	o.LoadBalancerNames = &v
}

func (o FiltersLoadBalancer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancerNames != nil {
		toSerialize["LoadBalancerNames"] = o.LoadBalancerNames
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersLoadBalancer struct {
	value *FiltersLoadBalancer
	isSet bool
}

func (v NullableFiltersLoadBalancer) Get() *FiltersLoadBalancer {
	return v.value
}

func (v *NullableFiltersLoadBalancer) Set(val *FiltersLoadBalancer) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersLoadBalancer) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersLoadBalancer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersLoadBalancer(val *FiltersLoadBalancer) *NullableFiltersLoadBalancer {
	return &NullableFiltersLoadBalancer{value: val, isSet: true}
}

func (v NullableFiltersLoadBalancer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersLoadBalancer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersNatService One or more filters.
type FiltersNatService struct {
	// The IDs of the NAT services.
	NatServiceIds *[]string `json:"NatServiceIds,omitempty"`
	// The IDs of the Nets in which the NAT services are.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The states of the NAT services (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// The IDs of the Subnets in which the NAT services are.
	SubnetIds *[]string `json:"SubnetIds,omitempty"`
	// The keys of the tags associated with the NAT services.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the NAT services.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the NAT services, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersNatService instantiates a new FiltersNatService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersNatService() *FiltersNatService {
	this := FiltersNatService{}
	return &this
}

// NewFiltersNatServiceWithDefaults instantiates a new FiltersNatService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersNatServiceWithDefaults() *FiltersNatService {
	this := FiltersNatService{}
	return &this
}

// GetNatServiceIds returns the NatServiceIds field value if set, zero value otherwise.
func (o *FiltersNatService) GetNatServiceIds() []string {
	if o == nil || o.NatServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.NatServiceIds
}

// GetNatServiceIdsOk returns a tuple with the NatServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetNatServiceIdsOk() (*[]string, bool) {
	if o == nil || o.NatServiceIds == nil {
		return nil, false
	}
	return o.NatServiceIds, true
}

// HasNatServiceIds returns a boolean if a field has been set.
func (o *FiltersNatService) HasNatServiceIds() bool {
	if o != nil && o.NatServiceIds != nil {
		return true
	}

	return false
}

// SetNatServiceIds gets a reference to the given []string and assigns it to the NatServiceIds field.
func (o *FiltersNatService) SetNatServiceIds(v []string) {
	o.NatServiceIds = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersNatService) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersNatService) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersNatService) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersNatService) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersNatService) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersNatService) SetStates(v []string) {
	o.States = &v
}

// GetSubnetIds returns the SubnetIds field value if set, zero value otherwise.
func (o *FiltersNatService) GetSubnetIds() []string {
	if o == nil || o.SubnetIds == nil {
		var ret []string
		return ret
	}
	return *o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetSubnetIdsOk() (*[]string, bool) {
	if o == nil || o.SubnetIds == nil {
		return nil, false
	}
	return o.SubnetIds, true
}

// HasSubnetIds returns a boolean if a field has been set.
func (o *FiltersNatService) HasSubnetIds() bool {
	if o != nil && o.SubnetIds != nil {
		return true
	}

	return false
}

// SetSubnetIds gets a reference to the given []string and assigns it to the SubnetIds field.
func (o *FiltersNatService) SetSubnetIds(v []string) {
	o.SubnetIds = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersNatService) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersNatService) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersNatService) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersNatService) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersNatService) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersNatService) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersNatService) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNatService) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersNatService) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersNatService) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersNatService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatServiceIds != nil {
		toSerialize["NatServiceIds"] = o.NatServiceIds
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.SubnetIds != nil {
		toSerialize["SubnetIds"] = o.SubnetIds
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersNatService struct {
	value *FiltersNatService
	isSet bool
}

func (v NullableFiltersNatService) Get() *FiltersNatService {
	return v.value
}

func (v *NullableFiltersNatService) Set(val *FiltersNatService) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersNatService) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersNatService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersNatService(val *FiltersNatService) *NullableFiltersNatService {
	return &NullableFiltersNatService{value: val, isSet: true}
}

func (v NullableFiltersNatService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersNatService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersNet One or more filters.
type FiltersNet struct {
	// The IDs of the DHCP options sets.
	DhcpOptionsSetIds *[]string `json:"DhcpOptionsSetIds,omitempty"`
	// The IP ranges for the Nets, in CIDR notation (for example, 10.0.0.0/16).
	IpRanges *[]string `json:"IpRanges,omitempty"`
	// If `true`, the Net used is the default one.
	IsDefault *bool `json:"IsDefault,omitempty"`
	// The IDs of the Nets.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The states of the Nets (`pending` \\| `available`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the Nets.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the Nets.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the Nets, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersNet instantiates a new FiltersNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersNet() *FiltersNet {
	this := FiltersNet{}
	return &this
}

// NewFiltersNetWithDefaults instantiates a new FiltersNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersNetWithDefaults() *FiltersNet {
	this := FiltersNet{}
	return &this
}

// GetDhcpOptionsSetIds returns the DhcpOptionsSetIds field value if set, zero value otherwise.
func (o *FiltersNet) GetDhcpOptionsSetIds() []string {
	if o == nil || o.DhcpOptionsSetIds == nil {
		var ret []string
		return ret
	}
	return *o.DhcpOptionsSetIds
}

// GetDhcpOptionsSetIdsOk returns a tuple with the DhcpOptionsSetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetDhcpOptionsSetIdsOk() (*[]string, bool) {
	if o == nil || o.DhcpOptionsSetIds == nil {
		return nil, false
	}
	return o.DhcpOptionsSetIds, true
}

// HasDhcpOptionsSetIds returns a boolean if a field has been set.
func (o *FiltersNet) HasDhcpOptionsSetIds() bool {
	if o != nil && o.DhcpOptionsSetIds != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSetIds gets a reference to the given []string and assigns it to the DhcpOptionsSetIds field.
func (o *FiltersNet) SetDhcpOptionsSetIds(v []string) {
	o.DhcpOptionsSetIds = &v
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *FiltersNet) GetIpRanges() []string {
	if o == nil || o.IpRanges == nil {
		var ret []string
		return ret
	}
	return *o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetIpRangesOk() (*[]string, bool) {
	if o == nil || o.IpRanges == nil {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *FiltersNet) HasIpRanges() bool {
	if o != nil && o.IpRanges != nil {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []string and assigns it to the IpRanges field.
func (o *FiltersNet) SetIpRanges(v []string) {
	o.IpRanges = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *FiltersNet) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *FiltersNet) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *FiltersNet) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersNet) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersNet) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersNet) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersNet) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersNet) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersNet) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersNet) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersNet) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersNet) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersNet) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersNet) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersNet) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersNet) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNet) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersNet) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersNet) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DhcpOptionsSetIds != nil {
		toSerialize["DhcpOptionsSetIds"] = o.DhcpOptionsSetIds
	}
	if o.IpRanges != nil {
		toSerialize["IpRanges"] = o.IpRanges
	}
	if o.IsDefault != nil {
		toSerialize["IsDefault"] = o.IsDefault
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersNet struct {
	value *FiltersNet
	isSet bool
}

func (v NullableFiltersNet) Get() *FiltersNet {
	return v.value
}

func (v *NullableFiltersNet) Set(val *FiltersNet) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersNet) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersNet(val *FiltersNet) *NullableFiltersNet {
	return &NullableFiltersNet{value: val, isSet: true}
}

func (v NullableFiltersNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersNetAccessPoint One or more filters.
type FiltersNetAccessPoint struct {
	// The IDs of the Net access points.
	NetAccessPointIds *[]string `json:"NetAccessPointIds,omitempty"`
	// The IDs of the Nets.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The names of the prefix lists corresponding to the services. For more information, see [DescribePrefixLists](#describeprefixlists)
	ServiceNames *[]string `json:"ServiceNames,omitempty"`
	// The states of the Net access points (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the Net access points.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the Net access points.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the Net access points, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersNetAccessPoint instantiates a new FiltersNetAccessPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersNetAccessPoint() *FiltersNetAccessPoint {
	this := FiltersNetAccessPoint{}
	return &this
}

// NewFiltersNetAccessPointWithDefaults instantiates a new FiltersNetAccessPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersNetAccessPointWithDefaults() *FiltersNetAccessPoint {
	this := FiltersNetAccessPoint{}
	return &this
}

// GetNetAccessPointIds returns the NetAccessPointIds field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetNetAccessPointIds() []string {
	if o == nil || o.NetAccessPointIds == nil {
		var ret []string
		return ret
	}
	return *o.NetAccessPointIds
}

// GetNetAccessPointIdsOk returns a tuple with the NetAccessPointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetNetAccessPointIdsOk() (*[]string, bool) {
	if o == nil || o.NetAccessPointIds == nil {
		return nil, false
	}
	return o.NetAccessPointIds, true
}

// HasNetAccessPointIds returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasNetAccessPointIds() bool {
	if o != nil && o.NetAccessPointIds != nil {
		return true
	}

	return false
}

// SetNetAccessPointIds gets a reference to the given []string and assigns it to the NetAccessPointIds field.
func (o *FiltersNetAccessPoint) SetNetAccessPointIds(v []string) {
	o.NetAccessPointIds = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersNetAccessPoint) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetServiceNames returns the ServiceNames field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetServiceNames() []string {
	if o == nil || o.ServiceNames == nil {
		var ret []string
		return ret
	}
	return *o.ServiceNames
}

// GetServiceNamesOk returns a tuple with the ServiceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetServiceNamesOk() (*[]string, bool) {
	if o == nil || o.ServiceNames == nil {
		return nil, false
	}
	return o.ServiceNames, true
}

// HasServiceNames returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasServiceNames() bool {
	if o != nil && o.ServiceNames != nil {
		return true
	}

	return false
}

// SetServiceNames gets a reference to the given []string and assigns it to the ServiceNames field.
func (o *FiltersNetAccessPoint) SetServiceNames(v []string) {
	o.ServiceNames = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersNetAccessPoint) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersNetAccessPoint) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersNetAccessPoint) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersNetAccessPoint) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetAccessPoint) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersNetAccessPoint) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersNetAccessPoint) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersNetAccessPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetAccessPointIds != nil {
		toSerialize["NetAccessPointIds"] = o.NetAccessPointIds
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.ServiceNames != nil {
		toSerialize["ServiceNames"] = o.ServiceNames
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersNetAccessPoint struct {
	value *FiltersNetAccessPoint
	isSet bool
}

func (v NullableFiltersNetAccessPoint) Get() *FiltersNetAccessPoint {
	return v.value
}

func (v *NullableFiltersNetAccessPoint) Set(val *FiltersNetAccessPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersNetAccessPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersNetAccessPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersNetAccessPoint(val *FiltersNetAccessPoint) *NullableFiltersNetAccessPoint {
	return &NullableFiltersNetAccessPoint{value: val, isSet: true}
}

func (v NullableFiltersNetAccessPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersNetAccessPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersNetPeering One or more filters.
type FiltersNetPeering struct {
	// The account IDs of the owners of the peer Nets.
	AccepterNetAccountIds *[]string `json:"AccepterNetAccountIds,omitempty"`
	// The IP ranges of the peer Nets, in CIDR notation (for example, 10.0.0.0/24).
	AccepterNetIpRanges *[]string `json:"AccepterNetIpRanges,omitempty"`
	// The IDs of the peer Nets.
	AccepterNetNetIds *[]string `json:"AccepterNetNetIds,omitempty"`
	// The IDs of the Net peering connections.
	NetPeeringIds *[]string `json:"NetPeeringIds,omitempty"`
	// The account IDs of the owners of the peer Nets.
	SourceNetAccountIds *[]string `json:"SourceNetAccountIds,omitempty"`
	// The IP ranges of the peer Nets.
	SourceNetIpRanges *[]string `json:"SourceNetIpRanges,omitempty"`
	// The IDs of the peer Nets.
	SourceNetNetIds *[]string `json:"SourceNetNetIds,omitempty"`
	// Additional information about the states of the Net peering connections.
	StateMessages *[]string `json:"StateMessages,omitempty"`
	// The states of the Net peering connections (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).
	StateNames *[]string `json:"StateNames,omitempty"`
	// The keys of the tags associated with the Net peering connections.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the Net peering connections.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the Net peering connections, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersNetPeering instantiates a new FiltersNetPeering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersNetPeering() *FiltersNetPeering {
	this := FiltersNetPeering{}
	return &this
}

// NewFiltersNetPeeringWithDefaults instantiates a new FiltersNetPeering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersNetPeeringWithDefaults() *FiltersNetPeering {
	this := FiltersNetPeering{}
	return &this
}

// GetAccepterNetAccountIds returns the AccepterNetAccountIds field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetAccepterNetAccountIds() []string {
	if o == nil || o.AccepterNetAccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccepterNetAccountIds
}

// GetAccepterNetAccountIdsOk returns a tuple with the AccepterNetAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetAccepterNetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccepterNetAccountIds == nil {
		return nil, false
	}
	return o.AccepterNetAccountIds, true
}

// HasAccepterNetAccountIds returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasAccepterNetAccountIds() bool {
	if o != nil && o.AccepterNetAccountIds != nil {
		return true
	}

	return false
}

// SetAccepterNetAccountIds gets a reference to the given []string and assigns it to the AccepterNetAccountIds field.
func (o *FiltersNetPeering) SetAccepterNetAccountIds(v []string) {
	o.AccepterNetAccountIds = &v
}

// GetAccepterNetIpRanges returns the AccepterNetIpRanges field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetAccepterNetIpRanges() []string {
	if o == nil || o.AccepterNetIpRanges == nil {
		var ret []string
		return ret
	}
	return *o.AccepterNetIpRanges
}

// GetAccepterNetIpRangesOk returns a tuple with the AccepterNetIpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetAccepterNetIpRangesOk() (*[]string, bool) {
	if o == nil || o.AccepterNetIpRanges == nil {
		return nil, false
	}
	return o.AccepterNetIpRanges, true
}

// HasAccepterNetIpRanges returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasAccepterNetIpRanges() bool {
	if o != nil && o.AccepterNetIpRanges != nil {
		return true
	}

	return false
}

// SetAccepterNetIpRanges gets a reference to the given []string and assigns it to the AccepterNetIpRanges field.
func (o *FiltersNetPeering) SetAccepterNetIpRanges(v []string) {
	o.AccepterNetIpRanges = &v
}

// GetAccepterNetNetIds returns the AccepterNetNetIds field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetAccepterNetNetIds() []string {
	if o == nil || o.AccepterNetNetIds == nil {
		var ret []string
		return ret
	}
	return *o.AccepterNetNetIds
}

// GetAccepterNetNetIdsOk returns a tuple with the AccepterNetNetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetAccepterNetNetIdsOk() (*[]string, bool) {
	if o == nil || o.AccepterNetNetIds == nil {
		return nil, false
	}
	return o.AccepterNetNetIds, true
}

// HasAccepterNetNetIds returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasAccepterNetNetIds() bool {
	if o != nil && o.AccepterNetNetIds != nil {
		return true
	}

	return false
}

// SetAccepterNetNetIds gets a reference to the given []string and assigns it to the AccepterNetNetIds field.
func (o *FiltersNetPeering) SetAccepterNetNetIds(v []string) {
	o.AccepterNetNetIds = &v
}

// GetNetPeeringIds returns the NetPeeringIds field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetNetPeeringIds() []string {
	if o == nil || o.NetPeeringIds == nil {
		var ret []string
		return ret
	}
	return *o.NetPeeringIds
}

// GetNetPeeringIdsOk returns a tuple with the NetPeeringIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetNetPeeringIdsOk() (*[]string, bool) {
	if o == nil || o.NetPeeringIds == nil {
		return nil, false
	}
	return o.NetPeeringIds, true
}

// HasNetPeeringIds returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasNetPeeringIds() bool {
	if o != nil && o.NetPeeringIds != nil {
		return true
	}

	return false
}

// SetNetPeeringIds gets a reference to the given []string and assigns it to the NetPeeringIds field.
func (o *FiltersNetPeering) SetNetPeeringIds(v []string) {
	o.NetPeeringIds = &v
}

// GetSourceNetAccountIds returns the SourceNetAccountIds field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetSourceNetAccountIds() []string {
	if o == nil || o.SourceNetAccountIds == nil {
		var ret []string
		return ret
	}
	return *o.SourceNetAccountIds
}

// GetSourceNetAccountIdsOk returns a tuple with the SourceNetAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetSourceNetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.SourceNetAccountIds == nil {
		return nil, false
	}
	return o.SourceNetAccountIds, true
}

// HasSourceNetAccountIds returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasSourceNetAccountIds() bool {
	if o != nil && o.SourceNetAccountIds != nil {
		return true
	}

	return false
}

// SetSourceNetAccountIds gets a reference to the given []string and assigns it to the SourceNetAccountIds field.
func (o *FiltersNetPeering) SetSourceNetAccountIds(v []string) {
	o.SourceNetAccountIds = &v
}

// GetSourceNetIpRanges returns the SourceNetIpRanges field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetSourceNetIpRanges() []string {
	if o == nil || o.SourceNetIpRanges == nil {
		var ret []string
		return ret
	}
	return *o.SourceNetIpRanges
}

// GetSourceNetIpRangesOk returns a tuple with the SourceNetIpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetSourceNetIpRangesOk() (*[]string, bool) {
	if o == nil || o.SourceNetIpRanges == nil {
		return nil, false
	}
	return o.SourceNetIpRanges, true
}

// HasSourceNetIpRanges returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasSourceNetIpRanges() bool {
	if o != nil && o.SourceNetIpRanges != nil {
		return true
	}

	return false
}

// SetSourceNetIpRanges gets a reference to the given []string and assigns it to the SourceNetIpRanges field.
func (o *FiltersNetPeering) SetSourceNetIpRanges(v []string) {
	o.SourceNetIpRanges = &v
}

// GetSourceNetNetIds returns the SourceNetNetIds field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetSourceNetNetIds() []string {
	if o == nil || o.SourceNetNetIds == nil {
		var ret []string
		return ret
	}
	return *o.SourceNetNetIds
}

// GetSourceNetNetIdsOk returns a tuple with the SourceNetNetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetSourceNetNetIdsOk() (*[]string, bool) {
	if o == nil || o.SourceNetNetIds == nil {
		return nil, false
	}
	return o.SourceNetNetIds, true
}

// HasSourceNetNetIds returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasSourceNetNetIds() bool {
	if o != nil && o.SourceNetNetIds != nil {
		return true
	}

	return false
}

// SetSourceNetNetIds gets a reference to the given []string and assigns it to the SourceNetNetIds field.
func (o *FiltersNetPeering) SetSourceNetNetIds(v []string) {
	o.SourceNetNetIds = &v
}

// GetStateMessages returns the StateMessages field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetStateMessages() []string {
	if o == nil || o.StateMessages == nil {
		var ret []string
		return ret
	}
	return *o.StateMessages
}

// GetStateMessagesOk returns a tuple with the StateMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetStateMessagesOk() (*[]string, bool) {
	if o == nil || o.StateMessages == nil {
		return nil, false
	}
	return o.StateMessages, true
}

// HasStateMessages returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasStateMessages() bool {
	if o != nil && o.StateMessages != nil {
		return true
	}

	return false
}

// SetStateMessages gets a reference to the given []string and assigns it to the StateMessages field.
func (o *FiltersNetPeering) SetStateMessages(v []string) {
	o.StateMessages = &v
}

// GetStateNames returns the StateNames field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetStateNames() []string {
	if o == nil || o.StateNames == nil {
		var ret []string
		return ret
	}
	return *o.StateNames
}

// GetStateNamesOk returns a tuple with the StateNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetStateNamesOk() (*[]string, bool) {
	if o == nil || o.StateNames == nil {
		return nil, false
	}
	return o.StateNames, true
}

// HasStateNames returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasStateNames() bool {
	if o != nil && o.StateNames != nil {
		return true
	}

	return false
}

// SetStateNames gets a reference to the given []string and assigns it to the StateNames field.
func (o *FiltersNetPeering) SetStateNames(v []string) {
	o.StateNames = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersNetPeering) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersNetPeering) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersNetPeering) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNetPeering) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersNetPeering) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersNetPeering) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersNetPeering) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccepterNetAccountIds != nil {
		toSerialize["AccepterNetAccountIds"] = o.AccepterNetAccountIds
	}
	if o.AccepterNetIpRanges != nil {
		toSerialize["AccepterNetIpRanges"] = o.AccepterNetIpRanges
	}
	if o.AccepterNetNetIds != nil {
		toSerialize["AccepterNetNetIds"] = o.AccepterNetNetIds
	}
	if o.NetPeeringIds != nil {
		toSerialize["NetPeeringIds"] = o.NetPeeringIds
	}
	if o.SourceNetAccountIds != nil {
		toSerialize["SourceNetAccountIds"] = o.SourceNetAccountIds
	}
	if o.SourceNetIpRanges != nil {
		toSerialize["SourceNetIpRanges"] = o.SourceNetIpRanges
	}
	if o.SourceNetNetIds != nil {
		toSerialize["SourceNetNetIds"] = o.SourceNetNetIds
	}
	if o.StateMessages != nil {
		toSerialize["StateMessages"] = o.StateMessages
	}
	if o.StateNames != nil {
		toSerialize["StateNames"] = o.StateNames
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersNetPeering struct {
	value *FiltersNetPeering
	isSet bool
}

func (v NullableFiltersNetPeering) Get() *FiltersNetPeering {
	return v.value
}

func (v *NullableFiltersNetPeering) Set(val *FiltersNetPeering) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersNetPeering) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersNetPeering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersNetPeering(val *FiltersNetPeering) *NullableFiltersNetPeering {
	return &NullableFiltersNetPeering{value: val, isSet: true}
}

func (v NullableFiltersNetPeering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersNetPeering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersNic One or more filters.
type FiltersNic struct {
	// The device numbers the NICs are attached to.
	LinkNicSortNumbers *[]int32 `json:"LinkNicSortNumbers,omitempty"`
	// The IDs of the VMs the NICs are attached to.
	LinkNicVmIds *[]string `json:"LinkNicVmIds,omitempty"`
	// The IDs of the NICs.
	NicIds *[]string `json:"NicIds,omitempty"`
	// The private IP addresses of the NICs.
	PrivateIpsPrivateIps *[]string `json:"PrivateIpsPrivateIps,omitempty"`
	// The IDs of the Subnets for the NICs.
	SubnetIds *[]string `json:"SubnetIds,omitempty"`
}

// NewFiltersNic instantiates a new FiltersNic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersNic() *FiltersNic {
	this := FiltersNic{}
	return &this
}

// NewFiltersNicWithDefaults instantiates a new FiltersNic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersNicWithDefaults() *FiltersNic {
	this := FiltersNic{}
	return &this
}

// GetLinkNicSortNumbers returns the LinkNicSortNumbers field value if set, zero value otherwise.
func (o *FiltersNic) GetLinkNicSortNumbers() []int32 {
	if o == nil || o.LinkNicSortNumbers == nil {
		var ret []int32
		return ret
	}
	return *o.LinkNicSortNumbers
}

// GetLinkNicSortNumbersOk returns a tuple with the LinkNicSortNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNic) GetLinkNicSortNumbersOk() (*[]int32, bool) {
	if o == nil || o.LinkNicSortNumbers == nil {
		return nil, false
	}
	return o.LinkNicSortNumbers, true
}

// HasLinkNicSortNumbers returns a boolean if a field has been set.
func (o *FiltersNic) HasLinkNicSortNumbers() bool {
	if o != nil && o.LinkNicSortNumbers != nil {
		return true
	}

	return false
}

// SetLinkNicSortNumbers gets a reference to the given []int32 and assigns it to the LinkNicSortNumbers field.
func (o *FiltersNic) SetLinkNicSortNumbers(v []int32) {
	o.LinkNicSortNumbers = &v
}

// GetLinkNicVmIds returns the LinkNicVmIds field value if set, zero value otherwise.
func (o *FiltersNic) GetLinkNicVmIds() []string {
	if o == nil || o.LinkNicVmIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkNicVmIds
}

// GetLinkNicVmIdsOk returns a tuple with the LinkNicVmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNic) GetLinkNicVmIdsOk() (*[]string, bool) {
	if o == nil || o.LinkNicVmIds == nil {
		return nil, false
	}
	return o.LinkNicVmIds, true
}

// HasLinkNicVmIds returns a boolean if a field has been set.
func (o *FiltersNic) HasLinkNicVmIds() bool {
	if o != nil && o.LinkNicVmIds != nil {
		return true
	}

	return false
}

// SetLinkNicVmIds gets a reference to the given []string and assigns it to the LinkNicVmIds field.
func (o *FiltersNic) SetLinkNicVmIds(v []string) {
	o.LinkNicVmIds = &v
}

// GetNicIds returns the NicIds field value if set, zero value otherwise.
func (o *FiltersNic) GetNicIds() []string {
	if o == nil || o.NicIds == nil {
		var ret []string
		return ret
	}
	return *o.NicIds
}

// GetNicIdsOk returns a tuple with the NicIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNic) GetNicIdsOk() (*[]string, bool) {
	if o == nil || o.NicIds == nil {
		return nil, false
	}
	return o.NicIds, true
}

// HasNicIds returns a boolean if a field has been set.
func (o *FiltersNic) HasNicIds() bool {
	if o != nil && o.NicIds != nil {
		return true
	}

	return false
}

// SetNicIds gets a reference to the given []string and assigns it to the NicIds field.
func (o *FiltersNic) SetNicIds(v []string) {
	o.NicIds = &v
}

// GetPrivateIpsPrivateIps returns the PrivateIpsPrivateIps field value if set, zero value otherwise.
func (o *FiltersNic) GetPrivateIpsPrivateIps() []string {
	if o == nil || o.PrivateIpsPrivateIps == nil {
		var ret []string
		return ret
	}
	return *o.PrivateIpsPrivateIps
}

// GetPrivateIpsPrivateIpsOk returns a tuple with the PrivateIpsPrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNic) GetPrivateIpsPrivateIpsOk() (*[]string, bool) {
	if o == nil || o.PrivateIpsPrivateIps == nil {
		return nil, false
	}
	return o.PrivateIpsPrivateIps, true
}

// HasPrivateIpsPrivateIps returns a boolean if a field has been set.
func (o *FiltersNic) HasPrivateIpsPrivateIps() bool {
	if o != nil && o.PrivateIpsPrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIpsPrivateIps gets a reference to the given []string and assigns it to the PrivateIpsPrivateIps field.
func (o *FiltersNic) SetPrivateIpsPrivateIps(v []string) {
	o.PrivateIpsPrivateIps = &v
}

// GetSubnetIds returns the SubnetIds field value if set, zero value otherwise.
func (o *FiltersNic) GetSubnetIds() []string {
	if o == nil || o.SubnetIds == nil {
		var ret []string
		return ret
	}
	return *o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersNic) GetSubnetIdsOk() (*[]string, bool) {
	if o == nil || o.SubnetIds == nil {
		return nil, false
	}
	return o.SubnetIds, true
}

// HasSubnetIds returns a boolean if a field has been set.
func (o *FiltersNic) HasSubnetIds() bool {
	if o != nil && o.SubnetIds != nil {
		return true
	}

	return false
}

// SetSubnetIds gets a reference to the given []string and assigns it to the SubnetIds field.
func (o *FiltersNic) SetSubnetIds(v []string) {
	o.SubnetIds = &v
}

func (o FiltersNic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkNicSortNumbers != nil {
		toSerialize["LinkNicSortNumbers"] = o.LinkNicSortNumbers
	}
	if o.LinkNicVmIds != nil {
		toSerialize["LinkNicVmIds"] = o.LinkNicVmIds
	}
	if o.NicIds != nil {
		toSerialize["NicIds"] = o.NicIds
	}
	if o.PrivateIpsPrivateIps != nil {
		toSerialize["PrivateIpsPrivateIps"] = o.PrivateIpsPrivateIps
	}
	if o.SubnetIds != nil {
		toSerialize["SubnetIds"] = o.SubnetIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersNic struct {
	value *FiltersNic
	isSet bool
}

func (v NullableFiltersNic) Get() *FiltersNic {
	return v.value
}

func (v *NullableFiltersNic) Set(val *FiltersNic) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersNic) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersNic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersNic(val *FiltersNic) *NullableFiltersNic {
	return &NullableFiltersNic{value: val, isSet: true}
}

func (v NullableFiltersNic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersNic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersProductType One or more filters.
type FiltersProductType struct {
	// The IDs of the product types.
	ProductTypeIds *[]string `json:"ProductTypeIds,omitempty"`
}

// NewFiltersProductType instantiates a new FiltersProductType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersProductType() *FiltersProductType {
	this := FiltersProductType{}
	return &this
}

// NewFiltersProductTypeWithDefaults instantiates a new FiltersProductType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersProductTypeWithDefaults() *FiltersProductType {
	this := FiltersProductType{}
	return &this
}

// GetProductTypeIds returns the ProductTypeIds field value if set, zero value otherwise.
func (o *FiltersProductType) GetProductTypeIds() []string {
	if o == nil || o.ProductTypeIds == nil {
		var ret []string
		return ret
	}
	return *o.ProductTypeIds
}

// GetProductTypeIdsOk returns a tuple with the ProductTypeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersProductType) GetProductTypeIdsOk() (*[]string, bool) {
	if o == nil || o.ProductTypeIds == nil {
		return nil, false
	}
	return o.ProductTypeIds, true
}

// HasProductTypeIds returns a boolean if a field has been set.
func (o *FiltersProductType) HasProductTypeIds() bool {
	if o != nil && o.ProductTypeIds != nil {
		return true
	}

	return false
}

// SetProductTypeIds gets a reference to the given []string and assigns it to the ProductTypeIds field.
func (o *FiltersProductType) SetProductTypeIds(v []string) {
	o.ProductTypeIds = &v
}

func (o FiltersProductType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductTypeIds != nil {
		toSerialize["ProductTypeIds"] = o.ProductTypeIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersProductType struct {
	value *FiltersProductType
	isSet bool
}

func (v NullableFiltersProductType) Get() *FiltersProductType {
	return v.value
}

func (v *NullableFiltersProductType) Set(val *FiltersProductType) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersProductType) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersProductType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersProductType(val *FiltersProductType) *NullableFiltersProductType {
	return &NullableFiltersProductType{value: val, isSet: true}
}

func (v NullableFiltersProductType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersProductType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersPublicIp One or more filters.
type FiltersPublicIp struct {
	// The IDs representing the associations of EIPs with VMs or NICs.
	LinkPublicIpIds *[]string `json:"LinkPublicIpIds,omitempty"`
	// The account IDs of the owners of the NICs.
	NicAccountIds *[]string `json:"NicAccountIds,omitempty"`
	// The IDs of the NICs.
	NicIds *[]string `json:"NicIds,omitempty"`
	// Whether the EIPs are for use in the public Cloud or in a Net.
	Placements *[]string `json:"Placements,omitempty"`
	// The private IP addresses associated with the EIPs.
	PrivateIps *[]string `json:"PrivateIps,omitempty"`
	// The IDs of the External IP addresses (EIPs).
	PublicIpIds *[]string `json:"PublicIpIds,omitempty"`
	// The External IP addresses (EIPs).
	PublicIps *[]string `json:"PublicIps,omitempty"`
	// The keys of the tags associated with the EIPs.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the EIPs.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the EIPs, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// NewFiltersPublicIp instantiates a new FiltersPublicIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersPublicIp() *FiltersPublicIp {
	this := FiltersPublicIp{}
	return &this
}

// NewFiltersPublicIpWithDefaults instantiates a new FiltersPublicIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersPublicIpWithDefaults() *FiltersPublicIp {
	this := FiltersPublicIp{}
	return &this
}

// GetLinkPublicIpIds returns the LinkPublicIpIds field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetLinkPublicIpIds() []string {
	if o == nil || o.LinkPublicIpIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkPublicIpIds
}

// GetLinkPublicIpIdsOk returns a tuple with the LinkPublicIpIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetLinkPublicIpIdsOk() (*[]string, bool) {
	if o == nil || o.LinkPublicIpIds == nil {
		return nil, false
	}
	return o.LinkPublicIpIds, true
}

// HasLinkPublicIpIds returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasLinkPublicIpIds() bool {
	if o != nil && o.LinkPublicIpIds != nil {
		return true
	}

	return false
}

// SetLinkPublicIpIds gets a reference to the given []string and assigns it to the LinkPublicIpIds field.
func (o *FiltersPublicIp) SetLinkPublicIpIds(v []string) {
	o.LinkPublicIpIds = &v
}

// GetNicAccountIds returns the NicAccountIds field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetNicAccountIds() []string {
	if o == nil || o.NicAccountIds == nil {
		var ret []string
		return ret
	}
	return *o.NicAccountIds
}

// GetNicAccountIdsOk returns a tuple with the NicAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetNicAccountIdsOk() (*[]string, bool) {
	if o == nil || o.NicAccountIds == nil {
		return nil, false
	}
	return o.NicAccountIds, true
}

// HasNicAccountIds returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasNicAccountIds() bool {
	if o != nil && o.NicAccountIds != nil {
		return true
	}

	return false
}

// SetNicAccountIds gets a reference to the given []string and assigns it to the NicAccountIds field.
func (o *FiltersPublicIp) SetNicAccountIds(v []string) {
	o.NicAccountIds = &v
}

// GetNicIds returns the NicIds field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetNicIds() []string {
	if o == nil || o.NicIds == nil {
		var ret []string
		return ret
	}
	return *o.NicIds
}

// GetNicIdsOk returns a tuple with the NicIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetNicIdsOk() (*[]string, bool) {
	if o == nil || o.NicIds == nil {
		return nil, false
	}
	return o.NicIds, true
}

// HasNicIds returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasNicIds() bool {
	if o != nil && o.NicIds != nil {
		return true
	}

	return false
}

// SetNicIds gets a reference to the given []string and assigns it to the NicIds field.
func (o *FiltersPublicIp) SetNicIds(v []string) {
	o.NicIds = &v
}

// GetPlacements returns the Placements field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetPlacements() []string {
	if o == nil || o.Placements == nil {
		var ret []string
		return ret
	}
	return *o.Placements
}

// GetPlacementsOk returns a tuple with the Placements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetPlacementsOk() (*[]string, bool) {
	if o == nil || o.Placements == nil {
		return nil, false
	}
	return o.Placements, true
}

// HasPlacements returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasPlacements() bool {
	if o != nil && o.Placements != nil {
		return true
	}

	return false
}

// SetPlacements gets a reference to the given []string and assigns it to the Placements field.
func (o *FiltersPublicIp) SetPlacements(v []string) {
	o.Placements = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetPrivateIps() []string {
	if o == nil || o.PrivateIps == nil {
		var ret []string
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetPrivateIpsOk() (*[]string, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []string and assigns it to the PrivateIps field.
func (o *FiltersPublicIp) SetPrivateIps(v []string) {
	o.PrivateIps = &v
}

// GetPublicIpIds returns the PublicIpIds field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetPublicIpIds() []string {
	if o == nil || o.PublicIpIds == nil {
		var ret []string
		return ret
	}
	return *o.PublicIpIds
}

// GetPublicIpIdsOk returns a tuple with the PublicIpIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetPublicIpIdsOk() (*[]string, bool) {
	if o == nil || o.PublicIpIds == nil {
		return nil, false
	}
	return o.PublicIpIds, true
}

// HasPublicIpIds returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasPublicIpIds() bool {
	if o != nil && o.PublicIpIds != nil {
		return true
	}

	return false
}

// SetPublicIpIds gets a reference to the given []string and assigns it to the PublicIpIds field.
func (o *FiltersPublicIp) SetPublicIpIds(v []string) {
	o.PublicIpIds = &v
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetPublicIps() []string {
	if o == nil || o.PublicIps == nil {
		var ret []string
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetPublicIpsOk() (*[]string, bool) {
	if o == nil || o.PublicIps == nil {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasPublicIps() bool {
	if o != nil && o.PublicIps != nil {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []string and assigns it to the PublicIps field.
func (o *FiltersPublicIp) SetPublicIps(v []string) {
	o.PublicIps = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersPublicIp) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersPublicIp) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersPublicIp) SetTags(v []string) {
	o.Tags = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersPublicIp) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersPublicIp) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersPublicIp) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersPublicIp) SetVmIds(v []string) {
	o.VmIds = &v
}

func (o FiltersPublicIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkPublicIpIds != nil {
		toSerialize["LinkPublicIpIds"] = o.LinkPublicIpIds
	}
	if o.NicAccountIds != nil {
		toSerialize["NicAccountIds"] = o.NicAccountIds
	}
	if o.NicIds != nil {
		toSerialize["NicIds"] = o.NicIds
	}
	if o.Placements != nil {
		toSerialize["Placements"] = o.Placements
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.PublicIpIds != nil {
		toSerialize["PublicIpIds"] = o.PublicIpIds
	}
	if o.PublicIps != nil {
		toSerialize["PublicIps"] = o.PublicIps
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersPublicIp struct {
	value *FiltersPublicIp
	isSet bool
}

func (v NullableFiltersPublicIp) Get() *FiltersPublicIp {
	return v.value
}

func (v *NullableFiltersPublicIp) Set(val *FiltersPublicIp) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersPublicIp) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersPublicIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersPublicIp(val *FiltersPublicIp) *NullableFiltersPublicIp {
	return &NullableFiltersPublicIp{value: val, isSet: true}
}

func (v NullableFiltersPublicIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersPublicIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersQuota One or more filters.
type FiltersQuota struct {
	// The group names of the quotas.
	Collections *[]string `json:"Collections,omitempty"`
	// The names of the quotas.
	QuotaNames *[]string `json:"QuotaNames,omitempty"`
	// The resource IDs if these are resource-specific quotas, `global` if they are not.
	QuotaTypes *[]string `json:"QuotaTypes,omitempty"`
	// The description of the quotas.
	ShortDescriptions *[]string `json:"ShortDescriptions,omitempty"`
}

// NewFiltersQuota instantiates a new FiltersQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersQuota() *FiltersQuota {
	this := FiltersQuota{}
	return &this
}

// NewFiltersQuotaWithDefaults instantiates a new FiltersQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersQuotaWithDefaults() *FiltersQuota {
	this := FiltersQuota{}
	return &this
}

// GetCollections returns the Collections field value if set, zero value otherwise.
func (o *FiltersQuota) GetCollections() []string {
	if o == nil || o.Collections == nil {
		var ret []string
		return ret
	}
	return *o.Collections
}

// GetCollectionsOk returns a tuple with the Collections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersQuota) GetCollectionsOk() (*[]string, bool) {
	if o == nil || o.Collections == nil {
		return nil, false
	}
	return o.Collections, true
}

// HasCollections returns a boolean if a field has been set.
func (o *FiltersQuota) HasCollections() bool {
	if o != nil && o.Collections != nil {
		return true
	}

	return false
}

// SetCollections gets a reference to the given []string and assigns it to the Collections field.
func (o *FiltersQuota) SetCollections(v []string) {
	o.Collections = &v
}

// GetQuotaNames returns the QuotaNames field value if set, zero value otherwise.
func (o *FiltersQuota) GetQuotaNames() []string {
	if o == nil || o.QuotaNames == nil {
		var ret []string
		return ret
	}
	return *o.QuotaNames
}

// GetQuotaNamesOk returns a tuple with the QuotaNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersQuota) GetQuotaNamesOk() (*[]string, bool) {
	if o == nil || o.QuotaNames == nil {
		return nil, false
	}
	return o.QuotaNames, true
}

// HasQuotaNames returns a boolean if a field has been set.
func (o *FiltersQuota) HasQuotaNames() bool {
	if o != nil && o.QuotaNames != nil {
		return true
	}

	return false
}

// SetQuotaNames gets a reference to the given []string and assigns it to the QuotaNames field.
func (o *FiltersQuota) SetQuotaNames(v []string) {
	o.QuotaNames = &v
}

// GetQuotaTypes returns the QuotaTypes field value if set, zero value otherwise.
func (o *FiltersQuota) GetQuotaTypes() []string {
	if o == nil || o.QuotaTypes == nil {
		var ret []string
		return ret
	}
	return *o.QuotaTypes
}

// GetQuotaTypesOk returns a tuple with the QuotaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersQuota) GetQuotaTypesOk() (*[]string, bool) {
	if o == nil || o.QuotaTypes == nil {
		return nil, false
	}
	return o.QuotaTypes, true
}

// HasQuotaTypes returns a boolean if a field has been set.
func (o *FiltersQuota) HasQuotaTypes() bool {
	if o != nil && o.QuotaTypes != nil {
		return true
	}

	return false
}

// SetQuotaTypes gets a reference to the given []string and assigns it to the QuotaTypes field.
func (o *FiltersQuota) SetQuotaTypes(v []string) {
	o.QuotaTypes = &v
}

// GetShortDescriptions returns the ShortDescriptions field value if set, zero value otherwise.
func (o *FiltersQuota) GetShortDescriptions() []string {
	if o == nil || o.ShortDescriptions == nil {
		var ret []string
		return ret
	}
	return *o.ShortDescriptions
}

// GetShortDescriptionsOk returns a tuple with the ShortDescriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersQuota) GetShortDescriptionsOk() (*[]string, bool) {
	if o == nil || o.ShortDescriptions == nil {
		return nil, false
	}
	return o.ShortDescriptions, true
}

// HasShortDescriptions returns a boolean if a field has been set.
func (o *FiltersQuota) HasShortDescriptions() bool {
	if o != nil && o.ShortDescriptions != nil {
		return true
	}

	return false
}

// SetShortDescriptions gets a reference to the given []string and assigns it to the ShortDescriptions field.
func (o *FiltersQuota) SetShortDescriptions(v []string) {
	o.ShortDescriptions = &v
}

func (o FiltersQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Collections != nil {
		toSerialize["Collections"] = o.Collections
	}
	if o.QuotaNames != nil {
		toSerialize["QuotaNames"] = o.QuotaNames
	}
	if o.QuotaTypes != nil {
		toSerialize["QuotaTypes"] = o.QuotaTypes
	}
	if o.ShortDescriptions != nil {
		toSerialize["ShortDescriptions"] = o.ShortDescriptions
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersQuota struct {
	value *FiltersQuota
	isSet bool
}

func (v NullableFiltersQuota) Get() *FiltersQuota {
	return v.value
}

func (v *NullableFiltersQuota) Set(val *FiltersQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersQuota(val *FiltersQuota) *NullableFiltersQuota {
	return &NullableFiltersQuota{value: val, isSet: true}
}

func (v NullableFiltersQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersRouteTable One or more filters.
type FiltersRouteTable struct {
	// The IDs of the route tables involved in the associations.
	LinkRouteTableIds *[]string `json:"LinkRouteTableIds,omitempty"`
	// The IDs of the associations between the route tables and the Subnets.
	LinkRouteTableLinkRouteTableIds *[]string `json:"LinkRouteTableLinkRouteTableIds,omitempty"`
	// If `true`, the route tables are the main ones for their Nets.
	LinkRouteTableMain *bool `json:"LinkRouteTableMain,omitempty"`
	// The IDs of the Subnets involved in the associations.
	LinkSubnetIds *[]string `json:"LinkSubnetIds,omitempty"`
	// The IDs of the Nets for the route tables.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The methods used to create a route.
	RouteCreationMethods *[]string `json:"RouteCreationMethods,omitempty"`
	// The IP ranges specified in routes in the tables.
	RouteDestinationIpRanges *[]string `json:"RouteDestinationIpRanges,omitempty"`
	// The service IDs specified in routes in the tables.
	RouteDestinationServiceIds *[]string `json:"RouteDestinationServiceIds,omitempty"`
	// The IDs of the gateways specified in routes in the tables.
	RouteGatewayIds *[]string `json:"RouteGatewayIds,omitempty"`
	// The IDs of the NAT services specified in routes in the tables.
	RouteNatServiceIds *[]string `json:"RouteNatServiceIds,omitempty"`
	// The IDs of the Net peering connections specified in routes in the tables.
	RouteNetPeeringIds *[]string `json:"RouteNetPeeringIds,omitempty"`
	// The states of routes in the route tables (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available.
	RouteStates *[]string `json:"RouteStates,omitempty"`
	// The IDs of the route tables.
	RouteTableIds *[]string `json:"RouteTableIds,omitempty"`
	// The IDs of the VMs specified in routes in the tables.
	RouteVmIds *[]string `json:"RouteVmIds,omitempty"`
	// The keys of the tags associated with the route tables.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the route tables.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the route tables, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersRouteTable instantiates a new FiltersRouteTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersRouteTable() *FiltersRouteTable {
	this := FiltersRouteTable{}
	return &this
}

// NewFiltersRouteTableWithDefaults instantiates a new FiltersRouteTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersRouteTableWithDefaults() *FiltersRouteTable {
	this := FiltersRouteTable{}
	return &this
}

// GetLinkRouteTableIds returns the LinkRouteTableIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetLinkRouteTableIds() []string {
	if o == nil || o.LinkRouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkRouteTableIds
}

// GetLinkRouteTableIdsOk returns a tuple with the LinkRouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetLinkRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.LinkRouteTableIds == nil {
		return nil, false
	}
	return o.LinkRouteTableIds, true
}

// HasLinkRouteTableIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasLinkRouteTableIds() bool {
	if o != nil && o.LinkRouteTableIds != nil {
		return true
	}

	return false
}

// SetLinkRouteTableIds gets a reference to the given []string and assigns it to the LinkRouteTableIds field.
func (o *FiltersRouteTable) SetLinkRouteTableIds(v []string) {
	o.LinkRouteTableIds = &v
}

// GetLinkRouteTableLinkRouteTableIds returns the LinkRouteTableLinkRouteTableIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetLinkRouteTableLinkRouteTableIds() []string {
	if o == nil || o.LinkRouteTableLinkRouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkRouteTableLinkRouteTableIds
}

// GetLinkRouteTableLinkRouteTableIdsOk returns a tuple with the LinkRouteTableLinkRouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetLinkRouteTableLinkRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.LinkRouteTableLinkRouteTableIds == nil {
		return nil, false
	}
	return o.LinkRouteTableLinkRouteTableIds, true
}

// HasLinkRouteTableLinkRouteTableIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasLinkRouteTableLinkRouteTableIds() bool {
	if o != nil && o.LinkRouteTableLinkRouteTableIds != nil {
		return true
	}

	return false
}

// SetLinkRouteTableLinkRouteTableIds gets a reference to the given []string and assigns it to the LinkRouteTableLinkRouteTableIds field.
func (o *FiltersRouteTable) SetLinkRouteTableLinkRouteTableIds(v []string) {
	o.LinkRouteTableLinkRouteTableIds = &v
}

// GetLinkRouteTableMain returns the LinkRouteTableMain field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetLinkRouteTableMain() bool {
	if o == nil || o.LinkRouteTableMain == nil {
		var ret bool
		return ret
	}
	return *o.LinkRouteTableMain
}

// GetLinkRouteTableMainOk returns a tuple with the LinkRouteTableMain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetLinkRouteTableMainOk() (*bool, bool) {
	if o == nil || o.LinkRouteTableMain == nil {
		return nil, false
	}
	return o.LinkRouteTableMain, true
}

// HasLinkRouteTableMain returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasLinkRouteTableMain() bool {
	if o != nil && o.LinkRouteTableMain != nil {
		return true
	}

	return false
}

// SetLinkRouteTableMain gets a reference to the given bool and assigns it to the LinkRouteTableMain field.
func (o *FiltersRouteTable) SetLinkRouteTableMain(v bool) {
	o.LinkRouteTableMain = &v
}

// GetLinkSubnetIds returns the LinkSubnetIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetLinkSubnetIds() []string {
	if o == nil || o.LinkSubnetIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkSubnetIds
}

// GetLinkSubnetIdsOk returns a tuple with the LinkSubnetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetLinkSubnetIdsOk() (*[]string, bool) {
	if o == nil || o.LinkSubnetIds == nil {
		return nil, false
	}
	return o.LinkSubnetIds, true
}

// HasLinkSubnetIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasLinkSubnetIds() bool {
	if o != nil && o.LinkSubnetIds != nil {
		return true
	}

	return false
}

// SetLinkSubnetIds gets a reference to the given []string and assigns it to the LinkSubnetIds field.
func (o *FiltersRouteTable) SetLinkSubnetIds(v []string) {
	o.LinkSubnetIds = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersRouteTable) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetRouteCreationMethods returns the RouteCreationMethods field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteCreationMethods() []string {
	if o == nil || o.RouteCreationMethods == nil {
		var ret []string
		return ret
	}
	return *o.RouteCreationMethods
}

// GetRouteCreationMethodsOk returns a tuple with the RouteCreationMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteCreationMethodsOk() (*[]string, bool) {
	if o == nil || o.RouteCreationMethods == nil {
		return nil, false
	}
	return o.RouteCreationMethods, true
}

// HasRouteCreationMethods returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteCreationMethods() bool {
	if o != nil && o.RouteCreationMethods != nil {
		return true
	}

	return false
}

// SetRouteCreationMethods gets a reference to the given []string and assigns it to the RouteCreationMethods field.
func (o *FiltersRouteTable) SetRouteCreationMethods(v []string) {
	o.RouteCreationMethods = &v
}

// GetRouteDestinationIpRanges returns the RouteDestinationIpRanges field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteDestinationIpRanges() []string {
	if o == nil || o.RouteDestinationIpRanges == nil {
		var ret []string
		return ret
	}
	return *o.RouteDestinationIpRanges
}

// GetRouteDestinationIpRangesOk returns a tuple with the RouteDestinationIpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteDestinationIpRangesOk() (*[]string, bool) {
	if o == nil || o.RouteDestinationIpRanges == nil {
		return nil, false
	}
	return o.RouteDestinationIpRanges, true
}

// HasRouteDestinationIpRanges returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteDestinationIpRanges() bool {
	if o != nil && o.RouteDestinationIpRanges != nil {
		return true
	}

	return false
}

// SetRouteDestinationIpRanges gets a reference to the given []string and assigns it to the RouteDestinationIpRanges field.
func (o *FiltersRouteTable) SetRouteDestinationIpRanges(v []string) {
	o.RouteDestinationIpRanges = &v
}

// GetRouteDestinationServiceIds returns the RouteDestinationServiceIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteDestinationServiceIds() []string {
	if o == nil || o.RouteDestinationServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteDestinationServiceIds
}

// GetRouteDestinationServiceIdsOk returns a tuple with the RouteDestinationServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteDestinationServiceIdsOk() (*[]string, bool) {
	if o == nil || o.RouteDestinationServiceIds == nil {
		return nil, false
	}
	return o.RouteDestinationServiceIds, true
}

// HasRouteDestinationServiceIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteDestinationServiceIds() bool {
	if o != nil && o.RouteDestinationServiceIds != nil {
		return true
	}

	return false
}

// SetRouteDestinationServiceIds gets a reference to the given []string and assigns it to the RouteDestinationServiceIds field.
func (o *FiltersRouteTable) SetRouteDestinationServiceIds(v []string) {
	o.RouteDestinationServiceIds = &v
}

// GetRouteGatewayIds returns the RouteGatewayIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteGatewayIds() []string {
	if o == nil || o.RouteGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteGatewayIds
}

// GetRouteGatewayIdsOk returns a tuple with the RouteGatewayIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteGatewayIdsOk() (*[]string, bool) {
	if o == nil || o.RouteGatewayIds == nil {
		return nil, false
	}
	return o.RouteGatewayIds, true
}

// HasRouteGatewayIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteGatewayIds() bool {
	if o != nil && o.RouteGatewayIds != nil {
		return true
	}

	return false
}

// SetRouteGatewayIds gets a reference to the given []string and assigns it to the RouteGatewayIds field.
func (o *FiltersRouteTable) SetRouteGatewayIds(v []string) {
	o.RouteGatewayIds = &v
}

// GetRouteNatServiceIds returns the RouteNatServiceIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteNatServiceIds() []string {
	if o == nil || o.RouteNatServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteNatServiceIds
}

// GetRouteNatServiceIdsOk returns a tuple with the RouteNatServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteNatServiceIdsOk() (*[]string, bool) {
	if o == nil || o.RouteNatServiceIds == nil {
		return nil, false
	}
	return o.RouteNatServiceIds, true
}

// HasRouteNatServiceIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteNatServiceIds() bool {
	if o != nil && o.RouteNatServiceIds != nil {
		return true
	}

	return false
}

// SetRouteNatServiceIds gets a reference to the given []string and assigns it to the RouteNatServiceIds field.
func (o *FiltersRouteTable) SetRouteNatServiceIds(v []string) {
	o.RouteNatServiceIds = &v
}

// GetRouteNetPeeringIds returns the RouteNetPeeringIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteNetPeeringIds() []string {
	if o == nil || o.RouteNetPeeringIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteNetPeeringIds
}

// GetRouteNetPeeringIdsOk returns a tuple with the RouteNetPeeringIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteNetPeeringIdsOk() (*[]string, bool) {
	if o == nil || o.RouteNetPeeringIds == nil {
		return nil, false
	}
	return o.RouteNetPeeringIds, true
}

// HasRouteNetPeeringIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteNetPeeringIds() bool {
	if o != nil && o.RouteNetPeeringIds != nil {
		return true
	}

	return false
}

// SetRouteNetPeeringIds gets a reference to the given []string and assigns it to the RouteNetPeeringIds field.
func (o *FiltersRouteTable) SetRouteNetPeeringIds(v []string) {
	o.RouteNetPeeringIds = &v
}

// GetRouteStates returns the RouteStates field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteStates() []string {
	if o == nil || o.RouteStates == nil {
		var ret []string
		return ret
	}
	return *o.RouteStates
}

// GetRouteStatesOk returns a tuple with the RouteStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteStatesOk() (*[]string, bool) {
	if o == nil || o.RouteStates == nil {
		return nil, false
	}
	return o.RouteStates, true
}

// HasRouteStates returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteStates() bool {
	if o != nil && o.RouteStates != nil {
		return true
	}

	return false
}

// SetRouteStates gets a reference to the given []string and assigns it to the RouteStates field.
func (o *FiltersRouteTable) SetRouteStates(v []string) {
	o.RouteStates = &v
}

// GetRouteTableIds returns the RouteTableIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteTableIds() []string {
	if o == nil || o.RouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteTableIds
}

// GetRouteTableIdsOk returns a tuple with the RouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.RouteTableIds == nil {
		return nil, false
	}
	return o.RouteTableIds, true
}

// HasRouteTableIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteTableIds() bool {
	if o != nil && o.RouteTableIds != nil {
		return true
	}

	return false
}

// SetRouteTableIds gets a reference to the given []string and assigns it to the RouteTableIds field.
func (o *FiltersRouteTable) SetRouteTableIds(v []string) {
	o.RouteTableIds = &v
}

// GetRouteVmIds returns the RouteVmIds field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetRouteVmIds() []string {
	if o == nil || o.RouteVmIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteVmIds
}

// GetRouteVmIdsOk returns a tuple with the RouteVmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetRouteVmIdsOk() (*[]string, bool) {
	if o == nil || o.RouteVmIds == nil {
		return nil, false
	}
	return o.RouteVmIds, true
}

// HasRouteVmIds returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasRouteVmIds() bool {
	if o != nil && o.RouteVmIds != nil {
		return true
	}

	return false
}

// SetRouteVmIds gets a reference to the given []string and assigns it to the RouteVmIds field.
func (o *FiltersRouteTable) SetRouteVmIds(v []string) {
	o.RouteVmIds = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersRouteTable) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersRouteTable) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersRouteTable) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersRouteTable) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersRouteTable) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersRouteTable) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersRouteTable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkRouteTableIds != nil {
		toSerialize["LinkRouteTableIds"] = o.LinkRouteTableIds
	}
	if o.LinkRouteTableLinkRouteTableIds != nil {
		toSerialize["LinkRouteTableLinkRouteTableIds"] = o.LinkRouteTableLinkRouteTableIds
	}
	if o.LinkRouteTableMain != nil {
		toSerialize["LinkRouteTableMain"] = o.LinkRouteTableMain
	}
	if o.LinkSubnetIds != nil {
		toSerialize["LinkSubnetIds"] = o.LinkSubnetIds
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.RouteCreationMethods != nil {
		toSerialize["RouteCreationMethods"] = o.RouteCreationMethods
	}
	if o.RouteDestinationIpRanges != nil {
		toSerialize["RouteDestinationIpRanges"] = o.RouteDestinationIpRanges
	}
	if o.RouteDestinationServiceIds != nil {
		toSerialize["RouteDestinationServiceIds"] = o.RouteDestinationServiceIds
	}
	if o.RouteGatewayIds != nil {
		toSerialize["RouteGatewayIds"] = o.RouteGatewayIds
	}
	if o.RouteNatServiceIds != nil {
		toSerialize["RouteNatServiceIds"] = o.RouteNatServiceIds
	}
	if o.RouteNetPeeringIds != nil {
		toSerialize["RouteNetPeeringIds"] = o.RouteNetPeeringIds
	}
	if o.RouteStates != nil {
		toSerialize["RouteStates"] = o.RouteStates
	}
	if o.RouteTableIds != nil {
		toSerialize["RouteTableIds"] = o.RouteTableIds
	}
	if o.RouteVmIds != nil {
		toSerialize["RouteVmIds"] = o.RouteVmIds
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersRouteTable struct {
	value *FiltersRouteTable
	isSet bool
}

func (v NullableFiltersRouteTable) Get() *FiltersRouteTable {
	return v.value
}

func (v *NullableFiltersRouteTable) Set(val *FiltersRouteTable) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersRouteTable) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersRouteTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersRouteTable(val *FiltersRouteTable) *NullableFiltersRouteTable {
	return &NullableFiltersRouteTable{value: val, isSet: true}
}

func (v NullableFiltersRouteTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersRouteTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersSecurityGroup One or more filters.
type FiltersSecurityGroup struct {
	// The account IDs of the owners of the security groups.
	AccountIds *[]string `json:"AccountIds,omitempty"`
	// The IDs of the Nets specified when the security groups were created.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The IDs of the security groups.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
	// The names of the security groups.
	SecurityGroupNames *[]string `json:"SecurityGroupNames,omitempty"`
	// The keys of the tags associated with the security groups.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the security groups.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the security groups, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersSecurityGroup instantiates a new FiltersSecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersSecurityGroup() *FiltersSecurityGroup {
	this := FiltersSecurityGroup{}
	return &this
}

// NewFiltersSecurityGroupWithDefaults instantiates a new FiltersSecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersSecurityGroupWithDefaults() *FiltersSecurityGroup {
	this := FiltersSecurityGroup{}
	return &this
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *FiltersSecurityGroup) SetAccountIds(v []string) {
	o.AccountIds = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersSecurityGroup) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *FiltersSecurityGroup) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

// GetSecurityGroupNames returns the SecurityGroupNames field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetSecurityGroupNames() []string {
	if o == nil || o.SecurityGroupNames == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupNames
}

// GetSecurityGroupNamesOk returns a tuple with the SecurityGroupNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetSecurityGroupNamesOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupNames == nil {
		return nil, false
	}
	return o.SecurityGroupNames, true
}

// HasSecurityGroupNames returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasSecurityGroupNames() bool {
	if o != nil && o.SecurityGroupNames != nil {
		return true
	}

	return false
}

// SetSecurityGroupNames gets a reference to the given []string and assigns it to the SecurityGroupNames field.
func (o *FiltersSecurityGroup) SetSecurityGroupNames(v []string) {
	o.SecurityGroupNames = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersSecurityGroup) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersSecurityGroup) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersSecurityGroup) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSecurityGroup) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersSecurityGroup) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersSecurityGroup) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersSecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountIds != nil {
		toSerialize["AccountIds"] = o.AccountIds
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	if o.SecurityGroupNames != nil {
		toSerialize["SecurityGroupNames"] = o.SecurityGroupNames
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersSecurityGroup struct {
	value *FiltersSecurityGroup
	isSet bool
}

func (v NullableFiltersSecurityGroup) Get() *FiltersSecurityGroup {
	return v.value
}

func (v *NullableFiltersSecurityGroup) Set(val *FiltersSecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersSecurityGroup(val *FiltersSecurityGroup) *NullableFiltersSecurityGroup {
	return &NullableFiltersSecurityGroup{value: val, isSet: true}
}

func (v NullableFiltersSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersServerCertificate One or more filters.
type FiltersServerCertificate struct {
	// The path to the server certificate.
	Paths *string `json:"Paths,omitempty"`
}

// NewFiltersServerCertificate instantiates a new FiltersServerCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersServerCertificate() *FiltersServerCertificate {
	this := FiltersServerCertificate{}
	return &this
}

// NewFiltersServerCertificateWithDefaults instantiates a new FiltersServerCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersServerCertificateWithDefaults() *FiltersServerCertificate {
	this := FiltersServerCertificate{}
	return &this
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *FiltersServerCertificate) GetPaths() string {
	if o == nil || o.Paths == nil {
		var ret string
		return ret
	}
	return *o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersServerCertificate) GetPathsOk() (*string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *FiltersServerCertificate) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given string and assigns it to the Paths field.
func (o *FiltersServerCertificate) SetPaths(v string) {
	o.Paths = &v
}

func (o FiltersServerCertificate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Paths != nil {
		toSerialize["Paths"] = o.Paths
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersServerCertificate struct {
	value *FiltersServerCertificate
	isSet bool
}

func (v NullableFiltersServerCertificate) Get() *FiltersServerCertificate {
	return v.value
}

func (v *NullableFiltersServerCertificate) Set(val *FiltersServerCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersServerCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersServerCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersServerCertificate(val *FiltersServerCertificate) *NullableFiltersServerCertificate {
	return &NullableFiltersServerCertificate{value: val, isSet: true}
}

func (v NullableFiltersServerCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersServerCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersService One or more filters.
type FiltersService struct {
	// The IDs of the services.
	ServiceIds *[]string `json:"ServiceIds,omitempty"`
	// The names of the prefix lists, which identify the 3DS OUTSCALE services they are associated with.
	ServiceNames *[]string `json:"ServiceNames,omitempty"`
}

// NewFiltersService instantiates a new FiltersService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersService() *FiltersService {
	this := FiltersService{}
	return &this
}

// NewFiltersServiceWithDefaults instantiates a new FiltersService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersServiceWithDefaults() *FiltersService {
	this := FiltersService{}
	return &this
}

// GetServiceIds returns the ServiceIds field value if set, zero value otherwise.
func (o *FiltersService) GetServiceIds() []string {
	if o == nil || o.ServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.ServiceIds
}

// GetServiceIdsOk returns a tuple with the ServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersService) GetServiceIdsOk() (*[]string, bool) {
	if o == nil || o.ServiceIds == nil {
		return nil, false
	}
	return o.ServiceIds, true
}

// HasServiceIds returns a boolean if a field has been set.
func (o *FiltersService) HasServiceIds() bool {
	if o != nil && o.ServiceIds != nil {
		return true
	}

	return false
}

// SetServiceIds gets a reference to the given []string and assigns it to the ServiceIds field.
func (o *FiltersService) SetServiceIds(v []string) {
	o.ServiceIds = &v
}

// GetServiceNames returns the ServiceNames field value if set, zero value otherwise.
func (o *FiltersService) GetServiceNames() []string {
	if o == nil || o.ServiceNames == nil {
		var ret []string
		return ret
	}
	return *o.ServiceNames
}

// GetServiceNamesOk returns a tuple with the ServiceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersService) GetServiceNamesOk() (*[]string, bool) {
	if o == nil || o.ServiceNames == nil {
		return nil, false
	}
	return o.ServiceNames, true
}

// HasServiceNames returns a boolean if a field has been set.
func (o *FiltersService) HasServiceNames() bool {
	if o != nil && o.ServiceNames != nil {
		return true
	}

	return false
}

// SetServiceNames gets a reference to the given []string and assigns it to the ServiceNames field.
func (o *FiltersService) SetServiceNames(v []string) {
	o.ServiceNames = &v
}

func (o FiltersService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceIds != nil {
		toSerialize["ServiceIds"] = o.ServiceIds
	}
	if o.ServiceNames != nil {
		toSerialize["ServiceNames"] = o.ServiceNames
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersService struct {
	value *FiltersService
	isSet bool
}

func (v NullableFiltersService) Get() *FiltersService {
	return v.value
}

func (v *NullableFiltersService) Set(val *FiltersService) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersService) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersService(val *FiltersService) *NullableFiltersService {
	return &NullableFiltersService{value: val, isSet: true}
}

func (v NullableFiltersService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersSnapshot One or more filters.
type FiltersSnapshot struct {
	// The account aliases of the owners of the snapshots.
	AccountAliases *[]string `json:"AccountAliases,omitempty"`
	// The account IDs of the owners of the snapshots.
	AccountIds *[]string `json:"AccountIds,omitempty"`
	// The descriptions of the snapshots.
	Descriptions *[]string `json:"Descriptions,omitempty"`
	// The account IDs of one or more users who have permissions to create volumes.
	PermissionsToCreateVolumeAccountIds *[]string `json:"PermissionsToCreateVolumeAccountIds,omitempty"`
	// If `true`, lists all public volumes. If `false`, lists all private volumes.
	PermissionsToCreateVolumeGlobalPermission *bool `json:"PermissionsToCreateVolumeGlobalPermission,omitempty"`
	// The progresses of the snapshots, as a percentage.
	Progresses *[]int32 `json:"Progresses,omitempty"`
	// The IDs of the snapshots.
	SnapshotIds *[]string `json:"SnapshotIds,omitempty"`
	// The states of the snapshots (`in-queue` \\| `completed` \\| `error`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the snapshots.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the snapshots.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the snapshots, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the volumes used to create the snapshots.
	VolumeIds *[]string `json:"VolumeIds,omitempty"`
	// The sizes of the volumes used to create the snapshots, in gibibytes (GiB).
	VolumeSizes *[]int32 `json:"VolumeSizes,omitempty"`
}

// NewFiltersSnapshot instantiates a new FiltersSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersSnapshot() *FiltersSnapshot {
	this := FiltersSnapshot{}
	return &this
}

// NewFiltersSnapshotWithDefaults instantiates a new FiltersSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersSnapshotWithDefaults() *FiltersSnapshot {
	this := FiltersSnapshot{}
	return &this
}

// GetAccountAliases returns the AccountAliases field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetAccountAliases() []string {
	if o == nil || o.AccountAliases == nil {
		var ret []string
		return ret
	}
	return *o.AccountAliases
}

// GetAccountAliasesOk returns a tuple with the AccountAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetAccountAliasesOk() (*[]string, bool) {
	if o == nil || o.AccountAliases == nil {
		return nil, false
	}
	return o.AccountAliases, true
}

// HasAccountAliases returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasAccountAliases() bool {
	if o != nil && o.AccountAliases != nil {
		return true
	}

	return false
}

// SetAccountAliases gets a reference to the given []string and assigns it to the AccountAliases field.
func (o *FiltersSnapshot) SetAccountAliases(v []string) {
	o.AccountAliases = &v
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *FiltersSnapshot) SetAccountIds(v []string) {
	o.AccountIds = &v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetDescriptions() []string {
	if o == nil || o.Descriptions == nil {
		var ret []string
		return ret
	}
	return *o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetDescriptionsOk() (*[]string, bool) {
	if o == nil || o.Descriptions == nil {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasDescriptions() bool {
	if o != nil && o.Descriptions != nil {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []string and assigns it to the Descriptions field.
func (o *FiltersSnapshot) SetDescriptions(v []string) {
	o.Descriptions = &v
}

// GetPermissionsToCreateVolumeAccountIds returns the PermissionsToCreateVolumeAccountIds field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetPermissionsToCreateVolumeAccountIds() []string {
	if o == nil || o.PermissionsToCreateVolumeAccountIds == nil {
		var ret []string
		return ret
	}
	return *o.PermissionsToCreateVolumeAccountIds
}

// GetPermissionsToCreateVolumeAccountIdsOk returns a tuple with the PermissionsToCreateVolumeAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetPermissionsToCreateVolumeAccountIdsOk() (*[]string, bool) {
	if o == nil || o.PermissionsToCreateVolumeAccountIds == nil {
		return nil, false
	}
	return o.PermissionsToCreateVolumeAccountIds, true
}

// HasPermissionsToCreateVolumeAccountIds returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasPermissionsToCreateVolumeAccountIds() bool {
	if o != nil && o.PermissionsToCreateVolumeAccountIds != nil {
		return true
	}

	return false
}

// SetPermissionsToCreateVolumeAccountIds gets a reference to the given []string and assigns it to the PermissionsToCreateVolumeAccountIds field.
func (o *FiltersSnapshot) SetPermissionsToCreateVolumeAccountIds(v []string) {
	o.PermissionsToCreateVolumeAccountIds = &v
}

// GetPermissionsToCreateVolumeGlobalPermission returns the PermissionsToCreateVolumeGlobalPermission field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetPermissionsToCreateVolumeGlobalPermission() bool {
	if o == nil || o.PermissionsToCreateVolumeGlobalPermission == nil {
		var ret bool
		return ret
	}
	return *o.PermissionsToCreateVolumeGlobalPermission
}

// GetPermissionsToCreateVolumeGlobalPermissionOk returns a tuple with the PermissionsToCreateVolumeGlobalPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetPermissionsToCreateVolumeGlobalPermissionOk() (*bool, bool) {
	if o == nil || o.PermissionsToCreateVolumeGlobalPermission == nil {
		return nil, false
	}
	return o.PermissionsToCreateVolumeGlobalPermission, true
}

// HasPermissionsToCreateVolumeGlobalPermission returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasPermissionsToCreateVolumeGlobalPermission() bool {
	if o != nil && o.PermissionsToCreateVolumeGlobalPermission != nil {
		return true
	}

	return false
}

// SetPermissionsToCreateVolumeGlobalPermission gets a reference to the given bool and assigns it to the PermissionsToCreateVolumeGlobalPermission field.
func (o *FiltersSnapshot) SetPermissionsToCreateVolumeGlobalPermission(v bool) {
	o.PermissionsToCreateVolumeGlobalPermission = &v
}

// GetProgresses returns the Progresses field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetProgresses() []int32 {
	if o == nil || o.Progresses == nil {
		var ret []int32
		return ret
	}
	return *o.Progresses
}

// GetProgressesOk returns a tuple with the Progresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetProgressesOk() (*[]int32, bool) {
	if o == nil || o.Progresses == nil {
		return nil, false
	}
	return o.Progresses, true
}

// HasProgresses returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasProgresses() bool {
	if o != nil && o.Progresses != nil {
		return true
	}

	return false
}

// SetProgresses gets a reference to the given []int32 and assigns it to the Progresses field.
func (o *FiltersSnapshot) SetProgresses(v []int32) {
	o.Progresses = &v
}

// GetSnapshotIds returns the SnapshotIds field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetSnapshotIds() []string {
	if o == nil || o.SnapshotIds == nil {
		var ret []string
		return ret
	}
	return *o.SnapshotIds
}

// GetSnapshotIdsOk returns a tuple with the SnapshotIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetSnapshotIdsOk() (*[]string, bool) {
	if o == nil || o.SnapshotIds == nil {
		return nil, false
	}
	return o.SnapshotIds, true
}

// HasSnapshotIds returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasSnapshotIds() bool {
	if o != nil && o.SnapshotIds != nil {
		return true
	}

	return false
}

// SetSnapshotIds gets a reference to the given []string and assigns it to the SnapshotIds field.
func (o *FiltersSnapshot) SetSnapshotIds(v []string) {
	o.SnapshotIds = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersSnapshot) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersSnapshot) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersSnapshot) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersSnapshot) SetTags(v []string) {
	o.Tags = &v
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetVolumeIds() []string {
	if o == nil || o.VolumeIds == nil {
		var ret []string
		return ret
	}
	return *o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetVolumeIdsOk() (*[]string, bool) {
	if o == nil || o.VolumeIds == nil {
		return nil, false
	}
	return o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasVolumeIds() bool {
	if o != nil && o.VolumeIds != nil {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *FiltersSnapshot) SetVolumeIds(v []string) {
	o.VolumeIds = &v
}

// GetVolumeSizes returns the VolumeSizes field value if set, zero value otherwise.
func (o *FiltersSnapshot) GetVolumeSizes() []int32 {
	if o == nil || o.VolumeSizes == nil {
		var ret []int32
		return ret
	}
	return *o.VolumeSizes
}

// GetVolumeSizesOk returns a tuple with the VolumeSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSnapshot) GetVolumeSizesOk() (*[]int32, bool) {
	if o == nil || o.VolumeSizes == nil {
		return nil, false
	}
	return o.VolumeSizes, true
}

// HasVolumeSizes returns a boolean if a field has been set.
func (o *FiltersSnapshot) HasVolumeSizes() bool {
	if o != nil && o.VolumeSizes != nil {
		return true
	}

	return false
}

// SetVolumeSizes gets a reference to the given []int32 and assigns it to the VolumeSizes field.
func (o *FiltersSnapshot) SetVolumeSizes(v []int32) {
	o.VolumeSizes = &v
}

func (o FiltersSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountAliases != nil {
		toSerialize["AccountAliases"] = o.AccountAliases
	}
	if o.AccountIds != nil {
		toSerialize["AccountIds"] = o.AccountIds
	}
	if o.Descriptions != nil {
		toSerialize["Descriptions"] = o.Descriptions
	}
	if o.PermissionsToCreateVolumeAccountIds != nil {
		toSerialize["PermissionsToCreateVolumeAccountIds"] = o.PermissionsToCreateVolumeAccountIds
	}
	if o.PermissionsToCreateVolumeGlobalPermission != nil {
		toSerialize["PermissionsToCreateVolumeGlobalPermission"] = o.PermissionsToCreateVolumeGlobalPermission
	}
	if o.Progresses != nil {
		toSerialize["Progresses"] = o.Progresses
	}
	if o.SnapshotIds != nil {
		toSerialize["SnapshotIds"] = o.SnapshotIds
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VolumeIds != nil {
		toSerialize["VolumeIds"] = o.VolumeIds
	}
	if o.VolumeSizes != nil {
		toSerialize["VolumeSizes"] = o.VolumeSizes
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersSnapshot struct {
	value *FiltersSnapshot
	isSet bool
}

func (v NullableFiltersSnapshot) Get() *FiltersSnapshot {
	return v.value
}

func (v *NullableFiltersSnapshot) Set(val *FiltersSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersSnapshot(val *FiltersSnapshot) *NullableFiltersSnapshot {
	return &NullableFiltersSnapshot{value: val, isSet: true}
}

func (v NullableFiltersSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersSubnet One or more filters.
type FiltersSubnet struct {
	// The number of available IPs.
	AvailableIpsCounts *[]int32 `json:"AvailableIpsCounts,omitempty"`
	// The IP ranges in the Subnets, in CIDR notation (for example, 10.0.0.0/16).
	IpRanges *[]string `json:"IpRanges,omitempty"`
	// The IDs of the Nets in which the Subnets are.
	NetIds *[]string `json:"NetIds,omitempty"`
	// The states of the Subnets (`pending` \\| `available`).
	States *[]string `json:"States,omitempty"`
	// The IDs of the Subnets.
	SubnetIds *[]string `json:"SubnetIds,omitempty"`
	// The names of the Subregions in which the Subnets are located.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// The keys of the tags associated with the Subnets.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the Subnets.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the Subnets, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
}

// NewFiltersSubnet instantiates a new FiltersSubnet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersSubnet() *FiltersSubnet {
	this := FiltersSubnet{}
	return &this
}

// NewFiltersSubnetWithDefaults instantiates a new FiltersSubnet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersSubnetWithDefaults() *FiltersSubnet {
	this := FiltersSubnet{}
	return &this
}

// GetAvailableIpsCounts returns the AvailableIpsCounts field value if set, zero value otherwise.
func (o *FiltersSubnet) GetAvailableIpsCounts() []int32 {
	if o == nil || o.AvailableIpsCounts == nil {
		var ret []int32
		return ret
	}
	return *o.AvailableIpsCounts
}

// GetAvailableIpsCountsOk returns a tuple with the AvailableIpsCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetAvailableIpsCountsOk() (*[]int32, bool) {
	if o == nil || o.AvailableIpsCounts == nil {
		return nil, false
	}
	return o.AvailableIpsCounts, true
}

// HasAvailableIpsCounts returns a boolean if a field has been set.
func (o *FiltersSubnet) HasAvailableIpsCounts() bool {
	if o != nil && o.AvailableIpsCounts != nil {
		return true
	}

	return false
}

// SetAvailableIpsCounts gets a reference to the given []int32 and assigns it to the AvailableIpsCounts field.
func (o *FiltersSubnet) SetAvailableIpsCounts(v []int32) {
	o.AvailableIpsCounts = &v
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *FiltersSubnet) GetIpRanges() []string {
	if o == nil || o.IpRanges == nil {
		var ret []string
		return ret
	}
	return *o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetIpRangesOk() (*[]string, bool) {
	if o == nil || o.IpRanges == nil {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *FiltersSubnet) HasIpRanges() bool {
	if o != nil && o.IpRanges != nil {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []string and assigns it to the IpRanges field.
func (o *FiltersSubnet) SetIpRanges(v []string) {
	o.IpRanges = &v
}

// GetNetIds returns the NetIds field value if set, zero value otherwise.
func (o *FiltersSubnet) GetNetIds() []string {
	if o == nil || o.NetIds == nil {
		var ret []string
		return ret
	}
	return *o.NetIds
}

// GetNetIdsOk returns a tuple with the NetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetNetIdsOk() (*[]string, bool) {
	if o == nil || o.NetIds == nil {
		return nil, false
	}
	return o.NetIds, true
}

// HasNetIds returns a boolean if a field has been set.
func (o *FiltersSubnet) HasNetIds() bool {
	if o != nil && o.NetIds != nil {
		return true
	}

	return false
}

// SetNetIds gets a reference to the given []string and assigns it to the NetIds field.
func (o *FiltersSubnet) SetNetIds(v []string) {
	o.NetIds = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersSubnet) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersSubnet) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersSubnet) SetStates(v []string) {
	o.States = &v
}

// GetSubnetIds returns the SubnetIds field value if set, zero value otherwise.
func (o *FiltersSubnet) GetSubnetIds() []string {
	if o == nil || o.SubnetIds == nil {
		var ret []string
		return ret
	}
	return *o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetSubnetIdsOk() (*[]string, bool) {
	if o == nil || o.SubnetIds == nil {
		return nil, false
	}
	return o.SubnetIds, true
}

// HasSubnetIds returns a boolean if a field has been set.
func (o *FiltersSubnet) HasSubnetIds() bool {
	if o != nil && o.SubnetIds != nil {
		return true
	}

	return false
}

// SetSubnetIds gets a reference to the given []string and assigns it to the SubnetIds field.
func (o *FiltersSubnet) SetSubnetIds(v []string) {
	o.SubnetIds = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersSubnet) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersSubnet) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersSubnet) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersSubnet) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersSubnet) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersSubnet) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersSubnet) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersSubnet) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersSubnet) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersSubnet) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubnet) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersSubnet) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersSubnet) SetTags(v []string) {
	o.Tags = &v
}

func (o FiltersSubnet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailableIpsCounts != nil {
		toSerialize["AvailableIpsCounts"] = o.AvailableIpsCounts
	}
	if o.IpRanges != nil {
		toSerialize["IpRanges"] = o.IpRanges
	}
	if o.NetIds != nil {
		toSerialize["NetIds"] = o.NetIds
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.SubnetIds != nil {
		toSerialize["SubnetIds"] = o.SubnetIds
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersSubnet struct {
	value *FiltersSubnet
	isSet bool
}

func (v NullableFiltersSubnet) Get() *FiltersSubnet {
	return v.value
}

func (v *NullableFiltersSubnet) Set(val *FiltersSubnet) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersSubnet) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersSubnet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersSubnet(val *FiltersSubnet) *NullableFiltersSubnet {
	return &NullableFiltersSubnet{value: val, isSet: true}
}

func (v NullableFiltersSubnet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersSubnet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersSubregion One or more filters.
type FiltersSubregion struct {
	// The names of the Subregions.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
}

// NewFiltersSubregion instantiates a new FiltersSubregion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersSubregion() *FiltersSubregion {
	this := FiltersSubregion{}
	return &this
}

// NewFiltersSubregionWithDefaults instantiates a new FiltersSubregion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersSubregionWithDefaults() *FiltersSubregion {
	this := FiltersSubregion{}
	return &this
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersSubregion) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersSubregion) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersSubregion) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersSubregion) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

func (o FiltersSubregion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersSubregion struct {
	value *FiltersSubregion
	isSet bool
}

func (v NullableFiltersSubregion) Get() *FiltersSubregion {
	return v.value
}

func (v *NullableFiltersSubregion) Set(val *FiltersSubregion) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersSubregion) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersSubregion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersSubregion(val *FiltersSubregion) *NullableFiltersSubregion {
	return &NullableFiltersSubregion{value: val, isSet: true}
}

func (v NullableFiltersSubregion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersSubregion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersTag One or more filters.
type FiltersTag struct {
	// The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
	Keys *[]string `json:"Keys,omitempty"`
	// The IDs of the resources with which the tags are associated.
	ResourceIds *[]string `json:"ResourceIds,omitempty"`
	// The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot` \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net` \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\| `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection` \\| `dhcp-options` \\| `task`).
	ResourceTypes *[]string `json:"ResourceTypes,omitempty"`
	// The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
	Values *[]string `json:"Values,omitempty"`
}

// NewFiltersTag instantiates a new FiltersTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersTag() *FiltersTag {
	this := FiltersTag{}
	return &this
}

// NewFiltersTagWithDefaults instantiates a new FiltersTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersTagWithDefaults() *FiltersTag {
	this := FiltersTag{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *FiltersTag) GetKeys() []string {
	if o == nil || o.Keys == nil {
		var ret []string
		return ret
	}
	return *o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTag) GetKeysOk() (*[]string, bool) {
	if o == nil || o.Keys == nil {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *FiltersTag) HasKeys() bool {
	if o != nil && o.Keys != nil {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []string and assigns it to the Keys field.
func (o *FiltersTag) SetKeys(v []string) {
	o.Keys = &v
}

// GetResourceIds returns the ResourceIds field value if set, zero value otherwise.
func (o *FiltersTag) GetResourceIds() []string {
	if o == nil || o.ResourceIds == nil {
		var ret []string
		return ret
	}
	return *o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTag) GetResourceIdsOk() (*[]string, bool) {
	if o == nil || o.ResourceIds == nil {
		return nil, false
	}
	return o.ResourceIds, true
}

// HasResourceIds returns a boolean if a field has been set.
func (o *FiltersTag) HasResourceIds() bool {
	if o != nil && o.ResourceIds != nil {
		return true
	}

	return false
}

// SetResourceIds gets a reference to the given []string and assigns it to the ResourceIds field.
func (o *FiltersTag) SetResourceIds(v []string) {
	o.ResourceIds = &v
}

// GetResourceTypes returns the ResourceTypes field value if set, zero value otherwise.
func (o *FiltersTag) GetResourceTypes() []string {
	if o == nil || o.ResourceTypes == nil {
		var ret []string
		return ret
	}
	return *o.ResourceTypes
}

// GetResourceTypesOk returns a tuple with the ResourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTag) GetResourceTypesOk() (*[]string, bool) {
	if o == nil || o.ResourceTypes == nil {
		return nil, false
	}
	return o.ResourceTypes, true
}

// HasResourceTypes returns a boolean if a field has been set.
func (o *FiltersTag) HasResourceTypes() bool {
	if o != nil && o.ResourceTypes != nil {
		return true
	}

	return false
}

// SetResourceTypes gets a reference to the given []string and assigns it to the ResourceTypes field.
func (o *FiltersTag) SetResourceTypes(v []string) {
	o.ResourceTypes = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *FiltersTag) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTag) GetValuesOk() (*[]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *FiltersTag) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *FiltersTag) SetValues(v []string) {
	o.Values = &v
}

func (o FiltersTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["Keys"] = o.Keys
	}
	if o.ResourceIds != nil {
		toSerialize["ResourceIds"] = o.ResourceIds
	}
	if o.ResourceTypes != nil {
		toSerialize["ResourceTypes"] = o.ResourceTypes
	}
	if o.Values != nil {
		toSerialize["Values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersTag struct {
	value *FiltersTag
	isSet bool
}

func (v NullableFiltersTag) Get() *FiltersTag {
	return v.value
}

func (v *NullableFiltersTag) Set(val *FiltersTag) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersTag) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersTag(val *FiltersTag) *NullableFiltersTag {
	return &NullableFiltersTag{value: val, isSet: true}
}

func (v NullableFiltersTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVirtualGateway One or more filters.
type FiltersVirtualGateway struct {
	// The types of the virtual gateways (only `ipsec.1` is supported).
	ConnectionTypes *[]string `json:"ConnectionTypes,omitempty"`
	// The IDs of the Nets the virtual gateways are attached to.
	LinkNetIds *[]string `json:"LinkNetIds,omitempty"`
	// The current states of the attachments between the virtual gateways and the Nets (`attaching` \\| `attached` \\| `detaching` \\| `detached`).
	LinkStates *[]string `json:"LinkStates,omitempty"`
	// The states of the virtual gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// The keys of the tags associated with the virtual gateways.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the virtual gateways.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the virtual gateways, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the virtual gateways.
	VirtualGatewayIds *[]string `json:"VirtualGatewayIds,omitempty"`
}

// NewFiltersVirtualGateway instantiates a new FiltersVirtualGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVirtualGateway() *FiltersVirtualGateway {
	this := FiltersVirtualGateway{}
	return &this
}

// NewFiltersVirtualGatewayWithDefaults instantiates a new FiltersVirtualGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVirtualGatewayWithDefaults() *FiltersVirtualGateway {
	this := FiltersVirtualGateway{}
	return &this
}

// GetConnectionTypes returns the ConnectionTypes field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetConnectionTypes() []string {
	if o == nil || o.ConnectionTypes == nil {
		var ret []string
		return ret
	}
	return *o.ConnectionTypes
}

// GetConnectionTypesOk returns a tuple with the ConnectionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetConnectionTypesOk() (*[]string, bool) {
	if o == nil || o.ConnectionTypes == nil {
		return nil, false
	}
	return o.ConnectionTypes, true
}

// HasConnectionTypes returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasConnectionTypes() bool {
	if o != nil && o.ConnectionTypes != nil {
		return true
	}

	return false
}

// SetConnectionTypes gets a reference to the given []string and assigns it to the ConnectionTypes field.
func (o *FiltersVirtualGateway) SetConnectionTypes(v []string) {
	o.ConnectionTypes = &v
}

// GetLinkNetIds returns the LinkNetIds field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetLinkNetIds() []string {
	if o == nil || o.LinkNetIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkNetIds
}

// GetLinkNetIdsOk returns a tuple with the LinkNetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetLinkNetIdsOk() (*[]string, bool) {
	if o == nil || o.LinkNetIds == nil {
		return nil, false
	}
	return o.LinkNetIds, true
}

// HasLinkNetIds returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasLinkNetIds() bool {
	if o != nil && o.LinkNetIds != nil {
		return true
	}

	return false
}

// SetLinkNetIds gets a reference to the given []string and assigns it to the LinkNetIds field.
func (o *FiltersVirtualGateway) SetLinkNetIds(v []string) {
	o.LinkNetIds = &v
}

// GetLinkStates returns the LinkStates field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetLinkStates() []string {
	if o == nil || o.LinkStates == nil {
		var ret []string
		return ret
	}
	return *o.LinkStates
}

// GetLinkStatesOk returns a tuple with the LinkStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetLinkStatesOk() (*[]string, bool) {
	if o == nil || o.LinkStates == nil {
		return nil, false
	}
	return o.LinkStates, true
}

// HasLinkStates returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasLinkStates() bool {
	if o != nil && o.LinkStates != nil {
		return true
	}

	return false
}

// SetLinkStates gets a reference to the given []string and assigns it to the LinkStates field.
func (o *FiltersVirtualGateway) SetLinkStates(v []string) {
	o.LinkStates = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersVirtualGateway) SetStates(v []string) {
	o.States = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersVirtualGateway) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersVirtualGateway) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersVirtualGateway) SetTags(v []string) {
	o.Tags = &v
}

// GetVirtualGatewayIds returns the VirtualGatewayIds field value if set, zero value otherwise.
func (o *FiltersVirtualGateway) GetVirtualGatewayIds() []string {
	if o == nil || o.VirtualGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.VirtualGatewayIds
}

// GetVirtualGatewayIdsOk returns a tuple with the VirtualGatewayIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVirtualGateway) GetVirtualGatewayIdsOk() (*[]string, bool) {
	if o == nil || o.VirtualGatewayIds == nil {
		return nil, false
	}
	return o.VirtualGatewayIds, true
}

// HasVirtualGatewayIds returns a boolean if a field has been set.
func (o *FiltersVirtualGateway) HasVirtualGatewayIds() bool {
	if o != nil && o.VirtualGatewayIds != nil {
		return true
	}

	return false
}

// SetVirtualGatewayIds gets a reference to the given []string and assigns it to the VirtualGatewayIds field.
func (o *FiltersVirtualGateway) SetVirtualGatewayIds(v []string) {
	o.VirtualGatewayIds = &v
}

func (o FiltersVirtualGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionTypes != nil {
		toSerialize["ConnectionTypes"] = o.ConnectionTypes
	}
	if o.LinkNetIds != nil {
		toSerialize["LinkNetIds"] = o.LinkNetIds
	}
	if o.LinkStates != nil {
		toSerialize["LinkStates"] = o.LinkStates
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VirtualGatewayIds != nil {
		toSerialize["VirtualGatewayIds"] = o.VirtualGatewayIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVirtualGateway struct {
	value *FiltersVirtualGateway
	isSet bool
}

func (v NullableFiltersVirtualGateway) Get() *FiltersVirtualGateway {
	return v.value
}

func (v *NullableFiltersVirtualGateway) Set(val *FiltersVirtualGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVirtualGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVirtualGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVirtualGateway(val *FiltersVirtualGateway) *NullableFiltersVirtualGateway {
	return &NullableFiltersVirtualGateway{value: val, isSet: true}
}

func (v NullableFiltersVirtualGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVirtualGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVm One or more filters.
type FiltersVm struct {
	// The keys of the tags associated with the VMs.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the VMs.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the VMs, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// One or more IDs of VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// NewFiltersVm instantiates a new FiltersVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVm() *FiltersVm {
	this := FiltersVm{}
	return &this
}

// NewFiltersVmWithDefaults instantiates a new FiltersVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVmWithDefaults() *FiltersVm {
	this := FiltersVm{}
	return &this
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersVm) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVm) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersVm) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersVm) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersVm) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVm) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersVm) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersVm) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersVm) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVm) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersVm) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersVm) SetTags(v []string) {
	o.Tags = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersVm) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVm) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersVm) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersVm) SetVmIds(v []string) {
	o.VmIds = &v
}

func (o FiltersVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVm struct {
	value *FiltersVm
	isSet bool
}

func (v NullableFiltersVm) Get() *FiltersVm {
	return v.value
}

func (v *NullableFiltersVm) Set(val *FiltersVm) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVm) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVm(val *FiltersVm) *NullableFiltersVm {
	return &NullableFiltersVm{value: val, isSet: true}
}

func (v NullableFiltersVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVmType One or more filters.
type FiltersVmType struct {
	// Indicates whether the VM is optimized for BSU I/O.
	BsuOptimized *bool `json:"BsuOptimized,omitempty"`
	// The amounts of memory, in gibibytes (GiB).
	MemorySizes *[]float32 `json:"MemorySizes,omitempty"`
	// The numbers of vCores.
	VcoreCounts *[]int32 `json:"VcoreCounts,omitempty"`
	// The names of the VM types. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).
	VmTypeNames *[]string `json:"VmTypeNames,omitempty"`
	// The maximum number of ephemeral storage disks.
	VolumeCounts *[]int32 `json:"VolumeCounts,omitempty"`
	// The size of one ephemeral storage disk, in gibibytes (GiB).
	VolumeSizes *[]int32 `json:"VolumeSizes,omitempty"`
}

// NewFiltersVmType instantiates a new FiltersVmType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVmType() *FiltersVmType {
	this := FiltersVmType{}
	return &this
}

// NewFiltersVmTypeWithDefaults instantiates a new FiltersVmType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVmTypeWithDefaults() *FiltersVmType {
	this := FiltersVmType{}
	return &this
}

// GetBsuOptimized returns the BsuOptimized field value if set, zero value otherwise.
func (o *FiltersVmType) GetBsuOptimized() bool {
	if o == nil || o.BsuOptimized == nil {
		var ret bool
		return ret
	}
	return *o.BsuOptimized
}

// GetBsuOptimizedOk returns a tuple with the BsuOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetBsuOptimizedOk() (*bool, bool) {
	if o == nil || o.BsuOptimized == nil {
		return nil, false
	}
	return o.BsuOptimized, true
}

// HasBsuOptimized returns a boolean if a field has been set.
func (o *FiltersVmType) HasBsuOptimized() bool {
	if o != nil && o.BsuOptimized != nil {
		return true
	}

	return false
}

// SetBsuOptimized gets a reference to the given bool and assigns it to the BsuOptimized field.
func (o *FiltersVmType) SetBsuOptimized(v bool) {
	o.BsuOptimized = &v
}

// GetMemorySizes returns the MemorySizes field value if set, zero value otherwise.
func (o *FiltersVmType) GetMemorySizes() []float32 {
	if o == nil || o.MemorySizes == nil {
		var ret []float32
		return ret
	}
	return *o.MemorySizes
}

// GetMemorySizesOk returns a tuple with the MemorySizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetMemorySizesOk() (*[]float32, bool) {
	if o == nil || o.MemorySizes == nil {
		return nil, false
	}
	return o.MemorySizes, true
}

// HasMemorySizes returns a boolean if a field has been set.
func (o *FiltersVmType) HasMemorySizes() bool {
	if o != nil && o.MemorySizes != nil {
		return true
	}

	return false
}

// SetMemorySizes gets a reference to the given []float32 and assigns it to the MemorySizes field.
func (o *FiltersVmType) SetMemorySizes(v []float32) {
	o.MemorySizes = &v
}

// GetVcoreCounts returns the VcoreCounts field value if set, zero value otherwise.
func (o *FiltersVmType) GetVcoreCounts() []int32 {
	if o == nil || o.VcoreCounts == nil {
		var ret []int32
		return ret
	}
	return *o.VcoreCounts
}

// GetVcoreCountsOk returns a tuple with the VcoreCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetVcoreCountsOk() (*[]int32, bool) {
	if o == nil || o.VcoreCounts == nil {
		return nil, false
	}
	return o.VcoreCounts, true
}

// HasVcoreCounts returns a boolean if a field has been set.
func (o *FiltersVmType) HasVcoreCounts() bool {
	if o != nil && o.VcoreCounts != nil {
		return true
	}

	return false
}

// SetVcoreCounts gets a reference to the given []int32 and assigns it to the VcoreCounts field.
func (o *FiltersVmType) SetVcoreCounts(v []int32) {
	o.VcoreCounts = &v
}

// GetVmTypeNames returns the VmTypeNames field value if set, zero value otherwise.
func (o *FiltersVmType) GetVmTypeNames() []string {
	if o == nil || o.VmTypeNames == nil {
		var ret []string
		return ret
	}
	return *o.VmTypeNames
}

// GetVmTypeNamesOk returns a tuple with the VmTypeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetVmTypeNamesOk() (*[]string, bool) {
	if o == nil || o.VmTypeNames == nil {
		return nil, false
	}
	return o.VmTypeNames, true
}

// HasVmTypeNames returns a boolean if a field has been set.
func (o *FiltersVmType) HasVmTypeNames() bool {
	if o != nil && o.VmTypeNames != nil {
		return true
	}

	return false
}

// SetVmTypeNames gets a reference to the given []string and assigns it to the VmTypeNames field.
func (o *FiltersVmType) SetVmTypeNames(v []string) {
	o.VmTypeNames = &v
}

// GetVolumeCounts returns the VolumeCounts field value if set, zero value otherwise.
func (o *FiltersVmType) GetVolumeCounts() []int32 {
	if o == nil || o.VolumeCounts == nil {
		var ret []int32
		return ret
	}
	return *o.VolumeCounts
}

// GetVolumeCountsOk returns a tuple with the VolumeCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetVolumeCountsOk() (*[]int32, bool) {
	if o == nil || o.VolumeCounts == nil {
		return nil, false
	}
	return o.VolumeCounts, true
}

// HasVolumeCounts returns a boolean if a field has been set.
func (o *FiltersVmType) HasVolumeCounts() bool {
	if o != nil && o.VolumeCounts != nil {
		return true
	}

	return false
}

// SetVolumeCounts gets a reference to the given []int32 and assigns it to the VolumeCounts field.
func (o *FiltersVmType) SetVolumeCounts(v []int32) {
	o.VolumeCounts = &v
}

// GetVolumeSizes returns the VolumeSizes field value if set, zero value otherwise.
func (o *FiltersVmType) GetVolumeSizes() []int32 {
	if o == nil || o.VolumeSizes == nil {
		var ret []int32
		return ret
	}
	return *o.VolumeSizes
}

// GetVolumeSizesOk returns a tuple with the VolumeSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmType) GetVolumeSizesOk() (*[]int32, bool) {
	if o == nil || o.VolumeSizes == nil {
		return nil, false
	}
	return o.VolumeSizes, true
}

// HasVolumeSizes returns a boolean if a field has been set.
func (o *FiltersVmType) HasVolumeSizes() bool {
	if o != nil && o.VolumeSizes != nil {
		return true
	}

	return false
}

// SetVolumeSizes gets a reference to the given []int32 and assigns it to the VolumeSizes field.
func (o *FiltersVmType) SetVolumeSizes(v []int32) {
	o.VolumeSizes = &v
}

func (o FiltersVmType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BsuOptimized != nil {
		toSerialize["BsuOptimized"] = o.BsuOptimized
	}
	if o.MemorySizes != nil {
		toSerialize["MemorySizes"] = o.MemorySizes
	}
	if o.VcoreCounts != nil {
		toSerialize["VcoreCounts"] = o.VcoreCounts
	}
	if o.VmTypeNames != nil {
		toSerialize["VmTypeNames"] = o.VmTypeNames
	}
	if o.VolumeCounts != nil {
		toSerialize["VolumeCounts"] = o.VolumeCounts
	}
	if o.VolumeSizes != nil {
		toSerialize["VolumeSizes"] = o.VolumeSizes
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVmType struct {
	value *FiltersVmType
	isSet bool
}

func (v NullableFiltersVmType) Get() *FiltersVmType {
	return v.value
}

func (v *NullableFiltersVmType) Set(val *FiltersVmType) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVmType) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVmType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVmType(val *FiltersVmType) *NullableFiltersVmType {
	return &NullableFiltersVmType{value: val, isSet: true}
}

func (v NullableFiltersVmType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVmType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVmsState One or more filters.
type FiltersVmsState struct {
	// The names of the Subregions of the VMs.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more IDs of VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
	// The states of the VMs (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).
	VmStates *[]string `json:"VmStates,omitempty"`
}

// NewFiltersVmsState instantiates a new FiltersVmsState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVmsState() *FiltersVmsState {
	this := FiltersVmsState{}
	return &this
}

// NewFiltersVmsStateWithDefaults instantiates a new FiltersVmsState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVmsStateWithDefaults() *FiltersVmsState {
	this := FiltersVmsState{}
	return &this
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersVmsState) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmsState) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersVmsState) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersVmsState) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersVmsState) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmsState) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersVmsState) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersVmsState) SetVmIds(v []string) {
	o.VmIds = &v
}

// GetVmStates returns the VmStates field value if set, zero value otherwise.
func (o *FiltersVmsState) GetVmStates() []string {
	if o == nil || o.VmStates == nil {
		var ret []string
		return ret
	}
	return *o.VmStates
}

// GetVmStatesOk returns a tuple with the VmStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVmsState) GetVmStatesOk() (*[]string, bool) {
	if o == nil || o.VmStates == nil {
		return nil, false
	}
	return o.VmStates, true
}

// HasVmStates returns a boolean if a field has been set.
func (o *FiltersVmsState) HasVmStates() bool {
	if o != nil && o.VmStates != nil {
		return true
	}

	return false
}

// SetVmStates gets a reference to the given []string and assigns it to the VmStates field.
func (o *FiltersVmsState) SetVmStates(v []string) {
	o.VmStates = &v
}

func (o FiltersVmsState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	if o.VmStates != nil {
		toSerialize["VmStates"] = o.VmStates
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVmsState struct {
	value *FiltersVmsState
	isSet bool
}

func (v NullableFiltersVmsState) Get() *FiltersVmsState {
	return v.value
}

func (v *NullableFiltersVmsState) Set(val *FiltersVmsState) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVmsState) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVmsState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVmsState(val *FiltersVmsState) *NullableFiltersVmsState {
	return &NullableFiltersVmsState{value: val, isSet: true}
}

func (v NullableFiltersVmsState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVmsState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVolume One or more filters.
type FiltersVolume struct {
	// The dates and times at which the volumes were created.
	CreationDates *[]string `json:"CreationDates,omitempty"`
	// Indicates whether the volumes are deleted when terminating the VMs.
	LinkVolumeDeleteOnVmDeletion *bool `json:"LinkVolumeDeleteOnVmDeletion,omitempty"`
	// The VM device names.
	LinkVolumeDeviceNames *[]string `json:"LinkVolumeDeviceNames,omitempty"`
	// The dates and times at which the volumes were created.
	LinkVolumeLinkDates *[]string `json:"LinkVolumeLinkDates,omitempty"`
	// The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).
	LinkVolumeLinkStates *[]string `json:"LinkVolumeLinkStates,omitempty"`
	// One or more IDs of VMs.
	LinkVolumeVmIds *[]string `json:"LinkVolumeVmIds,omitempty"`
	// The snapshots from which the volumes were created.
	SnapshotIds *[]string `json:"SnapshotIds,omitempty"`
	// The names of the Subregions in which the volumes were created.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// The keys of the tags associated with the volumes.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the volumes.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the volumes, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the volumes.
	VolumeIds *[]string `json:"VolumeIds,omitempty"`
	// The sizes of the volumes, in gibibytes (GiB).
	VolumeSizes *[]int32 `json:"VolumeSizes,omitempty"`
	// The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `deleting` \\| `error`).
	VolumeStates *[]string `json:"VolumeStates,omitempty"`
	// The types of the volumes (`standard` \\| `gp2` \\| `io1`).
	VolumeTypes *[]string `json:"VolumeTypes,omitempty"`
}

// NewFiltersVolume instantiates a new FiltersVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVolume() *FiltersVolume {
	this := FiltersVolume{}
	return &this
}

// NewFiltersVolumeWithDefaults instantiates a new FiltersVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVolumeWithDefaults() *FiltersVolume {
	this := FiltersVolume{}
	return &this
}

// GetCreationDates returns the CreationDates field value if set, zero value otherwise.
func (o *FiltersVolume) GetCreationDates() []string {
	if o == nil || o.CreationDates == nil {
		var ret []string
		return ret
	}
	return *o.CreationDates
}

// GetCreationDatesOk returns a tuple with the CreationDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetCreationDatesOk() (*[]string, bool) {
	if o == nil || o.CreationDates == nil {
		return nil, false
	}
	return o.CreationDates, true
}

// HasCreationDates returns a boolean if a field has been set.
func (o *FiltersVolume) HasCreationDates() bool {
	if o != nil && o.CreationDates != nil {
		return true
	}

	return false
}

// SetCreationDates gets a reference to the given []string and assigns it to the CreationDates field.
func (o *FiltersVolume) SetCreationDates(v []string) {
	o.CreationDates = &v
}

// GetLinkVolumeDeleteOnVmDeletion returns the LinkVolumeDeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeDeleteOnVmDeletion() bool {
	if o == nil || o.LinkVolumeDeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.LinkVolumeDeleteOnVmDeletion
}

// GetLinkVolumeDeleteOnVmDeletionOk returns a tuple with the LinkVolumeDeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.LinkVolumeDeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.LinkVolumeDeleteOnVmDeletion, true
}

// HasLinkVolumeDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeDeleteOnVmDeletion() bool {
	if o != nil && o.LinkVolumeDeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetLinkVolumeDeleteOnVmDeletion gets a reference to the given bool and assigns it to the LinkVolumeDeleteOnVmDeletion field.
func (o *FiltersVolume) SetLinkVolumeDeleteOnVmDeletion(v bool) {
	o.LinkVolumeDeleteOnVmDeletion = &v
}

// GetLinkVolumeDeviceNames returns the LinkVolumeDeviceNames field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeDeviceNames() []string {
	if o == nil || o.LinkVolumeDeviceNames == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeDeviceNames
}

// GetLinkVolumeDeviceNamesOk returns a tuple with the LinkVolumeDeviceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeDeviceNamesOk() (*[]string, bool) {
	if o == nil || o.LinkVolumeDeviceNames == nil {
		return nil, false
	}
	return o.LinkVolumeDeviceNames, true
}

// HasLinkVolumeDeviceNames returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeDeviceNames() bool {
	if o != nil && o.LinkVolumeDeviceNames != nil {
		return true
	}

	return false
}

// SetLinkVolumeDeviceNames gets a reference to the given []string and assigns it to the LinkVolumeDeviceNames field.
func (o *FiltersVolume) SetLinkVolumeDeviceNames(v []string) {
	o.LinkVolumeDeviceNames = &v
}

// GetLinkVolumeLinkDates returns the LinkVolumeLinkDates field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeLinkDates() []string {
	if o == nil || o.LinkVolumeLinkDates == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeLinkDates
}

// GetLinkVolumeLinkDatesOk returns a tuple with the LinkVolumeLinkDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeLinkDatesOk() (*[]string, bool) {
	if o == nil || o.LinkVolumeLinkDates == nil {
		return nil, false
	}
	return o.LinkVolumeLinkDates, true
}

// HasLinkVolumeLinkDates returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeLinkDates() bool {
	if o != nil && o.LinkVolumeLinkDates != nil {
		return true
	}

	return false
}

// SetLinkVolumeLinkDates gets a reference to the given []string and assigns it to the LinkVolumeLinkDates field.
func (o *FiltersVolume) SetLinkVolumeLinkDates(v []string) {
	o.LinkVolumeLinkDates = &v
}

// GetLinkVolumeLinkStates returns the LinkVolumeLinkStates field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeLinkStates() []string {
	if o == nil || o.LinkVolumeLinkStates == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeLinkStates
}

// GetLinkVolumeLinkStatesOk returns a tuple with the LinkVolumeLinkStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeLinkStatesOk() (*[]string, bool) {
	if o == nil || o.LinkVolumeLinkStates == nil {
		return nil, false
	}
	return o.LinkVolumeLinkStates, true
}

// HasLinkVolumeLinkStates returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeLinkStates() bool {
	if o != nil && o.LinkVolumeLinkStates != nil {
		return true
	}

	return false
}

// SetLinkVolumeLinkStates gets a reference to the given []string and assigns it to the LinkVolumeLinkStates field.
func (o *FiltersVolume) SetLinkVolumeLinkStates(v []string) {
	o.LinkVolumeLinkStates = &v
}

// GetLinkVolumeVmIds returns the LinkVolumeVmIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeVmIds() []string {
	if o == nil || o.LinkVolumeVmIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeVmIds
}

// GetLinkVolumeVmIdsOk returns a tuple with the LinkVolumeVmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeVmIdsOk() (*[]string, bool) {
	if o == nil || o.LinkVolumeVmIds == nil {
		return nil, false
	}
	return o.LinkVolumeVmIds, true
}

// HasLinkVolumeVmIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeVmIds() bool {
	if o != nil && o.LinkVolumeVmIds != nil {
		return true
	}

	return false
}

// SetLinkVolumeVmIds gets a reference to the given []string and assigns it to the LinkVolumeVmIds field.
func (o *FiltersVolume) SetLinkVolumeVmIds(v []string) {
	o.LinkVolumeVmIds = &v
}

// GetSnapshotIds returns the SnapshotIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetSnapshotIds() []string {
	if o == nil || o.SnapshotIds == nil {
		var ret []string
		return ret
	}
	return *o.SnapshotIds
}

// GetSnapshotIdsOk returns a tuple with the SnapshotIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetSnapshotIdsOk() (*[]string, bool) {
	if o == nil || o.SnapshotIds == nil {
		return nil, false
	}
	return o.SnapshotIds, true
}

// HasSnapshotIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasSnapshotIds() bool {
	if o != nil && o.SnapshotIds != nil {
		return true
	}

	return false
}

// SetSnapshotIds gets a reference to the given []string and assigns it to the SnapshotIds field.
func (o *FiltersVolume) SetSnapshotIds(v []string) {
	o.SnapshotIds = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersVolume) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersVolume) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersVolume) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersVolume) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersVolume) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersVolume) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersVolume) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersVolume) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersVolume) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersVolume) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersVolume) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersVolume) SetTags(v []string) {
	o.Tags = &v
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeIds() []string {
	if o == nil || o.VolumeIds == nil {
		var ret []string
		return ret
	}
	return *o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeIdsOk() (*[]string, bool) {
	if o == nil || o.VolumeIds == nil {
		return nil, false
	}
	return o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeIds() bool {
	if o != nil && o.VolumeIds != nil {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *FiltersVolume) SetVolumeIds(v []string) {
	o.VolumeIds = &v
}

// GetVolumeSizes returns the VolumeSizes field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeSizes() []int32 {
	if o == nil || o.VolumeSizes == nil {
		var ret []int32
		return ret
	}
	return *o.VolumeSizes
}

// GetVolumeSizesOk returns a tuple with the VolumeSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeSizesOk() (*[]int32, bool) {
	if o == nil || o.VolumeSizes == nil {
		return nil, false
	}
	return o.VolumeSizes, true
}

// HasVolumeSizes returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeSizes() bool {
	if o != nil && o.VolumeSizes != nil {
		return true
	}

	return false
}

// SetVolumeSizes gets a reference to the given []int32 and assigns it to the VolumeSizes field.
func (o *FiltersVolume) SetVolumeSizes(v []int32) {
	o.VolumeSizes = &v
}

// GetVolumeStates returns the VolumeStates field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeStates() []string {
	if o == nil || o.VolumeStates == nil {
		var ret []string
		return ret
	}
	return *o.VolumeStates
}

// GetVolumeStatesOk returns a tuple with the VolumeStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeStatesOk() (*[]string, bool) {
	if o == nil || o.VolumeStates == nil {
		return nil, false
	}
	return o.VolumeStates, true
}

// HasVolumeStates returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeStates() bool {
	if o != nil && o.VolumeStates != nil {
		return true
	}

	return false
}

// SetVolumeStates gets a reference to the given []string and assigns it to the VolumeStates field.
func (o *FiltersVolume) SetVolumeStates(v []string) {
	o.VolumeStates = &v
}

// GetVolumeTypes returns the VolumeTypes field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeTypes() []string {
	if o == nil || o.VolumeTypes == nil {
		var ret []string
		return ret
	}
	return *o.VolumeTypes
}

// GetVolumeTypesOk returns a tuple with the VolumeTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeTypesOk() (*[]string, bool) {
	if o == nil || o.VolumeTypes == nil {
		return nil, false
	}
	return o.VolumeTypes, true
}

// HasVolumeTypes returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeTypes() bool {
	if o != nil && o.VolumeTypes != nil {
		return true
	}

	return false
}

// SetVolumeTypes gets a reference to the given []string and assigns it to the VolumeTypes field.
func (o *FiltersVolume) SetVolumeTypes(v []string) {
	o.VolumeTypes = &v
}

func (o FiltersVolume) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationDates != nil {
		toSerialize["CreationDates"] = o.CreationDates
	}
	if o.LinkVolumeDeleteOnVmDeletion != nil {
		toSerialize["LinkVolumeDeleteOnVmDeletion"] = o.LinkVolumeDeleteOnVmDeletion
	}
	if o.LinkVolumeDeviceNames != nil {
		toSerialize["LinkVolumeDeviceNames"] = o.LinkVolumeDeviceNames
	}
	if o.LinkVolumeLinkDates != nil {
		toSerialize["LinkVolumeLinkDates"] = o.LinkVolumeLinkDates
	}
	if o.LinkVolumeLinkStates != nil {
		toSerialize["LinkVolumeLinkStates"] = o.LinkVolumeLinkStates
	}
	if o.LinkVolumeVmIds != nil {
		toSerialize["LinkVolumeVmIds"] = o.LinkVolumeVmIds
	}
	if o.SnapshotIds != nil {
		toSerialize["SnapshotIds"] = o.SnapshotIds
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VolumeIds != nil {
		toSerialize["VolumeIds"] = o.VolumeIds
	}
	if o.VolumeSizes != nil {
		toSerialize["VolumeSizes"] = o.VolumeSizes
	}
	if o.VolumeStates != nil {
		toSerialize["VolumeStates"] = o.VolumeStates
	}
	if o.VolumeTypes != nil {
		toSerialize["VolumeTypes"] = o.VolumeTypes
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVolume struct {
	value *FiltersVolume
	isSet bool
}

func (v NullableFiltersVolume) Get() *FiltersVolume {
	return v.value
}

func (v *NullableFiltersVolume) Set(val *FiltersVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVolume(val *FiltersVolume) *NullableFiltersVolume {
	return &NullableFiltersVolume{value: val, isSet: true}
}

func (v NullableFiltersVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FiltersVpnConnection One or more filters.
type FiltersVpnConnection struct {
	// The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
	BgpAsns *[]int32 `json:"BgpAsns,omitempty"`
	// The IDs of the client gateways.
	ClientGatewayIds *[]string `json:"ClientGatewayIds,omitempty"`
	// The types of the VPN connections (only `ipsec.1` is supported).
	ConnectionTypes *[]string `json:"ConnectionTypes,omitempty"`
	// The destination IP ranges.
	RouteDestinationIpRanges *[]string `json:"RouteDestinationIpRanges,omitempty"`
	// The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// If `false`, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If `true`, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
	StaticRoutesOnly *bool `json:"StaticRoutesOnly,omitempty"`
	// The keys of the tags associated with the VPN connections.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the VPN connections.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the VPN connections, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the virtual gateways.
	VirtualGatewayIds *[]string `json:"VirtualGatewayIds,omitempty"`
	// The IDs of the VPN connections.
	VpnConnectionIds *[]string `json:"VpnConnectionIds,omitempty"`
}

// NewFiltersVpnConnection instantiates a new FiltersVpnConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersVpnConnection() *FiltersVpnConnection {
	this := FiltersVpnConnection{}
	return &this
}

// NewFiltersVpnConnectionWithDefaults instantiates a new FiltersVpnConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersVpnConnectionWithDefaults() *FiltersVpnConnection {
	this := FiltersVpnConnection{}
	return &this
}

// GetBgpAsns returns the BgpAsns field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetBgpAsns() []int32 {
	if o == nil || o.BgpAsns == nil {
		var ret []int32
		return ret
	}
	return *o.BgpAsns
}

// GetBgpAsnsOk returns a tuple with the BgpAsns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetBgpAsnsOk() (*[]int32, bool) {
	if o == nil || o.BgpAsns == nil {
		return nil, false
	}
	return o.BgpAsns, true
}

// HasBgpAsns returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasBgpAsns() bool {
	if o != nil && o.BgpAsns != nil {
		return true
	}

	return false
}

// SetBgpAsns gets a reference to the given []int32 and assigns it to the BgpAsns field.
func (o *FiltersVpnConnection) SetBgpAsns(v []int32) {
	o.BgpAsns = &v
}

// GetClientGatewayIds returns the ClientGatewayIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetClientGatewayIds() []string {
	if o == nil || o.ClientGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.ClientGatewayIds
}

// GetClientGatewayIdsOk returns a tuple with the ClientGatewayIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetClientGatewayIdsOk() (*[]string, bool) {
	if o == nil || o.ClientGatewayIds == nil {
		return nil, false
	}
	return o.ClientGatewayIds, true
}

// HasClientGatewayIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasClientGatewayIds() bool {
	if o != nil && o.ClientGatewayIds != nil {
		return true
	}

	return false
}

// SetClientGatewayIds gets a reference to the given []string and assigns it to the ClientGatewayIds field.
func (o *FiltersVpnConnection) SetClientGatewayIds(v []string) {
	o.ClientGatewayIds = &v
}

// GetConnectionTypes returns the ConnectionTypes field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetConnectionTypes() []string {
	if o == nil || o.ConnectionTypes == nil {
		var ret []string
		return ret
	}
	return *o.ConnectionTypes
}

// GetConnectionTypesOk returns a tuple with the ConnectionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetConnectionTypesOk() (*[]string, bool) {
	if o == nil || o.ConnectionTypes == nil {
		return nil, false
	}
	return o.ConnectionTypes, true
}

// HasConnectionTypes returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasConnectionTypes() bool {
	if o != nil && o.ConnectionTypes != nil {
		return true
	}

	return false
}

// SetConnectionTypes gets a reference to the given []string and assigns it to the ConnectionTypes field.
func (o *FiltersVpnConnection) SetConnectionTypes(v []string) {
	o.ConnectionTypes = &v
}

// GetRouteDestinationIpRanges returns the RouteDestinationIpRanges field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetRouteDestinationIpRanges() []string {
	if o == nil || o.RouteDestinationIpRanges == nil {
		var ret []string
		return ret
	}
	return *o.RouteDestinationIpRanges
}

// GetRouteDestinationIpRangesOk returns a tuple with the RouteDestinationIpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetRouteDestinationIpRangesOk() (*[]string, bool) {
	if o == nil || o.RouteDestinationIpRanges == nil {
		return nil, false
	}
	return o.RouteDestinationIpRanges, true
}

// HasRouteDestinationIpRanges returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasRouteDestinationIpRanges() bool {
	if o != nil && o.RouteDestinationIpRanges != nil {
		return true
	}

	return false
}

// SetRouteDestinationIpRanges gets a reference to the given []string and assigns it to the RouteDestinationIpRanges field.
func (o *FiltersVpnConnection) SetRouteDestinationIpRanges(v []string) {
	o.RouteDestinationIpRanges = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersVpnConnection) SetStates(v []string) {
	o.States = &v
}

// GetStaticRoutesOnly returns the StaticRoutesOnly field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetStaticRoutesOnly() bool {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret
	}
	return *o.StaticRoutesOnly
}

// GetStaticRoutesOnlyOk returns a tuple with the StaticRoutesOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetStaticRoutesOnlyOk() (*bool, bool) {
	if o == nil || o.StaticRoutesOnly == nil {
		return nil, false
	}
	return o.StaticRoutesOnly, true
}

// HasStaticRoutesOnly returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasStaticRoutesOnly() bool {
	if o != nil && o.StaticRoutesOnly != nil {
		return true
	}

	return false
}

// SetStaticRoutesOnly gets a reference to the given bool and assigns it to the StaticRoutesOnly field.
func (o *FiltersVpnConnection) SetStaticRoutesOnly(v bool) {
	o.StaticRoutesOnly = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetTagKeysOk() (*[]string, bool) {
	if o == nil || o.TagKeys == nil {
		return nil, false
	}
	return o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersVpnConnection) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetTagValuesOk() (*[]string, bool) {
	if o == nil || o.TagValues == nil {
		return nil, false
	}
	return o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersVpnConnection) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersVpnConnection) SetTags(v []string) {
	o.Tags = &v
}

// GetVirtualGatewayIds returns the VirtualGatewayIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetVirtualGatewayIds() []string {
	if o == nil || o.VirtualGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.VirtualGatewayIds
}

// GetVirtualGatewayIdsOk returns a tuple with the VirtualGatewayIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetVirtualGatewayIdsOk() (*[]string, bool) {
	if o == nil || o.VirtualGatewayIds == nil {
		return nil, false
	}
	return o.VirtualGatewayIds, true
}

// HasVirtualGatewayIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasVirtualGatewayIds() bool {
	if o != nil && o.VirtualGatewayIds != nil {
		return true
	}

	return false
}

// SetVirtualGatewayIds gets a reference to the given []string and assigns it to the VirtualGatewayIds field.
func (o *FiltersVpnConnection) SetVirtualGatewayIds(v []string) {
	o.VirtualGatewayIds = &v
}

// GetVpnConnectionIds returns the VpnConnectionIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetVpnConnectionIds() []string {
	if o == nil || o.VpnConnectionIds == nil {
		var ret []string
		return ret
	}
	return *o.VpnConnectionIds
}

// GetVpnConnectionIdsOk returns a tuple with the VpnConnectionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetVpnConnectionIdsOk() (*[]string, bool) {
	if o == nil || o.VpnConnectionIds == nil {
		return nil, false
	}
	return o.VpnConnectionIds, true
}

// HasVpnConnectionIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasVpnConnectionIds() bool {
	if o != nil && o.VpnConnectionIds != nil {
		return true
	}

	return false
}

// SetVpnConnectionIds gets a reference to the given []string and assigns it to the VpnConnectionIds field.
func (o *FiltersVpnConnection) SetVpnConnectionIds(v []string) {
	o.VpnConnectionIds = &v
}

func (o FiltersVpnConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BgpAsns != nil {
		toSerialize["BgpAsns"] = o.BgpAsns
	}
	if o.ClientGatewayIds != nil {
		toSerialize["ClientGatewayIds"] = o.ClientGatewayIds
	}
	if o.ConnectionTypes != nil {
		toSerialize["ConnectionTypes"] = o.ConnectionTypes
	}
	if o.RouteDestinationIpRanges != nil {
		toSerialize["RouteDestinationIpRanges"] = o.RouteDestinationIpRanges
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.StaticRoutesOnly != nil {
		toSerialize["StaticRoutesOnly"] = o.StaticRoutesOnly
	}
	if o.TagKeys != nil {
		toSerialize["TagKeys"] = o.TagKeys
	}
	if o.TagValues != nil {
		toSerialize["TagValues"] = o.TagValues
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VirtualGatewayIds != nil {
		toSerialize["VirtualGatewayIds"] = o.VirtualGatewayIds
	}
	if o.VpnConnectionIds != nil {
		toSerialize["VpnConnectionIds"] = o.VpnConnectionIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersVpnConnection struct {
	value *FiltersVpnConnection
	isSet bool
}

func (v NullableFiltersVpnConnection) Get() *FiltersVpnConnection {
	return v.value
}

func (v *NullableFiltersVpnConnection) Set(val *FiltersVpnConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersVpnConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersVpnConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersVpnConnection(val *FiltersVpnConnection) *NullableFiltersVpnConnection {
	return &NullableFiltersVpnConnection{value: val, isSet: true}
}

func (v NullableFiltersVpnConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersVpnConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FlexibleGpu Information about the flexible GPU (fGPU).
type FlexibleGpu struct {
	// If `true`, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The ID of the fGPU.
	FlexibleGpuId *string `json:"FlexibleGpuId,omitempty"`
	// The compatible processor generation.
	Generation *string `json:"Generation,omitempty"`
	// The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).
	ModelName *string `json:"ModelName,omitempty"`
	// The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).
	State *string `json:"State,omitempty"`
	// The Subregion where the fGPU is located.
	SubregionName *string `json:"SubregionName,omitempty"`
	// The ID of the VM the fGPU is attached to, if any.
	VmId *string `json:"VmId,omitempty"`
}

// NewFlexibleGpu instantiates a new FlexibleGpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlexibleGpu() *FlexibleGpu {
	this := FlexibleGpu{}
	return &this
}

// NewFlexibleGpuWithDefaults instantiates a new FlexibleGpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlexibleGpuWithDefaults() *FlexibleGpu {
	this := FlexibleGpu{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FlexibleGpu) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FlexibleGpu) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *FlexibleGpu) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value if set, zero value otherwise.
func (o *FlexibleGpu) GetFlexibleGpuId() string {
	if o == nil || o.FlexibleGpuId == nil {
		var ret string
		return ret
	}
	return *o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetFlexibleGpuIdOk() (*string, bool) {
	if o == nil || o.FlexibleGpuId == nil {
		return nil, false
	}
	return o.FlexibleGpuId, true
}

// HasFlexibleGpuId returns a boolean if a field has been set.
func (o *FlexibleGpu) HasFlexibleGpuId() bool {
	if o != nil && o.FlexibleGpuId != nil {
		return true
	}

	return false
}

// SetFlexibleGpuId gets a reference to the given string and assigns it to the FlexibleGpuId field.
func (o *FlexibleGpu) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *FlexibleGpu) GetGeneration() string {
	if o == nil || o.Generation == nil {
		var ret string
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetGenerationOk() (*string, bool) {
	if o == nil || o.Generation == nil {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *FlexibleGpu) HasGeneration() bool {
	if o != nil && o.Generation != nil {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given string and assigns it to the Generation field.
func (o *FlexibleGpu) SetGeneration(v string) {
	o.Generation = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *FlexibleGpu) GetModelName() string {
	if o == nil || o.ModelName == nil {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetModelNameOk() (*string, bool) {
	if o == nil || o.ModelName == nil {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *FlexibleGpu) HasModelName() bool {
	if o != nil && o.ModelName != nil {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *FlexibleGpu) SetModelName(v string) {
	o.ModelName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *FlexibleGpu) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *FlexibleGpu) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *FlexibleGpu) SetState(v string) {
	o.State = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *FlexibleGpu) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *FlexibleGpu) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *FlexibleGpu) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *FlexibleGpu) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *FlexibleGpu) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *FlexibleGpu) SetVmId(v string) {
	o.VmId = &v
}

func (o FlexibleGpu) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.FlexibleGpuId != nil {
		toSerialize["FlexibleGpuId"] = o.FlexibleGpuId
	}
	if o.Generation != nil {
		toSerialize["Generation"] = o.Generation
	}
	if o.ModelName != nil {
		toSerialize["ModelName"] = o.ModelName
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableFlexibleGpu struct {
	value *FlexibleGpu
	isSet bool
}

func (v NullableFlexibleGpu) Get() *FlexibleGpu {
	return v.value
}

func (v *NullableFlexibleGpu) Set(val *FlexibleGpu) {
	v.value = val
	v.isSet = true
}

func (v NullableFlexibleGpu) IsSet() bool {
	return v.isSet
}

func (v *NullableFlexibleGpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlexibleGpu(val *FlexibleGpu) *NullableFlexibleGpu {
	return &NullableFlexibleGpu{value: val, isSet: true}
}

func (v NullableFlexibleGpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlexibleGpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// FlexibleGpuCatalog Information about the flexible GPU (fGPU) that is available in the public catalog.
type FlexibleGpuCatalog struct {
	// The generations of VMs that the fGPU is compatible with.
	Generations *[]string `json:"Generations,omitempty"`
	// The maximum number of VM vCores that the fGPU is compatible with.
	MaxCpu *int32 `json:"MaxCpu,omitempty"`
	// The maximum amount of VM memory that the fGPU is compatible with.
	MaxRam *int32 `json:"MaxRam,omitempty"`
	// The model of fGPU.
	ModelName *string `json:"ModelName,omitempty"`
	// The amount of video RAM (VRAM) of the fGPU.
	VRam *int32 `json:"VRam,omitempty"`
}

// NewFlexibleGpuCatalog instantiates a new FlexibleGpuCatalog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlexibleGpuCatalog() *FlexibleGpuCatalog {
	this := FlexibleGpuCatalog{}
	return &this
}

// NewFlexibleGpuCatalogWithDefaults instantiates a new FlexibleGpuCatalog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlexibleGpuCatalogWithDefaults() *FlexibleGpuCatalog {
	this := FlexibleGpuCatalog{}
	return &this
}

// GetGenerations returns the Generations field value if set, zero value otherwise.
func (o *FlexibleGpuCatalog) GetGenerations() []string {
	if o == nil || o.Generations == nil {
		var ret []string
		return ret
	}
	return *o.Generations
}

// GetGenerationsOk returns a tuple with the Generations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpuCatalog) GetGenerationsOk() (*[]string, bool) {
	if o == nil || o.Generations == nil {
		return nil, false
	}
	return o.Generations, true
}

// HasGenerations returns a boolean if a field has been set.
func (o *FlexibleGpuCatalog) HasGenerations() bool {
	if o != nil && o.Generations != nil {
		return true
	}

	return false
}

// SetGenerations gets a reference to the given []string and assigns it to the Generations field.
func (o *FlexibleGpuCatalog) SetGenerations(v []string) {
	o.Generations = &v
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise.
func (o *FlexibleGpuCatalog) GetMaxCpu() int32 {
	if o == nil || o.MaxCpu == nil {
		var ret int32
		return ret
	}
	return *o.MaxCpu
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpuCatalog) GetMaxCpuOk() (*int32, bool) {
	if o == nil || o.MaxCpu == nil {
		return nil, false
	}
	return o.MaxCpu, true
}

// HasMaxCpu returns a boolean if a field has been set.
func (o *FlexibleGpuCatalog) HasMaxCpu() bool {
	if o != nil && o.MaxCpu != nil {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given int32 and assigns it to the MaxCpu field.
func (o *FlexibleGpuCatalog) SetMaxCpu(v int32) {
	o.MaxCpu = &v
}

// GetMaxRam returns the MaxRam field value if set, zero value otherwise.
func (o *FlexibleGpuCatalog) GetMaxRam() int32 {
	if o == nil || o.MaxRam == nil {
		var ret int32
		return ret
	}
	return *o.MaxRam
}

// GetMaxRamOk returns a tuple with the MaxRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpuCatalog) GetMaxRamOk() (*int32, bool) {
	if o == nil || o.MaxRam == nil {
		return nil, false
	}
	return o.MaxRam, true
}

// HasMaxRam returns a boolean if a field has been set.
func (o *FlexibleGpuCatalog) HasMaxRam() bool {
	if o != nil && o.MaxRam != nil {
		return true
	}

	return false
}

// SetMaxRam gets a reference to the given int32 and assigns it to the MaxRam field.
func (o *FlexibleGpuCatalog) SetMaxRam(v int32) {
	o.MaxRam = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *FlexibleGpuCatalog) GetModelName() string {
	if o == nil || o.ModelName == nil {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpuCatalog) GetModelNameOk() (*string, bool) {
	if o == nil || o.ModelName == nil {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *FlexibleGpuCatalog) HasModelName() bool {
	if o != nil && o.ModelName != nil {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *FlexibleGpuCatalog) SetModelName(v string) {
	o.ModelName = &v
}

// GetVRam returns the VRam field value if set, zero value otherwise.
func (o *FlexibleGpuCatalog) GetVRam() int32 {
	if o == nil || o.VRam == nil {
		var ret int32
		return ret
	}
	return *o.VRam
}

// GetVRamOk returns a tuple with the VRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpuCatalog) GetVRamOk() (*int32, bool) {
	if o == nil || o.VRam == nil {
		return nil, false
	}
	return o.VRam, true
}

// HasVRam returns a boolean if a field has been set.
func (o *FlexibleGpuCatalog) HasVRam() bool {
	if o != nil && o.VRam != nil {
		return true
	}

	return false
}

// SetVRam gets a reference to the given int32 and assigns it to the VRam field.
func (o *FlexibleGpuCatalog) SetVRam(v int32) {
	o.VRam = &v
}

func (o FlexibleGpuCatalog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Generations != nil {
		toSerialize["Generations"] = o.Generations
	}
	if o.MaxCpu != nil {
		toSerialize["MaxCpu"] = o.MaxCpu
	}
	if o.MaxRam != nil {
		toSerialize["MaxRam"] = o.MaxRam
	}
	if o.ModelName != nil {
		toSerialize["ModelName"] = o.ModelName
	}
	if o.VRam != nil {
		toSerialize["VRam"] = o.VRam
	}
	return json.Marshal(toSerialize)
}

type NullableFlexibleGpuCatalog struct {
	value *FlexibleGpuCatalog
	isSet bool
}

func (v NullableFlexibleGpuCatalog) Get() *FlexibleGpuCatalog {
	return v.value
}

func (v *NullableFlexibleGpuCatalog) Set(val *FlexibleGpuCatalog) {
	v.value = val
	v.isSet = true
}

func (v NullableFlexibleGpuCatalog) IsSet() bool {
	return v.isSet
}

func (v *NullableFlexibleGpuCatalog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlexibleGpuCatalog(val *FlexibleGpuCatalog) *NullableFlexibleGpuCatalog {
	return &NullableFlexibleGpuCatalog{value: val, isSet: true}
}

func (v NullableFlexibleGpuCatalog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlexibleGpuCatalog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// HealthCheck Information about the health check configuration.
type HealthCheck struct {
	// The number of seconds between two pings (between `5` and `600` both included).
	CheckInterval int32 `json:"CheckInterval"`
	// The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included).
	HealthyThreshold int32 `json:"HealthyThreshold"`
	// The path for HTTP or HTTPS requests.
	Path *string `json:"Path,omitempty"`
	// The port number (between `1` and `65535`, both included).
	Port int32 `json:"Port"`
	// The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL` \\| `UDP`).
	Protocol string `json:"Protocol"`
	// The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
	Timeout int32 `json:"Timeout"`
	// The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included).
	UnhealthyThreshold int32 `json:"UnhealthyThreshold"`
}

// NewHealthCheck instantiates a new HealthCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheck(checkInterval int32, healthyThreshold int32, port int32, protocol string, timeout int32, unhealthyThreshold int32, ) *HealthCheck {
	this := HealthCheck{}
	this.CheckInterval = checkInterval
	this.HealthyThreshold = healthyThreshold
	this.Port = port
	this.Protocol = protocol
	this.Timeout = timeout
	this.UnhealthyThreshold = unhealthyThreshold
	return &this
}

// NewHealthCheckWithDefaults instantiates a new HealthCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckWithDefaults() *HealthCheck {
	this := HealthCheck{}
	return &this
}

// GetCheckInterval returns the CheckInterval field value
func (o *HealthCheck) GetCheckInterval() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CheckInterval
}

// GetCheckIntervalOk returns a tuple with the CheckInterval field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetCheckIntervalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckInterval, true
}

// SetCheckInterval sets field value
func (o *HealthCheck) SetCheckInterval(v int32) {
	o.CheckInterval = v
}

// GetHealthyThreshold returns the HealthyThreshold field value
func (o *HealthCheck) GetHealthyThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.HealthyThreshold
}

// GetHealthyThresholdOk returns a tuple with the HealthyThreshold field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetHealthyThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HealthyThreshold, true
}

// SetHealthyThreshold sets field value
func (o *HealthCheck) SetHealthyThreshold(v int32) {
	o.HealthyThreshold = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *HealthCheck) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *HealthCheck) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *HealthCheck) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value
func (o *HealthCheck) GetPort() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *HealthCheck) SetPort(v int32) {
	o.Port = v
}

// GetProtocol returns the Protocol field value
func (o *HealthCheck) GetProtocol() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *HealthCheck) SetProtocol(v string) {
	o.Protocol = v
}

// GetTimeout returns the Timeout field value
func (o *HealthCheck) GetTimeout() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetTimeoutOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *HealthCheck) SetTimeout(v int32) {
	o.Timeout = v
}

// GetUnhealthyThreshold returns the UnhealthyThreshold field value
func (o *HealthCheck) GetUnhealthyThreshold() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.UnhealthyThreshold
}

// GetUnhealthyThresholdOk returns a tuple with the UnhealthyThreshold field value
// and a boolean to check if the value has been set.
func (o *HealthCheck) GetUnhealthyThresholdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnhealthyThreshold, true
}

// SetUnhealthyThreshold sets field value
func (o *HealthCheck) SetUnhealthyThreshold(v int32) {
	o.UnhealthyThreshold = v
}

func (o HealthCheck) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["CheckInterval"] = o.CheckInterval
	}
	if true {
		toSerialize["HealthyThreshold"] = o.HealthyThreshold
	}
	if o.Path != nil {
		toSerialize["Path"] = o.Path
	}
	if true {
		toSerialize["Port"] = o.Port
	}
	if true {
		toSerialize["Protocol"] = o.Protocol
	}
	if true {
		toSerialize["Timeout"] = o.Timeout
	}
	if true {
		toSerialize["UnhealthyThreshold"] = o.UnhealthyThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableHealthCheck struct {
	value *HealthCheck
	isSet bool
}

func (v NullableHealthCheck) Get() *HealthCheck {
	return v.value
}

func (v *NullableHealthCheck) Set(val *HealthCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheck(val *HealthCheck) *NullableHealthCheck {
	return &NullableHealthCheck{value: val, isSet: true}
}

func (v NullableHealthCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Image Information about the OMI.
type Image struct {
	// The account alias of the owner of the OMI.
	AccountAlias *string `json:"AccountAlias,omitempty"`
	// The account ID of the owner of the OMI.
	AccountId *string `json:"AccountId,omitempty"`
	// The architecture of the OMI (by default, `i386`).
	Architecture *string `json:"Architecture,omitempty"`
	// One or more block device mappings.
	BlockDeviceMappings *[]BlockDeviceMappingImage `json:"BlockDeviceMappings,omitempty"`
	// The date and time at which the OMI was created.
	CreationDate *string `json:"CreationDate,omitempty"`
	// The description of the OMI.
	Description *string `json:"Description,omitempty"`
	// The location where the OMI file is stored on Object Storage Unit (OSU).
	FileLocation *string `json:"FileLocation,omitempty"`
	// The ID of the OMI.
	ImageId *string `json:"ImageId,omitempty"`
	// The name of the OMI.
	ImageName *string `json:"ImageName,omitempty"`
	// The type of the OMI.
	ImageType *string `json:"ImageType,omitempty"`
	PermissionsToLaunch *PermissionsOnResource `json:"PermissionsToLaunch,omitempty"`
	// The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).
	ProductCodes *[]string `json:"ProductCodes,omitempty"`
	// The name of the root device.
	RootDeviceName *string `json:"RootDeviceName,omitempty"`
	// The type of root device used by the OMI (always `bsu`).
	RootDeviceType *string `json:"RootDeviceType,omitempty"`
	// The state of the OMI (`pending` \\| `available` \\| `failed`).
	State *string `json:"State,omitempty"`
	StateComment *StateComment `json:"StateComment,omitempty"`
	// One or more tags associated with the OMI.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewImage instantiates a new Image object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImage() *Image {
	this := Image{}
	return &this
}

// NewImageWithDefaults instantiates a new Image object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageWithDefaults() *Image {
	this := Image{}
	return &this
}

// GetAccountAlias returns the AccountAlias field value if set, zero value otherwise.
func (o *Image) GetAccountAlias() string {
	if o == nil || o.AccountAlias == nil {
		var ret string
		return ret
	}
	return *o.AccountAlias
}

// GetAccountAliasOk returns a tuple with the AccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetAccountAliasOk() (*string, bool) {
	if o == nil || o.AccountAlias == nil {
		return nil, false
	}
	return o.AccountAlias, true
}

// HasAccountAlias returns a boolean if a field has been set.
func (o *Image) HasAccountAlias() bool {
	if o != nil && o.AccountAlias != nil {
		return true
	}

	return false
}

// SetAccountAlias gets a reference to the given string and assigns it to the AccountAlias field.
func (o *Image) SetAccountAlias(v string) {
	o.AccountAlias = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Image) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Image) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Image) SetAccountId(v string) {
	o.AccountId = &v
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *Image) GetArchitecture() string {
	if o == nil || o.Architecture == nil {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetArchitectureOk() (*string, bool) {
	if o == nil || o.Architecture == nil {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *Image) HasArchitecture() bool {
	if o != nil && o.Architecture != nil {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *Image) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *Image) GetBlockDeviceMappings() []BlockDeviceMappingImage {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingImage
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetBlockDeviceMappingsOk() (*[]BlockDeviceMappingImage, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		return nil, false
	}
	return o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *Image) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingImage and assigns it to the BlockDeviceMappings field.
func (o *Image) SetBlockDeviceMappings(v []BlockDeviceMappingImage) {
	o.BlockDeviceMappings = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Image) GetCreationDate() string {
	if o == nil || o.CreationDate == nil {
		var ret string
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetCreationDateOk() (*string, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Image) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given string and assigns it to the CreationDate field.
func (o *Image) SetCreationDate(v string) {
	o.CreationDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Image) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Image) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Image) SetDescription(v string) {
	o.Description = &v
}

// GetFileLocation returns the FileLocation field value if set, zero value otherwise.
func (o *Image) GetFileLocation() string {
	if o == nil || o.FileLocation == nil {
		var ret string
		return ret
	}
	return *o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetFileLocationOk() (*string, bool) {
	if o == nil || o.FileLocation == nil {
		return nil, false
	}
	return o.FileLocation, true
}

// HasFileLocation returns a boolean if a field has been set.
func (o *Image) HasFileLocation() bool {
	if o != nil && o.FileLocation != nil {
		return true
	}

	return false
}

// SetFileLocation gets a reference to the given string and assigns it to the FileLocation field.
func (o *Image) SetFileLocation(v string) {
	o.FileLocation = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *Image) GetImageId() string {
	if o == nil || o.ImageId == nil {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetImageIdOk() (*string, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *Image) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *Image) SetImageId(v string) {
	o.ImageId = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *Image) GetImageName() string {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetImageNameOk() (*string, bool) {
	if o == nil || o.ImageName == nil {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *Image) HasImageName() bool {
	if o != nil && o.ImageName != nil {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *Image) SetImageName(v string) {
	o.ImageName = &v
}

// GetImageType returns the ImageType field value if set, zero value otherwise.
func (o *Image) GetImageType() string {
	if o == nil || o.ImageType == nil {
		var ret string
		return ret
	}
	return *o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetImageTypeOk() (*string, bool) {
	if o == nil || o.ImageType == nil {
		return nil, false
	}
	return o.ImageType, true
}

// HasImageType returns a boolean if a field has been set.
func (o *Image) HasImageType() bool {
	if o != nil && o.ImageType != nil {
		return true
	}

	return false
}

// SetImageType gets a reference to the given string and assigns it to the ImageType field.
func (o *Image) SetImageType(v string) {
	o.ImageType = &v
}

// GetPermissionsToLaunch returns the PermissionsToLaunch field value if set, zero value otherwise.
func (o *Image) GetPermissionsToLaunch() PermissionsOnResource {
	if o == nil || o.PermissionsToLaunch == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.PermissionsToLaunch
}

// GetPermissionsToLaunchOk returns a tuple with the PermissionsToLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetPermissionsToLaunchOk() (*PermissionsOnResource, bool) {
	if o == nil || o.PermissionsToLaunch == nil {
		return nil, false
	}
	return o.PermissionsToLaunch, true
}

// HasPermissionsToLaunch returns a boolean if a field has been set.
func (o *Image) HasPermissionsToLaunch() bool {
	if o != nil && o.PermissionsToLaunch != nil {
		return true
	}

	return false
}

// SetPermissionsToLaunch gets a reference to the given PermissionsOnResource and assigns it to the PermissionsToLaunch field.
func (o *Image) SetPermissionsToLaunch(v PermissionsOnResource) {
	o.PermissionsToLaunch = &v
}

// GetProductCodes returns the ProductCodes field value if set, zero value otherwise.
func (o *Image) GetProductCodes() []string {
	if o == nil || o.ProductCodes == nil {
		var ret []string
		return ret
	}
	return *o.ProductCodes
}

// GetProductCodesOk returns a tuple with the ProductCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetProductCodesOk() (*[]string, bool) {
	if o == nil || o.ProductCodes == nil {
		return nil, false
	}
	return o.ProductCodes, true
}

// HasProductCodes returns a boolean if a field has been set.
func (o *Image) HasProductCodes() bool {
	if o != nil && o.ProductCodes != nil {
		return true
	}

	return false
}

// SetProductCodes gets a reference to the given []string and assigns it to the ProductCodes field.
func (o *Image) SetProductCodes(v []string) {
	o.ProductCodes = &v
}

// GetRootDeviceName returns the RootDeviceName field value if set, zero value otherwise.
func (o *Image) GetRootDeviceName() string {
	if o == nil || o.RootDeviceName == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceName
}

// GetRootDeviceNameOk returns a tuple with the RootDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetRootDeviceNameOk() (*string, bool) {
	if o == nil || o.RootDeviceName == nil {
		return nil, false
	}
	return o.RootDeviceName, true
}

// HasRootDeviceName returns a boolean if a field has been set.
func (o *Image) HasRootDeviceName() bool {
	if o != nil && o.RootDeviceName != nil {
		return true
	}

	return false
}

// SetRootDeviceName gets a reference to the given string and assigns it to the RootDeviceName field.
func (o *Image) SetRootDeviceName(v string) {
	o.RootDeviceName = &v
}

// GetRootDeviceType returns the RootDeviceType field value if set, zero value otherwise.
func (o *Image) GetRootDeviceType() string {
	if o == nil || o.RootDeviceType == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceType
}

// GetRootDeviceTypeOk returns a tuple with the RootDeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetRootDeviceTypeOk() (*string, bool) {
	if o == nil || o.RootDeviceType == nil {
		return nil, false
	}
	return o.RootDeviceType, true
}

// HasRootDeviceType returns a boolean if a field has been set.
func (o *Image) HasRootDeviceType() bool {
	if o != nil && o.RootDeviceType != nil {
		return true
	}

	return false
}

// SetRootDeviceType gets a reference to the given string and assigns it to the RootDeviceType field.
func (o *Image) SetRootDeviceType(v string) {
	o.RootDeviceType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Image) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Image) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Image) SetState(v string) {
	o.State = &v
}

// GetStateComment returns the StateComment field value if set, zero value otherwise.
func (o *Image) GetStateComment() StateComment {
	if o == nil || o.StateComment == nil {
		var ret StateComment
		return ret
	}
	return *o.StateComment
}

// GetStateCommentOk returns a tuple with the StateComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetStateCommentOk() (*StateComment, bool) {
	if o == nil || o.StateComment == nil {
		return nil, false
	}
	return o.StateComment, true
}

// HasStateComment returns a boolean if a field has been set.
func (o *Image) HasStateComment() bool {
	if o != nil && o.StateComment != nil {
		return true
	}

	return false
}

// SetStateComment gets a reference to the given StateComment and assigns it to the StateComment field.
func (o *Image) SetStateComment(v StateComment) {
	o.StateComment = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Image) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Image) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Image) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Image) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o Image) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountAlias != nil {
		toSerialize["AccountAlias"] = o.AccountAlias
	}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Architecture != nil {
		toSerialize["Architecture"] = o.Architecture
	}
	if o.BlockDeviceMappings != nil {
		toSerialize["BlockDeviceMappings"] = o.BlockDeviceMappings
	}
	if o.CreationDate != nil {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.FileLocation != nil {
		toSerialize["FileLocation"] = o.FileLocation
	}
	if o.ImageId != nil {
		toSerialize["ImageId"] = o.ImageId
	}
	if o.ImageName != nil {
		toSerialize["ImageName"] = o.ImageName
	}
	if o.ImageType != nil {
		toSerialize["ImageType"] = o.ImageType
	}
	if o.PermissionsToLaunch != nil {
		toSerialize["PermissionsToLaunch"] = o.PermissionsToLaunch
	}
	if o.ProductCodes != nil {
		toSerialize["ProductCodes"] = o.ProductCodes
	}
	if o.RootDeviceName != nil {
		toSerialize["RootDeviceName"] = o.RootDeviceName
	}
	if o.RootDeviceType != nil {
		toSerialize["RootDeviceType"] = o.RootDeviceType
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.StateComment != nil {
		toSerialize["StateComment"] = o.StateComment
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableImage struct {
	value *Image
	isSet bool
}

func (v NullableImage) Get() *Image {
	return v.value
}

func (v *NullableImage) Set(val *Image) {
	v.value = val
	v.isSet = true
}

func (v NullableImage) IsSet() bool {
	return v.isSet
}

func (v *NullableImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImage(val *Image) *NullableImage {
	return &NullableImage{value: val, isSet: true}
}

func (v NullableImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ImageExportTask Information about the OMI export task.
type ImageExportTask struct {
	// If the OMI export task fails, an error message appears.
	Comment *string `json:"Comment,omitempty"`
	// The ID of the OMI to be exported.
	ImageId *string `json:"ImageId,omitempty"`
	OsuExport *OsuExport `json:"OsuExport,omitempty"`
	// The progress of the OMI export task, as a percentage.
	Progress *int32 `json:"Progress,omitempty"`
	// The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the image export task.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the OMI export task.
	TaskId *string `json:"TaskId,omitempty"`
}

// NewImageExportTask instantiates a new ImageExportTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageExportTask() *ImageExportTask {
	this := ImageExportTask{}
	return &this
}

// NewImageExportTaskWithDefaults instantiates a new ImageExportTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageExportTaskWithDefaults() *ImageExportTask {
	this := ImageExportTask{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ImageExportTask) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ImageExportTask) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ImageExportTask) SetComment(v string) {
	o.Comment = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *ImageExportTask) GetImageId() string {
	if o == nil || o.ImageId == nil {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetImageIdOk() (*string, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ImageExportTask) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *ImageExportTask) SetImageId(v string) {
	o.ImageId = &v
}

// GetOsuExport returns the OsuExport field value if set, zero value otherwise.
func (o *ImageExportTask) GetOsuExport() OsuExport {
	if o == nil || o.OsuExport == nil {
		var ret OsuExport
		return ret
	}
	return *o.OsuExport
}

// GetOsuExportOk returns a tuple with the OsuExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetOsuExportOk() (*OsuExport, bool) {
	if o == nil || o.OsuExport == nil {
		return nil, false
	}
	return o.OsuExport, true
}

// HasOsuExport returns a boolean if a field has been set.
func (o *ImageExportTask) HasOsuExport() bool {
	if o != nil && o.OsuExport != nil {
		return true
	}

	return false
}

// SetOsuExport gets a reference to the given OsuExport and assigns it to the OsuExport field.
func (o *ImageExportTask) SetOsuExport(v OsuExport) {
	o.OsuExport = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *ImageExportTask) GetProgress() int32 {
	if o == nil || o.Progress == nil {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetProgressOk() (*int32, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *ImageExportTask) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *ImageExportTask) SetProgress(v int32) {
	o.Progress = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ImageExportTask) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ImageExportTask) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ImageExportTask) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ImageExportTask) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ImageExportTask) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *ImageExportTask) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *ImageExportTask) GetTaskId() string {
	if o == nil || o.TaskId == nil {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageExportTask) GetTaskIdOk() (*string, bool) {
	if o == nil || o.TaskId == nil {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *ImageExportTask) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *ImageExportTask) SetTaskId(v string) {
	o.TaskId = &v
}

func (o ImageExportTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["Comment"] = o.Comment
	}
	if o.ImageId != nil {
		toSerialize["ImageId"] = o.ImageId
	}
	if o.OsuExport != nil {
		toSerialize["OsuExport"] = o.OsuExport
	}
	if o.Progress != nil {
		toSerialize["Progress"] = o.Progress
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.TaskId != nil {
		toSerialize["TaskId"] = o.TaskId
	}
	return json.Marshal(toSerialize)
}

type NullableImageExportTask struct {
	value *ImageExportTask
	isSet bool
}

func (v NullableImageExportTask) Get() *ImageExportTask {
	return v.value
}

func (v *NullableImageExportTask) Set(val *ImageExportTask) {
	v.value = val
	v.isSet = true
}

func (v NullableImageExportTask) IsSet() bool {
	return v.isSet
}

func (v *NullableImageExportTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageExportTask(val *ImageExportTask) *NullableImageExportTask {
	return &NullableImageExportTask{value: val, isSet: true}
}

func (v NullableImageExportTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageExportTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// InternetService Information about the Internet service.
type InternetService struct {
	// The ID of the Internet service.
	InternetServiceId *string `json:"InternetServiceId,omitempty"`
	// The ID of the Net attached to the Internet service.
	NetId *string `json:"NetId,omitempty"`
	// The state of the attachment of the Net to the Internet service (always `available`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the Internet service.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewInternetService instantiates a new InternetService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetService() *InternetService {
	this := InternetService{}
	return &this
}

// NewInternetServiceWithDefaults instantiates a new InternetService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetServiceWithDefaults() *InternetService {
	this := InternetService{}
	return &this
}

// GetInternetServiceId returns the InternetServiceId field value if set, zero value otherwise.
func (o *InternetService) GetInternetServiceId() string {
	if o == nil || o.InternetServiceId == nil {
		var ret string
		return ret
	}
	return *o.InternetServiceId
}

// GetInternetServiceIdOk returns a tuple with the InternetServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetInternetServiceIdOk() (*string, bool) {
	if o == nil || o.InternetServiceId == nil {
		return nil, false
	}
	return o.InternetServiceId, true
}

// HasInternetServiceId returns a boolean if a field has been set.
func (o *InternetService) HasInternetServiceId() bool {
	if o != nil && o.InternetServiceId != nil {
		return true
	}

	return false
}

// SetInternetServiceId gets a reference to the given string and assigns it to the InternetServiceId field.
func (o *InternetService) SetInternetServiceId(v string) {
	o.InternetServiceId = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *InternetService) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *InternetService) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *InternetService) SetNetId(v string) {
	o.NetId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InternetService) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InternetService) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InternetService) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InternetService) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InternetService) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *InternetService) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o InternetService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternetServiceId != nil {
		toSerialize["InternetServiceId"] = o.InternetServiceId
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableInternetService struct {
	value *InternetService
	isSet bool
}

func (v NullableInternetService) Get() *InternetService {
	return v.value
}

func (v *NullableInternetService) Set(val *InternetService) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetService) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetService(val *InternetService) *NullableInternetService {
	return &NullableInternetService{value: val, isSet: true}
}

func (v NullableInternetService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Keypair Information about the keypair.
type Keypair struct {
	// If you create a keypair, the SHA-1 digest of the DER encoded private key.<br /> If you import a keypair, the MD5 public key fingerprint as specified in section 4 of RFC 4716.
	KeypairFingerprint *string `json:"KeypairFingerprint,omitempty"`
	// The name of the keypair.
	KeypairName *string `json:"KeypairName,omitempty"`
}

// NewKeypair instantiates a new Keypair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeypair() *Keypair {
	this := Keypair{}
	return &this
}

// NewKeypairWithDefaults instantiates a new Keypair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeypairWithDefaults() *Keypair {
	this := Keypair{}
	return &this
}

// GetKeypairFingerprint returns the KeypairFingerprint field value if set, zero value otherwise.
func (o *Keypair) GetKeypairFingerprint() string {
	if o == nil || o.KeypairFingerprint == nil {
		var ret string
		return ret
	}
	return *o.KeypairFingerprint
}

// GetKeypairFingerprintOk returns a tuple with the KeypairFingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Keypair) GetKeypairFingerprintOk() (*string, bool) {
	if o == nil || o.KeypairFingerprint == nil {
		return nil, false
	}
	return o.KeypairFingerprint, true
}

// HasKeypairFingerprint returns a boolean if a field has been set.
func (o *Keypair) HasKeypairFingerprint() bool {
	if o != nil && o.KeypairFingerprint != nil {
		return true
	}

	return false
}

// SetKeypairFingerprint gets a reference to the given string and assigns it to the KeypairFingerprint field.
func (o *Keypair) SetKeypairFingerprint(v string) {
	o.KeypairFingerprint = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *Keypair) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Keypair) GetKeypairNameOk() (*string, bool) {
	if o == nil || o.KeypairName == nil {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *Keypair) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *Keypair) SetKeypairName(v string) {
	o.KeypairName = &v
}

func (o Keypair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeypairFingerprint != nil {
		toSerialize["KeypairFingerprint"] = o.KeypairFingerprint
	}
	if o.KeypairName != nil {
		toSerialize["KeypairName"] = o.KeypairName
	}
	return json.Marshal(toSerialize)
}

type NullableKeypair struct {
	value *Keypair
	isSet bool
}

func (v NullableKeypair) Get() *Keypair {
	return v.value
}

func (v *NullableKeypair) Set(val *Keypair) {
	v.value = val
	v.isSet = true
}

func (v NullableKeypair) IsSet() bool {
	return v.isSet
}

func (v *NullableKeypair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeypair(val *Keypair) *NullableKeypair {
	return &NullableKeypair{value: val, isSet: true}
}

func (v NullableKeypair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeypair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// KeypairCreated Information about the created keypair.
type KeypairCreated struct {
	// If you create a keypair, the SHA-1 digest of the DER encoded private key.<br /> If you import a keypair, the MD5 public key fingerprint as specified in section 4 of RFC 4716.
	KeypairFingerprint *string `json:"KeypairFingerprint,omitempty"`
	// The name of the keypair.
	KeypairName *string `json:"KeypairName,omitempty"`
	// The private key.
	PrivateKey *string `json:"PrivateKey,omitempty"`
}

// NewKeypairCreated instantiates a new KeypairCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeypairCreated() *KeypairCreated {
	this := KeypairCreated{}
	return &this
}

// NewKeypairCreatedWithDefaults instantiates a new KeypairCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeypairCreatedWithDefaults() *KeypairCreated {
	this := KeypairCreated{}
	return &this
}

// GetKeypairFingerprint returns the KeypairFingerprint field value if set, zero value otherwise.
func (o *KeypairCreated) GetKeypairFingerprint() string {
	if o == nil || o.KeypairFingerprint == nil {
		var ret string
		return ret
	}
	return *o.KeypairFingerprint
}

// GetKeypairFingerprintOk returns a tuple with the KeypairFingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetKeypairFingerprintOk() (*string, bool) {
	if o == nil || o.KeypairFingerprint == nil {
		return nil, false
	}
	return o.KeypairFingerprint, true
}

// HasKeypairFingerprint returns a boolean if a field has been set.
func (o *KeypairCreated) HasKeypairFingerprint() bool {
	if o != nil && o.KeypairFingerprint != nil {
		return true
	}

	return false
}

// SetKeypairFingerprint gets a reference to the given string and assigns it to the KeypairFingerprint field.
func (o *KeypairCreated) SetKeypairFingerprint(v string) {
	o.KeypairFingerprint = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *KeypairCreated) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetKeypairNameOk() (*string, bool) {
	if o == nil || o.KeypairName == nil {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *KeypairCreated) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *KeypairCreated) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *KeypairCreated) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *KeypairCreated) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *KeypairCreated) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

func (o KeypairCreated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeypairFingerprint != nil {
		toSerialize["KeypairFingerprint"] = o.KeypairFingerprint
	}
	if o.KeypairName != nil {
		toSerialize["KeypairName"] = o.KeypairName
	}
	if o.PrivateKey != nil {
		toSerialize["PrivateKey"] = o.PrivateKey
	}
	return json.Marshal(toSerialize)
}

type NullableKeypairCreated struct {
	value *KeypairCreated
	isSet bool
}

func (v NullableKeypairCreated) Get() *KeypairCreated {
	return v.value
}

func (v *NullableKeypairCreated) Set(val *KeypairCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableKeypairCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableKeypairCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeypairCreated(val *KeypairCreated) *NullableKeypairCreated {
	return &NullableKeypairCreated{value: val, isSet: true}
}

func (v NullableKeypairCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeypairCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkFlexibleGpuRequest struct for LinkFlexibleGpuRequest
type LinkFlexibleGpuRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the fGPU you want to attach.
	FlexibleGpuId string `json:"FlexibleGpuId"`
	// The ID of the VM you want to attach the fGPU to.
	VmId string `json:"VmId"`
}

// NewLinkFlexibleGpuRequest instantiates a new LinkFlexibleGpuRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkFlexibleGpuRequest(flexibleGpuId string, vmId string, ) *LinkFlexibleGpuRequest {
	this := LinkFlexibleGpuRequest{}
	this.FlexibleGpuId = flexibleGpuId
	this.VmId = vmId
	return &this
}

// NewLinkFlexibleGpuRequestWithDefaults instantiates a new LinkFlexibleGpuRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkFlexibleGpuRequestWithDefaults() *LinkFlexibleGpuRequest {
	this := LinkFlexibleGpuRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkFlexibleGpuRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkFlexibleGpuRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkFlexibleGpuRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkFlexibleGpuRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value
func (o *LinkFlexibleGpuRequest) GetFlexibleGpuId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value
// and a boolean to check if the value has been set.
func (o *LinkFlexibleGpuRequest) GetFlexibleGpuIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlexibleGpuId, true
}

// SetFlexibleGpuId sets field value
func (o *LinkFlexibleGpuRequest) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = v
}

// GetVmId returns the VmId field value
func (o *LinkFlexibleGpuRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *LinkFlexibleGpuRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *LinkFlexibleGpuRequest) SetVmId(v string) {
	o.VmId = v
}

func (o LinkFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["FlexibleGpuId"] = o.FlexibleGpuId
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkFlexibleGpuRequest struct {
	value *LinkFlexibleGpuRequest
	isSet bool
}

func (v NullableLinkFlexibleGpuRequest) Get() *LinkFlexibleGpuRequest {
	return v.value
}

func (v *NullableLinkFlexibleGpuRequest) Set(val *LinkFlexibleGpuRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkFlexibleGpuRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkFlexibleGpuRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkFlexibleGpuRequest(val *LinkFlexibleGpuRequest) *NullableLinkFlexibleGpuRequest {
	return &NullableLinkFlexibleGpuRequest{value: val, isSet: true}
}

func (v NullableLinkFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkFlexibleGpuRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkFlexibleGpuResponse struct for LinkFlexibleGpuResponse
type LinkFlexibleGpuResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkFlexibleGpuResponse instantiates a new LinkFlexibleGpuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkFlexibleGpuResponse() *LinkFlexibleGpuResponse {
	this := LinkFlexibleGpuResponse{}
	return &this
}

// NewLinkFlexibleGpuResponseWithDefaults instantiates a new LinkFlexibleGpuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkFlexibleGpuResponseWithDefaults() *LinkFlexibleGpuResponse {
	this := LinkFlexibleGpuResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkFlexibleGpuResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkFlexibleGpuResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkFlexibleGpuResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkFlexibleGpuResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkFlexibleGpuResponse struct {
	value *LinkFlexibleGpuResponse
	isSet bool
}

func (v NullableLinkFlexibleGpuResponse) Get() *LinkFlexibleGpuResponse {
	return v.value
}

func (v *NullableLinkFlexibleGpuResponse) Set(val *LinkFlexibleGpuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkFlexibleGpuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkFlexibleGpuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkFlexibleGpuResponse(val *LinkFlexibleGpuResponse) *NullableLinkFlexibleGpuResponse {
	return &NullableLinkFlexibleGpuResponse{value: val, isSet: true}
}

func (v NullableLinkFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkFlexibleGpuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkInternetServiceRequest struct for LinkInternetServiceRequest
type LinkInternetServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Internet service you want to attach.
	InternetServiceId string `json:"InternetServiceId"`
	// The ID of the Net to which you want to attach the Internet service.
	NetId string `json:"NetId"`
}

// NewLinkInternetServiceRequest instantiates a new LinkInternetServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkInternetServiceRequest(internetServiceId string, netId string, ) *LinkInternetServiceRequest {
	this := LinkInternetServiceRequest{}
	this.InternetServiceId = internetServiceId
	this.NetId = netId
	return &this
}

// NewLinkInternetServiceRequestWithDefaults instantiates a new LinkInternetServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkInternetServiceRequestWithDefaults() *LinkInternetServiceRequest {
	this := LinkInternetServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkInternetServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkInternetServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkInternetServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkInternetServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetInternetServiceId returns the InternetServiceId field value
func (o *LinkInternetServiceRequest) GetInternetServiceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InternetServiceId
}

// GetInternetServiceIdOk returns a tuple with the InternetServiceId field value
// and a boolean to check if the value has been set.
func (o *LinkInternetServiceRequest) GetInternetServiceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InternetServiceId, true
}

// SetInternetServiceId sets field value
func (o *LinkInternetServiceRequest) SetInternetServiceId(v string) {
	o.InternetServiceId = v
}

// GetNetId returns the NetId field value
func (o *LinkInternetServiceRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *LinkInternetServiceRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *LinkInternetServiceRequest) SetNetId(v string) {
	o.NetId = v
}

func (o LinkInternetServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["InternetServiceId"] = o.InternetServiceId
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkInternetServiceRequest struct {
	value *LinkInternetServiceRequest
	isSet bool
}

func (v NullableLinkInternetServiceRequest) Get() *LinkInternetServiceRequest {
	return v.value
}

func (v *NullableLinkInternetServiceRequest) Set(val *LinkInternetServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkInternetServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkInternetServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkInternetServiceRequest(val *LinkInternetServiceRequest) *NullableLinkInternetServiceRequest {
	return &NullableLinkInternetServiceRequest{value: val, isSet: true}
}

func (v NullableLinkInternetServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkInternetServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkInternetServiceResponse struct for LinkInternetServiceResponse
type LinkInternetServiceResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkInternetServiceResponse instantiates a new LinkInternetServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkInternetServiceResponse() *LinkInternetServiceResponse {
	this := LinkInternetServiceResponse{}
	return &this
}

// NewLinkInternetServiceResponseWithDefaults instantiates a new LinkInternetServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkInternetServiceResponseWithDefaults() *LinkInternetServiceResponse {
	this := LinkInternetServiceResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkInternetServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkInternetServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkInternetServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkInternetServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkInternetServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkInternetServiceResponse struct {
	value *LinkInternetServiceResponse
	isSet bool
}

func (v NullableLinkInternetServiceResponse) Get() *LinkInternetServiceResponse {
	return v.value
}

func (v *NullableLinkInternetServiceResponse) Set(val *LinkInternetServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkInternetServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkInternetServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkInternetServiceResponse(val *LinkInternetServiceResponse) *NullableLinkInternetServiceResponse {
	return &NullableLinkInternetServiceResponse{value: val, isSet: true}
}

func (v NullableLinkInternetServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkInternetServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkNic Information about the NIC attachment.
type LinkNic struct {
	// If `true`, the volume is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The device index for the NIC attachment (between 1 and 7, both included).
	DeviceNumber *int32 `json:"DeviceNumber,omitempty"`
	// The ID of the NIC to attach.
	LinkNicId *string `json:"LinkNicId,omitempty"`
	// The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`).
	State *string `json:"State,omitempty"`
	// The account ID of the owner of the VM.
	VmAccountId *string `json:"VmAccountId,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
}

// NewLinkNic instantiates a new LinkNic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkNic() *LinkNic {
	this := LinkNic{}
	return &this
}

// NewLinkNicWithDefaults instantiates a new LinkNic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkNicWithDefaults() *LinkNic {
	this := LinkNic{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *LinkNic) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *LinkNic) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *LinkNic) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDeviceNumber returns the DeviceNumber field value if set, zero value otherwise.
func (o *LinkNic) GetDeviceNumber() int32 {
	if o == nil || o.DeviceNumber == nil {
		var ret int32
		return ret
	}
	return *o.DeviceNumber
}

// GetDeviceNumberOk returns a tuple with the DeviceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetDeviceNumberOk() (*int32, bool) {
	if o == nil || o.DeviceNumber == nil {
		return nil, false
	}
	return o.DeviceNumber, true
}

// HasDeviceNumber returns a boolean if a field has been set.
func (o *LinkNic) HasDeviceNumber() bool {
	if o != nil && o.DeviceNumber != nil {
		return true
	}

	return false
}

// SetDeviceNumber gets a reference to the given int32 and assigns it to the DeviceNumber field.
func (o *LinkNic) SetDeviceNumber(v int32) {
	o.DeviceNumber = &v
}

// GetLinkNicId returns the LinkNicId field value if set, zero value otherwise.
func (o *LinkNic) GetLinkNicId() string {
	if o == nil || o.LinkNicId == nil {
		var ret string
		return ret
	}
	return *o.LinkNicId
}

// GetLinkNicIdOk returns a tuple with the LinkNicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetLinkNicIdOk() (*string, bool) {
	if o == nil || o.LinkNicId == nil {
		return nil, false
	}
	return o.LinkNicId, true
}

// HasLinkNicId returns a boolean if a field has been set.
func (o *LinkNic) HasLinkNicId() bool {
	if o != nil && o.LinkNicId != nil {
		return true
	}

	return false
}

// SetLinkNicId gets a reference to the given string and assigns it to the LinkNicId field.
func (o *LinkNic) SetLinkNicId(v string) {
	o.LinkNicId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LinkNic) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LinkNic) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *LinkNic) SetState(v string) {
	o.State = &v
}

// GetVmAccountId returns the VmAccountId field value if set, zero value otherwise.
func (o *LinkNic) GetVmAccountId() string {
	if o == nil || o.VmAccountId == nil {
		var ret string
		return ret
	}
	return *o.VmAccountId
}

// GetVmAccountIdOk returns a tuple with the VmAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetVmAccountIdOk() (*string, bool) {
	if o == nil || o.VmAccountId == nil {
		return nil, false
	}
	return o.VmAccountId, true
}

// HasVmAccountId returns a boolean if a field has been set.
func (o *LinkNic) HasVmAccountId() bool {
	if o != nil && o.VmAccountId != nil {
		return true
	}

	return false
}

// SetVmAccountId gets a reference to the given string and assigns it to the VmAccountId field.
func (o *LinkNic) SetVmAccountId(v string) {
	o.VmAccountId = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *LinkNic) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNic) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *LinkNic) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *LinkNic) SetVmId(v string) {
	o.VmId = &v
}

func (o LinkNic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.DeviceNumber != nil {
		toSerialize["DeviceNumber"] = o.DeviceNumber
	}
	if o.LinkNicId != nil {
		toSerialize["LinkNicId"] = o.LinkNicId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.VmAccountId != nil {
		toSerialize["VmAccountId"] = o.VmAccountId
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkNic struct {
	value *LinkNic
	isSet bool
}

func (v NullableLinkNic) Get() *LinkNic {
	return v.value
}

func (v *NullableLinkNic) Set(val *LinkNic) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkNic) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkNic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkNic(val *LinkNic) *NullableLinkNic {
	return &NullableLinkNic{value: val, isSet: true}
}

func (v NullableLinkNic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkNic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkNicLight Information about the network interface card (NIC).
type LinkNicLight struct {
	// If `true`, the volume is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The device index for the NIC attachment (between 1 and 7, both included).
	DeviceNumber *int32 `json:"DeviceNumber,omitempty"`
	// The ID of the NIC to attach.
	LinkNicId *string `json:"LinkNicId,omitempty"`
	// The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`).
	State *string `json:"State,omitempty"`
}

// NewLinkNicLight instantiates a new LinkNicLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkNicLight() *LinkNicLight {
	this := LinkNicLight{}
	return &this
}

// NewLinkNicLightWithDefaults instantiates a new LinkNicLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkNicLightWithDefaults() *LinkNicLight {
	this := LinkNicLight{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *LinkNicLight) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicLight) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *LinkNicLight) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *LinkNicLight) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDeviceNumber returns the DeviceNumber field value if set, zero value otherwise.
func (o *LinkNicLight) GetDeviceNumber() int32 {
	if o == nil || o.DeviceNumber == nil {
		var ret int32
		return ret
	}
	return *o.DeviceNumber
}

// GetDeviceNumberOk returns a tuple with the DeviceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicLight) GetDeviceNumberOk() (*int32, bool) {
	if o == nil || o.DeviceNumber == nil {
		return nil, false
	}
	return o.DeviceNumber, true
}

// HasDeviceNumber returns a boolean if a field has been set.
func (o *LinkNicLight) HasDeviceNumber() bool {
	if o != nil && o.DeviceNumber != nil {
		return true
	}

	return false
}

// SetDeviceNumber gets a reference to the given int32 and assigns it to the DeviceNumber field.
func (o *LinkNicLight) SetDeviceNumber(v int32) {
	o.DeviceNumber = &v
}

// GetLinkNicId returns the LinkNicId field value if set, zero value otherwise.
func (o *LinkNicLight) GetLinkNicId() string {
	if o == nil || o.LinkNicId == nil {
		var ret string
		return ret
	}
	return *o.LinkNicId
}

// GetLinkNicIdOk returns a tuple with the LinkNicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicLight) GetLinkNicIdOk() (*string, bool) {
	if o == nil || o.LinkNicId == nil {
		return nil, false
	}
	return o.LinkNicId, true
}

// HasLinkNicId returns a boolean if a field has been set.
func (o *LinkNicLight) HasLinkNicId() bool {
	if o != nil && o.LinkNicId != nil {
		return true
	}

	return false
}

// SetLinkNicId gets a reference to the given string and assigns it to the LinkNicId field.
func (o *LinkNicLight) SetLinkNicId(v string) {
	o.LinkNicId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LinkNicLight) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicLight) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LinkNicLight) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *LinkNicLight) SetState(v string) {
	o.State = &v
}

func (o LinkNicLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.DeviceNumber != nil {
		toSerialize["DeviceNumber"] = o.DeviceNumber
	}
	if o.LinkNicId != nil {
		toSerialize["LinkNicId"] = o.LinkNicId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableLinkNicLight struct {
	value *LinkNicLight
	isSet bool
}

func (v NullableLinkNicLight) Get() *LinkNicLight {
	return v.value
}

func (v *NullableLinkNicLight) Set(val *LinkNicLight) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkNicLight) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkNicLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkNicLight(val *LinkNicLight) *NullableLinkNicLight {
	return &NullableLinkNicLight{value: val, isSet: true}
}

func (v NullableLinkNicLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkNicLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkNicRequest struct for LinkNicRequest
type LinkNicRequest struct {
	// The index of the VM device for the NIC attachment (between 1 and 7, both included).
	DeviceNumber int32 `json:"DeviceNumber"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the NIC you want to attach.
	NicId string `json:"NicId"`
	// The ID of the VM to which you want to attach the NIC.
	VmId string `json:"VmId"`
}

// NewLinkNicRequest instantiates a new LinkNicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkNicRequest(deviceNumber int32, nicId string, vmId string, ) *LinkNicRequest {
	this := LinkNicRequest{}
	this.DeviceNumber = deviceNumber
	this.NicId = nicId
	this.VmId = vmId
	return &this
}

// NewLinkNicRequestWithDefaults instantiates a new LinkNicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkNicRequestWithDefaults() *LinkNicRequest {
	this := LinkNicRequest{}
	return &this
}

// GetDeviceNumber returns the DeviceNumber field value
func (o *LinkNicRequest) GetDeviceNumber() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.DeviceNumber
}

// GetDeviceNumberOk returns a tuple with the DeviceNumber field value
// and a boolean to check if the value has been set.
func (o *LinkNicRequest) GetDeviceNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeviceNumber, true
}

// SetDeviceNumber sets field value
func (o *LinkNicRequest) SetDeviceNumber(v int32) {
	o.DeviceNumber = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNicId returns the NicId field value
func (o *LinkNicRequest) GetNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value
// and a boolean to check if the value has been set.
func (o *LinkNicRequest) GetNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NicId, true
}

// SetNicId sets field value
func (o *LinkNicRequest) SetNicId(v string) {
	o.NicId = v
}

// GetVmId returns the VmId field value
func (o *LinkNicRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *LinkNicRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *LinkNicRequest) SetVmId(v string) {
	o.VmId = v
}

func (o LinkNicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DeviceNumber"] = o.DeviceNumber
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NicId"] = o.NicId
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkNicRequest struct {
	value *LinkNicRequest
	isSet bool
}

func (v NullableLinkNicRequest) Get() *LinkNicRequest {
	return v.value
}

func (v *NullableLinkNicRequest) Set(val *LinkNicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkNicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkNicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkNicRequest(val *LinkNicRequest) *NullableLinkNicRequest {
	return &NullableLinkNicRequest{value: val, isSet: true}
}

func (v NullableLinkNicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkNicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkNicResponse struct for LinkNicResponse
type LinkNicResponse struct {
	// The ID of the NIC attachment.
	LinkNicId *string `json:"LinkNicId,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkNicResponse instantiates a new LinkNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkNicResponse() *LinkNicResponse {
	this := LinkNicResponse{}
	return &this
}

// NewLinkNicResponseWithDefaults instantiates a new LinkNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkNicResponseWithDefaults() *LinkNicResponse {
	this := LinkNicResponse{}
	return &this
}

// GetLinkNicId returns the LinkNicId field value if set, zero value otherwise.
func (o *LinkNicResponse) GetLinkNicId() string {
	if o == nil || o.LinkNicId == nil {
		var ret string
		return ret
	}
	return *o.LinkNicId
}

// GetLinkNicIdOk returns a tuple with the LinkNicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicResponse) GetLinkNicIdOk() (*string, bool) {
	if o == nil || o.LinkNicId == nil {
		return nil, false
	}
	return o.LinkNicId, true
}

// HasLinkNicId returns a boolean if a field has been set.
func (o *LinkNicResponse) HasLinkNicId() bool {
	if o != nil && o.LinkNicId != nil {
		return true
	}

	return false
}

// SetLinkNicId gets a reference to the given string and assigns it to the LinkNicId field.
func (o *LinkNicResponse) SetLinkNicId(v string) {
	o.LinkNicId = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkNicResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkNicResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkNicResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkNicId != nil {
		toSerialize["LinkNicId"] = o.LinkNicId
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkNicResponse struct {
	value *LinkNicResponse
	isSet bool
}

func (v NullableLinkNicResponse) Get() *LinkNicResponse {
	return v.value
}

func (v *NullableLinkNicResponse) Set(val *LinkNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkNicResponse(val *LinkNicResponse) *NullableLinkNicResponse {
	return &NullableLinkNicResponse{value: val, isSet: true}
}

func (v NullableLinkNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkNicToUpdate Information about the NIC attachment. If you are modifying the `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment.
type LinkNicToUpdate struct {
	// If `true`, the NIC is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The ID of the NIC attachment.
	LinkNicId *string `json:"LinkNicId,omitempty"`
}

// NewLinkNicToUpdate instantiates a new LinkNicToUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkNicToUpdate() *LinkNicToUpdate {
	this := LinkNicToUpdate{}
	return &this
}

// NewLinkNicToUpdateWithDefaults instantiates a new LinkNicToUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkNicToUpdateWithDefaults() *LinkNicToUpdate {
	this := LinkNicToUpdate{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *LinkNicToUpdate) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicToUpdate) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *LinkNicToUpdate) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *LinkNicToUpdate) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetLinkNicId returns the LinkNicId field value if set, zero value otherwise.
func (o *LinkNicToUpdate) GetLinkNicId() string {
	if o == nil || o.LinkNicId == nil {
		var ret string
		return ret
	}
	return *o.LinkNicId
}

// GetLinkNicIdOk returns a tuple with the LinkNicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkNicToUpdate) GetLinkNicIdOk() (*string, bool) {
	if o == nil || o.LinkNicId == nil {
		return nil, false
	}
	return o.LinkNicId, true
}

// HasLinkNicId returns a boolean if a field has been set.
func (o *LinkNicToUpdate) HasLinkNicId() bool {
	if o != nil && o.LinkNicId != nil {
		return true
	}

	return false
}

// SetLinkNicId gets a reference to the given string and assigns it to the LinkNicId field.
func (o *LinkNicToUpdate) SetLinkNicId(v string) {
	o.LinkNicId = &v
}

func (o LinkNicToUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.LinkNicId != nil {
		toSerialize["LinkNicId"] = o.LinkNicId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkNicToUpdate struct {
	value *LinkNicToUpdate
	isSet bool
}

func (v NullableLinkNicToUpdate) Get() *LinkNicToUpdate {
	return v.value
}

func (v *NullableLinkNicToUpdate) Set(val *LinkNicToUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkNicToUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkNicToUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkNicToUpdate(val *LinkNicToUpdate) *NullableLinkNicToUpdate {
	return &NullableLinkNicToUpdate{value: val, isSet: true}
}

func (v NullableLinkNicToUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkNicToUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPrivateIpsRequest struct for LinkPrivateIpsRequest
type LinkPrivateIpsRequest struct {
	// If `true`, allows an IP address that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified.
	AllowRelink *bool `json:"AllowRelink,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the NIC.
	NicId string `json:"NicId"`
	// The secondary private IP address or addresses you want to assign to the NIC within the IP address range of the Subnet.
	PrivateIps *[]string `json:"PrivateIps,omitempty"`
	// The number of secondary private IP addresses to assign to the NIC.
	SecondaryPrivateIpCount *int32 `json:"SecondaryPrivateIpCount,omitempty"`
}

// NewLinkPrivateIpsRequest instantiates a new LinkPrivateIpsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPrivateIpsRequest(nicId string, ) *LinkPrivateIpsRequest {
	this := LinkPrivateIpsRequest{}
	this.NicId = nicId
	return &this
}

// NewLinkPrivateIpsRequestWithDefaults instantiates a new LinkPrivateIpsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPrivateIpsRequestWithDefaults() *LinkPrivateIpsRequest {
	this := LinkPrivateIpsRequest{}
	return &this
}

// GetAllowRelink returns the AllowRelink field value if set, zero value otherwise.
func (o *LinkPrivateIpsRequest) GetAllowRelink() bool {
	if o == nil || o.AllowRelink == nil {
		var ret bool
		return ret
	}
	return *o.AllowRelink
}

// GetAllowRelinkOk returns a tuple with the AllowRelink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsRequest) GetAllowRelinkOk() (*bool, bool) {
	if o == nil || o.AllowRelink == nil {
		return nil, false
	}
	return o.AllowRelink, true
}

// HasAllowRelink returns a boolean if a field has been set.
func (o *LinkPrivateIpsRequest) HasAllowRelink() bool {
	if o != nil && o.AllowRelink != nil {
		return true
	}

	return false
}

// SetAllowRelink gets a reference to the given bool and assigns it to the AllowRelink field.
func (o *LinkPrivateIpsRequest) SetAllowRelink(v bool) {
	o.AllowRelink = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkPrivateIpsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkPrivateIpsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkPrivateIpsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNicId returns the NicId field value
func (o *LinkPrivateIpsRequest) GetNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsRequest) GetNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NicId, true
}

// SetNicId sets field value
func (o *LinkPrivateIpsRequest) SetNicId(v string) {
	o.NicId = v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *LinkPrivateIpsRequest) GetPrivateIps() []string {
	if o == nil || o.PrivateIps == nil {
		var ret []string
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsRequest) GetPrivateIpsOk() (*[]string, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *LinkPrivateIpsRequest) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []string and assigns it to the PrivateIps field.
func (o *LinkPrivateIpsRequest) SetPrivateIps(v []string) {
	o.PrivateIps = &v
}

// GetSecondaryPrivateIpCount returns the SecondaryPrivateIpCount field value if set, zero value otherwise.
func (o *LinkPrivateIpsRequest) GetSecondaryPrivateIpCount() int32 {
	if o == nil || o.SecondaryPrivateIpCount == nil {
		var ret int32
		return ret
	}
	return *o.SecondaryPrivateIpCount
}

// GetSecondaryPrivateIpCountOk returns a tuple with the SecondaryPrivateIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsRequest) GetSecondaryPrivateIpCountOk() (*int32, bool) {
	if o == nil || o.SecondaryPrivateIpCount == nil {
		return nil, false
	}
	return o.SecondaryPrivateIpCount, true
}

// HasSecondaryPrivateIpCount returns a boolean if a field has been set.
func (o *LinkPrivateIpsRequest) HasSecondaryPrivateIpCount() bool {
	if o != nil && o.SecondaryPrivateIpCount != nil {
		return true
	}

	return false
}

// SetSecondaryPrivateIpCount gets a reference to the given int32 and assigns it to the SecondaryPrivateIpCount field.
func (o *LinkPrivateIpsRequest) SetSecondaryPrivateIpCount(v int32) {
	o.SecondaryPrivateIpCount = &v
}

func (o LinkPrivateIpsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowRelink != nil {
		toSerialize["AllowRelink"] = o.AllowRelink
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecondaryPrivateIpCount != nil {
		toSerialize["SecondaryPrivateIpCount"] = o.SecondaryPrivateIpCount
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPrivateIpsRequest struct {
	value *LinkPrivateIpsRequest
	isSet bool
}

func (v NullableLinkPrivateIpsRequest) Get() *LinkPrivateIpsRequest {
	return v.value
}

func (v *NullableLinkPrivateIpsRequest) Set(val *LinkPrivateIpsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPrivateIpsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPrivateIpsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPrivateIpsRequest(val *LinkPrivateIpsRequest) *NullableLinkPrivateIpsRequest {
	return &NullableLinkPrivateIpsRequest{value: val, isSet: true}
}

func (v NullableLinkPrivateIpsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPrivateIpsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPrivateIpsResponse struct for LinkPrivateIpsResponse
type LinkPrivateIpsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkPrivateIpsResponse instantiates a new LinkPrivateIpsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPrivateIpsResponse() *LinkPrivateIpsResponse {
	this := LinkPrivateIpsResponse{}
	return &this
}

// NewLinkPrivateIpsResponseWithDefaults instantiates a new LinkPrivateIpsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPrivateIpsResponseWithDefaults() *LinkPrivateIpsResponse {
	this := LinkPrivateIpsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkPrivateIpsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPrivateIpsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkPrivateIpsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkPrivateIpsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkPrivateIpsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPrivateIpsResponse struct {
	value *LinkPrivateIpsResponse
	isSet bool
}

func (v NullableLinkPrivateIpsResponse) Get() *LinkPrivateIpsResponse {
	return v.value
}

func (v *NullableLinkPrivateIpsResponse) Set(val *LinkPrivateIpsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPrivateIpsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPrivateIpsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPrivateIpsResponse(val *LinkPrivateIpsResponse) *NullableLinkPrivateIpsResponse {
	return &NullableLinkPrivateIpsResponse{value: val, isSet: true}
}

func (v NullableLinkPrivateIpsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPrivateIpsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPublicIp Information about the EIP association.
type LinkPublicIp struct {
	// (Required in a Net) The ID representing the association of the EIP with the VM or the NIC.
	LinkPublicIpId *string `json:"LinkPublicIpId,omitempty"`
	// The name of the public DNS.
	PublicDnsName *string `json:"PublicDnsName,omitempty"`
	// The External IP address (EIP) associated with the NIC.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The account ID of the owner of the EIP.
	PublicIpAccountId *string `json:"PublicIpAccountId,omitempty"`
	// The allocation ID of the EIP.
	PublicIpId *string `json:"PublicIpId,omitempty"`
}

// NewLinkPublicIp instantiates a new LinkPublicIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPublicIp() *LinkPublicIp {
	this := LinkPublicIp{}
	return &this
}

// NewLinkPublicIpWithDefaults instantiates a new LinkPublicIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPublicIpWithDefaults() *LinkPublicIp {
	this := LinkPublicIp{}
	return &this
}

// GetLinkPublicIpId returns the LinkPublicIpId field value if set, zero value otherwise.
func (o *LinkPublicIp) GetLinkPublicIpId() string {
	if o == nil || o.LinkPublicIpId == nil {
		var ret string
		return ret
	}
	return *o.LinkPublicIpId
}

// GetLinkPublicIpIdOk returns a tuple with the LinkPublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIp) GetLinkPublicIpIdOk() (*string, bool) {
	if o == nil || o.LinkPublicIpId == nil {
		return nil, false
	}
	return o.LinkPublicIpId, true
}

// HasLinkPublicIpId returns a boolean if a field has been set.
func (o *LinkPublicIp) HasLinkPublicIpId() bool {
	if o != nil && o.LinkPublicIpId != nil {
		return true
	}

	return false
}

// SetLinkPublicIpId gets a reference to the given string and assigns it to the LinkPublicIpId field.
func (o *LinkPublicIp) SetLinkPublicIpId(v string) {
	o.LinkPublicIpId = &v
}

// GetPublicDnsName returns the PublicDnsName field value if set, zero value otherwise.
func (o *LinkPublicIp) GetPublicDnsName() string {
	if o == nil || o.PublicDnsName == nil {
		var ret string
		return ret
	}
	return *o.PublicDnsName
}

// GetPublicDnsNameOk returns a tuple with the PublicDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIp) GetPublicDnsNameOk() (*string, bool) {
	if o == nil || o.PublicDnsName == nil {
		return nil, false
	}
	return o.PublicDnsName, true
}

// HasPublicDnsName returns a boolean if a field has been set.
func (o *LinkPublicIp) HasPublicDnsName() bool {
	if o != nil && o.PublicDnsName != nil {
		return true
	}

	return false
}

// SetPublicDnsName gets a reference to the given string and assigns it to the PublicDnsName field.
func (o *LinkPublicIp) SetPublicDnsName(v string) {
	o.PublicDnsName = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *LinkPublicIp) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIp) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *LinkPublicIp) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *LinkPublicIp) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpAccountId returns the PublicIpAccountId field value if set, zero value otherwise.
func (o *LinkPublicIp) GetPublicIpAccountId() string {
	if o == nil || o.PublicIpAccountId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpAccountId
}

// GetPublicIpAccountIdOk returns a tuple with the PublicIpAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIp) GetPublicIpAccountIdOk() (*string, bool) {
	if o == nil || o.PublicIpAccountId == nil {
		return nil, false
	}
	return o.PublicIpAccountId, true
}

// HasPublicIpAccountId returns a boolean if a field has been set.
func (o *LinkPublicIp) HasPublicIpAccountId() bool {
	if o != nil && o.PublicIpAccountId != nil {
		return true
	}

	return false
}

// SetPublicIpAccountId gets a reference to the given string and assigns it to the PublicIpAccountId field.
func (o *LinkPublicIp) SetPublicIpAccountId(v string) {
	o.PublicIpAccountId = &v
}

// GetPublicIpId returns the PublicIpId field value if set, zero value otherwise.
func (o *LinkPublicIp) GetPublicIpId() string {
	if o == nil || o.PublicIpId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIp) GetPublicIpIdOk() (*string, bool) {
	if o == nil || o.PublicIpId == nil {
		return nil, false
	}
	return o.PublicIpId, true
}

// HasPublicIpId returns a boolean if a field has been set.
func (o *LinkPublicIp) HasPublicIpId() bool {
	if o != nil && o.PublicIpId != nil {
		return true
	}

	return false
}

// SetPublicIpId gets a reference to the given string and assigns it to the PublicIpId field.
func (o *LinkPublicIp) SetPublicIpId(v string) {
	o.PublicIpId = &v
}

func (o LinkPublicIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkPublicIpId != nil {
		toSerialize["LinkPublicIpId"] = o.LinkPublicIpId
	}
	if o.PublicDnsName != nil {
		toSerialize["PublicDnsName"] = o.PublicDnsName
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpAccountId != nil {
		toSerialize["PublicIpAccountId"] = o.PublicIpAccountId
	}
	if o.PublicIpId != nil {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPublicIp struct {
	value *LinkPublicIp
	isSet bool
}

func (v NullableLinkPublicIp) Get() *LinkPublicIp {
	return v.value
}

func (v *NullableLinkPublicIp) Set(val *LinkPublicIp) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPublicIp) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPublicIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPublicIp(val *LinkPublicIp) *NullableLinkPublicIp {
	return &NullableLinkPublicIp{value: val, isSet: true}
}

func (v NullableLinkPublicIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPublicIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPublicIpLightForVm Information about the EIP associated with the NIC.
type LinkPublicIpLightForVm struct {
	// The name of the public DNS.
	PublicDnsName *string `json:"PublicDnsName,omitempty"`
	// The External IP address (EIP) associated with the NIC.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The account ID of the owner of the EIP.
	PublicIpAccountId *string `json:"PublicIpAccountId,omitempty"`
}

// NewLinkPublicIpLightForVm instantiates a new LinkPublicIpLightForVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPublicIpLightForVm() *LinkPublicIpLightForVm {
	this := LinkPublicIpLightForVm{}
	return &this
}

// NewLinkPublicIpLightForVmWithDefaults instantiates a new LinkPublicIpLightForVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPublicIpLightForVmWithDefaults() *LinkPublicIpLightForVm {
	this := LinkPublicIpLightForVm{}
	return &this
}

// GetPublicDnsName returns the PublicDnsName field value if set, zero value otherwise.
func (o *LinkPublicIpLightForVm) GetPublicDnsName() string {
	if o == nil || o.PublicDnsName == nil {
		var ret string
		return ret
	}
	return *o.PublicDnsName
}

// GetPublicDnsNameOk returns a tuple with the PublicDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpLightForVm) GetPublicDnsNameOk() (*string, bool) {
	if o == nil || o.PublicDnsName == nil {
		return nil, false
	}
	return o.PublicDnsName, true
}

// HasPublicDnsName returns a boolean if a field has been set.
func (o *LinkPublicIpLightForVm) HasPublicDnsName() bool {
	if o != nil && o.PublicDnsName != nil {
		return true
	}

	return false
}

// SetPublicDnsName gets a reference to the given string and assigns it to the PublicDnsName field.
func (o *LinkPublicIpLightForVm) SetPublicDnsName(v string) {
	o.PublicDnsName = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *LinkPublicIpLightForVm) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpLightForVm) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *LinkPublicIpLightForVm) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *LinkPublicIpLightForVm) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpAccountId returns the PublicIpAccountId field value if set, zero value otherwise.
func (o *LinkPublicIpLightForVm) GetPublicIpAccountId() string {
	if o == nil || o.PublicIpAccountId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpAccountId
}

// GetPublicIpAccountIdOk returns a tuple with the PublicIpAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpLightForVm) GetPublicIpAccountIdOk() (*string, bool) {
	if o == nil || o.PublicIpAccountId == nil {
		return nil, false
	}
	return o.PublicIpAccountId, true
}

// HasPublicIpAccountId returns a boolean if a field has been set.
func (o *LinkPublicIpLightForVm) HasPublicIpAccountId() bool {
	if o != nil && o.PublicIpAccountId != nil {
		return true
	}

	return false
}

// SetPublicIpAccountId gets a reference to the given string and assigns it to the PublicIpAccountId field.
func (o *LinkPublicIpLightForVm) SetPublicIpAccountId(v string) {
	o.PublicIpAccountId = &v
}

func (o LinkPublicIpLightForVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicDnsName != nil {
		toSerialize["PublicDnsName"] = o.PublicDnsName
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpAccountId != nil {
		toSerialize["PublicIpAccountId"] = o.PublicIpAccountId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPublicIpLightForVm struct {
	value *LinkPublicIpLightForVm
	isSet bool
}

func (v NullableLinkPublicIpLightForVm) Get() *LinkPublicIpLightForVm {
	return v.value
}

func (v *NullableLinkPublicIpLightForVm) Set(val *LinkPublicIpLightForVm) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPublicIpLightForVm) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPublicIpLightForVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPublicIpLightForVm(val *LinkPublicIpLightForVm) *NullableLinkPublicIpLightForVm {
	return &NullableLinkPublicIpLightForVm{value: val, isSet: true}
}

func (v NullableLinkPublicIpLightForVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPublicIpLightForVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPublicIpRequest struct for LinkPublicIpRequest
type LinkPublicIpRequest struct {
	// - If `true`, allows the EIP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC.<br /> - If `false`, prevents the EIP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC.<br /><br />  (By default, `true` in the public Cloud, `false` in a Net.)
	AllowRelink *bool `json:"AllowRelink,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// (Net only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `VmId` parameter instead. You cannot specify both parameters at the same time.
	NicId *string `json:"NicId,omitempty"`
	// (Net only) The primary or secondary private IP address of the specified NIC. By default, the primary private IP address.
	PrivateIp *string `json:"PrivateIp,omitempty"`
	// The EIP. In the public Cloud, this parameter is required.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The allocation ID of the EIP. In a Net, this parameter is required.
	PublicIpId *string `json:"PublicIpId,omitempty"`
	// The ID of the VM.<br /> - In the public Cloud, this parameter is required.<br /> - In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `NicId` parameter instead. You cannot specify both parameters at the same time.
	VmId *string `json:"VmId,omitempty"`
}

// NewLinkPublicIpRequest instantiates a new LinkPublicIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPublicIpRequest() *LinkPublicIpRequest {
	this := LinkPublicIpRequest{}
	return &this
}

// NewLinkPublicIpRequestWithDefaults instantiates a new LinkPublicIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPublicIpRequestWithDefaults() *LinkPublicIpRequest {
	this := LinkPublicIpRequest{}
	return &this
}

// GetAllowRelink returns the AllowRelink field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetAllowRelink() bool {
	if o == nil || o.AllowRelink == nil {
		var ret bool
		return ret
	}
	return *o.AllowRelink
}

// GetAllowRelinkOk returns a tuple with the AllowRelink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetAllowRelinkOk() (*bool, bool) {
	if o == nil || o.AllowRelink == nil {
		return nil, false
	}
	return o.AllowRelink, true
}

// HasAllowRelink returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasAllowRelink() bool {
	if o != nil && o.AllowRelink != nil {
		return true
	}

	return false
}

// SetAllowRelink gets a reference to the given bool and assigns it to the AllowRelink field.
func (o *LinkPublicIpRequest) SetAllowRelink(v bool) {
	o.AllowRelink = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkPublicIpRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *LinkPublicIpRequest) SetNicId(v string) {
	o.NicId = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *LinkPublicIpRequest) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *LinkPublicIpRequest) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpId returns the PublicIpId field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetPublicIpId() string {
	if o == nil || o.PublicIpId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetPublicIpIdOk() (*string, bool) {
	if o == nil || o.PublicIpId == nil {
		return nil, false
	}
	return o.PublicIpId, true
}

// HasPublicIpId returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasPublicIpId() bool {
	if o != nil && o.PublicIpId != nil {
		return true
	}

	return false
}

// SetPublicIpId gets a reference to the given string and assigns it to the PublicIpId field.
func (o *LinkPublicIpRequest) SetPublicIpId(v string) {
	o.PublicIpId = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *LinkPublicIpRequest) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpRequest) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *LinkPublicIpRequest) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *LinkPublicIpRequest) SetVmId(v string) {
	o.VmId = &v
}

func (o LinkPublicIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowRelink != nil {
		toSerialize["AllowRelink"] = o.AllowRelink
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpId != nil {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPublicIpRequest struct {
	value *LinkPublicIpRequest
	isSet bool
}

func (v NullableLinkPublicIpRequest) Get() *LinkPublicIpRequest {
	return v.value
}

func (v *NullableLinkPublicIpRequest) Set(val *LinkPublicIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPublicIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPublicIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPublicIpRequest(val *LinkPublicIpRequest) *NullableLinkPublicIpRequest {
	return &NullableLinkPublicIpRequest{value: val, isSet: true}
}

func (v NullableLinkPublicIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPublicIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkPublicIpResponse struct for LinkPublicIpResponse
type LinkPublicIpResponse struct {
	// (Net only) The ID representing the association of the EIP with the VM or the NIC.
	LinkPublicIpId *string `json:"LinkPublicIpId,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkPublicIpResponse instantiates a new LinkPublicIpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPublicIpResponse() *LinkPublicIpResponse {
	this := LinkPublicIpResponse{}
	return &this
}

// NewLinkPublicIpResponseWithDefaults instantiates a new LinkPublicIpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPublicIpResponseWithDefaults() *LinkPublicIpResponse {
	this := LinkPublicIpResponse{}
	return &this
}

// GetLinkPublicIpId returns the LinkPublicIpId field value if set, zero value otherwise.
func (o *LinkPublicIpResponse) GetLinkPublicIpId() string {
	if o == nil || o.LinkPublicIpId == nil {
		var ret string
		return ret
	}
	return *o.LinkPublicIpId
}

// GetLinkPublicIpIdOk returns a tuple with the LinkPublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpResponse) GetLinkPublicIpIdOk() (*string, bool) {
	if o == nil || o.LinkPublicIpId == nil {
		return nil, false
	}
	return o.LinkPublicIpId, true
}

// HasLinkPublicIpId returns a boolean if a field has been set.
func (o *LinkPublicIpResponse) HasLinkPublicIpId() bool {
	if o != nil && o.LinkPublicIpId != nil {
		return true
	}

	return false
}

// SetLinkPublicIpId gets a reference to the given string and assigns it to the LinkPublicIpId field.
func (o *LinkPublicIpResponse) SetLinkPublicIpId(v string) {
	o.LinkPublicIpId = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkPublicIpResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPublicIpResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkPublicIpResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkPublicIpResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkPublicIpResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkPublicIpId != nil {
		toSerialize["LinkPublicIpId"] = o.LinkPublicIpId
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkPublicIpResponse struct {
	value *LinkPublicIpResponse
	isSet bool
}

func (v NullableLinkPublicIpResponse) Get() *LinkPublicIpResponse {
	return v.value
}

func (v *NullableLinkPublicIpResponse) Set(val *LinkPublicIpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPublicIpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPublicIpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPublicIpResponse(val *LinkPublicIpResponse) *NullableLinkPublicIpResponse {
	return &NullableLinkPublicIpResponse{value: val, isSet: true}
}

func (v NullableLinkPublicIpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPublicIpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkRouteTable One or more associations between the route table and the Subnets.
type LinkRouteTable struct {
	// The ID of the association between the route table and the Subnet.
	LinkRouteTableId *string `json:"LinkRouteTableId,omitempty"`
	// If `true`, the route table is the main one.
	Main *bool `json:"Main,omitempty"`
	// The ID of the route table.
	RouteTableId *string `json:"RouteTableId,omitempty"`
	// The ID of the Subnet.
	SubnetId *string `json:"SubnetId,omitempty"`
}

// NewLinkRouteTable instantiates a new LinkRouteTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkRouteTable() *LinkRouteTable {
	this := LinkRouteTable{}
	return &this
}

// NewLinkRouteTableWithDefaults instantiates a new LinkRouteTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkRouteTableWithDefaults() *LinkRouteTable {
	this := LinkRouteTable{}
	return &this
}

// GetLinkRouteTableId returns the LinkRouteTableId field value if set, zero value otherwise.
func (o *LinkRouteTable) GetLinkRouteTableId() string {
	if o == nil || o.LinkRouteTableId == nil {
		var ret string
		return ret
	}
	return *o.LinkRouteTableId
}

// GetLinkRouteTableIdOk returns a tuple with the LinkRouteTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTable) GetLinkRouteTableIdOk() (*string, bool) {
	if o == nil || o.LinkRouteTableId == nil {
		return nil, false
	}
	return o.LinkRouteTableId, true
}

// HasLinkRouteTableId returns a boolean if a field has been set.
func (o *LinkRouteTable) HasLinkRouteTableId() bool {
	if o != nil && o.LinkRouteTableId != nil {
		return true
	}

	return false
}

// SetLinkRouteTableId gets a reference to the given string and assigns it to the LinkRouteTableId field.
func (o *LinkRouteTable) SetLinkRouteTableId(v string) {
	o.LinkRouteTableId = &v
}

// GetMain returns the Main field value if set, zero value otherwise.
func (o *LinkRouteTable) GetMain() bool {
	if o == nil || o.Main == nil {
		var ret bool
		return ret
	}
	return *o.Main
}

// GetMainOk returns a tuple with the Main field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTable) GetMainOk() (*bool, bool) {
	if o == nil || o.Main == nil {
		return nil, false
	}
	return o.Main, true
}

// HasMain returns a boolean if a field has been set.
func (o *LinkRouteTable) HasMain() bool {
	if o != nil && o.Main != nil {
		return true
	}

	return false
}

// SetMain gets a reference to the given bool and assigns it to the Main field.
func (o *LinkRouteTable) SetMain(v bool) {
	o.Main = &v
}

// GetRouteTableId returns the RouteTableId field value if set, zero value otherwise.
func (o *LinkRouteTable) GetRouteTableId() string {
	if o == nil || o.RouteTableId == nil {
		var ret string
		return ret
	}
	return *o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTable) GetRouteTableIdOk() (*string, bool) {
	if o == nil || o.RouteTableId == nil {
		return nil, false
	}
	return o.RouteTableId, true
}

// HasRouteTableId returns a boolean if a field has been set.
func (o *LinkRouteTable) HasRouteTableId() bool {
	if o != nil && o.RouteTableId != nil {
		return true
	}

	return false
}

// SetRouteTableId gets a reference to the given string and assigns it to the RouteTableId field.
func (o *LinkRouteTable) SetRouteTableId(v string) {
	o.RouteTableId = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *LinkRouteTable) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTable) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *LinkRouteTable) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *LinkRouteTable) SetSubnetId(v string) {
	o.SubnetId = &v
}

func (o LinkRouteTable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkRouteTableId != nil {
		toSerialize["LinkRouteTableId"] = o.LinkRouteTableId
	}
	if o.Main != nil {
		toSerialize["Main"] = o.Main
	}
	if o.RouteTableId != nil {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkRouteTable struct {
	value *LinkRouteTable
	isSet bool
}

func (v NullableLinkRouteTable) Get() *LinkRouteTable {
	return v.value
}

func (v *NullableLinkRouteTable) Set(val *LinkRouteTable) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkRouteTable) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkRouteTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkRouteTable(val *LinkRouteTable) *NullableLinkRouteTable {
	return &NullableLinkRouteTable{value: val, isSet: true}
}

func (v NullableLinkRouteTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkRouteTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkRouteTableRequest struct for LinkRouteTableRequest
type LinkRouteTableRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the route table.
	RouteTableId string `json:"RouteTableId"`
	// The ID of the Subnet.
	SubnetId string `json:"SubnetId"`
}

// NewLinkRouteTableRequest instantiates a new LinkRouteTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkRouteTableRequest(routeTableId string, subnetId string, ) *LinkRouteTableRequest {
	this := LinkRouteTableRequest{}
	this.RouteTableId = routeTableId
	this.SubnetId = subnetId
	return &this
}

// NewLinkRouteTableRequestWithDefaults instantiates a new LinkRouteTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkRouteTableRequestWithDefaults() *LinkRouteTableRequest {
	this := LinkRouteTableRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkRouteTableRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTableRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkRouteTableRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkRouteTableRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetRouteTableId returns the RouteTableId field value
func (o *LinkRouteTableRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *LinkRouteTableRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *LinkRouteTableRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

// GetSubnetId returns the SubnetId field value
func (o *LinkRouteTableRequest) GetSubnetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *LinkRouteTableRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *LinkRouteTableRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o LinkRouteTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if true {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkRouteTableRequest struct {
	value *LinkRouteTableRequest
	isSet bool
}

func (v NullableLinkRouteTableRequest) Get() *LinkRouteTableRequest {
	return v.value
}

func (v *NullableLinkRouteTableRequest) Set(val *LinkRouteTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkRouteTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkRouteTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkRouteTableRequest(val *LinkRouteTableRequest) *NullableLinkRouteTableRequest {
	return &NullableLinkRouteTableRequest{value: val, isSet: true}
}

func (v NullableLinkRouteTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkRouteTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkRouteTableResponse struct for LinkRouteTableResponse
type LinkRouteTableResponse struct {
	// The ID of the association between the route table and the Subnet.
	LinkRouteTableId *string `json:"LinkRouteTableId,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkRouteTableResponse instantiates a new LinkRouteTableResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkRouteTableResponse() *LinkRouteTableResponse {
	this := LinkRouteTableResponse{}
	return &this
}

// NewLinkRouteTableResponseWithDefaults instantiates a new LinkRouteTableResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkRouteTableResponseWithDefaults() *LinkRouteTableResponse {
	this := LinkRouteTableResponse{}
	return &this
}

// GetLinkRouteTableId returns the LinkRouteTableId field value if set, zero value otherwise.
func (o *LinkRouteTableResponse) GetLinkRouteTableId() string {
	if o == nil || o.LinkRouteTableId == nil {
		var ret string
		return ret
	}
	return *o.LinkRouteTableId
}

// GetLinkRouteTableIdOk returns a tuple with the LinkRouteTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTableResponse) GetLinkRouteTableIdOk() (*string, bool) {
	if o == nil || o.LinkRouteTableId == nil {
		return nil, false
	}
	return o.LinkRouteTableId, true
}

// HasLinkRouteTableId returns a boolean if a field has been set.
func (o *LinkRouteTableResponse) HasLinkRouteTableId() bool {
	if o != nil && o.LinkRouteTableId != nil {
		return true
	}

	return false
}

// SetLinkRouteTableId gets a reference to the given string and assigns it to the LinkRouteTableId field.
func (o *LinkRouteTableResponse) SetLinkRouteTableId(v string) {
	o.LinkRouteTableId = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkRouteTableResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkRouteTableResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkRouteTableResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkRouteTableResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkRouteTableResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkRouteTableId != nil {
		toSerialize["LinkRouteTableId"] = o.LinkRouteTableId
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkRouteTableResponse struct {
	value *LinkRouteTableResponse
	isSet bool
}

func (v NullableLinkRouteTableResponse) Get() *LinkRouteTableResponse {
	return v.value
}

func (v *NullableLinkRouteTableResponse) Set(val *LinkRouteTableResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkRouteTableResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkRouteTableResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkRouteTableResponse(val *LinkRouteTableResponse) *NullableLinkRouteTableResponse {
	return &NullableLinkRouteTableResponse{value: val, isSet: true}
}

func (v NullableLinkRouteTableResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkRouteTableResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkVirtualGatewayRequest struct for LinkVirtualGatewayRequest
type LinkVirtualGatewayRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net to which you want to attach the virtual gateway.
	NetId string `json:"NetId"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// NewLinkVirtualGatewayRequest instantiates a new LinkVirtualGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkVirtualGatewayRequest(netId string, virtualGatewayId string, ) *LinkVirtualGatewayRequest {
	this := LinkVirtualGatewayRequest{}
	this.NetId = netId
	this.VirtualGatewayId = virtualGatewayId
	return &this
}

// NewLinkVirtualGatewayRequestWithDefaults instantiates a new LinkVirtualGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkVirtualGatewayRequestWithDefaults() *LinkVirtualGatewayRequest {
	this := LinkVirtualGatewayRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkVirtualGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkVirtualGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkVirtualGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkVirtualGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *LinkVirtualGatewayRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *LinkVirtualGatewayRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *LinkVirtualGatewayRequest) SetNetId(v string) {
	o.NetId = v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *LinkVirtualGatewayRequest) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *LinkVirtualGatewayRequest) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *LinkVirtualGatewayRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

func (o LinkVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkVirtualGatewayRequest struct {
	value *LinkVirtualGatewayRequest
	isSet bool
}

func (v NullableLinkVirtualGatewayRequest) Get() *LinkVirtualGatewayRequest {
	return v.value
}

func (v *NullableLinkVirtualGatewayRequest) Set(val *LinkVirtualGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkVirtualGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkVirtualGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkVirtualGatewayRequest(val *LinkVirtualGatewayRequest) *NullableLinkVirtualGatewayRequest {
	return &NullableLinkVirtualGatewayRequest{value: val, isSet: true}
}

func (v NullableLinkVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkVirtualGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkVirtualGatewayResponse struct for LinkVirtualGatewayResponse
type LinkVirtualGatewayResponse struct {
	NetToVirtualGatewayLink *NetToVirtualGatewayLink `json:"NetToVirtualGatewayLink,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkVirtualGatewayResponse instantiates a new LinkVirtualGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkVirtualGatewayResponse() *LinkVirtualGatewayResponse {
	this := LinkVirtualGatewayResponse{}
	return &this
}

// NewLinkVirtualGatewayResponseWithDefaults instantiates a new LinkVirtualGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkVirtualGatewayResponseWithDefaults() *LinkVirtualGatewayResponse {
	this := LinkVirtualGatewayResponse{}
	return &this
}

// GetNetToVirtualGatewayLink returns the NetToVirtualGatewayLink field value if set, zero value otherwise.
func (o *LinkVirtualGatewayResponse) GetNetToVirtualGatewayLink() NetToVirtualGatewayLink {
	if o == nil || o.NetToVirtualGatewayLink == nil {
		var ret NetToVirtualGatewayLink
		return ret
	}
	return *o.NetToVirtualGatewayLink
}

// GetNetToVirtualGatewayLinkOk returns a tuple with the NetToVirtualGatewayLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkVirtualGatewayResponse) GetNetToVirtualGatewayLinkOk() (*NetToVirtualGatewayLink, bool) {
	if o == nil || o.NetToVirtualGatewayLink == nil {
		return nil, false
	}
	return o.NetToVirtualGatewayLink, true
}

// HasNetToVirtualGatewayLink returns a boolean if a field has been set.
func (o *LinkVirtualGatewayResponse) HasNetToVirtualGatewayLink() bool {
	if o != nil && o.NetToVirtualGatewayLink != nil {
		return true
	}

	return false
}

// SetNetToVirtualGatewayLink gets a reference to the given NetToVirtualGatewayLink and assigns it to the NetToVirtualGatewayLink field.
func (o *LinkVirtualGatewayResponse) SetNetToVirtualGatewayLink(v NetToVirtualGatewayLink) {
	o.NetToVirtualGatewayLink = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkVirtualGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkVirtualGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkVirtualGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkVirtualGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetToVirtualGatewayLink != nil {
		toSerialize["NetToVirtualGatewayLink"] = o.NetToVirtualGatewayLink
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkVirtualGatewayResponse struct {
	value *LinkVirtualGatewayResponse
	isSet bool
}

func (v NullableLinkVirtualGatewayResponse) Get() *LinkVirtualGatewayResponse {
	return v.value
}

func (v *NullableLinkVirtualGatewayResponse) Set(val *LinkVirtualGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkVirtualGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkVirtualGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkVirtualGatewayResponse(val *LinkVirtualGatewayResponse) *NullableLinkVirtualGatewayResponse {
	return &NullableLinkVirtualGatewayResponse{value: val, isSet: true}
}

func (v NullableLinkVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkVirtualGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkVolumeRequest struct for LinkVolumeRequest
type LinkVolumeRequest struct {
	// The name of the device.
	DeviceName string `json:"DeviceName"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the VM you want to attach the volume to.
	VmId string `json:"VmId"`
	// The ID of the volume you want to attach.
	VolumeId string `json:"VolumeId"`
}

// NewLinkVolumeRequest instantiates a new LinkVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkVolumeRequest(deviceName string, vmId string, volumeId string, ) *LinkVolumeRequest {
	this := LinkVolumeRequest{}
	this.DeviceName = deviceName
	this.VmId = vmId
	this.VolumeId = volumeId
	return &this
}

// NewLinkVolumeRequestWithDefaults instantiates a new LinkVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkVolumeRequestWithDefaults() *LinkVolumeRequest {
	this := LinkVolumeRequest{}
	return &this
}

// GetDeviceName returns the DeviceName field value
func (o *LinkVolumeRequest) GetDeviceName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value
// and a boolean to check if the value has been set.
func (o *LinkVolumeRequest) GetDeviceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeviceName, true
}

// SetDeviceName sets field value
func (o *LinkVolumeRequest) SetDeviceName(v string) {
	o.DeviceName = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *LinkVolumeRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkVolumeRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *LinkVolumeRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *LinkVolumeRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmId returns the VmId field value
func (o *LinkVolumeRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *LinkVolumeRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *LinkVolumeRequest) SetVmId(v string) {
	o.VmId = v
}

// GetVolumeId returns the VolumeId field value
func (o *LinkVolumeRequest) GetVolumeId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *LinkVolumeRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *LinkVolumeRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o LinkVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	if true {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkVolumeRequest struct {
	value *LinkVolumeRequest
	isSet bool
}

func (v NullableLinkVolumeRequest) Get() *LinkVolumeRequest {
	return v.value
}

func (v *NullableLinkVolumeRequest) Set(val *LinkVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkVolumeRequest(val *LinkVolumeRequest) *NullableLinkVolumeRequest {
	return &NullableLinkVolumeRequest{value: val, isSet: true}
}

func (v NullableLinkVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkVolumeResponse struct for LinkVolumeResponse
type LinkVolumeResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewLinkVolumeResponse instantiates a new LinkVolumeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkVolumeResponse() *LinkVolumeResponse {
	this := LinkVolumeResponse{}
	return &this
}

// NewLinkVolumeResponseWithDefaults instantiates a new LinkVolumeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkVolumeResponseWithDefaults() *LinkVolumeResponse {
	this := LinkVolumeResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *LinkVolumeResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkVolumeResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *LinkVolumeResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *LinkVolumeResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o LinkVolumeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableLinkVolumeResponse struct {
	value *LinkVolumeResponse
	isSet bool
}

func (v NullableLinkVolumeResponse) Get() *LinkVolumeResponse {
	return v.value
}

func (v *NullableLinkVolumeResponse) Set(val *LinkVolumeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkVolumeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkVolumeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkVolumeResponse(val *LinkVolumeResponse) *NullableLinkVolumeResponse {
	return &NullableLinkVolumeResponse{value: val, isSet: true}
}

func (v NullableLinkVolumeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkVolumeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LinkedVolume Information about volume attachment.
type LinkedVolume struct {
	// If `true`, the volume is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The name of the device.
	DeviceName *string `json:"DeviceName,omitempty"`
	// The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`).
	State *string `json:"State,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
	// The ID of the volume.
	VolumeId *string `json:"VolumeId,omitempty"`
}

// NewLinkedVolume instantiates a new LinkedVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedVolume() *LinkedVolume {
	this := LinkedVolume{}
	return &this
}

// NewLinkedVolumeWithDefaults instantiates a new LinkedVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedVolumeWithDefaults() *LinkedVolume {
	this := LinkedVolume{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *LinkedVolume) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedVolume) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *LinkedVolume) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *LinkedVolume) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *LinkedVolume) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedVolume) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *LinkedVolume) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *LinkedVolume) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LinkedVolume) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedVolume) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LinkedVolume) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *LinkedVolume) SetState(v string) {
	o.State = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *LinkedVolume) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedVolume) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *LinkedVolume) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *LinkedVolume) SetVmId(v string) {
	o.VmId = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *LinkedVolume) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedVolume) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *LinkedVolume) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *LinkedVolume) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o LinkedVolume) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.DeviceName != nil {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableLinkedVolume struct {
	value *LinkedVolume
	isSet bool
}

func (v NullableLinkedVolume) Get() *LinkedVolume {
	return v.value
}

func (v *NullableLinkedVolume) Set(val *LinkedVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedVolume(val *LinkedVolume) *NullableLinkedVolume {
	return &NullableLinkedVolume{value: val, isSet: true}
}

func (v NullableLinkedVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Listener Information about the listener.
type Listener struct {
	// The port on which the back-end VM is listening (between `1` and `65535`, both included).
	BackendPort *int32 `json:"BackendPort,omitempty"`
	// The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL` \\| `UDP`).
	BackendProtocol *string `json:"BackendProtocol,omitempty"`
	// The port on which the load balancer is listening (between 1 and `65535`, both included).
	LoadBalancerPort *int32 `json:"LoadBalancerPort,omitempty"`
	// The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL` \\| `UDP`).
	LoadBalancerProtocol *string `json:"LoadBalancerProtocol,omitempty"`
	// The names of the policies. If there are no policies enabled, the list is empty.
	PolicyNames *[]string `json:"PolicyNames,omitempty"`
	// The ID of the server certificate.
	ServerCertificateId *string `json:"ServerCertificateId,omitempty"`
}

// NewListener instantiates a new Listener object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListener() *Listener {
	this := Listener{}
	return &this
}

// NewListenerWithDefaults instantiates a new Listener object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerWithDefaults() *Listener {
	this := Listener{}
	return &this
}

// GetBackendPort returns the BackendPort field value if set, zero value otherwise.
func (o *Listener) GetBackendPort() int32 {
	if o == nil || o.BackendPort == nil {
		var ret int32
		return ret
	}
	return *o.BackendPort
}

// GetBackendPortOk returns a tuple with the BackendPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetBackendPortOk() (*int32, bool) {
	if o == nil || o.BackendPort == nil {
		return nil, false
	}
	return o.BackendPort, true
}

// HasBackendPort returns a boolean if a field has been set.
func (o *Listener) HasBackendPort() bool {
	if o != nil && o.BackendPort != nil {
		return true
	}

	return false
}

// SetBackendPort gets a reference to the given int32 and assigns it to the BackendPort field.
func (o *Listener) SetBackendPort(v int32) {
	o.BackendPort = &v
}

// GetBackendProtocol returns the BackendProtocol field value if set, zero value otherwise.
func (o *Listener) GetBackendProtocol() string {
	if o == nil || o.BackendProtocol == nil {
		var ret string
		return ret
	}
	return *o.BackendProtocol
}

// GetBackendProtocolOk returns a tuple with the BackendProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetBackendProtocolOk() (*string, bool) {
	if o == nil || o.BackendProtocol == nil {
		return nil, false
	}
	return o.BackendProtocol, true
}

// HasBackendProtocol returns a boolean if a field has been set.
func (o *Listener) HasBackendProtocol() bool {
	if o != nil && o.BackendProtocol != nil {
		return true
	}

	return false
}

// SetBackendProtocol gets a reference to the given string and assigns it to the BackendProtocol field.
func (o *Listener) SetBackendProtocol(v string) {
	o.BackendProtocol = &v
}

// GetLoadBalancerPort returns the LoadBalancerPort field value if set, zero value otherwise.
func (o *Listener) GetLoadBalancerPort() int32 {
	if o == nil || o.LoadBalancerPort == nil {
		var ret int32
		return ret
	}
	return *o.LoadBalancerPort
}

// GetLoadBalancerPortOk returns a tuple with the LoadBalancerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetLoadBalancerPortOk() (*int32, bool) {
	if o == nil || o.LoadBalancerPort == nil {
		return nil, false
	}
	return o.LoadBalancerPort, true
}

// HasLoadBalancerPort returns a boolean if a field has been set.
func (o *Listener) HasLoadBalancerPort() bool {
	if o != nil && o.LoadBalancerPort != nil {
		return true
	}

	return false
}

// SetLoadBalancerPort gets a reference to the given int32 and assigns it to the LoadBalancerPort field.
func (o *Listener) SetLoadBalancerPort(v int32) {
	o.LoadBalancerPort = &v
}

// GetLoadBalancerProtocol returns the LoadBalancerProtocol field value if set, zero value otherwise.
func (o *Listener) GetLoadBalancerProtocol() string {
	if o == nil || o.LoadBalancerProtocol == nil {
		var ret string
		return ret
	}
	return *o.LoadBalancerProtocol
}

// GetLoadBalancerProtocolOk returns a tuple with the LoadBalancerProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetLoadBalancerProtocolOk() (*string, bool) {
	if o == nil || o.LoadBalancerProtocol == nil {
		return nil, false
	}
	return o.LoadBalancerProtocol, true
}

// HasLoadBalancerProtocol returns a boolean if a field has been set.
func (o *Listener) HasLoadBalancerProtocol() bool {
	if o != nil && o.LoadBalancerProtocol != nil {
		return true
	}

	return false
}

// SetLoadBalancerProtocol gets a reference to the given string and assigns it to the LoadBalancerProtocol field.
func (o *Listener) SetLoadBalancerProtocol(v string) {
	o.LoadBalancerProtocol = &v
}

// GetPolicyNames returns the PolicyNames field value if set, zero value otherwise.
func (o *Listener) GetPolicyNames() []string {
	if o == nil || o.PolicyNames == nil {
		var ret []string
		return ret
	}
	return *o.PolicyNames
}

// GetPolicyNamesOk returns a tuple with the PolicyNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetPolicyNamesOk() (*[]string, bool) {
	if o == nil || o.PolicyNames == nil {
		return nil, false
	}
	return o.PolicyNames, true
}

// HasPolicyNames returns a boolean if a field has been set.
func (o *Listener) HasPolicyNames() bool {
	if o != nil && o.PolicyNames != nil {
		return true
	}

	return false
}

// SetPolicyNames gets a reference to the given []string and assigns it to the PolicyNames field.
func (o *Listener) SetPolicyNames(v []string) {
	o.PolicyNames = &v
}

// GetServerCertificateId returns the ServerCertificateId field value if set, zero value otherwise.
func (o *Listener) GetServerCertificateId() string {
	if o == nil || o.ServerCertificateId == nil {
		var ret string
		return ret
	}
	return *o.ServerCertificateId
}

// GetServerCertificateIdOk returns a tuple with the ServerCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Listener) GetServerCertificateIdOk() (*string, bool) {
	if o == nil || o.ServerCertificateId == nil {
		return nil, false
	}
	return o.ServerCertificateId, true
}

// HasServerCertificateId returns a boolean if a field has been set.
func (o *Listener) HasServerCertificateId() bool {
	if o != nil && o.ServerCertificateId != nil {
		return true
	}

	return false
}

// SetServerCertificateId gets a reference to the given string and assigns it to the ServerCertificateId field.
func (o *Listener) SetServerCertificateId(v string) {
	o.ServerCertificateId = &v
}

func (o Listener) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackendPort != nil {
		toSerialize["BackendPort"] = o.BackendPort
	}
	if o.BackendProtocol != nil {
		toSerialize["BackendProtocol"] = o.BackendProtocol
	}
	if o.LoadBalancerPort != nil {
		toSerialize["LoadBalancerPort"] = o.LoadBalancerPort
	}
	if o.LoadBalancerProtocol != nil {
		toSerialize["LoadBalancerProtocol"] = o.LoadBalancerProtocol
	}
	if o.PolicyNames != nil {
		toSerialize["PolicyNames"] = o.PolicyNames
	}
	if o.ServerCertificateId != nil {
		toSerialize["ServerCertificateId"] = o.ServerCertificateId
	}
	return json.Marshal(toSerialize)
}

type NullableListener struct {
	value *Listener
	isSet bool
}

func (v NullableListener) Get() *Listener {
	return v.value
}

func (v *NullableListener) Set(val *Listener) {
	v.value = val
	v.isSet = true
}

func (v NullableListener) IsSet() bool {
	return v.isSet
}

func (v *NullableListener) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListener(val *Listener) *NullableListener {
	return &NullableListener{value: val, isSet: true}
}

func (v NullableListener) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListener) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ListenerForCreation Information about the listener to create.
type ListenerForCreation struct {
	// The port on which the back-end VM is listening (between `1` and `65535`, both included).
	BackendPort int32 `json:"BackendPort"`
	// The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL` \\| `UDP`).
	BackendProtocol *string `json:"BackendProtocol,omitempty"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort int32 `json:"LoadBalancerPort"`
	// The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL` \\| `UDP`).
	LoadBalancerProtocol string `json:"LoadBalancerProtocol"`
	// The ID of the server certificate.
	ServerCertificateId *string `json:"ServerCertificateId,omitempty"`
}

// NewListenerForCreation instantiates a new ListenerForCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerForCreation(backendPort int32, loadBalancerPort int32, loadBalancerProtocol string, ) *ListenerForCreation {
	this := ListenerForCreation{}
	this.BackendPort = backendPort
	this.LoadBalancerPort = loadBalancerPort
	this.LoadBalancerProtocol = loadBalancerProtocol
	return &this
}

// NewListenerForCreationWithDefaults instantiates a new ListenerForCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerForCreationWithDefaults() *ListenerForCreation {
	this := ListenerForCreation{}
	return &this
}

// GetBackendPort returns the BackendPort field value
func (o *ListenerForCreation) GetBackendPort() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.BackendPort
}

// GetBackendPortOk returns a tuple with the BackendPort field value
// and a boolean to check if the value has been set.
func (o *ListenerForCreation) GetBackendPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackendPort, true
}

// SetBackendPort sets field value
func (o *ListenerForCreation) SetBackendPort(v int32) {
	o.BackendPort = v
}

// GetBackendProtocol returns the BackendProtocol field value if set, zero value otherwise.
func (o *ListenerForCreation) GetBackendProtocol() string {
	if o == nil || o.BackendProtocol == nil {
		var ret string
		return ret
	}
	return *o.BackendProtocol
}

// GetBackendProtocolOk returns a tuple with the BackendProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerForCreation) GetBackendProtocolOk() (*string, bool) {
	if o == nil || o.BackendProtocol == nil {
		return nil, false
	}
	return o.BackendProtocol, true
}

// HasBackendProtocol returns a boolean if a field has been set.
func (o *ListenerForCreation) HasBackendProtocol() bool {
	if o != nil && o.BackendProtocol != nil {
		return true
	}

	return false
}

// SetBackendProtocol gets a reference to the given string and assigns it to the BackendProtocol field.
func (o *ListenerForCreation) SetBackendProtocol(v string) {
	o.BackendProtocol = &v
}

// GetLoadBalancerPort returns the LoadBalancerPort field value
func (o *ListenerForCreation) GetLoadBalancerPort() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.LoadBalancerPort
}

// GetLoadBalancerPortOk returns a tuple with the LoadBalancerPort field value
// and a boolean to check if the value has been set.
func (o *ListenerForCreation) GetLoadBalancerPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerPort, true
}

// SetLoadBalancerPort sets field value
func (o *ListenerForCreation) SetLoadBalancerPort(v int32) {
	o.LoadBalancerPort = v
}

// GetLoadBalancerProtocol returns the LoadBalancerProtocol field value
func (o *ListenerForCreation) GetLoadBalancerProtocol() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerProtocol
}

// GetLoadBalancerProtocolOk returns a tuple with the LoadBalancerProtocol field value
// and a boolean to check if the value has been set.
func (o *ListenerForCreation) GetLoadBalancerProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerProtocol, true
}

// SetLoadBalancerProtocol sets field value
func (o *ListenerForCreation) SetLoadBalancerProtocol(v string) {
	o.LoadBalancerProtocol = v
}

// GetServerCertificateId returns the ServerCertificateId field value if set, zero value otherwise.
func (o *ListenerForCreation) GetServerCertificateId() string {
	if o == nil || o.ServerCertificateId == nil {
		var ret string
		return ret
	}
	return *o.ServerCertificateId
}

// GetServerCertificateIdOk returns a tuple with the ServerCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerForCreation) GetServerCertificateIdOk() (*string, bool) {
	if o == nil || o.ServerCertificateId == nil {
		return nil, false
	}
	return o.ServerCertificateId, true
}

// HasServerCertificateId returns a boolean if a field has been set.
func (o *ListenerForCreation) HasServerCertificateId() bool {
	if o != nil && o.ServerCertificateId != nil {
		return true
	}

	return false
}

// SetServerCertificateId gets a reference to the given string and assigns it to the ServerCertificateId field.
func (o *ListenerForCreation) SetServerCertificateId(v string) {
	o.ServerCertificateId = &v
}

func (o ListenerForCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BackendPort"] = o.BackendPort
	}
	if o.BackendProtocol != nil {
		toSerialize["BackendProtocol"] = o.BackendProtocol
	}
	if true {
		toSerialize["LoadBalancerPort"] = o.LoadBalancerPort
	}
	if true {
		toSerialize["LoadBalancerProtocol"] = o.LoadBalancerProtocol
	}
	if o.ServerCertificateId != nil {
		toSerialize["ServerCertificateId"] = o.ServerCertificateId
	}
	return json.Marshal(toSerialize)
}

type NullableListenerForCreation struct {
	value *ListenerForCreation
	isSet bool
}

func (v NullableListenerForCreation) Get() *ListenerForCreation {
	return v.value
}

func (v *NullableListenerForCreation) Set(val *ListenerForCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerForCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerForCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerForCreation(val *ListenerForCreation) *NullableListenerForCreation {
	return &NullableListenerForCreation{value: val, isSet: true}
}

func (v NullableListenerForCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerForCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ListenerRule Information about the listener rule.
type ListenerRule struct {
	// The type of action for the rule (always `forward`).
	Action *string `json:"Action,omitempty"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
	HostNamePattern *string `json:"HostNamePattern,omitempty"`
	// The ID of the listener.
	ListenerId *int32 `json:"ListenerId,omitempty"`
	// The ID of the listener rule.
	ListenerRuleId *int32 `json:"ListenerRuleId,omitempty"`
	// A human-readable name for the listener rule.
	ListenerRuleName *string `json:"ListenerRuleName,omitempty"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~\"'@:+?].
	PathPattern *string `json:"PathPattern,omitempty"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority *int32 `json:"Priority,omitempty"`
	// The IDs of the backend VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// NewListenerRule instantiates a new ListenerRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerRule() *ListenerRule {
	this := ListenerRule{}
	return &this
}

// NewListenerRuleWithDefaults instantiates a new ListenerRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerRuleWithDefaults() *ListenerRule {
	this := ListenerRule{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ListenerRule) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ListenerRule) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ListenerRule) SetAction(v string) {
	o.Action = &v
}

// GetHostNamePattern returns the HostNamePattern field value if set, zero value otherwise.
func (o *ListenerRule) GetHostNamePattern() string {
	if o == nil || o.HostNamePattern == nil {
		var ret string
		return ret
	}
	return *o.HostNamePattern
}

// GetHostNamePatternOk returns a tuple with the HostNamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetHostNamePatternOk() (*string, bool) {
	if o == nil || o.HostNamePattern == nil {
		return nil, false
	}
	return o.HostNamePattern, true
}

// HasHostNamePattern returns a boolean if a field has been set.
func (o *ListenerRule) HasHostNamePattern() bool {
	if o != nil && o.HostNamePattern != nil {
		return true
	}

	return false
}

// SetHostNamePattern gets a reference to the given string and assigns it to the HostNamePattern field.
func (o *ListenerRule) SetHostNamePattern(v string) {
	o.HostNamePattern = &v
}

// GetListenerId returns the ListenerId field value if set, zero value otherwise.
func (o *ListenerRule) GetListenerId() int32 {
	if o == nil || o.ListenerId == nil {
		var ret int32
		return ret
	}
	return *o.ListenerId
}

// GetListenerIdOk returns a tuple with the ListenerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetListenerIdOk() (*int32, bool) {
	if o == nil || o.ListenerId == nil {
		return nil, false
	}
	return o.ListenerId, true
}

// HasListenerId returns a boolean if a field has been set.
func (o *ListenerRule) HasListenerId() bool {
	if o != nil && o.ListenerId != nil {
		return true
	}

	return false
}

// SetListenerId gets a reference to the given int32 and assigns it to the ListenerId field.
func (o *ListenerRule) SetListenerId(v int32) {
	o.ListenerId = &v
}

// GetListenerRuleId returns the ListenerRuleId field value if set, zero value otherwise.
func (o *ListenerRule) GetListenerRuleId() int32 {
	if o == nil || o.ListenerRuleId == nil {
		var ret int32
		return ret
	}
	return *o.ListenerRuleId
}

// GetListenerRuleIdOk returns a tuple with the ListenerRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetListenerRuleIdOk() (*int32, bool) {
	if o == nil || o.ListenerRuleId == nil {
		return nil, false
	}
	return o.ListenerRuleId, true
}

// HasListenerRuleId returns a boolean if a field has been set.
func (o *ListenerRule) HasListenerRuleId() bool {
	if o != nil && o.ListenerRuleId != nil {
		return true
	}

	return false
}

// SetListenerRuleId gets a reference to the given int32 and assigns it to the ListenerRuleId field.
func (o *ListenerRule) SetListenerRuleId(v int32) {
	o.ListenerRuleId = &v
}

// GetListenerRuleName returns the ListenerRuleName field value if set, zero value otherwise.
func (o *ListenerRule) GetListenerRuleName() string {
	if o == nil || o.ListenerRuleName == nil {
		var ret string
		return ret
	}
	return *o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetListenerRuleNameOk() (*string, bool) {
	if o == nil || o.ListenerRuleName == nil {
		return nil, false
	}
	return o.ListenerRuleName, true
}

// HasListenerRuleName returns a boolean if a field has been set.
func (o *ListenerRule) HasListenerRuleName() bool {
	if o != nil && o.ListenerRuleName != nil {
		return true
	}

	return false
}

// SetListenerRuleName gets a reference to the given string and assigns it to the ListenerRuleName field.
func (o *ListenerRule) SetListenerRuleName(v string) {
	o.ListenerRuleName = &v
}

// GetPathPattern returns the PathPattern field value if set, zero value otherwise.
func (o *ListenerRule) GetPathPattern() string {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret
	}
	return *o.PathPattern
}

// GetPathPatternOk returns a tuple with the PathPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetPathPatternOk() (*string, bool) {
	if o == nil || o.PathPattern == nil {
		return nil, false
	}
	return o.PathPattern, true
}

// HasPathPattern returns a boolean if a field has been set.
func (o *ListenerRule) HasPathPattern() bool {
	if o != nil && o.PathPattern != nil {
		return true
	}

	return false
}

// SetPathPattern gets a reference to the given string and assigns it to the PathPattern field.
func (o *ListenerRule) SetPathPattern(v string) {
	o.PathPattern = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ListenerRule) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ListenerRule) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ListenerRule) SetPriority(v int32) {
	o.Priority = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *ListenerRule) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRule) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *ListenerRule) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *ListenerRule) SetVmIds(v []string) {
	o.VmIds = &v
}

func (o ListenerRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["Action"] = o.Action
	}
	if o.HostNamePattern != nil {
		toSerialize["HostNamePattern"] = o.HostNamePattern
	}
	if o.ListenerId != nil {
		toSerialize["ListenerId"] = o.ListenerId
	}
	if o.ListenerRuleId != nil {
		toSerialize["ListenerRuleId"] = o.ListenerRuleId
	}
	if o.ListenerRuleName != nil {
		toSerialize["ListenerRuleName"] = o.ListenerRuleName
	}
	if o.PathPattern != nil {
		toSerialize["PathPattern"] = o.PathPattern
	}
	if o.Priority != nil {
		toSerialize["Priority"] = o.Priority
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableListenerRule struct {
	value *ListenerRule
	isSet bool
}

func (v NullableListenerRule) Get() *ListenerRule {
	return v.value
}

func (v *NullableListenerRule) Set(val *ListenerRule) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerRule) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerRule(val *ListenerRule) *NullableListenerRule {
	return &NullableListenerRule{value: val, isSet: true}
}

func (v NullableListenerRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ListenerRuleForCreation Information about the listener rule.
type ListenerRuleForCreation struct {
	// The type of action for the rule (always `forward`).
	Action *string `json:"Action,omitempty"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]. 
	HostNamePattern *string `json:"HostNamePattern,omitempty"`
	// The ID of the listener.
	ListenerRuleId *string `json:"ListenerRuleId,omitempty"`
	// A human-readable name for the listener rule.
	ListenerRuleName *string `json:"ListenerRuleName,omitempty"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~\"'@:+?].
	PathPattern *string `json:"PathPattern,omitempty"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority int32 `json:"Priority"`
}

// NewListenerRuleForCreation instantiates a new ListenerRuleForCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerRuleForCreation(priority int32, ) *ListenerRuleForCreation {
	this := ListenerRuleForCreation{}
	this.Priority = priority
	return &this
}

// NewListenerRuleForCreationWithDefaults instantiates a new ListenerRuleForCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerRuleForCreationWithDefaults() *ListenerRuleForCreation {
	this := ListenerRuleForCreation{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ListenerRuleForCreation) SetAction(v string) {
	o.Action = &v
}

// GetHostNamePattern returns the HostNamePattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetHostNamePattern() string {
	if o == nil || o.HostNamePattern == nil {
		var ret string
		return ret
	}
	return *o.HostNamePattern
}

// GetHostNamePatternOk returns a tuple with the HostNamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetHostNamePatternOk() (*string, bool) {
	if o == nil || o.HostNamePattern == nil {
		return nil, false
	}
	return o.HostNamePattern, true
}

// HasHostNamePattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasHostNamePattern() bool {
	if o != nil && o.HostNamePattern != nil {
		return true
	}

	return false
}

// SetHostNamePattern gets a reference to the given string and assigns it to the HostNamePattern field.
func (o *ListenerRuleForCreation) SetHostNamePattern(v string) {
	o.HostNamePattern = &v
}

// GetListenerRuleId returns the ListenerRuleId field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetListenerRuleId() string {
	if o == nil || o.ListenerRuleId == nil {
		var ret string
		return ret
	}
	return *o.ListenerRuleId
}

// GetListenerRuleIdOk returns a tuple with the ListenerRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetListenerRuleIdOk() (*string, bool) {
	if o == nil || o.ListenerRuleId == nil {
		return nil, false
	}
	return o.ListenerRuleId, true
}

// HasListenerRuleId returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasListenerRuleId() bool {
	if o != nil && o.ListenerRuleId != nil {
		return true
	}

	return false
}

// SetListenerRuleId gets a reference to the given string and assigns it to the ListenerRuleId field.
func (o *ListenerRuleForCreation) SetListenerRuleId(v string) {
	o.ListenerRuleId = &v
}

// GetListenerRuleName returns the ListenerRuleName field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetListenerRuleName() string {
	if o == nil || o.ListenerRuleName == nil {
		var ret string
		return ret
	}
	return *o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetListenerRuleNameOk() (*string, bool) {
	if o == nil || o.ListenerRuleName == nil {
		return nil, false
	}
	return o.ListenerRuleName, true
}

// HasListenerRuleName returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasListenerRuleName() bool {
	if o != nil && o.ListenerRuleName != nil {
		return true
	}

	return false
}

// SetListenerRuleName gets a reference to the given string and assigns it to the ListenerRuleName field.
func (o *ListenerRuleForCreation) SetListenerRuleName(v string) {
	o.ListenerRuleName = &v
}

// GetPathPattern returns the PathPattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetPathPattern() string {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret
	}
	return *o.PathPattern
}

// GetPathPatternOk returns a tuple with the PathPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetPathPatternOk() (*string, bool) {
	if o == nil || o.PathPattern == nil {
		return nil, false
	}
	return o.PathPattern, true
}

// HasPathPattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasPathPattern() bool {
	if o != nil && o.PathPattern != nil {
		return true
	}

	return false
}

// SetPathPattern gets a reference to the given string and assigns it to the PathPattern field.
func (o *ListenerRuleForCreation) SetPathPattern(v string) {
	o.PathPattern = &v
}

// GetPriority returns the Priority field value
func (o *ListenerRuleForCreation) GetPriority() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetPriorityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *ListenerRuleForCreation) SetPriority(v int32) {
	o.Priority = v
}

func (o ListenerRuleForCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["Action"] = o.Action
	}
	if o.HostNamePattern != nil {
		toSerialize["HostNamePattern"] = o.HostNamePattern
	}
	if o.ListenerRuleId != nil {
		toSerialize["ListenerRuleId"] = o.ListenerRuleId
	}
	if o.ListenerRuleName != nil {
		toSerialize["ListenerRuleName"] = o.ListenerRuleName
	}
	if o.PathPattern != nil {
		toSerialize["PathPattern"] = o.PathPattern
	}
	if true {
		toSerialize["Priority"] = o.Priority
	}
	return json.Marshal(toSerialize)
}

type NullableListenerRuleForCreation struct {
	value *ListenerRuleForCreation
	isSet bool
}

func (v NullableListenerRuleForCreation) Get() *ListenerRuleForCreation {
	return v.value
}

func (v *NullableListenerRuleForCreation) Set(val *ListenerRuleForCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerRuleForCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerRuleForCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerRuleForCreation(val *ListenerRuleForCreation) *NullableListenerRuleForCreation {
	return &NullableListenerRuleForCreation{value: val, isSet: true}
}

func (v NullableListenerRuleForCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerRuleForCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LoadBalancer Information about the load balancer.
type LoadBalancer struct {
	AccessLog *AccessLog `json:"AccessLog,omitempty"`
	// The stickiness policies defined for the load balancer.
	ApplicationStickyCookiePolicies *[]ApplicationStickyCookiePolicy `json:"ApplicationStickyCookiePolicies,omitempty"`
	// One or more IDs of back-end VMs for the load balancer.
	BackendVmIds *[]string `json:"BackendVmIds,omitempty"`
	// The DNS name of the load balancer.
	DnsName *string `json:"DnsName,omitempty"`
	HealthCheck *HealthCheck `json:"HealthCheck,omitempty"`
	// The listeners for the load balancer.
	Listeners *[]Listener `json:"Listeners,omitempty"`
	// The name of the load balancer.
	LoadBalancerName *string `json:"LoadBalancerName,omitempty"`
	// The policies defined for the load balancer.
	LoadBalancerStickyCookiePolicies *[]LoadBalancerStickyCookiePolicy `json:"LoadBalancerStickyCookiePolicies,omitempty"`
	// The type of load balancer. Valid only for load balancers in a Net.<br /> If `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br /> If `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address.
	LoadBalancerType *string `json:"LoadBalancerType,omitempty"`
	// The ID of the Net for the load balancer.
	NetId *string `json:"NetId,omitempty"`
	// One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
	SecurityGroups *[]string `json:"SecurityGroups,omitempty"`
	SourceSecurityGroup *SourceSecurityGroup `json:"SourceSecurityGroup,omitempty"`
	// The IDs of the Subnets for the load balancer.
	Subnets *[]string `json:"Subnets,omitempty"`
	// One or more names of Subregions for the load balancer.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more tags associated with the load balancer.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewLoadBalancer instantiates a new LoadBalancer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancer() *LoadBalancer {
	this := LoadBalancer{}
	return &this
}

// NewLoadBalancerWithDefaults instantiates a new LoadBalancer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerWithDefaults() *LoadBalancer {
	this := LoadBalancer{}
	return &this
}

// GetAccessLog returns the AccessLog field value if set, zero value otherwise.
func (o *LoadBalancer) GetAccessLog() AccessLog {
	if o == nil || o.AccessLog == nil {
		var ret AccessLog
		return ret
	}
	return *o.AccessLog
}

// GetAccessLogOk returns a tuple with the AccessLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetAccessLogOk() (*AccessLog, bool) {
	if o == nil || o.AccessLog == nil {
		return nil, false
	}
	return o.AccessLog, true
}

// HasAccessLog returns a boolean if a field has been set.
func (o *LoadBalancer) HasAccessLog() bool {
	if o != nil && o.AccessLog != nil {
		return true
	}

	return false
}

// SetAccessLog gets a reference to the given AccessLog and assigns it to the AccessLog field.
func (o *LoadBalancer) SetAccessLog(v AccessLog) {
	o.AccessLog = &v
}

// GetApplicationStickyCookiePolicies returns the ApplicationStickyCookiePolicies field value if set, zero value otherwise.
func (o *LoadBalancer) GetApplicationStickyCookiePolicies() []ApplicationStickyCookiePolicy {
	if o == nil || o.ApplicationStickyCookiePolicies == nil {
		var ret []ApplicationStickyCookiePolicy
		return ret
	}
	return *o.ApplicationStickyCookiePolicies
}

// GetApplicationStickyCookiePoliciesOk returns a tuple with the ApplicationStickyCookiePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetApplicationStickyCookiePoliciesOk() (*[]ApplicationStickyCookiePolicy, bool) {
	if o == nil || o.ApplicationStickyCookiePolicies == nil {
		return nil, false
	}
	return o.ApplicationStickyCookiePolicies, true
}

// HasApplicationStickyCookiePolicies returns a boolean if a field has been set.
func (o *LoadBalancer) HasApplicationStickyCookiePolicies() bool {
	if o != nil && o.ApplicationStickyCookiePolicies != nil {
		return true
	}

	return false
}

// SetApplicationStickyCookiePolicies gets a reference to the given []ApplicationStickyCookiePolicy and assigns it to the ApplicationStickyCookiePolicies field.
func (o *LoadBalancer) SetApplicationStickyCookiePolicies(v []ApplicationStickyCookiePolicy) {
	o.ApplicationStickyCookiePolicies = &v
}

// GetBackendVmIds returns the BackendVmIds field value if set, zero value otherwise.
func (o *LoadBalancer) GetBackendVmIds() []string {
	if o == nil || o.BackendVmIds == nil {
		var ret []string
		return ret
	}
	return *o.BackendVmIds
}

// GetBackendVmIdsOk returns a tuple with the BackendVmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetBackendVmIdsOk() (*[]string, bool) {
	if o == nil || o.BackendVmIds == nil {
		return nil, false
	}
	return o.BackendVmIds, true
}

// HasBackendVmIds returns a boolean if a field has been set.
func (o *LoadBalancer) HasBackendVmIds() bool {
	if o != nil && o.BackendVmIds != nil {
		return true
	}

	return false
}

// SetBackendVmIds gets a reference to the given []string and assigns it to the BackendVmIds field.
func (o *LoadBalancer) SetBackendVmIds(v []string) {
	o.BackendVmIds = &v
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *LoadBalancer) GetDnsName() string {
	if o == nil || o.DnsName == nil {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetDnsNameOk() (*string, bool) {
	if o == nil || o.DnsName == nil {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *LoadBalancer) HasDnsName() bool {
	if o != nil && o.DnsName != nil {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *LoadBalancer) SetDnsName(v string) {
	o.DnsName = &v
}

// GetHealthCheck returns the HealthCheck field value if set, zero value otherwise.
func (o *LoadBalancer) GetHealthCheck() HealthCheck {
	if o == nil || o.HealthCheck == nil {
		var ret HealthCheck
		return ret
	}
	return *o.HealthCheck
}

// GetHealthCheckOk returns a tuple with the HealthCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetHealthCheckOk() (*HealthCheck, bool) {
	if o == nil || o.HealthCheck == nil {
		return nil, false
	}
	return o.HealthCheck, true
}

// HasHealthCheck returns a boolean if a field has been set.
func (o *LoadBalancer) HasHealthCheck() bool {
	if o != nil && o.HealthCheck != nil {
		return true
	}

	return false
}

// SetHealthCheck gets a reference to the given HealthCheck and assigns it to the HealthCheck field.
func (o *LoadBalancer) SetHealthCheck(v HealthCheck) {
	o.HealthCheck = &v
}

// GetListeners returns the Listeners field value if set, zero value otherwise.
func (o *LoadBalancer) GetListeners() []Listener {
	if o == nil || o.Listeners == nil {
		var ret []Listener
		return ret
	}
	return *o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetListenersOk() (*[]Listener, bool) {
	if o == nil || o.Listeners == nil {
		return nil, false
	}
	return o.Listeners, true
}

// HasListeners returns a boolean if a field has been set.
func (o *LoadBalancer) HasListeners() bool {
	if o != nil && o.Listeners != nil {
		return true
	}

	return false
}

// SetListeners gets a reference to the given []Listener and assigns it to the Listeners field.
func (o *LoadBalancer) SetListeners(v []Listener) {
	o.Listeners = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value if set, zero value otherwise.
func (o *LoadBalancer) GetLoadBalancerName() string {
	if o == nil || o.LoadBalancerName == nil {
		var ret string
		return ret
	}
	return *o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil || o.LoadBalancerName == nil {
		return nil, false
	}
	return o.LoadBalancerName, true
}

// HasLoadBalancerName returns a boolean if a field has been set.
func (o *LoadBalancer) HasLoadBalancerName() bool {
	if o != nil && o.LoadBalancerName != nil {
		return true
	}

	return false
}

// SetLoadBalancerName gets a reference to the given string and assigns it to the LoadBalancerName field.
func (o *LoadBalancer) SetLoadBalancerName(v string) {
	o.LoadBalancerName = &v
}

// GetLoadBalancerStickyCookiePolicies returns the LoadBalancerStickyCookiePolicies field value if set, zero value otherwise.
func (o *LoadBalancer) GetLoadBalancerStickyCookiePolicies() []LoadBalancerStickyCookiePolicy {
	if o == nil || o.LoadBalancerStickyCookiePolicies == nil {
		var ret []LoadBalancerStickyCookiePolicy
		return ret
	}
	return *o.LoadBalancerStickyCookiePolicies
}

// GetLoadBalancerStickyCookiePoliciesOk returns a tuple with the LoadBalancerStickyCookiePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetLoadBalancerStickyCookiePoliciesOk() (*[]LoadBalancerStickyCookiePolicy, bool) {
	if o == nil || o.LoadBalancerStickyCookiePolicies == nil {
		return nil, false
	}
	return o.LoadBalancerStickyCookiePolicies, true
}

// HasLoadBalancerStickyCookiePolicies returns a boolean if a field has been set.
func (o *LoadBalancer) HasLoadBalancerStickyCookiePolicies() bool {
	if o != nil && o.LoadBalancerStickyCookiePolicies != nil {
		return true
	}

	return false
}

// SetLoadBalancerStickyCookiePolicies gets a reference to the given []LoadBalancerStickyCookiePolicy and assigns it to the LoadBalancerStickyCookiePolicies field.
func (o *LoadBalancer) SetLoadBalancerStickyCookiePolicies(v []LoadBalancerStickyCookiePolicy) {
	o.LoadBalancerStickyCookiePolicies = &v
}

// GetLoadBalancerType returns the LoadBalancerType field value if set, zero value otherwise.
func (o *LoadBalancer) GetLoadBalancerType() string {
	if o == nil || o.LoadBalancerType == nil {
		var ret string
		return ret
	}
	return *o.LoadBalancerType
}

// GetLoadBalancerTypeOk returns a tuple with the LoadBalancerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetLoadBalancerTypeOk() (*string, bool) {
	if o == nil || o.LoadBalancerType == nil {
		return nil, false
	}
	return o.LoadBalancerType, true
}

// HasLoadBalancerType returns a boolean if a field has been set.
func (o *LoadBalancer) HasLoadBalancerType() bool {
	if o != nil && o.LoadBalancerType != nil {
		return true
	}

	return false
}

// SetLoadBalancerType gets a reference to the given string and assigns it to the LoadBalancerType field.
func (o *LoadBalancer) SetLoadBalancerType(v string) {
	o.LoadBalancerType = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *LoadBalancer) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *LoadBalancer) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *LoadBalancer) SetNetId(v string) {
	o.NetId = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *LoadBalancer) GetSecurityGroups() []string {
	if o == nil || o.SecurityGroups == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetSecurityGroupsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *LoadBalancer) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *LoadBalancer) SetSecurityGroups(v []string) {
	o.SecurityGroups = &v
}

// GetSourceSecurityGroup returns the SourceSecurityGroup field value if set, zero value otherwise.
func (o *LoadBalancer) GetSourceSecurityGroup() SourceSecurityGroup {
	if o == nil || o.SourceSecurityGroup == nil {
		var ret SourceSecurityGroup
		return ret
	}
	return *o.SourceSecurityGroup
}

// GetSourceSecurityGroupOk returns a tuple with the SourceSecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetSourceSecurityGroupOk() (*SourceSecurityGroup, bool) {
	if o == nil || o.SourceSecurityGroup == nil {
		return nil, false
	}
	return o.SourceSecurityGroup, true
}

// HasSourceSecurityGroup returns a boolean if a field has been set.
func (o *LoadBalancer) HasSourceSecurityGroup() bool {
	if o != nil && o.SourceSecurityGroup != nil {
		return true
	}

	return false
}

// SetSourceSecurityGroup gets a reference to the given SourceSecurityGroup and assigns it to the SourceSecurityGroup field.
func (o *LoadBalancer) SetSourceSecurityGroup(v SourceSecurityGroup) {
	o.SourceSecurityGroup = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *LoadBalancer) GetSubnets() []string {
	if o == nil || o.Subnets == nil {
		var ret []string
		return ret
	}
	return *o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetSubnetsOk() (*[]string, bool) {
	if o == nil || o.Subnets == nil {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *LoadBalancer) HasSubnets() bool {
	if o != nil && o.Subnets != nil {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []string and assigns it to the Subnets field.
func (o *LoadBalancer) SetSubnets(v []string) {
	o.Subnets = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *LoadBalancer) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *LoadBalancer) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *LoadBalancer) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *LoadBalancer) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *LoadBalancer) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *LoadBalancer) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o LoadBalancer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessLog != nil {
		toSerialize["AccessLog"] = o.AccessLog
	}
	if o.ApplicationStickyCookiePolicies != nil {
		toSerialize["ApplicationStickyCookiePolicies"] = o.ApplicationStickyCookiePolicies
	}
	if o.BackendVmIds != nil {
		toSerialize["BackendVmIds"] = o.BackendVmIds
	}
	if o.DnsName != nil {
		toSerialize["DnsName"] = o.DnsName
	}
	if o.HealthCheck != nil {
		toSerialize["HealthCheck"] = o.HealthCheck
	}
	if o.Listeners != nil {
		toSerialize["Listeners"] = o.Listeners
	}
	if o.LoadBalancerName != nil {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if o.LoadBalancerStickyCookiePolicies != nil {
		toSerialize["LoadBalancerStickyCookiePolicies"] = o.LoadBalancerStickyCookiePolicies
	}
	if o.LoadBalancerType != nil {
		toSerialize["LoadBalancerType"] = o.LoadBalancerType
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.SourceSecurityGroup != nil {
		toSerialize["SourceSecurityGroup"] = o.SourceSecurityGroup
	}
	if o.Subnets != nil {
		toSerialize["Subnets"] = o.Subnets
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancer struct {
	value *LoadBalancer
	isSet bool
}

func (v NullableLoadBalancer) Get() *LoadBalancer {
	return v.value
}

func (v *NullableLoadBalancer) Set(val *LoadBalancer) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancer) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancer(val *LoadBalancer) *NullableLoadBalancer {
	return &NullableLoadBalancer{value: val, isSet: true}
}

func (v NullableLoadBalancer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LoadBalancerLight Information about the load balancer.
type LoadBalancerLight struct {
	// The name of the load balancer to which the listener is attached.
	LoadBalancerName string `json:"LoadBalancerName"`
	// The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
	LoadBalancerPort int32 `json:"LoadBalancerPort"`
}

// NewLoadBalancerLight instantiates a new LoadBalancerLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerLight(loadBalancerName string, loadBalancerPort int32, ) *LoadBalancerLight {
	this := LoadBalancerLight{}
	this.LoadBalancerName = loadBalancerName
	this.LoadBalancerPort = loadBalancerPort
	return &this
}

// NewLoadBalancerLightWithDefaults instantiates a new LoadBalancerLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerLightWithDefaults() *LoadBalancerLight {
	this := LoadBalancerLight{}
	return &this
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *LoadBalancerLight) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerLight) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *LoadBalancerLight) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetLoadBalancerPort returns the LoadBalancerPort field value
func (o *LoadBalancerLight) GetLoadBalancerPort() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.LoadBalancerPort
}

// GetLoadBalancerPortOk returns a tuple with the LoadBalancerPort field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerLight) GetLoadBalancerPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerPort, true
}

// SetLoadBalancerPort sets field value
func (o *LoadBalancerLight) SetLoadBalancerPort(v int32) {
	o.LoadBalancerPort = v
}

func (o LoadBalancerLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if true {
		toSerialize["LoadBalancerPort"] = o.LoadBalancerPort
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancerLight struct {
	value *LoadBalancerLight
	isSet bool
}

func (v NullableLoadBalancerLight) Get() *LoadBalancerLight {
	return v.value
}

func (v *NullableLoadBalancerLight) Set(val *LoadBalancerLight) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerLight) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerLight(val *LoadBalancerLight) *NullableLoadBalancerLight {
	return &NullableLoadBalancerLight{value: val, isSet: true}
}

func (v NullableLoadBalancerLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LoadBalancerStickyCookiePolicy Information about the stickiness policy.
type LoadBalancerStickyCookiePolicy struct {
	// The name of the stickiness policy.
	PolicyName *string `json:"PolicyName,omitempty"`
}

// NewLoadBalancerStickyCookiePolicy instantiates a new LoadBalancerStickyCookiePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerStickyCookiePolicy() *LoadBalancerStickyCookiePolicy {
	this := LoadBalancerStickyCookiePolicy{}
	return &this
}

// NewLoadBalancerStickyCookiePolicyWithDefaults instantiates a new LoadBalancerStickyCookiePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerStickyCookiePolicyWithDefaults() *LoadBalancerStickyCookiePolicy {
	this := LoadBalancerStickyCookiePolicy{}
	return &this
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *LoadBalancerStickyCookiePolicy) GetPolicyName() string {
	if o == nil || o.PolicyName == nil {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerStickyCookiePolicy) GetPolicyNameOk() (*string, bool) {
	if o == nil || o.PolicyName == nil {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *LoadBalancerStickyCookiePolicy) HasPolicyName() bool {
	if o != nil && o.PolicyName != nil {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *LoadBalancerStickyCookiePolicy) SetPolicyName(v string) {
	o.PolicyName = &v
}

func (o LoadBalancerStickyCookiePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PolicyName != nil {
		toSerialize["PolicyName"] = o.PolicyName
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancerStickyCookiePolicy struct {
	value *LoadBalancerStickyCookiePolicy
	isSet bool
}

func (v NullableLoadBalancerStickyCookiePolicy) Get() *LoadBalancerStickyCookiePolicy {
	return v.value
}

func (v *NullableLoadBalancerStickyCookiePolicy) Set(val *LoadBalancerStickyCookiePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerStickyCookiePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerStickyCookiePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerStickyCookiePolicy(val *LoadBalancerStickyCookiePolicy) *NullableLoadBalancerStickyCookiePolicy {
	return &NullableLoadBalancerStickyCookiePolicy{value: val, isSet: true}
}

func (v NullableLoadBalancerStickyCookiePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerStickyCookiePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// LoadBalancerTag Information about the load balancer tag.
type LoadBalancerTag struct {
	// The key of the tag.
	Key *string `json:"Key,omitempty"`
	// The name of the load balancer.
	LoadBalancerName *string `json:"LoadBalancerName,omitempty"`
	// The value of the tag.
	Value *string `json:"Value,omitempty"`
}

// NewLoadBalancerTag instantiates a new LoadBalancerTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerTag() *LoadBalancerTag {
	this := LoadBalancerTag{}
	return &this
}

// NewLoadBalancerTagWithDefaults instantiates a new LoadBalancerTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerTagWithDefaults() *LoadBalancerTag {
	this := LoadBalancerTag{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *LoadBalancerTag) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerTag) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *LoadBalancerTag) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *LoadBalancerTag) SetKey(v string) {
	o.Key = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value if set, zero value otherwise.
func (o *LoadBalancerTag) GetLoadBalancerName() string {
	if o == nil || o.LoadBalancerName == nil {
		var ret string
		return ret
	}
	return *o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerTag) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil || o.LoadBalancerName == nil {
		return nil, false
	}
	return o.LoadBalancerName, true
}

// HasLoadBalancerName returns a boolean if a field has been set.
func (o *LoadBalancerTag) HasLoadBalancerName() bool {
	if o != nil && o.LoadBalancerName != nil {
		return true
	}

	return false
}

// SetLoadBalancerName gets a reference to the given string and assigns it to the LoadBalancerName field.
func (o *LoadBalancerTag) SetLoadBalancerName(v string) {
	o.LoadBalancerName = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *LoadBalancerTag) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerTag) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *LoadBalancerTag) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *LoadBalancerTag) SetValue(v string) {
	o.Value = &v
}

func (o LoadBalancerTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["Key"] = o.Key
	}
	if o.LoadBalancerName != nil {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if o.Value != nil {
		toSerialize["Value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancerTag struct {
	value *LoadBalancerTag
	isSet bool
}

func (v NullableLoadBalancerTag) Get() *LoadBalancerTag {
	return v.value
}

func (v *NullableLoadBalancerTag) Set(val *LoadBalancerTag) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerTag) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerTag(val *LoadBalancerTag) *NullableLoadBalancerTag {
	return &NullableLoadBalancerTag{value: val, isSet: true}
}

func (v NullableLoadBalancerTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Location Information about the DirectLink location.
type Location struct {
	// The location code, to be set as the `Location` parameter of the *CreateDirectLink* method when creating a DirectLink.
	Code *string `json:"Code,omitempty"`
	// The name and description of the location, corresponding to a datacenter.
	Name *string `json:"Name,omitempty"`
}

// NewLocation instantiates a new Location object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocation() *Location {
	this := Location{}
	return &this
}

// NewLocationWithDefaults instantiates a new Location object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationWithDefaults() *Location {
	this := Location{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Location) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Location) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Location) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Location) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Location) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Location) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Location) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Location) SetName(v string) {
	o.Name = &v
}

func (o Location) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableLocation struct {
	value *Location
	isSet bool
}

func (v NullableLocation) Get() *Location {
	return v.value
}

func (v *NullableLocation) Set(val *Location) {
	v.value = val
	v.isSet = true
}

func (v NullableLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocation(val *Location) *NullableLocation {
	return &NullableLocation{value: val, isSet: true}
}

func (v NullableLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Log Information about the log.
type Log struct {
	// The account ID.
	AccountId *string `json:"AccountId,omitempty"`
	// The duration of the call (in milliseconds).
	CallDuration *int32 `json:"CallDuration,omitempty"`
	// The API key used for the query.
	QueryAccessKey *string `json:"QueryAccessKey,omitempty"`
	// The name of the API service used by the call.
	QueryApiName *string `json:"QueryApiName,omitempty"`
	// The version of the API service used by the call.
	QueryApiVersion *string `json:"QueryApiVersion,omitempty"`
	// The name of the call.
	QueryCallName *string `json:"QueryCallName,omitempty"`
	// The date of the query, in ISO 8601 format.
	QueryDate *string `json:"QueryDate,omitempty"`
	// The query header raw.
	QueryHeaderRaw *string `json:"QueryHeaderRaw,omitempty"`
	// The query header size.
	QueryHeaderSize *int32 `json:"QueryHeaderSize,omitempty"`
	// The IP address used for the query.
	QueryIpAddress *string `json:"QueryIpAddress,omitempty"`
	// The query payload raw.
	QueryPayloadRaw *string `json:"QueryPayloadRaw,omitempty"`
	// The query payload size.
	QueryPayloadSize *int32 `json:"QueryPayloadSize,omitempty"`
	// The user agent used for the HTTP request.
	QueryUserAgent *string `json:"QueryUserAgent,omitempty"`
	// The ID provided in the response.
	RequestId *string `json:"RequestId,omitempty"`
	// The size of the response (in bytes).
	ResponseSize *int32 `json:"ResponseSize,omitempty"`
	// The HTTP code provided in the response.
	ResponseStatusCode *int32 `json:"ResponseStatusCode,omitempty"`
}

// NewLog instantiates a new Log object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLog() *Log {
	this := Log{}
	return &this
}

// NewLogWithDefaults instantiates a new Log object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogWithDefaults() *Log {
	this := Log{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Log) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Log) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Log) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCallDuration returns the CallDuration field value if set, zero value otherwise.
func (o *Log) GetCallDuration() int32 {
	if o == nil || o.CallDuration == nil {
		var ret int32
		return ret
	}
	return *o.CallDuration
}

// GetCallDurationOk returns a tuple with the CallDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetCallDurationOk() (*int32, bool) {
	if o == nil || o.CallDuration == nil {
		return nil, false
	}
	return o.CallDuration, true
}

// HasCallDuration returns a boolean if a field has been set.
func (o *Log) HasCallDuration() bool {
	if o != nil && o.CallDuration != nil {
		return true
	}

	return false
}

// SetCallDuration gets a reference to the given int32 and assigns it to the CallDuration field.
func (o *Log) SetCallDuration(v int32) {
	o.CallDuration = &v
}

// GetQueryAccessKey returns the QueryAccessKey field value if set, zero value otherwise.
func (o *Log) GetQueryAccessKey() string {
	if o == nil || o.QueryAccessKey == nil {
		var ret string
		return ret
	}
	return *o.QueryAccessKey
}

// GetQueryAccessKeyOk returns a tuple with the QueryAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryAccessKeyOk() (*string, bool) {
	if o == nil || o.QueryAccessKey == nil {
		return nil, false
	}
	return o.QueryAccessKey, true
}

// HasQueryAccessKey returns a boolean if a field has been set.
func (o *Log) HasQueryAccessKey() bool {
	if o != nil && o.QueryAccessKey != nil {
		return true
	}

	return false
}

// SetQueryAccessKey gets a reference to the given string and assigns it to the QueryAccessKey field.
func (o *Log) SetQueryAccessKey(v string) {
	o.QueryAccessKey = &v
}

// GetQueryApiName returns the QueryApiName field value if set, zero value otherwise.
func (o *Log) GetQueryApiName() string {
	if o == nil || o.QueryApiName == nil {
		var ret string
		return ret
	}
	return *o.QueryApiName
}

// GetQueryApiNameOk returns a tuple with the QueryApiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryApiNameOk() (*string, bool) {
	if o == nil || o.QueryApiName == nil {
		return nil, false
	}
	return o.QueryApiName, true
}

// HasQueryApiName returns a boolean if a field has been set.
func (o *Log) HasQueryApiName() bool {
	if o != nil && o.QueryApiName != nil {
		return true
	}

	return false
}

// SetQueryApiName gets a reference to the given string and assigns it to the QueryApiName field.
func (o *Log) SetQueryApiName(v string) {
	o.QueryApiName = &v
}

// GetQueryApiVersion returns the QueryApiVersion field value if set, zero value otherwise.
func (o *Log) GetQueryApiVersion() string {
	if o == nil || o.QueryApiVersion == nil {
		var ret string
		return ret
	}
	return *o.QueryApiVersion
}

// GetQueryApiVersionOk returns a tuple with the QueryApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryApiVersionOk() (*string, bool) {
	if o == nil || o.QueryApiVersion == nil {
		return nil, false
	}
	return o.QueryApiVersion, true
}

// HasQueryApiVersion returns a boolean if a field has been set.
func (o *Log) HasQueryApiVersion() bool {
	if o != nil && o.QueryApiVersion != nil {
		return true
	}

	return false
}

// SetQueryApiVersion gets a reference to the given string and assigns it to the QueryApiVersion field.
func (o *Log) SetQueryApiVersion(v string) {
	o.QueryApiVersion = &v
}

// GetQueryCallName returns the QueryCallName field value if set, zero value otherwise.
func (o *Log) GetQueryCallName() string {
	if o == nil || o.QueryCallName == nil {
		var ret string
		return ret
	}
	return *o.QueryCallName
}

// GetQueryCallNameOk returns a tuple with the QueryCallName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryCallNameOk() (*string, bool) {
	if o == nil || o.QueryCallName == nil {
		return nil, false
	}
	return o.QueryCallName, true
}

// HasQueryCallName returns a boolean if a field has been set.
func (o *Log) HasQueryCallName() bool {
	if o != nil && o.QueryCallName != nil {
		return true
	}

	return false
}

// SetQueryCallName gets a reference to the given string and assigns it to the QueryCallName field.
func (o *Log) SetQueryCallName(v string) {
	o.QueryCallName = &v
}

// GetQueryDate returns the QueryDate field value if set, zero value otherwise.
func (o *Log) GetQueryDate() string {
	if o == nil || o.QueryDate == nil {
		var ret string
		return ret
	}
	return *o.QueryDate
}

// GetQueryDateOk returns a tuple with the QueryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryDateOk() (*string, bool) {
	if o == nil || o.QueryDate == nil {
		return nil, false
	}
	return o.QueryDate, true
}

// HasQueryDate returns a boolean if a field has been set.
func (o *Log) HasQueryDate() bool {
	if o != nil && o.QueryDate != nil {
		return true
	}

	return false
}

// SetQueryDate gets a reference to the given string and assigns it to the QueryDate field.
func (o *Log) SetQueryDate(v string) {
	o.QueryDate = &v
}

// GetQueryHeaderRaw returns the QueryHeaderRaw field value if set, zero value otherwise.
func (o *Log) GetQueryHeaderRaw() string {
	if o == nil || o.QueryHeaderRaw == nil {
		var ret string
		return ret
	}
	return *o.QueryHeaderRaw
}

// GetQueryHeaderRawOk returns a tuple with the QueryHeaderRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryHeaderRawOk() (*string, bool) {
	if o == nil || o.QueryHeaderRaw == nil {
		return nil, false
	}
	return o.QueryHeaderRaw, true
}

// HasQueryHeaderRaw returns a boolean if a field has been set.
func (o *Log) HasQueryHeaderRaw() bool {
	if o != nil && o.QueryHeaderRaw != nil {
		return true
	}

	return false
}

// SetQueryHeaderRaw gets a reference to the given string and assigns it to the QueryHeaderRaw field.
func (o *Log) SetQueryHeaderRaw(v string) {
	o.QueryHeaderRaw = &v
}

// GetQueryHeaderSize returns the QueryHeaderSize field value if set, zero value otherwise.
func (o *Log) GetQueryHeaderSize() int32 {
	if o == nil || o.QueryHeaderSize == nil {
		var ret int32
		return ret
	}
	return *o.QueryHeaderSize
}

// GetQueryHeaderSizeOk returns a tuple with the QueryHeaderSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryHeaderSizeOk() (*int32, bool) {
	if o == nil || o.QueryHeaderSize == nil {
		return nil, false
	}
	return o.QueryHeaderSize, true
}

// HasQueryHeaderSize returns a boolean if a field has been set.
func (o *Log) HasQueryHeaderSize() bool {
	if o != nil && o.QueryHeaderSize != nil {
		return true
	}

	return false
}

// SetQueryHeaderSize gets a reference to the given int32 and assigns it to the QueryHeaderSize field.
func (o *Log) SetQueryHeaderSize(v int32) {
	o.QueryHeaderSize = &v
}

// GetQueryIpAddress returns the QueryIpAddress field value if set, zero value otherwise.
func (o *Log) GetQueryIpAddress() string {
	if o == nil || o.QueryIpAddress == nil {
		var ret string
		return ret
	}
	return *o.QueryIpAddress
}

// GetQueryIpAddressOk returns a tuple with the QueryIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryIpAddressOk() (*string, bool) {
	if o == nil || o.QueryIpAddress == nil {
		return nil, false
	}
	return o.QueryIpAddress, true
}

// HasQueryIpAddress returns a boolean if a field has been set.
func (o *Log) HasQueryIpAddress() bool {
	if o != nil && o.QueryIpAddress != nil {
		return true
	}

	return false
}

// SetQueryIpAddress gets a reference to the given string and assigns it to the QueryIpAddress field.
func (o *Log) SetQueryIpAddress(v string) {
	o.QueryIpAddress = &v
}

// GetQueryPayloadRaw returns the QueryPayloadRaw field value if set, zero value otherwise.
func (o *Log) GetQueryPayloadRaw() string {
	if o == nil || o.QueryPayloadRaw == nil {
		var ret string
		return ret
	}
	return *o.QueryPayloadRaw
}

// GetQueryPayloadRawOk returns a tuple with the QueryPayloadRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryPayloadRawOk() (*string, bool) {
	if o == nil || o.QueryPayloadRaw == nil {
		return nil, false
	}
	return o.QueryPayloadRaw, true
}

// HasQueryPayloadRaw returns a boolean if a field has been set.
func (o *Log) HasQueryPayloadRaw() bool {
	if o != nil && o.QueryPayloadRaw != nil {
		return true
	}

	return false
}

// SetQueryPayloadRaw gets a reference to the given string and assigns it to the QueryPayloadRaw field.
func (o *Log) SetQueryPayloadRaw(v string) {
	o.QueryPayloadRaw = &v
}

// GetQueryPayloadSize returns the QueryPayloadSize field value if set, zero value otherwise.
func (o *Log) GetQueryPayloadSize() int32 {
	if o == nil || o.QueryPayloadSize == nil {
		var ret int32
		return ret
	}
	return *o.QueryPayloadSize
}

// GetQueryPayloadSizeOk returns a tuple with the QueryPayloadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryPayloadSizeOk() (*int32, bool) {
	if o == nil || o.QueryPayloadSize == nil {
		return nil, false
	}
	return o.QueryPayloadSize, true
}

// HasQueryPayloadSize returns a boolean if a field has been set.
func (o *Log) HasQueryPayloadSize() bool {
	if o != nil && o.QueryPayloadSize != nil {
		return true
	}

	return false
}

// SetQueryPayloadSize gets a reference to the given int32 and assigns it to the QueryPayloadSize field.
func (o *Log) SetQueryPayloadSize(v int32) {
	o.QueryPayloadSize = &v
}

// GetQueryUserAgent returns the QueryUserAgent field value if set, zero value otherwise.
func (o *Log) GetQueryUserAgent() string {
	if o == nil || o.QueryUserAgent == nil {
		var ret string
		return ret
	}
	return *o.QueryUserAgent
}

// GetQueryUserAgentOk returns a tuple with the QueryUserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetQueryUserAgentOk() (*string, bool) {
	if o == nil || o.QueryUserAgent == nil {
		return nil, false
	}
	return o.QueryUserAgent, true
}

// HasQueryUserAgent returns a boolean if a field has been set.
func (o *Log) HasQueryUserAgent() bool {
	if o != nil && o.QueryUserAgent != nil {
		return true
	}

	return false
}

// SetQueryUserAgent gets a reference to the given string and assigns it to the QueryUserAgent field.
func (o *Log) SetQueryUserAgent(v string) {
	o.QueryUserAgent = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *Log) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *Log) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *Log) SetRequestId(v string) {
	o.RequestId = &v
}

// GetResponseSize returns the ResponseSize field value if set, zero value otherwise.
func (o *Log) GetResponseSize() int32 {
	if o == nil || o.ResponseSize == nil {
		var ret int32
		return ret
	}
	return *o.ResponseSize
}

// GetResponseSizeOk returns a tuple with the ResponseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetResponseSizeOk() (*int32, bool) {
	if o == nil || o.ResponseSize == nil {
		return nil, false
	}
	return o.ResponseSize, true
}

// HasResponseSize returns a boolean if a field has been set.
func (o *Log) HasResponseSize() bool {
	if o != nil && o.ResponseSize != nil {
		return true
	}

	return false
}

// SetResponseSize gets a reference to the given int32 and assigns it to the ResponseSize field.
func (o *Log) SetResponseSize(v int32) {
	o.ResponseSize = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *Log) GetResponseStatusCode() int32 {
	if o == nil || o.ResponseStatusCode == nil {
		var ret int32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Log) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *Log) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given int32 and assigns it to the ResponseStatusCode field.
func (o *Log) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode = &v
}

func (o Log) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.CallDuration != nil {
		toSerialize["CallDuration"] = o.CallDuration
	}
	if o.QueryAccessKey != nil {
		toSerialize["QueryAccessKey"] = o.QueryAccessKey
	}
	if o.QueryApiName != nil {
		toSerialize["QueryApiName"] = o.QueryApiName
	}
	if o.QueryApiVersion != nil {
		toSerialize["QueryApiVersion"] = o.QueryApiVersion
	}
	if o.QueryCallName != nil {
		toSerialize["QueryCallName"] = o.QueryCallName
	}
	if o.QueryDate != nil {
		toSerialize["QueryDate"] = o.QueryDate
	}
	if o.QueryHeaderRaw != nil {
		toSerialize["QueryHeaderRaw"] = o.QueryHeaderRaw
	}
	if o.QueryHeaderSize != nil {
		toSerialize["QueryHeaderSize"] = o.QueryHeaderSize
	}
	if o.QueryIpAddress != nil {
		toSerialize["QueryIpAddress"] = o.QueryIpAddress
	}
	if o.QueryPayloadRaw != nil {
		toSerialize["QueryPayloadRaw"] = o.QueryPayloadRaw
	}
	if o.QueryPayloadSize != nil {
		toSerialize["QueryPayloadSize"] = o.QueryPayloadSize
	}
	if o.QueryUserAgent != nil {
		toSerialize["QueryUserAgent"] = o.QueryUserAgent
	}
	if o.RequestId != nil {
		toSerialize["RequestId"] = o.RequestId
	}
	if o.ResponseSize != nil {
		toSerialize["ResponseSize"] = o.ResponseSize
	}
	if o.ResponseStatusCode != nil {
		toSerialize["ResponseStatusCode"] = o.ResponseStatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableLog struct {
	value *Log
	isSet bool
}

func (v NullableLog) Get() *Log {
	return v.value
}

func (v *NullableLog) Set(val *Log) {
	v.value = val
	v.isSet = true
}

func (v NullableLog) IsSet() bool {
	return v.isSet
}

func (v *NullableLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLog(val *Log) *NullableLog {
	return &NullableLog{value: val, isSet: true}
}

func (v NullableLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// MaintenanceEvent Information about the maintenance event.
type MaintenanceEvent struct {
	// The code of the event (`system-reboot` \\| `system-maintenance`).
	Code *string `json:"Code,omitempty"`
	// The description of the event.
	Description *string `json:"Description,omitempty"`
	// The latest scheduled end time for the event.
	NotAfter *string `json:"NotAfter,omitempty"`
	// The earliest scheduled start time for the event.
	NotBefore *string `json:"NotBefore,omitempty"`
}

// NewMaintenanceEvent instantiates a new MaintenanceEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceEvent() *MaintenanceEvent {
	this := MaintenanceEvent{}
	return &this
}

// NewMaintenanceEventWithDefaults instantiates a new MaintenanceEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceEventWithDefaults() *MaintenanceEvent {
	this := MaintenanceEvent{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *MaintenanceEvent) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceEvent) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *MaintenanceEvent) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *MaintenanceEvent) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MaintenanceEvent) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceEvent) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MaintenanceEvent) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MaintenanceEvent) SetDescription(v string) {
	o.Description = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *MaintenanceEvent) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceEvent) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *MaintenanceEvent) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *MaintenanceEvent) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *MaintenanceEvent) GetNotBefore() string {
	if o == nil || o.NotBefore == nil {
		var ret string
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceEvent) GetNotBeforeOk() (*string, bool) {
	if o == nil || o.NotBefore == nil {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *MaintenanceEvent) HasNotBefore() bool {
	if o != nil && o.NotBefore != nil {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given string and assigns it to the NotBefore field.
func (o *MaintenanceEvent) SetNotBefore(v string) {
	o.NotBefore = &v
}

func (o MaintenanceEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.NotAfter != nil {
		toSerialize["NotAfter"] = o.NotAfter
	}
	if o.NotBefore != nil {
		toSerialize["NotBefore"] = o.NotBefore
	}
	return json.Marshal(toSerialize)
}

type NullableMaintenanceEvent struct {
	value *MaintenanceEvent
	isSet bool
}

func (v NullableMaintenanceEvent) Get() *MaintenanceEvent {
	return v.value
}

func (v *NullableMaintenanceEvent) Set(val *MaintenanceEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceEvent(val *MaintenanceEvent) *NullableMaintenanceEvent {
	return &NullableMaintenanceEvent{value: val, isSet: true}
}

func (v NullableMaintenanceEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NatService Information about the NAT service.
type NatService struct {
	// The ID of the NAT service.
	NatServiceId *string `json:"NatServiceId,omitempty"`
	// The ID of the Net in which the NAT service is.
	NetId *string `json:"NetId,omitempty"`
	// Information about the External IP address or addresses (EIPs) associated with the NAT service.
	PublicIps *[]PublicIpLight `json:"PublicIps,omitempty"`
	// The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
	// The ID of the Subnet in which the NAT service is.
	SubnetId *string `json:"SubnetId,omitempty"`
	// One or more tags associated with the NAT service.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewNatService instantiates a new NatService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatService() *NatService {
	this := NatService{}
	return &this
}

// NewNatServiceWithDefaults instantiates a new NatService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatServiceWithDefaults() *NatService {
	this := NatService{}
	return &this
}

// GetNatServiceId returns the NatServiceId field value if set, zero value otherwise.
func (o *NatService) GetNatServiceId() string {
	if o == nil || o.NatServiceId == nil {
		var ret string
		return ret
	}
	return *o.NatServiceId
}

// GetNatServiceIdOk returns a tuple with the NatServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetNatServiceIdOk() (*string, bool) {
	if o == nil || o.NatServiceId == nil {
		return nil, false
	}
	return o.NatServiceId, true
}

// HasNatServiceId returns a boolean if a field has been set.
func (o *NatService) HasNatServiceId() bool {
	if o != nil && o.NatServiceId != nil {
		return true
	}

	return false
}

// SetNatServiceId gets a reference to the given string and assigns it to the NatServiceId field.
func (o *NatService) SetNatServiceId(v string) {
	o.NatServiceId = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *NatService) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *NatService) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *NatService) SetNetId(v string) {
	o.NetId = &v
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *NatService) GetPublicIps() []PublicIpLight {
	if o == nil || o.PublicIps == nil {
		var ret []PublicIpLight
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetPublicIpsOk() (*[]PublicIpLight, bool) {
	if o == nil || o.PublicIps == nil {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *NatService) HasPublicIps() bool {
	if o != nil && o.PublicIps != nil {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []PublicIpLight and assigns it to the PublicIps field.
func (o *NatService) SetPublicIps(v []PublicIpLight) {
	o.PublicIps = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NatService) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NatService) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NatService) SetState(v string) {
	o.State = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *NatService) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *NatService) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *NatService) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NatService) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatService) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NatService) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *NatService) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o NatService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatServiceId != nil {
		toSerialize["NatServiceId"] = o.NatServiceId
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.PublicIps != nil {
		toSerialize["PublicIps"] = o.PublicIps
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableNatService struct {
	value *NatService
	isSet bool
}

func (v NullableNatService) Get() *NatService {
	return v.value
}

func (v *NullableNatService) Set(val *NatService) {
	v.value = val
	v.isSet = true
}

func (v NullableNatService) IsSet() bool {
	return v.isSet
}

func (v *NullableNatService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatService(val *NatService) *NullableNatService {
	return &NullableNatService{value: val, isSet: true}
}

func (v NullableNatService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Net Information about the Net.
type Net struct {
	// The ID of the DHCP options set (or `default` if you want to associate the default one).
	DhcpOptionsSetId *string `json:"DhcpOptionsSetId,omitempty"`
	// The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// The ID of the Net.
	NetId *string `json:"NetId,omitempty"`
	// The state of the Net (`pending` \\| `available`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the Net.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The VM tenancy in a Net.
	Tenancy *string `json:"Tenancy,omitempty"`
}

// NewNet instantiates a new Net object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNet() *Net {
	this := Net{}
	return &this
}

// NewNetWithDefaults instantiates a new Net object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetWithDefaults() *Net {
	this := Net{}
	return &this
}

// GetDhcpOptionsSetId returns the DhcpOptionsSetId field value if set, zero value otherwise.
func (o *Net) GetDhcpOptionsSetId() string {
	if o == nil || o.DhcpOptionsSetId == nil {
		var ret string
		return ret
	}
	return *o.DhcpOptionsSetId
}

// GetDhcpOptionsSetIdOk returns a tuple with the DhcpOptionsSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetDhcpOptionsSetIdOk() (*string, bool) {
	if o == nil || o.DhcpOptionsSetId == nil {
		return nil, false
	}
	return o.DhcpOptionsSetId, true
}

// HasDhcpOptionsSetId returns a boolean if a field has been set.
func (o *Net) HasDhcpOptionsSetId() bool {
	if o != nil && o.DhcpOptionsSetId != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSetId gets a reference to the given string and assigns it to the DhcpOptionsSetId field.
func (o *Net) SetDhcpOptionsSetId(v string) {
	o.DhcpOptionsSetId = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *Net) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *Net) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *Net) SetIpRange(v string) {
	o.IpRange = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *Net) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *Net) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *Net) SetNetId(v string) {
	o.NetId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Net) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Net) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Net) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Net) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Net) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Net) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetTenancy returns the Tenancy field value if set, zero value otherwise.
func (o *Net) GetTenancy() string {
	if o == nil || o.Tenancy == nil {
		var ret string
		return ret
	}
	return *o.Tenancy
}

// GetTenancyOk returns a tuple with the Tenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Net) GetTenancyOk() (*string, bool) {
	if o == nil || o.Tenancy == nil {
		return nil, false
	}
	return o.Tenancy, true
}

// HasTenancy returns a boolean if a field has been set.
func (o *Net) HasTenancy() bool {
	if o != nil && o.Tenancy != nil {
		return true
	}

	return false
}

// SetTenancy gets a reference to the given string and assigns it to the Tenancy field.
func (o *Net) SetTenancy(v string) {
	o.Tenancy = &v
}

func (o Net) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DhcpOptionsSetId != nil {
		toSerialize["DhcpOptionsSetId"] = o.DhcpOptionsSetId
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.Tenancy != nil {
		toSerialize["Tenancy"] = o.Tenancy
	}
	return json.Marshal(toSerialize)
}

type NullableNet struct {
	value *Net
	isSet bool
}

func (v NullableNet) Get() *Net {
	return v.value
}

func (v *NullableNet) Set(val *Net) {
	v.value = val
	v.isSet = true
}

func (v NullableNet) IsSet() bool {
	return v.isSet
}

func (v *NullableNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNet(val *Net) *NullableNet {
	return &NullableNet{value: val, isSet: true}
}

func (v NullableNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NetAccessPoint Information about the Net access point.
type NetAccessPoint struct {
	// The ID of the Net access point.
	NetAccessPointId *string `json:"NetAccessPointId,omitempty"`
	// The ID of the Net with which the Net access point is associated.
	NetId *string `json:"NetId,omitempty"`
	// The ID of the route tables associated with the Net access point.
	RouteTableIds *[]string `json:"RouteTableIds,omitempty"`
	// The name of the prefix list corresponding to the service with which the Net access point is associated.
	ServiceName *string `json:"ServiceName,omitempty"`
	// The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the Net access point.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewNetAccessPoint instantiates a new NetAccessPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetAccessPoint() *NetAccessPoint {
	this := NetAccessPoint{}
	return &this
}

// NewNetAccessPointWithDefaults instantiates a new NetAccessPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetAccessPointWithDefaults() *NetAccessPoint {
	this := NetAccessPoint{}
	return &this
}

// GetNetAccessPointId returns the NetAccessPointId field value if set, zero value otherwise.
func (o *NetAccessPoint) GetNetAccessPointId() string {
	if o == nil || o.NetAccessPointId == nil {
		var ret string
		return ret
	}
	return *o.NetAccessPointId
}

// GetNetAccessPointIdOk returns a tuple with the NetAccessPointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetNetAccessPointIdOk() (*string, bool) {
	if o == nil || o.NetAccessPointId == nil {
		return nil, false
	}
	return o.NetAccessPointId, true
}

// HasNetAccessPointId returns a boolean if a field has been set.
func (o *NetAccessPoint) HasNetAccessPointId() bool {
	if o != nil && o.NetAccessPointId != nil {
		return true
	}

	return false
}

// SetNetAccessPointId gets a reference to the given string and assigns it to the NetAccessPointId field.
func (o *NetAccessPoint) SetNetAccessPointId(v string) {
	o.NetAccessPointId = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *NetAccessPoint) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *NetAccessPoint) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *NetAccessPoint) SetNetId(v string) {
	o.NetId = &v
}

// GetRouteTableIds returns the RouteTableIds field value if set, zero value otherwise.
func (o *NetAccessPoint) GetRouteTableIds() []string {
	if o == nil || o.RouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteTableIds
}

// GetRouteTableIdsOk returns a tuple with the RouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.RouteTableIds == nil {
		return nil, false
	}
	return o.RouteTableIds, true
}

// HasRouteTableIds returns a boolean if a field has been set.
func (o *NetAccessPoint) HasRouteTableIds() bool {
	if o != nil && o.RouteTableIds != nil {
		return true
	}

	return false
}

// SetRouteTableIds gets a reference to the given []string and assigns it to the RouteTableIds field.
func (o *NetAccessPoint) SetRouteTableIds(v []string) {
	o.RouteTableIds = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *NetAccessPoint) GetServiceName() string {
	if o == nil || o.ServiceName == nil {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetServiceNameOk() (*string, bool) {
	if o == nil || o.ServiceName == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *NetAccessPoint) HasServiceName() bool {
	if o != nil && o.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *NetAccessPoint) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NetAccessPoint) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NetAccessPoint) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NetAccessPoint) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NetAccessPoint) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetAccessPoint) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NetAccessPoint) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *NetAccessPoint) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o NetAccessPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetAccessPointId != nil {
		toSerialize["NetAccessPointId"] = o.NetAccessPointId
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.RouteTableIds != nil {
		toSerialize["RouteTableIds"] = o.RouteTableIds
	}
	if o.ServiceName != nil {
		toSerialize["ServiceName"] = o.ServiceName
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableNetAccessPoint struct {
	value *NetAccessPoint
	isSet bool
}

func (v NullableNetAccessPoint) Get() *NetAccessPoint {
	return v.value
}

func (v *NullableNetAccessPoint) Set(val *NetAccessPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableNetAccessPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableNetAccessPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetAccessPoint(val *NetAccessPoint) *NullableNetAccessPoint {
	return &NullableNetAccessPoint{value: val, isSet: true}
}

func (v NullableNetAccessPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetAccessPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NetPeering Information about the Net peering connection.
type NetPeering struct {
	AccepterNet *AccepterNet `json:"AccepterNet,omitempty"`
	// The ID of the Net peering connection.
	NetPeeringId *string `json:"NetPeeringId,omitempty"`
	SourceNet *SourceNet `json:"SourceNet,omitempty"`
	State *NetPeeringState `json:"State,omitempty"`
	// One or more tags associated with the Net peering connection.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewNetPeering instantiates a new NetPeering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetPeering() *NetPeering {
	this := NetPeering{}
	return &this
}

// NewNetPeeringWithDefaults instantiates a new NetPeering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetPeeringWithDefaults() *NetPeering {
	this := NetPeering{}
	return &this
}

// GetAccepterNet returns the AccepterNet field value if set, zero value otherwise.
func (o *NetPeering) GetAccepterNet() AccepterNet {
	if o == nil || o.AccepterNet == nil {
		var ret AccepterNet
		return ret
	}
	return *o.AccepterNet
}

// GetAccepterNetOk returns a tuple with the AccepterNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeering) GetAccepterNetOk() (*AccepterNet, bool) {
	if o == nil || o.AccepterNet == nil {
		return nil, false
	}
	return o.AccepterNet, true
}

// HasAccepterNet returns a boolean if a field has been set.
func (o *NetPeering) HasAccepterNet() bool {
	if o != nil && o.AccepterNet != nil {
		return true
	}

	return false
}

// SetAccepterNet gets a reference to the given AccepterNet and assigns it to the AccepterNet field.
func (o *NetPeering) SetAccepterNet(v AccepterNet) {
	o.AccepterNet = &v
}

// GetNetPeeringId returns the NetPeeringId field value if set, zero value otherwise.
func (o *NetPeering) GetNetPeeringId() string {
	if o == nil || o.NetPeeringId == nil {
		var ret string
		return ret
	}
	return *o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeering) GetNetPeeringIdOk() (*string, bool) {
	if o == nil || o.NetPeeringId == nil {
		return nil, false
	}
	return o.NetPeeringId, true
}

// HasNetPeeringId returns a boolean if a field has been set.
func (o *NetPeering) HasNetPeeringId() bool {
	if o != nil && o.NetPeeringId != nil {
		return true
	}

	return false
}

// SetNetPeeringId gets a reference to the given string and assigns it to the NetPeeringId field.
func (o *NetPeering) SetNetPeeringId(v string) {
	o.NetPeeringId = &v
}

// GetSourceNet returns the SourceNet field value if set, zero value otherwise.
func (o *NetPeering) GetSourceNet() SourceNet {
	if o == nil || o.SourceNet == nil {
		var ret SourceNet
		return ret
	}
	return *o.SourceNet
}

// GetSourceNetOk returns a tuple with the SourceNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeering) GetSourceNetOk() (*SourceNet, bool) {
	if o == nil || o.SourceNet == nil {
		return nil, false
	}
	return o.SourceNet, true
}

// HasSourceNet returns a boolean if a field has been set.
func (o *NetPeering) HasSourceNet() bool {
	if o != nil && o.SourceNet != nil {
		return true
	}

	return false
}

// SetSourceNet gets a reference to the given SourceNet and assigns it to the SourceNet field.
func (o *NetPeering) SetSourceNet(v SourceNet) {
	o.SourceNet = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NetPeering) GetState() NetPeeringState {
	if o == nil || o.State == nil {
		var ret NetPeeringState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeering) GetStateOk() (*NetPeeringState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NetPeering) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given NetPeeringState and assigns it to the State field.
func (o *NetPeering) SetState(v NetPeeringState) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NetPeering) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeering) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NetPeering) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *NetPeering) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o NetPeering) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccepterNet != nil {
		toSerialize["AccepterNet"] = o.AccepterNet
	}
	if o.NetPeeringId != nil {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	if o.SourceNet != nil {
		toSerialize["SourceNet"] = o.SourceNet
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableNetPeering struct {
	value *NetPeering
	isSet bool
}

func (v NullableNetPeering) Get() *NetPeering {
	return v.value
}

func (v *NullableNetPeering) Set(val *NetPeering) {
	v.value = val
	v.isSet = true
}

func (v NullableNetPeering) IsSet() bool {
	return v.isSet
}

func (v *NullableNetPeering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetPeering(val *NetPeering) *NullableNetPeering {
	return &NullableNetPeering{value: val, isSet: true}
}

func (v NullableNetPeering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetPeering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NetPeeringState Information about the state of the Net peering connection.
type NetPeeringState struct {
	// Additional information about the state of the Net peering connection.
	Message *string `json:"Message,omitempty"`
	// The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).
	Name *string `json:"Name,omitempty"`
}

// NewNetPeeringState instantiates a new NetPeeringState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetPeeringState() *NetPeeringState {
	this := NetPeeringState{}
	return &this
}

// NewNetPeeringStateWithDefaults instantiates a new NetPeeringState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetPeeringStateWithDefaults() *NetPeeringState {
	this := NetPeeringState{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *NetPeeringState) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeeringState) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *NetPeeringState) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *NetPeeringState) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetPeeringState) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetPeeringState) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetPeeringState) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetPeeringState) SetName(v string) {
	o.Name = &v
}

func (o NetPeeringState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["Message"] = o.Message
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableNetPeeringState struct {
	value *NetPeeringState
	isSet bool
}

func (v NullableNetPeeringState) Get() *NetPeeringState {
	return v.value
}

func (v *NullableNetPeeringState) Set(val *NetPeeringState) {
	v.value = val
	v.isSet = true
}

func (v NullableNetPeeringState) IsSet() bool {
	return v.isSet
}

func (v *NullableNetPeeringState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetPeeringState(val *NetPeeringState) *NullableNetPeeringState {
	return &NullableNetPeeringState{value: val, isSet: true}
}

func (v NullableNetPeeringState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetPeeringState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NetToVirtualGatewayLink Information about the attachment.
type NetToVirtualGatewayLink struct {
	// The ID of the Net to which the virtual gateway is attached.
	NetId *string `json:"NetId,omitempty"`
	// The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`).
	State *string `json:"State,omitempty"`
}

// NewNetToVirtualGatewayLink instantiates a new NetToVirtualGatewayLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetToVirtualGatewayLink() *NetToVirtualGatewayLink {
	this := NetToVirtualGatewayLink{}
	return &this
}

// NewNetToVirtualGatewayLinkWithDefaults instantiates a new NetToVirtualGatewayLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetToVirtualGatewayLinkWithDefaults() *NetToVirtualGatewayLink {
	this := NetToVirtualGatewayLink{}
	return &this
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *NetToVirtualGatewayLink) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetToVirtualGatewayLink) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *NetToVirtualGatewayLink) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *NetToVirtualGatewayLink) SetNetId(v string) {
	o.NetId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NetToVirtualGatewayLink) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetToVirtualGatewayLink) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NetToVirtualGatewayLink) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NetToVirtualGatewayLink) SetState(v string) {
	o.State = &v
}

func (o NetToVirtualGatewayLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableNetToVirtualGatewayLink struct {
	value *NetToVirtualGatewayLink
	isSet bool
}

func (v NullableNetToVirtualGatewayLink) Get() *NetToVirtualGatewayLink {
	return v.value
}

func (v *NullableNetToVirtualGatewayLink) Set(val *NetToVirtualGatewayLink) {
	v.value = val
	v.isSet = true
}

func (v NullableNetToVirtualGatewayLink) IsSet() bool {
	return v.isSet
}

func (v *NullableNetToVirtualGatewayLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetToVirtualGatewayLink(val *NetToVirtualGatewayLink) *NullableNetToVirtualGatewayLink {
	return &NullableNetToVirtualGatewayLink{value: val, isSet: true}
}

func (v NullableNetToVirtualGatewayLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetToVirtualGatewayLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Nic Information about the NIC.
type Nic struct {
	// The account ID of the owner of the NIC.
	AccountId *string `json:"AccountId,omitempty"`
	// The description of the NIC.
	Description *string `json:"Description,omitempty"`
	// (Net only) If `true`, the source/destination check is enabled. If `false`, it is disabled. This value must be `false` for a NAT VM to perform network address translation (NAT) in a Net.
	IsSourceDestChecked *bool `json:"IsSourceDestChecked,omitempty"`
	LinkNic *LinkNic `json:"LinkNic,omitempty"`
	LinkPublicIp *LinkPublicIp `json:"LinkPublicIp,omitempty"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress *string `json:"MacAddress,omitempty"`
	// The ID of the Net for the NIC.
	NetId *string `json:"NetId,omitempty"`
	// The ID of the NIC.
	NicId *string `json:"NicId,omitempty"`
	// The name of the private DNS.
	PrivateDnsName *string `json:"PrivateDnsName,omitempty"`
	// The private IP addresses of the NIC.
	PrivateIps *[]PrivateIp `json:"PrivateIps,omitempty"`
	// One or more IDs of security groups for the NIC.
	SecurityGroups *[]SecurityGroupLight `json:"SecurityGroups,omitempty"`
	// The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`).
	State *string `json:"State,omitempty"`
	// The ID of the Subnet.
	SubnetId *string `json:"SubnetId,omitempty"`
	// The Subregion in which the NIC is located.
	SubregionName *string `json:"SubregionName,omitempty"`
	// One or more tags associated with the NIC.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewNic instantiates a new Nic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNic() *Nic {
	this := Nic{}
	return &this
}

// NewNicWithDefaults instantiates a new Nic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNicWithDefaults() *Nic {
	this := Nic{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Nic) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Nic) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Nic) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Nic) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Nic) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Nic) SetDescription(v string) {
	o.Description = &v
}

// GetIsSourceDestChecked returns the IsSourceDestChecked field value if set, zero value otherwise.
func (o *Nic) GetIsSourceDestChecked() bool {
	if o == nil || o.IsSourceDestChecked == nil {
		var ret bool
		return ret
	}
	return *o.IsSourceDestChecked
}

// GetIsSourceDestCheckedOk returns a tuple with the IsSourceDestChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetIsSourceDestCheckedOk() (*bool, bool) {
	if o == nil || o.IsSourceDestChecked == nil {
		return nil, false
	}
	return o.IsSourceDestChecked, true
}

// HasIsSourceDestChecked returns a boolean if a field has been set.
func (o *Nic) HasIsSourceDestChecked() bool {
	if o != nil && o.IsSourceDestChecked != nil {
		return true
	}

	return false
}

// SetIsSourceDestChecked gets a reference to the given bool and assigns it to the IsSourceDestChecked field.
func (o *Nic) SetIsSourceDestChecked(v bool) {
	o.IsSourceDestChecked = &v
}

// GetLinkNic returns the LinkNic field value if set, zero value otherwise.
func (o *Nic) GetLinkNic() LinkNic {
	if o == nil || o.LinkNic == nil {
		var ret LinkNic
		return ret
	}
	return *o.LinkNic
}

// GetLinkNicOk returns a tuple with the LinkNic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetLinkNicOk() (*LinkNic, bool) {
	if o == nil || o.LinkNic == nil {
		return nil, false
	}
	return o.LinkNic, true
}

// HasLinkNic returns a boolean if a field has been set.
func (o *Nic) HasLinkNic() bool {
	if o != nil && o.LinkNic != nil {
		return true
	}

	return false
}

// SetLinkNic gets a reference to the given LinkNic and assigns it to the LinkNic field.
func (o *Nic) SetLinkNic(v LinkNic) {
	o.LinkNic = &v
}

// GetLinkPublicIp returns the LinkPublicIp field value if set, zero value otherwise.
func (o *Nic) GetLinkPublicIp() LinkPublicIp {
	if o == nil || o.LinkPublicIp == nil {
		var ret LinkPublicIp
		return ret
	}
	return *o.LinkPublicIp
}

// GetLinkPublicIpOk returns a tuple with the LinkPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetLinkPublicIpOk() (*LinkPublicIp, bool) {
	if o == nil || o.LinkPublicIp == nil {
		return nil, false
	}
	return o.LinkPublicIp, true
}

// HasLinkPublicIp returns a boolean if a field has been set.
func (o *Nic) HasLinkPublicIp() bool {
	if o != nil && o.LinkPublicIp != nil {
		return true
	}

	return false
}

// SetLinkPublicIp gets a reference to the given LinkPublicIp and assigns it to the LinkPublicIp field.
func (o *Nic) SetLinkPublicIp(v LinkPublicIp) {
	o.LinkPublicIp = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *Nic) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *Nic) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *Nic) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *Nic) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *Nic) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *Nic) SetNetId(v string) {
	o.NetId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *Nic) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *Nic) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *Nic) SetNicId(v string) {
	o.NicId = &v
}

// GetPrivateDnsName returns the PrivateDnsName field value if set, zero value otherwise.
func (o *Nic) GetPrivateDnsName() string {
	if o == nil || o.PrivateDnsName == nil {
		var ret string
		return ret
	}
	return *o.PrivateDnsName
}

// GetPrivateDnsNameOk returns a tuple with the PrivateDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetPrivateDnsNameOk() (*string, bool) {
	if o == nil || o.PrivateDnsName == nil {
		return nil, false
	}
	return o.PrivateDnsName, true
}

// HasPrivateDnsName returns a boolean if a field has been set.
func (o *Nic) HasPrivateDnsName() bool {
	if o != nil && o.PrivateDnsName != nil {
		return true
	}

	return false
}

// SetPrivateDnsName gets a reference to the given string and assigns it to the PrivateDnsName field.
func (o *Nic) SetPrivateDnsName(v string) {
	o.PrivateDnsName = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *Nic) GetPrivateIps() []PrivateIp {
	if o == nil || o.PrivateIps == nil {
		var ret []PrivateIp
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetPrivateIpsOk() (*[]PrivateIp, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *Nic) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []PrivateIp and assigns it to the PrivateIps field.
func (o *Nic) SetPrivateIps(v []PrivateIp) {
	o.PrivateIps = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *Nic) GetSecurityGroups() []SecurityGroupLight {
	if o == nil || o.SecurityGroups == nil {
		var ret []SecurityGroupLight
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetSecurityGroupsOk() (*[]SecurityGroupLight, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *Nic) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []SecurityGroupLight and assigns it to the SecurityGroups field.
func (o *Nic) SetSecurityGroups(v []SecurityGroupLight) {
	o.SecurityGroups = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Nic) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Nic) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Nic) SetState(v string) {
	o.State = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *Nic) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *Nic) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *Nic) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *Nic) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *Nic) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *Nic) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Nic) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nic) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Nic) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Nic) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o Nic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.IsSourceDestChecked != nil {
		toSerialize["IsSourceDestChecked"] = o.IsSourceDestChecked
	}
	if o.LinkNic != nil {
		toSerialize["LinkNic"] = o.LinkNic
	}
	if o.LinkPublicIp != nil {
		toSerialize["LinkPublicIp"] = o.LinkPublicIp
	}
	if o.MacAddress != nil {
		toSerialize["MacAddress"] = o.MacAddress
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateDnsName != nil {
		toSerialize["PrivateDnsName"] = o.PrivateDnsName
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableNic struct {
	value *Nic
	isSet bool
}

func (v NullableNic) Get() *Nic {
	return v.value
}

func (v *NullableNic) Set(val *Nic) {
	v.value = val
	v.isSet = true
}

func (v NullableNic) IsSet() bool {
	return v.isSet
}

func (v *NullableNic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNic(val *Nic) *NullableNic {
	return &NullableNic{value: val, isSet: true}
}

func (v NullableNic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NicForVmCreation Information about the network interface card (NIC) when creating a virtual machine (VM).
type NicForVmCreation struct {
	// If `true`, the NIC is deleted when the VM is terminated. You can specify `true` only if you create a NIC when creating a VM.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The description of the NIC, if you are creating a NIC when creating the VM.
	Description *string `json:"Description,omitempty"`
	// The index of the VM device for the NIC attachment (between 0 and 7, both included). This parameter is required if you create a NIC when creating the VM.
	DeviceNumber *int32 `json:"DeviceNumber,omitempty"`
	// The ID of the NIC, if you are attaching an existing NIC when creating a VM.
	NicId *string `json:"NicId,omitempty"`
	// One or more private IP addresses to assign to the NIC, if you create a NIC when creating a VM. Only one private IP address can be the primary private IP address.
	PrivateIps *[]PrivateIpLight `json:"PrivateIps,omitempty"`
	// The number of secondary private IP addresses, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP address in the `PrivateIps` parameter.
	SecondaryPrivateIpCount *int32 `json:"SecondaryPrivateIpCount,omitempty"`
	// One or more IDs of security groups for the NIC, if you acreate a NIC when creating a VM.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
	// The ID of the Subnet for the NIC, if you create a NIC when creating a VM.
	SubnetId *string `json:"SubnetId,omitempty"`
}

// NewNicForVmCreation instantiates a new NicForVmCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNicForVmCreation() *NicForVmCreation {
	this := NicForVmCreation{}
	return &this
}

// NewNicForVmCreationWithDefaults instantiates a new NicForVmCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNicForVmCreationWithDefaults() *NicForVmCreation {
	this := NicForVmCreation{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *NicForVmCreation) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *NicForVmCreation) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *NicForVmCreation) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NicForVmCreation) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NicForVmCreation) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NicForVmCreation) SetDescription(v string) {
	o.Description = &v
}

// GetDeviceNumber returns the DeviceNumber field value if set, zero value otherwise.
func (o *NicForVmCreation) GetDeviceNumber() int32 {
	if o == nil || o.DeviceNumber == nil {
		var ret int32
		return ret
	}
	return *o.DeviceNumber
}

// GetDeviceNumberOk returns a tuple with the DeviceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetDeviceNumberOk() (*int32, bool) {
	if o == nil || o.DeviceNumber == nil {
		return nil, false
	}
	return o.DeviceNumber, true
}

// HasDeviceNumber returns a boolean if a field has been set.
func (o *NicForVmCreation) HasDeviceNumber() bool {
	if o != nil && o.DeviceNumber != nil {
		return true
	}

	return false
}

// SetDeviceNumber gets a reference to the given int32 and assigns it to the DeviceNumber field.
func (o *NicForVmCreation) SetDeviceNumber(v int32) {
	o.DeviceNumber = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *NicForVmCreation) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *NicForVmCreation) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *NicForVmCreation) SetNicId(v string) {
	o.NicId = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *NicForVmCreation) GetPrivateIps() []PrivateIpLight {
	if o == nil || o.PrivateIps == nil {
		var ret []PrivateIpLight
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetPrivateIpsOk() (*[]PrivateIpLight, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *NicForVmCreation) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []PrivateIpLight and assigns it to the PrivateIps field.
func (o *NicForVmCreation) SetPrivateIps(v []PrivateIpLight) {
	o.PrivateIps = &v
}

// GetSecondaryPrivateIpCount returns the SecondaryPrivateIpCount field value if set, zero value otherwise.
func (o *NicForVmCreation) GetSecondaryPrivateIpCount() int32 {
	if o == nil || o.SecondaryPrivateIpCount == nil {
		var ret int32
		return ret
	}
	return *o.SecondaryPrivateIpCount
}

// GetSecondaryPrivateIpCountOk returns a tuple with the SecondaryPrivateIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetSecondaryPrivateIpCountOk() (*int32, bool) {
	if o == nil || o.SecondaryPrivateIpCount == nil {
		return nil, false
	}
	return o.SecondaryPrivateIpCount, true
}

// HasSecondaryPrivateIpCount returns a boolean if a field has been set.
func (o *NicForVmCreation) HasSecondaryPrivateIpCount() bool {
	if o != nil && o.SecondaryPrivateIpCount != nil {
		return true
	}

	return false
}

// SetSecondaryPrivateIpCount gets a reference to the given int32 and assigns it to the SecondaryPrivateIpCount field.
func (o *NicForVmCreation) SetSecondaryPrivateIpCount(v int32) {
	o.SecondaryPrivateIpCount = &v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *NicForVmCreation) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *NicForVmCreation) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *NicForVmCreation) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *NicForVmCreation) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicForVmCreation) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *NicForVmCreation) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *NicForVmCreation) SetSubnetId(v string) {
	o.SubnetId = &v
}

func (o NicForVmCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DeviceNumber != nil {
		toSerialize["DeviceNumber"] = o.DeviceNumber
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecondaryPrivateIpCount != nil {
		toSerialize["SecondaryPrivateIpCount"] = o.SecondaryPrivateIpCount
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableNicForVmCreation struct {
	value *NicForVmCreation
	isSet bool
}

func (v NullableNicForVmCreation) Get() *NicForVmCreation {
	return v.value
}

func (v *NullableNicForVmCreation) Set(val *NicForVmCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableNicForVmCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableNicForVmCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNicForVmCreation(val *NicForVmCreation) *NullableNicForVmCreation {
	return &NullableNicForVmCreation{value: val, isSet: true}
}

func (v NullableNicForVmCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNicForVmCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// NicLight Information about the network interface card (NIC).
type NicLight struct {
	// The account ID of the owner of the NIC.
	AccountId *string `json:"AccountId,omitempty"`
	// The description of the NIC.
	Description *string `json:"Description,omitempty"`
	// (Net only) If `true`, the source/destination check is enabled. If `false`, it is disabled. This value must be `false` for a NAT VM to perform network address translation (NAT) in a Net.
	IsSourceDestChecked *bool `json:"IsSourceDestChecked,omitempty"`
	LinkNic *LinkNicLight `json:"LinkNic,omitempty"`
	LinkPublicIp *LinkPublicIpLightForVm `json:"LinkPublicIp,omitempty"`
	// The Media Access Control (MAC) address of the NIC.
	MacAddress *string `json:"MacAddress,omitempty"`
	// The ID of the Net for the NIC.
	NetId *string `json:"NetId,omitempty"`
	// The ID of the NIC.
	NicId *string `json:"NicId,omitempty"`
	// The name of the private DNS.
	PrivateDnsName *string `json:"PrivateDnsName,omitempty"`
	// The private IP address or addresses of the NIC.
	PrivateIps *[]PrivateIpLightForVm `json:"PrivateIps,omitempty"`
	// One or more IDs of security groups for the NIC.
	SecurityGroups *[]SecurityGroupLight `json:"SecurityGroups,omitempty"`
	// The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`).
	State *string `json:"State,omitempty"`
	// The ID of the Subnet for the NIC.
	SubnetId *string `json:"SubnetId,omitempty"`
}

// NewNicLight instantiates a new NicLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNicLight() *NicLight {
	this := NicLight{}
	return &this
}

// NewNicLightWithDefaults instantiates a new NicLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNicLightWithDefaults() *NicLight {
	this := NicLight{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *NicLight) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *NicLight) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *NicLight) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NicLight) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NicLight) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NicLight) SetDescription(v string) {
	o.Description = &v
}

// GetIsSourceDestChecked returns the IsSourceDestChecked field value if set, zero value otherwise.
func (o *NicLight) GetIsSourceDestChecked() bool {
	if o == nil || o.IsSourceDestChecked == nil {
		var ret bool
		return ret
	}
	return *o.IsSourceDestChecked
}

// GetIsSourceDestCheckedOk returns a tuple with the IsSourceDestChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetIsSourceDestCheckedOk() (*bool, bool) {
	if o == nil || o.IsSourceDestChecked == nil {
		return nil, false
	}
	return o.IsSourceDestChecked, true
}

// HasIsSourceDestChecked returns a boolean if a field has been set.
func (o *NicLight) HasIsSourceDestChecked() bool {
	if o != nil && o.IsSourceDestChecked != nil {
		return true
	}

	return false
}

// SetIsSourceDestChecked gets a reference to the given bool and assigns it to the IsSourceDestChecked field.
func (o *NicLight) SetIsSourceDestChecked(v bool) {
	o.IsSourceDestChecked = &v
}

// GetLinkNic returns the LinkNic field value if set, zero value otherwise.
func (o *NicLight) GetLinkNic() LinkNicLight {
	if o == nil || o.LinkNic == nil {
		var ret LinkNicLight
		return ret
	}
	return *o.LinkNic
}

// GetLinkNicOk returns a tuple with the LinkNic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetLinkNicOk() (*LinkNicLight, bool) {
	if o == nil || o.LinkNic == nil {
		return nil, false
	}
	return o.LinkNic, true
}

// HasLinkNic returns a boolean if a field has been set.
func (o *NicLight) HasLinkNic() bool {
	if o != nil && o.LinkNic != nil {
		return true
	}

	return false
}

// SetLinkNic gets a reference to the given LinkNicLight and assigns it to the LinkNic field.
func (o *NicLight) SetLinkNic(v LinkNicLight) {
	o.LinkNic = &v
}

// GetLinkPublicIp returns the LinkPublicIp field value if set, zero value otherwise.
func (o *NicLight) GetLinkPublicIp() LinkPublicIpLightForVm {
	if o == nil || o.LinkPublicIp == nil {
		var ret LinkPublicIpLightForVm
		return ret
	}
	return *o.LinkPublicIp
}

// GetLinkPublicIpOk returns a tuple with the LinkPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetLinkPublicIpOk() (*LinkPublicIpLightForVm, bool) {
	if o == nil || o.LinkPublicIp == nil {
		return nil, false
	}
	return o.LinkPublicIp, true
}

// HasLinkPublicIp returns a boolean if a field has been set.
func (o *NicLight) HasLinkPublicIp() bool {
	if o != nil && o.LinkPublicIp != nil {
		return true
	}

	return false
}

// SetLinkPublicIp gets a reference to the given LinkPublicIpLightForVm and assigns it to the LinkPublicIp field.
func (o *NicLight) SetLinkPublicIp(v LinkPublicIpLightForVm) {
	o.LinkPublicIp = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *NicLight) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NicLight) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *NicLight) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *NicLight) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *NicLight) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *NicLight) SetNetId(v string) {
	o.NetId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *NicLight) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *NicLight) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *NicLight) SetNicId(v string) {
	o.NicId = &v
}

// GetPrivateDnsName returns the PrivateDnsName field value if set, zero value otherwise.
func (o *NicLight) GetPrivateDnsName() string {
	if o == nil || o.PrivateDnsName == nil {
		var ret string
		return ret
	}
	return *o.PrivateDnsName
}

// GetPrivateDnsNameOk returns a tuple with the PrivateDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetPrivateDnsNameOk() (*string, bool) {
	if o == nil || o.PrivateDnsName == nil {
		return nil, false
	}
	return o.PrivateDnsName, true
}

// HasPrivateDnsName returns a boolean if a field has been set.
func (o *NicLight) HasPrivateDnsName() bool {
	if o != nil && o.PrivateDnsName != nil {
		return true
	}

	return false
}

// SetPrivateDnsName gets a reference to the given string and assigns it to the PrivateDnsName field.
func (o *NicLight) SetPrivateDnsName(v string) {
	o.PrivateDnsName = &v
}

// GetPrivateIps returns the PrivateIps field value if set, zero value otherwise.
func (o *NicLight) GetPrivateIps() []PrivateIpLightForVm {
	if o == nil || o.PrivateIps == nil {
		var ret []PrivateIpLightForVm
		return ret
	}
	return *o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetPrivateIpsOk() (*[]PrivateIpLightForVm, bool) {
	if o == nil || o.PrivateIps == nil {
		return nil, false
	}
	return o.PrivateIps, true
}

// HasPrivateIps returns a boolean if a field has been set.
func (o *NicLight) HasPrivateIps() bool {
	if o != nil && o.PrivateIps != nil {
		return true
	}

	return false
}

// SetPrivateIps gets a reference to the given []PrivateIpLightForVm and assigns it to the PrivateIps field.
func (o *NicLight) SetPrivateIps(v []PrivateIpLightForVm) {
	o.PrivateIps = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *NicLight) GetSecurityGroups() []SecurityGroupLight {
	if o == nil || o.SecurityGroups == nil {
		var ret []SecurityGroupLight
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetSecurityGroupsOk() (*[]SecurityGroupLight, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *NicLight) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []SecurityGroupLight and assigns it to the SecurityGroups field.
func (o *NicLight) SetSecurityGroups(v []SecurityGroupLight) {
	o.SecurityGroups = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NicLight) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NicLight) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NicLight) SetState(v string) {
	o.State = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *NicLight) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NicLight) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *NicLight) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *NicLight) SetSubnetId(v string) {
	o.SubnetId = &v
}

func (o NicLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.IsSourceDestChecked != nil {
		toSerialize["IsSourceDestChecked"] = o.IsSourceDestChecked
	}
	if o.LinkNic != nil {
		toSerialize["LinkNic"] = o.LinkNic
	}
	if o.LinkPublicIp != nil {
		toSerialize["LinkPublicIp"] = o.LinkPublicIp
	}
	if o.MacAddress != nil {
		toSerialize["MacAddress"] = o.MacAddress
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateDnsName != nil {
		toSerialize["PrivateDnsName"] = o.PrivateDnsName
	}
	if o.PrivateIps != nil {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableNicLight struct {
	value *NicLight
	isSet bool
}

func (v NullableNicLight) Get() *NicLight {
	return v.value
}

func (v *NullableNicLight) Set(val *NicLight) {
	v.value = val
	v.isSet = true
}

func (v NullableNicLight) IsSet() bool {
	return v.isSet
}

func (v *NullableNicLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNicLight(val *NicLight) *NullableNicLight {
	return &NullableNicLight{value: val, isSet: true}
}

func (v NullableNicLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNicLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// OsuApiKey Information about the OSU API key.
type OsuApiKey struct {
	// The API key of the OSU account that enables you to access the bucket.
	ApiKeyId *string `json:"ApiKeyId,omitempty"`
	// The secret key of the OSU account that enables you to access the bucket.
	SecretKey *string `json:"SecretKey,omitempty"`
}

// NewOsuApiKey instantiates a new OsuApiKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsuApiKey() *OsuApiKey {
	this := OsuApiKey{}
	return &this
}

// NewOsuApiKeyWithDefaults instantiates a new OsuApiKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsuApiKeyWithDefaults() *OsuApiKey {
	this := OsuApiKey{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value if set, zero value otherwise.
func (o *OsuApiKey) GetApiKeyId() string {
	if o == nil || o.ApiKeyId == nil {
		var ret string
		return ret
	}
	return *o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsuApiKey) GetApiKeyIdOk() (*string, bool) {
	if o == nil || o.ApiKeyId == nil {
		return nil, false
	}
	return o.ApiKeyId, true
}

// HasApiKeyId returns a boolean if a field has been set.
func (o *OsuApiKey) HasApiKeyId() bool {
	if o != nil && o.ApiKeyId != nil {
		return true
	}

	return false
}

// SetApiKeyId gets a reference to the given string and assigns it to the ApiKeyId field.
func (o *OsuApiKey) SetApiKeyId(v string) {
	o.ApiKeyId = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *OsuApiKey) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsuApiKey) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *OsuApiKey) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *OsuApiKey) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o OsuApiKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKeyId != nil {
		toSerialize["ApiKeyId"] = o.ApiKeyId
	}
	if o.SecretKey != nil {
		toSerialize["SecretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableOsuApiKey struct {
	value *OsuApiKey
	isSet bool
}

func (v NullableOsuApiKey) Get() *OsuApiKey {
	return v.value
}

func (v *NullableOsuApiKey) Set(val *OsuApiKey) {
	v.value = val
	v.isSet = true
}

func (v NullableOsuApiKey) IsSet() bool {
	return v.isSet
}

func (v *NullableOsuApiKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsuApiKey(val *OsuApiKey) *NullableOsuApiKey {
	return &NullableOsuApiKey{value: val, isSet: true}
}

func (v NullableOsuApiKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsuApiKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// OsuExport Information about the OSU export.
type OsuExport struct {
	// The format of the export disk (`qcow2` \\| `raw`).
	DiskImageFormat string `json:"DiskImageFormat"`
	OsuApiKey *OsuApiKey `json:"OsuApiKey,omitempty"`
	// The name of the OSU bucket where you want to export the object.
	OsuBucket string `json:"OsuBucket"`
	// The URL of the manifest file.
	OsuManifestUrl *string `json:"OsuManifestUrl,omitempty"`
	// The prefix for the key of the OSU object.
	OsuPrefix *string `json:"OsuPrefix,omitempty"`
}

// NewOsuExport instantiates a new OsuExport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsuExport(diskImageFormat string, osuBucket string, ) *OsuExport {
	this := OsuExport{}
	this.DiskImageFormat = diskImageFormat
	this.OsuBucket = osuBucket
	return &this
}

// NewOsuExportWithDefaults instantiates a new OsuExport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsuExportWithDefaults() *OsuExport {
	this := OsuExport{}
	return &this
}

// GetDiskImageFormat returns the DiskImageFormat field value
func (o *OsuExport) GetDiskImageFormat() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DiskImageFormat
}

// GetDiskImageFormatOk returns a tuple with the DiskImageFormat field value
// and a boolean to check if the value has been set.
func (o *OsuExport) GetDiskImageFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DiskImageFormat, true
}

// SetDiskImageFormat sets field value
func (o *OsuExport) SetDiskImageFormat(v string) {
	o.DiskImageFormat = v
}

// GetOsuApiKey returns the OsuApiKey field value if set, zero value otherwise.
func (o *OsuExport) GetOsuApiKey() OsuApiKey {
	if o == nil || o.OsuApiKey == nil {
		var ret OsuApiKey
		return ret
	}
	return *o.OsuApiKey
}

// GetOsuApiKeyOk returns a tuple with the OsuApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsuExport) GetOsuApiKeyOk() (*OsuApiKey, bool) {
	if o == nil || o.OsuApiKey == nil {
		return nil, false
	}
	return o.OsuApiKey, true
}

// HasOsuApiKey returns a boolean if a field has been set.
func (o *OsuExport) HasOsuApiKey() bool {
	if o != nil && o.OsuApiKey != nil {
		return true
	}

	return false
}

// SetOsuApiKey gets a reference to the given OsuApiKey and assigns it to the OsuApiKey field.
func (o *OsuExport) SetOsuApiKey(v OsuApiKey) {
	o.OsuApiKey = &v
}

// GetOsuBucket returns the OsuBucket field value
func (o *OsuExport) GetOsuBucket() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OsuBucket
}

// GetOsuBucketOk returns a tuple with the OsuBucket field value
// and a boolean to check if the value has been set.
func (o *OsuExport) GetOsuBucketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OsuBucket, true
}

// SetOsuBucket sets field value
func (o *OsuExport) SetOsuBucket(v string) {
	o.OsuBucket = v
}

// GetOsuManifestUrl returns the OsuManifestUrl field value if set, zero value otherwise.
func (o *OsuExport) GetOsuManifestUrl() string {
	if o == nil || o.OsuManifestUrl == nil {
		var ret string
		return ret
	}
	return *o.OsuManifestUrl
}

// GetOsuManifestUrlOk returns a tuple with the OsuManifestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsuExport) GetOsuManifestUrlOk() (*string, bool) {
	if o == nil || o.OsuManifestUrl == nil {
		return nil, false
	}
	return o.OsuManifestUrl, true
}

// HasOsuManifestUrl returns a boolean if a field has been set.
func (o *OsuExport) HasOsuManifestUrl() bool {
	if o != nil && o.OsuManifestUrl != nil {
		return true
	}

	return false
}

// SetOsuManifestUrl gets a reference to the given string and assigns it to the OsuManifestUrl field.
func (o *OsuExport) SetOsuManifestUrl(v string) {
	o.OsuManifestUrl = &v
}

// GetOsuPrefix returns the OsuPrefix field value if set, zero value otherwise.
func (o *OsuExport) GetOsuPrefix() string {
	if o == nil || o.OsuPrefix == nil {
		var ret string
		return ret
	}
	return *o.OsuPrefix
}

// GetOsuPrefixOk returns a tuple with the OsuPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsuExport) GetOsuPrefixOk() (*string, bool) {
	if o == nil || o.OsuPrefix == nil {
		return nil, false
	}
	return o.OsuPrefix, true
}

// HasOsuPrefix returns a boolean if a field has been set.
func (o *OsuExport) HasOsuPrefix() bool {
	if o != nil && o.OsuPrefix != nil {
		return true
	}

	return false
}

// SetOsuPrefix gets a reference to the given string and assigns it to the OsuPrefix field.
func (o *OsuExport) SetOsuPrefix(v string) {
	o.OsuPrefix = &v
}

func (o OsuExport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DiskImageFormat"] = o.DiskImageFormat
	}
	if o.OsuApiKey != nil {
		toSerialize["OsuApiKey"] = o.OsuApiKey
	}
	if true {
		toSerialize["OsuBucket"] = o.OsuBucket
	}
	if o.OsuManifestUrl != nil {
		toSerialize["OsuManifestUrl"] = o.OsuManifestUrl
	}
	if o.OsuPrefix != nil {
		toSerialize["OsuPrefix"] = o.OsuPrefix
	}
	return json.Marshal(toSerialize)
}

type NullableOsuExport struct {
	value *OsuExport
	isSet bool
}

func (v NullableOsuExport) Get() *OsuExport {
	return v.value
}

func (v *NullableOsuExport) Set(val *OsuExport) {
	v.value = val
	v.isSet = true
}

func (v NullableOsuExport) IsSet() bool {
	return v.isSet
}

func (v *NullableOsuExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsuExport(val *OsuExport) *NullableOsuExport {
	return &NullableOsuExport{value: val, isSet: true}
}

func (v NullableOsuExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsuExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PermissionsOnResource Information about the users who have permissions for the resource.
type PermissionsOnResource struct {
	// The account ID of one or more users who have permissions for the resource.
	AccountIds *[]string `json:"AccountIds,omitempty"`
	// If `true`, the resource is public. If `false`, the resource is private.
	GlobalPermission *bool `json:"GlobalPermission,omitempty"`
}

// NewPermissionsOnResource instantiates a new PermissionsOnResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsOnResource() *PermissionsOnResource {
	this := PermissionsOnResource{}
	return &this
}

// NewPermissionsOnResourceWithDefaults instantiates a new PermissionsOnResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsOnResourceWithDefaults() *PermissionsOnResource {
	this := PermissionsOnResource{}
	return &this
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *PermissionsOnResource) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResource) GetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *PermissionsOnResource) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *PermissionsOnResource) SetAccountIds(v []string) {
	o.AccountIds = &v
}

// GetGlobalPermission returns the GlobalPermission field value if set, zero value otherwise.
func (o *PermissionsOnResource) GetGlobalPermission() bool {
	if o == nil || o.GlobalPermission == nil {
		var ret bool
		return ret
	}
	return *o.GlobalPermission
}

// GetGlobalPermissionOk returns a tuple with the GlobalPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResource) GetGlobalPermissionOk() (*bool, bool) {
	if o == nil || o.GlobalPermission == nil {
		return nil, false
	}
	return o.GlobalPermission, true
}

// HasGlobalPermission returns a boolean if a field has been set.
func (o *PermissionsOnResource) HasGlobalPermission() bool {
	if o != nil && o.GlobalPermission != nil {
		return true
	}

	return false
}

// SetGlobalPermission gets a reference to the given bool and assigns it to the GlobalPermission field.
func (o *PermissionsOnResource) SetGlobalPermission(v bool) {
	o.GlobalPermission = &v
}

func (o PermissionsOnResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountIds != nil {
		toSerialize["AccountIds"] = o.AccountIds
	}
	if o.GlobalPermission != nil {
		toSerialize["GlobalPermission"] = o.GlobalPermission
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionsOnResource struct {
	value *PermissionsOnResource
	isSet bool
}

func (v NullablePermissionsOnResource) Get() *PermissionsOnResource {
	return v.value
}

func (v *NullablePermissionsOnResource) Set(val *PermissionsOnResource) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsOnResource) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsOnResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsOnResource(val *PermissionsOnResource) *NullablePermissionsOnResource {
	return &NullablePermissionsOnResource{value: val, isSet: true}
}

func (v NullablePermissionsOnResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsOnResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PermissionsOnResourceCreation Information about the permissions for the resource.
type PermissionsOnResourceCreation struct {
	Additions *PermissionsOnResource `json:"Additions,omitempty"`
	Removals *PermissionsOnResource `json:"Removals,omitempty"`
}

// NewPermissionsOnResourceCreation instantiates a new PermissionsOnResourceCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsOnResourceCreation() *PermissionsOnResourceCreation {
	this := PermissionsOnResourceCreation{}
	return &this
}

// NewPermissionsOnResourceCreationWithDefaults instantiates a new PermissionsOnResourceCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsOnResourceCreationWithDefaults() *PermissionsOnResourceCreation {
	this := PermissionsOnResourceCreation{}
	return &this
}

// GetAdditions returns the Additions field value if set, zero value otherwise.
func (o *PermissionsOnResourceCreation) GetAdditions() PermissionsOnResource {
	if o == nil || o.Additions == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.Additions
}

// GetAdditionsOk returns a tuple with the Additions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResourceCreation) GetAdditionsOk() (*PermissionsOnResource, bool) {
	if o == nil || o.Additions == nil {
		return nil, false
	}
	return o.Additions, true
}

// HasAdditions returns a boolean if a field has been set.
func (o *PermissionsOnResourceCreation) HasAdditions() bool {
	if o != nil && o.Additions != nil {
		return true
	}

	return false
}

// SetAdditions gets a reference to the given PermissionsOnResource and assigns it to the Additions field.
func (o *PermissionsOnResourceCreation) SetAdditions(v PermissionsOnResource) {
	o.Additions = &v
}

// GetRemovals returns the Removals field value if set, zero value otherwise.
func (o *PermissionsOnResourceCreation) GetRemovals() PermissionsOnResource {
	if o == nil || o.Removals == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.Removals
}

// GetRemovalsOk returns a tuple with the Removals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResourceCreation) GetRemovalsOk() (*PermissionsOnResource, bool) {
	if o == nil || o.Removals == nil {
		return nil, false
	}
	return o.Removals, true
}

// HasRemovals returns a boolean if a field has been set.
func (o *PermissionsOnResourceCreation) HasRemovals() bool {
	if o != nil && o.Removals != nil {
		return true
	}

	return false
}

// SetRemovals gets a reference to the given PermissionsOnResource and assigns it to the Removals field.
func (o *PermissionsOnResourceCreation) SetRemovals(v PermissionsOnResource) {
	o.Removals = &v
}

func (o PermissionsOnResourceCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Additions != nil {
		toSerialize["Additions"] = o.Additions
	}
	if o.Removals != nil {
		toSerialize["Removals"] = o.Removals
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionsOnResourceCreation struct {
	value *PermissionsOnResourceCreation
	isSet bool
}

func (v NullablePermissionsOnResourceCreation) Get() *PermissionsOnResourceCreation {
	return v.value
}

func (v *NullablePermissionsOnResourceCreation) Set(val *PermissionsOnResourceCreation) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsOnResourceCreation) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsOnResourceCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsOnResourceCreation(val *PermissionsOnResourceCreation) *NullablePermissionsOnResourceCreation {
	return &NullablePermissionsOnResourceCreation{value: val, isSet: true}
}

func (v NullablePermissionsOnResourceCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsOnResourceCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Placement Information about the placement of the VM.
type Placement struct {
	// The name of the Subregion.
	SubregionName *string `json:"SubregionName,omitempty"`
	// The tenancy of the VM (`default` \\| `dedicated`).
	Tenancy *string `json:"Tenancy,omitempty"`
}

// NewPlacement instantiates a new Placement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacement() *Placement {
	this := Placement{}
	return &this
}

// NewPlacementWithDefaults instantiates a new Placement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementWithDefaults() *Placement {
	this := Placement{}
	return &this
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *Placement) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Placement) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *Placement) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *Placement) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetTenancy returns the Tenancy field value if set, zero value otherwise.
func (o *Placement) GetTenancy() string {
	if o == nil || o.Tenancy == nil {
		var ret string
		return ret
	}
	return *o.Tenancy
}

// GetTenancyOk returns a tuple with the Tenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Placement) GetTenancyOk() (*string, bool) {
	if o == nil || o.Tenancy == nil {
		return nil, false
	}
	return o.Tenancy, true
}

// HasTenancy returns a boolean if a field has been set.
func (o *Placement) HasTenancy() bool {
	if o != nil && o.Tenancy != nil {
		return true
	}

	return false
}

// SetTenancy gets a reference to the given string and assigns it to the Tenancy field.
func (o *Placement) SetTenancy(v string) {
	o.Tenancy = &v
}

func (o Placement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.Tenancy != nil {
		toSerialize["Tenancy"] = o.Tenancy
	}
	return json.Marshal(toSerialize)
}

type NullablePlacement struct {
	value *Placement
	isSet bool
}

func (v NullablePlacement) Get() *Placement {
	return v.value
}

func (v *NullablePlacement) Set(val *Placement) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacement) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacement(val *Placement) *NullablePlacement {
	return &NullablePlacement{value: val, isSet: true}
}

func (v NullablePlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PrivateIp Information about the private IP.
type PrivateIp struct {
	// If `true`, the IP address is the primary private IP address of the NIC.
	IsPrimary *bool `json:"IsPrimary,omitempty"`
	LinkPublicIp *LinkPublicIp `json:"LinkPublicIp,omitempty"`
	// The name of the private DNS.
	PrivateDnsName *string `json:"PrivateDnsName,omitempty"`
	// The private IP address of the NIC.
	PrivateIp *string `json:"PrivateIp,omitempty"`
}

// NewPrivateIp instantiates a new PrivateIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateIp() *PrivateIp {
	this := PrivateIp{}
	return &this
}

// NewPrivateIpWithDefaults instantiates a new PrivateIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateIpWithDefaults() *PrivateIp {
	this := PrivateIp{}
	return &this
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *PrivateIp) GetIsPrimary() bool {
	if o == nil || o.IsPrimary == nil {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIp) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || o.IsPrimary == nil {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *PrivateIp) HasIsPrimary() bool {
	if o != nil && o.IsPrimary != nil {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *PrivateIp) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetLinkPublicIp returns the LinkPublicIp field value if set, zero value otherwise.
func (o *PrivateIp) GetLinkPublicIp() LinkPublicIp {
	if o == nil || o.LinkPublicIp == nil {
		var ret LinkPublicIp
		return ret
	}
	return *o.LinkPublicIp
}

// GetLinkPublicIpOk returns a tuple with the LinkPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIp) GetLinkPublicIpOk() (*LinkPublicIp, bool) {
	if o == nil || o.LinkPublicIp == nil {
		return nil, false
	}
	return o.LinkPublicIp, true
}

// HasLinkPublicIp returns a boolean if a field has been set.
func (o *PrivateIp) HasLinkPublicIp() bool {
	if o != nil && o.LinkPublicIp != nil {
		return true
	}

	return false
}

// SetLinkPublicIp gets a reference to the given LinkPublicIp and assigns it to the LinkPublicIp field.
func (o *PrivateIp) SetLinkPublicIp(v LinkPublicIp) {
	o.LinkPublicIp = &v
}

// GetPrivateDnsName returns the PrivateDnsName field value if set, zero value otherwise.
func (o *PrivateIp) GetPrivateDnsName() string {
	if o == nil || o.PrivateDnsName == nil {
		var ret string
		return ret
	}
	return *o.PrivateDnsName
}

// GetPrivateDnsNameOk returns a tuple with the PrivateDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIp) GetPrivateDnsNameOk() (*string, bool) {
	if o == nil || o.PrivateDnsName == nil {
		return nil, false
	}
	return o.PrivateDnsName, true
}

// HasPrivateDnsName returns a boolean if a field has been set.
func (o *PrivateIp) HasPrivateDnsName() bool {
	if o != nil && o.PrivateDnsName != nil {
		return true
	}

	return false
}

// SetPrivateDnsName gets a reference to the given string and assigns it to the PrivateDnsName field.
func (o *PrivateIp) SetPrivateDnsName(v string) {
	o.PrivateDnsName = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *PrivateIp) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIp) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *PrivateIp) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *PrivateIp) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

func (o PrivateIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPrimary != nil {
		toSerialize["IsPrimary"] = o.IsPrimary
	}
	if o.LinkPublicIp != nil {
		toSerialize["LinkPublicIp"] = o.LinkPublicIp
	}
	if o.PrivateDnsName != nil {
		toSerialize["PrivateDnsName"] = o.PrivateDnsName
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateIp struct {
	value *PrivateIp
	isSet bool
}

func (v NullablePrivateIp) Get() *PrivateIp {
	return v.value
}

func (v *NullablePrivateIp) Set(val *PrivateIp) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateIp) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateIp(val *PrivateIp) *NullablePrivateIp {
	return &NullablePrivateIp{value: val, isSet: true}
}

func (v NullablePrivateIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PrivateIpLight Information about the private IP.
type PrivateIpLight struct {
	// If `true`, the IP address is the primary private IP address of the NIC.
	IsPrimary *bool `json:"IsPrimary,omitempty"`
	// The private IP address of the NIC.
	PrivateIp *string `json:"PrivateIp,omitempty"`
}

// NewPrivateIpLight instantiates a new PrivateIpLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateIpLight() *PrivateIpLight {
	this := PrivateIpLight{}
	return &this
}

// NewPrivateIpLightWithDefaults instantiates a new PrivateIpLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateIpLightWithDefaults() *PrivateIpLight {
	this := PrivateIpLight{}
	return &this
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *PrivateIpLight) GetIsPrimary() bool {
	if o == nil || o.IsPrimary == nil {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLight) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || o.IsPrimary == nil {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *PrivateIpLight) HasIsPrimary() bool {
	if o != nil && o.IsPrimary != nil {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *PrivateIpLight) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *PrivateIpLight) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLight) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *PrivateIpLight) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *PrivateIpLight) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

func (o PrivateIpLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPrimary != nil {
		toSerialize["IsPrimary"] = o.IsPrimary
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateIpLight struct {
	value *PrivateIpLight
	isSet bool
}

func (v NullablePrivateIpLight) Get() *PrivateIpLight {
	return v.value
}

func (v *NullablePrivateIpLight) Set(val *PrivateIpLight) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateIpLight) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateIpLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateIpLight(val *PrivateIpLight) *NullablePrivateIpLight {
	return &NullablePrivateIpLight{value: val, isSet: true}
}

func (v NullablePrivateIpLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateIpLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PrivateIpLightForVm Information about the private IP of the NIC.
type PrivateIpLightForVm struct {
	// If `true`, the IP address is the primary private IP address of the NIC.
	IsPrimary *bool `json:"IsPrimary,omitempty"`
	LinkPublicIp *LinkPublicIpLightForVm `json:"LinkPublicIp,omitempty"`
	// The name of the private DNS.
	PrivateDnsName *string `json:"PrivateDnsName,omitempty"`
	// The private IP address.
	PrivateIp *string `json:"PrivateIp,omitempty"`
}

// NewPrivateIpLightForVm instantiates a new PrivateIpLightForVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateIpLightForVm() *PrivateIpLightForVm {
	this := PrivateIpLightForVm{}
	return &this
}

// NewPrivateIpLightForVmWithDefaults instantiates a new PrivateIpLightForVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateIpLightForVmWithDefaults() *PrivateIpLightForVm {
	this := PrivateIpLightForVm{}
	return &this
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *PrivateIpLightForVm) GetIsPrimary() bool {
	if o == nil || o.IsPrimary == nil {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLightForVm) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || o.IsPrimary == nil {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *PrivateIpLightForVm) HasIsPrimary() bool {
	if o != nil && o.IsPrimary != nil {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *PrivateIpLightForVm) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetLinkPublicIp returns the LinkPublicIp field value if set, zero value otherwise.
func (o *PrivateIpLightForVm) GetLinkPublicIp() LinkPublicIpLightForVm {
	if o == nil || o.LinkPublicIp == nil {
		var ret LinkPublicIpLightForVm
		return ret
	}
	return *o.LinkPublicIp
}

// GetLinkPublicIpOk returns a tuple with the LinkPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLightForVm) GetLinkPublicIpOk() (*LinkPublicIpLightForVm, bool) {
	if o == nil || o.LinkPublicIp == nil {
		return nil, false
	}
	return o.LinkPublicIp, true
}

// HasLinkPublicIp returns a boolean if a field has been set.
func (o *PrivateIpLightForVm) HasLinkPublicIp() bool {
	if o != nil && o.LinkPublicIp != nil {
		return true
	}

	return false
}

// SetLinkPublicIp gets a reference to the given LinkPublicIpLightForVm and assigns it to the LinkPublicIp field.
func (o *PrivateIpLightForVm) SetLinkPublicIp(v LinkPublicIpLightForVm) {
	o.LinkPublicIp = &v
}

// GetPrivateDnsName returns the PrivateDnsName field value if set, zero value otherwise.
func (o *PrivateIpLightForVm) GetPrivateDnsName() string {
	if o == nil || o.PrivateDnsName == nil {
		var ret string
		return ret
	}
	return *o.PrivateDnsName
}

// GetPrivateDnsNameOk returns a tuple with the PrivateDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLightForVm) GetPrivateDnsNameOk() (*string, bool) {
	if o == nil || o.PrivateDnsName == nil {
		return nil, false
	}
	return o.PrivateDnsName, true
}

// HasPrivateDnsName returns a boolean if a field has been set.
func (o *PrivateIpLightForVm) HasPrivateDnsName() bool {
	if o != nil && o.PrivateDnsName != nil {
		return true
	}

	return false
}

// SetPrivateDnsName gets a reference to the given string and assigns it to the PrivateDnsName field.
func (o *PrivateIpLightForVm) SetPrivateDnsName(v string) {
	o.PrivateDnsName = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *PrivateIpLightForVm) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateIpLightForVm) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *PrivateIpLightForVm) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *PrivateIpLightForVm) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

func (o PrivateIpLightForVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPrimary != nil {
		toSerialize["IsPrimary"] = o.IsPrimary
	}
	if o.LinkPublicIp != nil {
		toSerialize["LinkPublicIp"] = o.LinkPublicIp
	}
	if o.PrivateDnsName != nil {
		toSerialize["PrivateDnsName"] = o.PrivateDnsName
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateIpLightForVm struct {
	value *PrivateIpLightForVm
	isSet bool
}

func (v NullablePrivateIpLightForVm) Get() *PrivateIpLightForVm {
	return v.value
}

func (v *NullablePrivateIpLightForVm) Set(val *PrivateIpLightForVm) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateIpLightForVm) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateIpLightForVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateIpLightForVm(val *PrivateIpLightForVm) *NullablePrivateIpLightForVm {
	return &NullablePrivateIpLightForVm{value: val, isSet: true}
}

func (v NullablePrivateIpLightForVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateIpLightForVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ProductType Information about the product type.
type ProductType struct {
	// The description of the product type.
	Description *string `json:"Description,omitempty"`
	// The ID of the product type.
	ProductTypeId *string `json:"ProductTypeId,omitempty"`
	// The vendor of the product type.
	Vendor *string `json:"Vendor,omitempty"`
}

// NewProductType instantiates a new ProductType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductType() *ProductType {
	this := ProductType{}
	return &this
}

// NewProductTypeWithDefaults instantiates a new ProductType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductTypeWithDefaults() *ProductType {
	this := ProductType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductType) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductType) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductType) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProductType) SetDescription(v string) {
	o.Description = &v
}

// GetProductTypeId returns the ProductTypeId field value if set, zero value otherwise.
func (o *ProductType) GetProductTypeId() string {
	if o == nil || o.ProductTypeId == nil {
		var ret string
		return ret
	}
	return *o.ProductTypeId
}

// GetProductTypeIdOk returns a tuple with the ProductTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductType) GetProductTypeIdOk() (*string, bool) {
	if o == nil || o.ProductTypeId == nil {
		return nil, false
	}
	return o.ProductTypeId, true
}

// HasProductTypeId returns a boolean if a field has been set.
func (o *ProductType) HasProductTypeId() bool {
	if o != nil && o.ProductTypeId != nil {
		return true
	}

	return false
}

// SetProductTypeId gets a reference to the given string and assigns it to the ProductTypeId field.
func (o *ProductType) SetProductTypeId(v string) {
	o.ProductTypeId = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ProductType) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductType) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ProductType) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ProductType) SetVendor(v string) {
	o.Vendor = &v
}

func (o ProductType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.ProductTypeId != nil {
		toSerialize["ProductTypeId"] = o.ProductTypeId
	}
	if o.Vendor != nil {
		toSerialize["Vendor"] = o.Vendor
	}
	return json.Marshal(toSerialize)
}

type NullableProductType struct {
	value *ProductType
	isSet bool
}

func (v NullableProductType) Get() *ProductType {
	return v.value
}

func (v *NullableProductType) Set(val *ProductType) {
	v.value = val
	v.isSet = true
}

func (v NullableProductType) IsSet() bool {
	return v.isSet
}

func (v *NullableProductType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductType(val *ProductType) *NullableProductType {
	return &NullableProductType{value: val, isSet: true}
}

func (v NullableProductType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PublicIp Information about the public IP.
type PublicIp struct {
	// (Required in a Net) The ID representing the association of the EIP with the VM or the NIC.
	LinkPublicIpId *string `json:"LinkPublicIpId,omitempty"`
	// The account ID of the owner of the NIC.
	NicAccountId *string `json:"NicAccountId,omitempty"`
	// The ID of the NIC the EIP is associated with (if any).
	NicId *string `json:"NicId,omitempty"`
	// The private IP address associated with the EIP.
	PrivateIp *string `json:"PrivateIp,omitempty"`
	// The External IP address (EIP) associated with the NAT service.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The allocation ID of the EIP associated with the NAT service.
	PublicIpId *string `json:"PublicIpId,omitempty"`
	// One or more tags associated with the EIP.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the VM the External IP (EIP) is associated with (if any).
	VmId *string `json:"VmId,omitempty"`
}

// NewPublicIp instantiates a new PublicIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicIp() *PublicIp {
	this := PublicIp{}
	return &this
}

// NewPublicIpWithDefaults instantiates a new PublicIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicIpWithDefaults() *PublicIp {
	this := PublicIp{}
	return &this
}

// GetLinkPublicIpId returns the LinkPublicIpId field value if set, zero value otherwise.
func (o *PublicIp) GetLinkPublicIpId() string {
	if o == nil || o.LinkPublicIpId == nil {
		var ret string
		return ret
	}
	return *o.LinkPublicIpId
}

// GetLinkPublicIpIdOk returns a tuple with the LinkPublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetLinkPublicIpIdOk() (*string, bool) {
	if o == nil || o.LinkPublicIpId == nil {
		return nil, false
	}
	return o.LinkPublicIpId, true
}

// HasLinkPublicIpId returns a boolean if a field has been set.
func (o *PublicIp) HasLinkPublicIpId() bool {
	if o != nil && o.LinkPublicIpId != nil {
		return true
	}

	return false
}

// SetLinkPublicIpId gets a reference to the given string and assigns it to the LinkPublicIpId field.
func (o *PublicIp) SetLinkPublicIpId(v string) {
	o.LinkPublicIpId = &v
}

// GetNicAccountId returns the NicAccountId field value if set, zero value otherwise.
func (o *PublicIp) GetNicAccountId() string {
	if o == nil || o.NicAccountId == nil {
		var ret string
		return ret
	}
	return *o.NicAccountId
}

// GetNicAccountIdOk returns a tuple with the NicAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetNicAccountIdOk() (*string, bool) {
	if o == nil || o.NicAccountId == nil {
		return nil, false
	}
	return o.NicAccountId, true
}

// HasNicAccountId returns a boolean if a field has been set.
func (o *PublicIp) HasNicAccountId() bool {
	if o != nil && o.NicAccountId != nil {
		return true
	}

	return false
}

// SetNicAccountId gets a reference to the given string and assigns it to the NicAccountId field.
func (o *PublicIp) SetNicAccountId(v string) {
	o.NicAccountId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *PublicIp) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *PublicIp) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *PublicIp) SetNicId(v string) {
	o.NicId = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *PublicIp) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *PublicIp) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *PublicIp) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *PublicIp) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *PublicIp) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *PublicIp) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpId returns the PublicIpId field value if set, zero value otherwise.
func (o *PublicIp) GetPublicIpId() string {
	if o == nil || o.PublicIpId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetPublicIpIdOk() (*string, bool) {
	if o == nil || o.PublicIpId == nil {
		return nil, false
	}
	return o.PublicIpId, true
}

// HasPublicIpId returns a boolean if a field has been set.
func (o *PublicIp) HasPublicIpId() bool {
	if o != nil && o.PublicIpId != nil {
		return true
	}

	return false
}

// SetPublicIpId gets a reference to the given string and assigns it to the PublicIpId field.
func (o *PublicIp) SetPublicIpId(v string) {
	o.PublicIpId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PublicIp) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PublicIp) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *PublicIp) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *PublicIp) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIp) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *PublicIp) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *PublicIp) SetVmId(v string) {
	o.VmId = &v
}

func (o PublicIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkPublicIpId != nil {
		toSerialize["LinkPublicIpId"] = o.LinkPublicIpId
	}
	if o.NicAccountId != nil {
		toSerialize["NicAccountId"] = o.NicAccountId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpId != nil {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullablePublicIp struct {
	value *PublicIp
	isSet bool
}

func (v NullablePublicIp) Get() *PublicIp {
	return v.value
}

func (v *NullablePublicIp) Set(val *PublicIp) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicIp) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicIp(val *PublicIp) *NullablePublicIp {
	return &NullablePublicIp{value: val, isSet: true}
}

func (v NullablePublicIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// PublicIpLight Information about the public IP.
type PublicIpLight struct {
	// The External IP address (EIP) associated with the NAT service.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The allocation ID of the EIP associated with the NAT service.
	PublicIpId *string `json:"PublicIpId,omitempty"`
}

// NewPublicIpLight instantiates a new PublicIpLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicIpLight() *PublicIpLight {
	this := PublicIpLight{}
	return &this
}

// NewPublicIpLightWithDefaults instantiates a new PublicIpLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicIpLightWithDefaults() *PublicIpLight {
	this := PublicIpLight{}
	return &this
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *PublicIpLight) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIpLight) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *PublicIpLight) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *PublicIpLight) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicIpId returns the PublicIpId field value if set, zero value otherwise.
func (o *PublicIpLight) GetPublicIpId() string {
	if o == nil || o.PublicIpId == nil {
		var ret string
		return ret
	}
	return *o.PublicIpId
}

// GetPublicIpIdOk returns a tuple with the PublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicIpLight) GetPublicIpIdOk() (*string, bool) {
	if o == nil || o.PublicIpId == nil {
		return nil, false
	}
	return o.PublicIpId, true
}

// HasPublicIpId returns a boolean if a field has been set.
func (o *PublicIpLight) HasPublicIpId() bool {
	if o != nil && o.PublicIpId != nil {
		return true
	}

	return false
}

// SetPublicIpId gets a reference to the given string and assigns it to the PublicIpId field.
func (o *PublicIpLight) SetPublicIpId(v string) {
	o.PublicIpId = &v
}

func (o PublicIpLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.PublicIpId != nil {
		toSerialize["PublicIpId"] = o.PublicIpId
	}
	return json.Marshal(toSerialize)
}

type NullablePublicIpLight struct {
	value *PublicIpLight
	isSet bool
}

func (v NullablePublicIpLight) Get() *PublicIpLight {
	return v.value
}

func (v *NullablePublicIpLight) Set(val *PublicIpLight) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicIpLight) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicIpLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicIpLight(val *PublicIpLight) *NullablePublicIpLight {
	return &NullablePublicIpLight{value: val, isSet: true}
}

func (v NullablePublicIpLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicIpLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Quota Information about the quota.
type Quota struct {
	// The account ID of the owner of the quotas.
	AccountId *string `json:"AccountId,omitempty"`
	// The description of the quota.
	Description *string `json:"Description,omitempty"`
	// The maximum value of the quota for the 3DS OUTSCALE user account (if there is no limit, `0`).
	MaxValue *int32 `json:"MaxValue,omitempty"`
	// The unique name of the quota.
	Name *string `json:"Name,omitempty"`
	// The group name of the quota.
	QuotaCollection *string `json:"QuotaCollection,omitempty"`
	// The description of the quota.
	ShortDescription *string `json:"ShortDescription,omitempty"`
	// The limit value currently used by the 3DS OUTSCALE user account.
	UsedValue *int32 `json:"UsedValue,omitempty"`
}

// NewQuota instantiates a new Quota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuota() *Quota {
	this := Quota{}
	return &this
}

// NewQuotaWithDefaults instantiates a new Quota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaWithDefaults() *Quota {
	this := Quota{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Quota) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Quota) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Quota) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Quota) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Quota) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Quota) SetDescription(v string) {
	o.Description = &v
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *Quota) GetMaxValue() int32 {
	if o == nil || o.MaxValue == nil {
		var ret int32
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxValueOk() (*int32, bool) {
	if o == nil || o.MaxValue == nil {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *Quota) HasMaxValue() bool {
	if o != nil && o.MaxValue != nil {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given int32 and assigns it to the MaxValue field.
func (o *Quota) SetMaxValue(v int32) {
	o.MaxValue = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Quota) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Quota) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Quota) SetName(v string) {
	o.Name = &v
}

// GetQuotaCollection returns the QuotaCollection field value if set, zero value otherwise.
func (o *Quota) GetQuotaCollection() string {
	if o == nil || o.QuotaCollection == nil {
		var ret string
		return ret
	}
	return *o.QuotaCollection
}

// GetQuotaCollectionOk returns a tuple with the QuotaCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetQuotaCollectionOk() (*string, bool) {
	if o == nil || o.QuotaCollection == nil {
		return nil, false
	}
	return o.QuotaCollection, true
}

// HasQuotaCollection returns a boolean if a field has been set.
func (o *Quota) HasQuotaCollection() bool {
	if o != nil && o.QuotaCollection != nil {
		return true
	}

	return false
}

// SetQuotaCollection gets a reference to the given string and assigns it to the QuotaCollection field.
func (o *Quota) SetQuotaCollection(v string) {
	o.QuotaCollection = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *Quota) GetShortDescription() string {
	if o == nil || o.ShortDescription == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetShortDescriptionOk() (*string, bool) {
	if o == nil || o.ShortDescription == nil {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *Quota) HasShortDescription() bool {
	if o != nil && o.ShortDescription != nil {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *Quota) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetUsedValue returns the UsedValue field value if set, zero value otherwise.
func (o *Quota) GetUsedValue() int32 {
	if o == nil || o.UsedValue == nil {
		var ret int32
		return ret
	}
	return *o.UsedValue
}

// GetUsedValueOk returns a tuple with the UsedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetUsedValueOk() (*int32, bool) {
	if o == nil || o.UsedValue == nil {
		return nil, false
	}
	return o.UsedValue, true
}

// HasUsedValue returns a boolean if a field has been set.
func (o *Quota) HasUsedValue() bool {
	if o != nil && o.UsedValue != nil {
		return true
	}

	return false
}

// SetUsedValue gets a reference to the given int32 and assigns it to the UsedValue field.
func (o *Quota) SetUsedValue(v int32) {
	o.UsedValue = &v
}

func (o Quota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.MaxValue != nil {
		toSerialize["MaxValue"] = o.MaxValue
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.QuotaCollection != nil {
		toSerialize["QuotaCollection"] = o.QuotaCollection
	}
	if o.ShortDescription != nil {
		toSerialize["ShortDescription"] = o.ShortDescription
	}
	if o.UsedValue != nil {
		toSerialize["UsedValue"] = o.UsedValue
	}
	return json.Marshal(toSerialize)
}

type NullableQuota struct {
	value *Quota
	isSet bool
}

func (v NullableQuota) Get() *Quota {
	return v.value
}

func (v *NullableQuota) Set(val *Quota) {
	v.value = val
	v.isSet = true
}

func (v NullableQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuota(val *Quota) *NullableQuota {
	return &NullableQuota{value: val, isSet: true}
}

func (v NullableQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// QuotaTypes One or more quotas.
type QuotaTypes struct {
	// The resource ID if it is a resource-specific quota, `global` if it is not.
	QuotaType *string `json:"QuotaType,omitempty"`
	// One or more quotas associated with the user.
	Quotas *[]Quota `json:"Quotas,omitempty"`
}

// NewQuotaTypes instantiates a new QuotaTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaTypes() *QuotaTypes {
	this := QuotaTypes{}
	return &this
}

// NewQuotaTypesWithDefaults instantiates a new QuotaTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaTypesWithDefaults() *QuotaTypes {
	this := QuotaTypes{}
	return &this
}

// GetQuotaType returns the QuotaType field value if set, zero value otherwise.
func (o *QuotaTypes) GetQuotaType() string {
	if o == nil || o.QuotaType == nil {
		var ret string
		return ret
	}
	return *o.QuotaType
}

// GetQuotaTypeOk returns a tuple with the QuotaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaTypes) GetQuotaTypeOk() (*string, bool) {
	if o == nil || o.QuotaType == nil {
		return nil, false
	}
	return o.QuotaType, true
}

// HasQuotaType returns a boolean if a field has been set.
func (o *QuotaTypes) HasQuotaType() bool {
	if o != nil && o.QuotaType != nil {
		return true
	}

	return false
}

// SetQuotaType gets a reference to the given string and assigns it to the QuotaType field.
func (o *QuotaTypes) SetQuotaType(v string) {
	o.QuotaType = &v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise.
func (o *QuotaTypes) GetQuotas() []Quota {
	if o == nil || o.Quotas == nil {
		var ret []Quota
		return ret
	}
	return *o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaTypes) GetQuotasOk() (*[]Quota, bool) {
	if o == nil || o.Quotas == nil {
		return nil, false
	}
	return o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *QuotaTypes) HasQuotas() bool {
	if o != nil && o.Quotas != nil {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given []Quota and assigns it to the Quotas field.
func (o *QuotaTypes) SetQuotas(v []Quota) {
	o.Quotas = &v
}

func (o QuotaTypes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QuotaType != nil {
		toSerialize["QuotaType"] = o.QuotaType
	}
	if o.Quotas != nil {
		toSerialize["Quotas"] = o.Quotas
	}
	return json.Marshal(toSerialize)
}

type NullableQuotaTypes struct {
	value *QuotaTypes
	isSet bool
}

func (v NullableQuotaTypes) Get() *QuotaTypes {
	return v.value
}

func (v *NullableQuotaTypes) Set(val *QuotaTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaTypes(val *QuotaTypes) *NullableQuotaTypes {
	return &NullableQuotaTypes{value: val, isSet: true}
}

func (v NullableQuotaTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAccessKeysRequest struct for ReadAccessKeysRequest
type ReadAccessKeysRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersAccessKeys `json:"Filters,omitempty"`
}

// NewReadAccessKeysRequest instantiates a new ReadAccessKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAccessKeysRequest() *ReadAccessKeysRequest {
	this := ReadAccessKeysRequest{}
	return &this
}

// NewReadAccessKeysRequestWithDefaults instantiates a new ReadAccessKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAccessKeysRequestWithDefaults() *ReadAccessKeysRequest {
	this := ReadAccessKeysRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadAccessKeysRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccessKeysRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadAccessKeysRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadAccessKeysRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadAccessKeysRequest) GetFilters() FiltersAccessKeys {
	if o == nil || o.Filters == nil {
		var ret FiltersAccessKeys
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccessKeysRequest) GetFiltersOk() (*FiltersAccessKeys, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadAccessKeysRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersAccessKeys and assigns it to the Filters field.
func (o *ReadAccessKeysRequest) SetFilters(v FiltersAccessKeys) {
	o.Filters = &v
}

func (o ReadAccessKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadAccessKeysRequest struct {
	value *ReadAccessKeysRequest
	isSet bool
}

func (v NullableReadAccessKeysRequest) Get() *ReadAccessKeysRequest {
	return v.value
}

func (v *NullableReadAccessKeysRequest) Set(val *ReadAccessKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAccessKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAccessKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAccessKeysRequest(val *ReadAccessKeysRequest) *NullableReadAccessKeysRequest {
	return &NullableReadAccessKeysRequest{value: val, isSet: true}
}

func (v NullableReadAccessKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAccessKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAccessKeysResponse struct for ReadAccessKeysResponse
type ReadAccessKeysResponse struct {
	// A list of access keys.
	AccessKeys *[]AccessKey `json:"AccessKeys,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadAccessKeysResponse instantiates a new ReadAccessKeysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAccessKeysResponse() *ReadAccessKeysResponse {
	this := ReadAccessKeysResponse{}
	return &this
}

// NewReadAccessKeysResponseWithDefaults instantiates a new ReadAccessKeysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAccessKeysResponseWithDefaults() *ReadAccessKeysResponse {
	this := ReadAccessKeysResponse{}
	return &this
}

// GetAccessKeys returns the AccessKeys field value if set, zero value otherwise.
func (o *ReadAccessKeysResponse) GetAccessKeys() []AccessKey {
	if o == nil || o.AccessKeys == nil {
		var ret []AccessKey
		return ret
	}
	return *o.AccessKeys
}

// GetAccessKeysOk returns a tuple with the AccessKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccessKeysResponse) GetAccessKeysOk() (*[]AccessKey, bool) {
	if o == nil || o.AccessKeys == nil {
		return nil, false
	}
	return o.AccessKeys, true
}

// HasAccessKeys returns a boolean if a field has been set.
func (o *ReadAccessKeysResponse) HasAccessKeys() bool {
	if o != nil && o.AccessKeys != nil {
		return true
	}

	return false
}

// SetAccessKeys gets a reference to the given []AccessKey and assigns it to the AccessKeys field.
func (o *ReadAccessKeysResponse) SetAccessKeys(v []AccessKey) {
	o.AccessKeys = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadAccessKeysResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccessKeysResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadAccessKeysResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadAccessKeysResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadAccessKeysResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeys != nil {
		toSerialize["AccessKeys"] = o.AccessKeys
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadAccessKeysResponse struct {
	value *ReadAccessKeysResponse
	isSet bool
}

func (v NullableReadAccessKeysResponse) Get() *ReadAccessKeysResponse {
	return v.value
}

func (v *NullableReadAccessKeysResponse) Set(val *ReadAccessKeysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAccessKeysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAccessKeysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAccessKeysResponse(val *ReadAccessKeysResponse) *NullableReadAccessKeysResponse {
	return &NullableReadAccessKeysResponse{value: val, isSet: true}
}

func (v NullableReadAccessKeysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAccessKeysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAccountsRequest struct for ReadAccountsRequest
type ReadAccountsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadAccountsRequest instantiates a new ReadAccountsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAccountsRequest() *ReadAccountsRequest {
	this := ReadAccountsRequest{}
	return &this
}

// NewReadAccountsRequestWithDefaults instantiates a new ReadAccountsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAccountsRequestWithDefaults() *ReadAccountsRequest {
	this := ReadAccountsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadAccountsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccountsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadAccountsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadAccountsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadAccountsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadAccountsRequest struct {
	value *ReadAccountsRequest
	isSet bool
}

func (v NullableReadAccountsRequest) Get() *ReadAccountsRequest {
	return v.value
}

func (v *NullableReadAccountsRequest) Set(val *ReadAccountsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAccountsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAccountsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAccountsRequest(val *ReadAccountsRequest) *NullableReadAccountsRequest {
	return &NullableReadAccountsRequest{value: val, isSet: true}
}

func (v NullableReadAccountsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAccountsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAccountsResponse struct for ReadAccountsResponse
type ReadAccountsResponse struct {
	// The list of the accounts.
	Accounts *[]Account `json:"Accounts,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadAccountsResponse instantiates a new ReadAccountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAccountsResponse() *ReadAccountsResponse {
	this := ReadAccountsResponse{}
	return &this
}

// NewReadAccountsResponseWithDefaults instantiates a new ReadAccountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAccountsResponseWithDefaults() *ReadAccountsResponse {
	this := ReadAccountsResponse{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *ReadAccountsResponse) GetAccounts() []Account {
	if o == nil || o.Accounts == nil {
		var ret []Account
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccountsResponse) GetAccountsOk() (*[]Account, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *ReadAccountsResponse) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []Account and assigns it to the Accounts field.
func (o *ReadAccountsResponse) SetAccounts(v []Account) {
	o.Accounts = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadAccountsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAccountsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadAccountsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadAccountsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadAccountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["Accounts"] = o.Accounts
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadAccountsResponse struct {
	value *ReadAccountsResponse
	isSet bool
}

func (v NullableReadAccountsResponse) Get() *ReadAccountsResponse {
	return v.value
}

func (v *NullableReadAccountsResponse) Set(val *ReadAccountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAccountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAccountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAccountsResponse(val *ReadAccountsResponse) *NullableReadAccountsResponse {
	return &NullableReadAccountsResponse{value: val, isSet: true}
}

func (v NullableReadAccountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAccountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAdminPasswordRequest struct for ReadAdminPasswordRequest
type ReadAdminPasswordRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the VM.
	VmId string `json:"VmId"`
}

// NewReadAdminPasswordRequest instantiates a new ReadAdminPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAdminPasswordRequest(vmId string, ) *ReadAdminPasswordRequest {
	this := ReadAdminPasswordRequest{}
	this.VmId = vmId
	return &this
}

// NewReadAdminPasswordRequestWithDefaults instantiates a new ReadAdminPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAdminPasswordRequestWithDefaults() *ReadAdminPasswordRequest {
	this := ReadAdminPasswordRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadAdminPasswordRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAdminPasswordRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadAdminPasswordRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadAdminPasswordRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmId returns the VmId field value
func (o *ReadAdminPasswordRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *ReadAdminPasswordRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *ReadAdminPasswordRequest) SetVmId(v string) {
	o.VmId = v
}

func (o ReadAdminPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableReadAdminPasswordRequest struct {
	value *ReadAdminPasswordRequest
	isSet bool
}

func (v NullableReadAdminPasswordRequest) Get() *ReadAdminPasswordRequest {
	return v.value
}

func (v *NullableReadAdminPasswordRequest) Set(val *ReadAdminPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAdminPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAdminPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAdminPasswordRequest(val *ReadAdminPasswordRequest) *NullableReadAdminPasswordRequest {
	return &NullableReadAdminPasswordRequest{value: val, isSet: true}
}

func (v NullableReadAdminPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAdminPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadAdminPasswordResponse struct for ReadAdminPasswordResponse
type ReadAdminPasswordResponse struct {
	// The password of the VM. After the first boot, returns an empty string.
	AdminPassword *string `json:"AdminPassword,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
}

// NewReadAdminPasswordResponse instantiates a new ReadAdminPasswordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAdminPasswordResponse() *ReadAdminPasswordResponse {
	this := ReadAdminPasswordResponse{}
	return &this
}

// NewReadAdminPasswordResponseWithDefaults instantiates a new ReadAdminPasswordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAdminPasswordResponseWithDefaults() *ReadAdminPasswordResponse {
	this := ReadAdminPasswordResponse{}
	return &this
}

// GetAdminPassword returns the AdminPassword field value if set, zero value otherwise.
func (o *ReadAdminPasswordResponse) GetAdminPassword() string {
	if o == nil || o.AdminPassword == nil {
		var ret string
		return ret
	}
	return *o.AdminPassword
}

// GetAdminPasswordOk returns a tuple with the AdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAdminPasswordResponse) GetAdminPasswordOk() (*string, bool) {
	if o == nil || o.AdminPassword == nil {
		return nil, false
	}
	return o.AdminPassword, true
}

// HasAdminPassword returns a boolean if a field has been set.
func (o *ReadAdminPasswordResponse) HasAdminPassword() bool {
	if o != nil && o.AdminPassword != nil {
		return true
	}

	return false
}

// SetAdminPassword gets a reference to the given string and assigns it to the AdminPassword field.
func (o *ReadAdminPasswordResponse) SetAdminPassword(v string) {
	o.AdminPassword = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadAdminPasswordResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAdminPasswordResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadAdminPasswordResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadAdminPasswordResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *ReadAdminPasswordResponse) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAdminPasswordResponse) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *ReadAdminPasswordResponse) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *ReadAdminPasswordResponse) SetVmId(v string) {
	o.VmId = &v
}

func (o ReadAdminPasswordResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminPassword != nil {
		toSerialize["AdminPassword"] = o.AdminPassword
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableReadAdminPasswordResponse struct {
	value *ReadAdminPasswordResponse
	isSet bool
}

func (v NullableReadAdminPasswordResponse) Get() *ReadAdminPasswordResponse {
	return v.value
}

func (v *NullableReadAdminPasswordResponse) Set(val *ReadAdminPasswordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAdminPasswordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAdminPasswordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAdminPasswordResponse(val *ReadAdminPasswordResponse) *NullableReadAdminPasswordResponse {
	return &NullableReadAdminPasswordResponse{value: val, isSet: true}
}

func (v NullableReadAdminPasswordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAdminPasswordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadApiLogsRequest struct for ReadApiLogsRequest
type ReadApiLogsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersApiLog `json:"Filters,omitempty"`
	// The token to request the next page of results.
	NextPageToken *string `json:"NextPageToken,omitempty"`
	// The maximum number of items returned in a single page. By default, 100.
	ResultsPerPage *int32 `json:"ResultsPerPage,omitempty"`
	With *With `json:"With,omitempty"`
}

// NewReadApiLogsRequest instantiates a new ReadApiLogsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadApiLogsRequest() *ReadApiLogsRequest {
	this := ReadApiLogsRequest{}
	return &this
}

// NewReadApiLogsRequestWithDefaults instantiates a new ReadApiLogsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadApiLogsRequestWithDefaults() *ReadApiLogsRequest {
	this := ReadApiLogsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadApiLogsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetFilters() FiltersApiLog {
	if o == nil || o.Filters == nil {
		var ret FiltersApiLog
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetFiltersOk() (*FiltersApiLog, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersApiLog and assigns it to the Filters field.
func (o *ReadApiLogsRequest) SetFilters(v FiltersApiLog) {
	o.Filters = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ReadApiLogsRequest) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetResultsPerPage returns the ResultsPerPage field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetResultsPerPage() int32 {
	if o == nil || o.ResultsPerPage == nil {
		var ret int32
		return ret
	}
	return *o.ResultsPerPage
}

// GetResultsPerPageOk returns a tuple with the ResultsPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetResultsPerPageOk() (*int32, bool) {
	if o == nil || o.ResultsPerPage == nil {
		return nil, false
	}
	return o.ResultsPerPage, true
}

// HasResultsPerPage returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasResultsPerPage() bool {
	if o != nil && o.ResultsPerPage != nil {
		return true
	}

	return false
}

// SetResultsPerPage gets a reference to the given int32 and assigns it to the ResultsPerPage field.
func (o *ReadApiLogsRequest) SetResultsPerPage(v int32) {
	o.ResultsPerPage = &v
}

// GetWith returns the With field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetWith() With {
	if o == nil || o.With == nil {
		var ret With
		return ret
	}
	return *o.With
}

// GetWithOk returns a tuple with the With field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetWithOk() (*With, bool) {
	if o == nil || o.With == nil {
		return nil, false
	}
	return o.With, true
}

// HasWith returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasWith() bool {
	if o != nil && o.With != nil {
		return true
	}

	return false
}

// SetWith gets a reference to the given With and assigns it to the With field.
func (o *ReadApiLogsRequest) SetWith(v With) {
	o.With = &v
}

func (o ReadApiLogsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	if o.NextPageToken != nil {
		toSerialize["NextPageToken"] = o.NextPageToken
	}
	if o.ResultsPerPage != nil {
		toSerialize["ResultsPerPage"] = o.ResultsPerPage
	}
	if o.With != nil {
		toSerialize["With"] = o.With
	}
	return json.Marshal(toSerialize)
}

type NullableReadApiLogsRequest struct {
	value *ReadApiLogsRequest
	isSet bool
}

func (v NullableReadApiLogsRequest) Get() *ReadApiLogsRequest {
	return v.value
}

func (v *NullableReadApiLogsRequest) Set(val *ReadApiLogsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadApiLogsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadApiLogsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadApiLogsRequest(val *ReadApiLogsRequest) *NullableReadApiLogsRequest {
	return &NullableReadApiLogsRequest{value: val, isSet: true}
}

func (v NullableReadApiLogsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadApiLogsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadApiLogsResponse struct for ReadApiLogsResponse
type ReadApiLogsResponse struct {
	// Information displayed in one or more API logs.
	Logs *[]Log `json:"Logs,omitempty"`
	// The token to request the next page of results.
	NextPageToken *string `json:"NextPageToken,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadApiLogsResponse instantiates a new ReadApiLogsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadApiLogsResponse() *ReadApiLogsResponse {
	this := ReadApiLogsResponse{}
	return &this
}

// NewReadApiLogsResponseWithDefaults instantiates a new ReadApiLogsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadApiLogsResponseWithDefaults() *ReadApiLogsResponse {
	this := ReadApiLogsResponse{}
	return &this
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *ReadApiLogsResponse) GetLogs() []Log {
	if o == nil || o.Logs == nil {
		var ret []Log
		return ret
	}
	return *o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsResponse) GetLogsOk() (*[]Log, bool) {
	if o == nil || o.Logs == nil {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *ReadApiLogsResponse) HasLogs() bool {
	if o != nil && o.Logs != nil {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []Log and assigns it to the Logs field.
func (o *ReadApiLogsResponse) SetLogs(v []Log) {
	o.Logs = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ReadApiLogsResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ReadApiLogsResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ReadApiLogsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadApiLogsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadApiLogsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadApiLogsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadApiLogsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Logs != nil {
		toSerialize["Logs"] = o.Logs
	}
	if o.NextPageToken != nil {
		toSerialize["NextPageToken"] = o.NextPageToken
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadApiLogsResponse struct {
	value *ReadApiLogsResponse
	isSet bool
}

func (v NullableReadApiLogsResponse) Get() *ReadApiLogsResponse {
	return v.value
}

func (v *NullableReadApiLogsResponse) Set(val *ReadApiLogsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadApiLogsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadApiLogsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadApiLogsResponse(val *ReadApiLogsResponse) *NullableReadApiLogsResponse {
	return &NullableReadApiLogsResponse{value: val, isSet: true}
}

func (v NullableReadApiLogsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadApiLogsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadClientGatewaysRequest struct for ReadClientGatewaysRequest
type ReadClientGatewaysRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersClientGateway `json:"Filters,omitempty"`
}

// NewReadClientGatewaysRequest instantiates a new ReadClientGatewaysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadClientGatewaysRequest() *ReadClientGatewaysRequest {
	this := ReadClientGatewaysRequest{}
	return &this
}

// NewReadClientGatewaysRequestWithDefaults instantiates a new ReadClientGatewaysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadClientGatewaysRequestWithDefaults() *ReadClientGatewaysRequest {
	this := ReadClientGatewaysRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadClientGatewaysRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadClientGatewaysRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadClientGatewaysRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadClientGatewaysRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadClientGatewaysRequest) GetFilters() FiltersClientGateway {
	if o == nil || o.Filters == nil {
		var ret FiltersClientGateway
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadClientGatewaysRequest) GetFiltersOk() (*FiltersClientGateway, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadClientGatewaysRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersClientGateway and assigns it to the Filters field.
func (o *ReadClientGatewaysRequest) SetFilters(v FiltersClientGateway) {
	o.Filters = &v
}

func (o ReadClientGatewaysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadClientGatewaysRequest struct {
	value *ReadClientGatewaysRequest
	isSet bool
}

func (v NullableReadClientGatewaysRequest) Get() *ReadClientGatewaysRequest {
	return v.value
}

func (v *NullableReadClientGatewaysRequest) Set(val *ReadClientGatewaysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadClientGatewaysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadClientGatewaysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadClientGatewaysRequest(val *ReadClientGatewaysRequest) *NullableReadClientGatewaysRequest {
	return &NullableReadClientGatewaysRequest{value: val, isSet: true}
}

func (v NullableReadClientGatewaysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadClientGatewaysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadClientGatewaysResponse struct for ReadClientGatewaysResponse
type ReadClientGatewaysResponse struct {
	// Information about one or more client gateways.
	ClientGateways *[]ClientGateway `json:"ClientGateways,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadClientGatewaysResponse instantiates a new ReadClientGatewaysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadClientGatewaysResponse() *ReadClientGatewaysResponse {
	this := ReadClientGatewaysResponse{}
	return &this
}

// NewReadClientGatewaysResponseWithDefaults instantiates a new ReadClientGatewaysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadClientGatewaysResponseWithDefaults() *ReadClientGatewaysResponse {
	this := ReadClientGatewaysResponse{}
	return &this
}

// GetClientGateways returns the ClientGateways field value if set, zero value otherwise.
func (o *ReadClientGatewaysResponse) GetClientGateways() []ClientGateway {
	if o == nil || o.ClientGateways == nil {
		var ret []ClientGateway
		return ret
	}
	return *o.ClientGateways
}

// GetClientGatewaysOk returns a tuple with the ClientGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadClientGatewaysResponse) GetClientGatewaysOk() (*[]ClientGateway, bool) {
	if o == nil || o.ClientGateways == nil {
		return nil, false
	}
	return o.ClientGateways, true
}

// HasClientGateways returns a boolean if a field has been set.
func (o *ReadClientGatewaysResponse) HasClientGateways() bool {
	if o != nil && o.ClientGateways != nil {
		return true
	}

	return false
}

// SetClientGateways gets a reference to the given []ClientGateway and assigns it to the ClientGateways field.
func (o *ReadClientGatewaysResponse) SetClientGateways(v []ClientGateway) {
	o.ClientGateways = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadClientGatewaysResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadClientGatewaysResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadClientGatewaysResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadClientGatewaysResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadClientGatewaysResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientGateways != nil {
		toSerialize["ClientGateways"] = o.ClientGateways
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadClientGatewaysResponse struct {
	value *ReadClientGatewaysResponse
	isSet bool
}

func (v NullableReadClientGatewaysResponse) Get() *ReadClientGatewaysResponse {
	return v.value
}

func (v *NullableReadClientGatewaysResponse) Set(val *ReadClientGatewaysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadClientGatewaysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadClientGatewaysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadClientGatewaysResponse(val *ReadClientGatewaysResponse) *NullableReadClientGatewaysResponse {
	return &NullableReadClientGatewaysResponse{value: val, isSet: true}
}

func (v NullableReadClientGatewaysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadClientGatewaysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadConsoleOutputRequest struct for ReadConsoleOutputRequest
type ReadConsoleOutputRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the VM.
	VmId string `json:"VmId"`
}

// NewReadConsoleOutputRequest instantiates a new ReadConsoleOutputRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadConsoleOutputRequest(vmId string, ) *ReadConsoleOutputRequest {
	this := ReadConsoleOutputRequest{}
	this.VmId = vmId
	return &this
}

// NewReadConsoleOutputRequestWithDefaults instantiates a new ReadConsoleOutputRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadConsoleOutputRequestWithDefaults() *ReadConsoleOutputRequest {
	this := ReadConsoleOutputRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadConsoleOutputRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsoleOutputRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadConsoleOutputRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadConsoleOutputRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmId returns the VmId field value
func (o *ReadConsoleOutputRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *ReadConsoleOutputRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *ReadConsoleOutputRequest) SetVmId(v string) {
	o.VmId = v
}

func (o ReadConsoleOutputRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableReadConsoleOutputRequest struct {
	value *ReadConsoleOutputRequest
	isSet bool
}

func (v NullableReadConsoleOutputRequest) Get() *ReadConsoleOutputRequest {
	return v.value
}

func (v *NullableReadConsoleOutputRequest) Set(val *ReadConsoleOutputRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadConsoleOutputRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadConsoleOutputRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadConsoleOutputRequest(val *ReadConsoleOutputRequest) *NullableReadConsoleOutputRequest {
	return &NullableReadConsoleOutputRequest{value: val, isSet: true}
}

func (v NullableReadConsoleOutputRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadConsoleOutputRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadConsoleOutputResponse struct for ReadConsoleOutputResponse
type ReadConsoleOutputResponse struct {
	// The Base64-encoded output of the console. If a command line tool is used, the output is decoded by the tool.
	ConsoleOutput *string `json:"ConsoleOutput,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
}

// NewReadConsoleOutputResponse instantiates a new ReadConsoleOutputResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadConsoleOutputResponse() *ReadConsoleOutputResponse {
	this := ReadConsoleOutputResponse{}
	return &this
}

// NewReadConsoleOutputResponseWithDefaults instantiates a new ReadConsoleOutputResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadConsoleOutputResponseWithDefaults() *ReadConsoleOutputResponse {
	this := ReadConsoleOutputResponse{}
	return &this
}

// GetConsoleOutput returns the ConsoleOutput field value if set, zero value otherwise.
func (o *ReadConsoleOutputResponse) GetConsoleOutput() string {
	if o == nil || o.ConsoleOutput == nil {
		var ret string
		return ret
	}
	return *o.ConsoleOutput
}

// GetConsoleOutputOk returns a tuple with the ConsoleOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsoleOutputResponse) GetConsoleOutputOk() (*string, bool) {
	if o == nil || o.ConsoleOutput == nil {
		return nil, false
	}
	return o.ConsoleOutput, true
}

// HasConsoleOutput returns a boolean if a field has been set.
func (o *ReadConsoleOutputResponse) HasConsoleOutput() bool {
	if o != nil && o.ConsoleOutput != nil {
		return true
	}

	return false
}

// SetConsoleOutput gets a reference to the given string and assigns it to the ConsoleOutput field.
func (o *ReadConsoleOutputResponse) SetConsoleOutput(v string) {
	o.ConsoleOutput = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadConsoleOutputResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsoleOutputResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadConsoleOutputResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadConsoleOutputResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *ReadConsoleOutputResponse) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsoleOutputResponse) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *ReadConsoleOutputResponse) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *ReadConsoleOutputResponse) SetVmId(v string) {
	o.VmId = &v
}

func (o ReadConsoleOutputResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConsoleOutput != nil {
		toSerialize["ConsoleOutput"] = o.ConsoleOutput
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableReadConsoleOutputResponse struct {
	value *ReadConsoleOutputResponse
	isSet bool
}

func (v NullableReadConsoleOutputResponse) Get() *ReadConsoleOutputResponse {
	return v.value
}

func (v *NullableReadConsoleOutputResponse) Set(val *ReadConsoleOutputResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadConsoleOutputResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadConsoleOutputResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadConsoleOutputResponse(val *ReadConsoleOutputResponse) *NullableReadConsoleOutputResponse {
	return &NullableReadConsoleOutputResponse{value: val, isSet: true}
}

func (v NullableReadConsoleOutputResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadConsoleOutputResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadConsumptionAccountRequest struct for ReadConsumptionAccountRequest
type ReadConsumptionAccountRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The beginning of the time period, in ISO 8601 date-time format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).
	FromDate string `json:"FromDate"`
	// The end of the time period, in ISO 8601 date-time format (for example, `2017-06-30` or `2017-06-30T00:00:00Z`).
	ToDate string `json:"ToDate"`
}

// NewReadConsumptionAccountRequest instantiates a new ReadConsumptionAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadConsumptionAccountRequest(fromDate string, toDate string, ) *ReadConsumptionAccountRequest {
	this := ReadConsumptionAccountRequest{}
	this.FromDate = fromDate
	this.ToDate = toDate
	return &this
}

// NewReadConsumptionAccountRequestWithDefaults instantiates a new ReadConsumptionAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadConsumptionAccountRequestWithDefaults() *ReadConsumptionAccountRequest {
	this := ReadConsumptionAccountRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadConsumptionAccountRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsumptionAccountRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadConsumptionAccountRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadConsumptionAccountRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFromDate returns the FromDate field value
func (o *ReadConsumptionAccountRequest) GetFromDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FromDate
}

// GetFromDateOk returns a tuple with the FromDate field value
// and a boolean to check if the value has been set.
func (o *ReadConsumptionAccountRequest) GetFromDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FromDate, true
}

// SetFromDate sets field value
func (o *ReadConsumptionAccountRequest) SetFromDate(v string) {
	o.FromDate = v
}

// GetToDate returns the ToDate field value
func (o *ReadConsumptionAccountRequest) GetToDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ToDate
}

// GetToDateOk returns a tuple with the ToDate field value
// and a boolean to check if the value has been set.
func (o *ReadConsumptionAccountRequest) GetToDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ToDate, true
}

// SetToDate sets field value
func (o *ReadConsumptionAccountRequest) SetToDate(v string) {
	o.ToDate = v
}

func (o ReadConsumptionAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["FromDate"] = o.FromDate
	}
	if true {
		toSerialize["ToDate"] = o.ToDate
	}
	return json.Marshal(toSerialize)
}

type NullableReadConsumptionAccountRequest struct {
	value *ReadConsumptionAccountRequest
	isSet bool
}

func (v NullableReadConsumptionAccountRequest) Get() *ReadConsumptionAccountRequest {
	return v.value
}

func (v *NullableReadConsumptionAccountRequest) Set(val *ReadConsumptionAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadConsumptionAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadConsumptionAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadConsumptionAccountRequest(val *ReadConsumptionAccountRequest) *NullableReadConsumptionAccountRequest {
	return &NullableReadConsumptionAccountRequest{value: val, isSet: true}
}

func (v NullableReadConsumptionAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadConsumptionAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadConsumptionAccountResponse struct for ReadConsumptionAccountResponse
type ReadConsumptionAccountResponse struct {
	// Information about the resources consumed during the specified time period.
	ConsumptionEntries *[]ConsumptionEntry `json:"ConsumptionEntries,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadConsumptionAccountResponse instantiates a new ReadConsumptionAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadConsumptionAccountResponse() *ReadConsumptionAccountResponse {
	this := ReadConsumptionAccountResponse{}
	return &this
}

// NewReadConsumptionAccountResponseWithDefaults instantiates a new ReadConsumptionAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadConsumptionAccountResponseWithDefaults() *ReadConsumptionAccountResponse {
	this := ReadConsumptionAccountResponse{}
	return &this
}

// GetConsumptionEntries returns the ConsumptionEntries field value if set, zero value otherwise.
func (o *ReadConsumptionAccountResponse) GetConsumptionEntries() []ConsumptionEntry {
	if o == nil || o.ConsumptionEntries == nil {
		var ret []ConsumptionEntry
		return ret
	}
	return *o.ConsumptionEntries
}

// GetConsumptionEntriesOk returns a tuple with the ConsumptionEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsumptionAccountResponse) GetConsumptionEntriesOk() (*[]ConsumptionEntry, bool) {
	if o == nil || o.ConsumptionEntries == nil {
		return nil, false
	}
	return o.ConsumptionEntries, true
}

// HasConsumptionEntries returns a boolean if a field has been set.
func (o *ReadConsumptionAccountResponse) HasConsumptionEntries() bool {
	if o != nil && o.ConsumptionEntries != nil {
		return true
	}

	return false
}

// SetConsumptionEntries gets a reference to the given []ConsumptionEntry and assigns it to the ConsumptionEntries field.
func (o *ReadConsumptionAccountResponse) SetConsumptionEntries(v []ConsumptionEntry) {
	o.ConsumptionEntries = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadConsumptionAccountResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadConsumptionAccountResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadConsumptionAccountResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadConsumptionAccountResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadConsumptionAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConsumptionEntries != nil {
		toSerialize["ConsumptionEntries"] = o.ConsumptionEntries
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadConsumptionAccountResponse struct {
	value *ReadConsumptionAccountResponse
	isSet bool
}

func (v NullableReadConsumptionAccountResponse) Get() *ReadConsumptionAccountResponse {
	return v.value
}

func (v *NullableReadConsumptionAccountResponse) Set(val *ReadConsumptionAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadConsumptionAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadConsumptionAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadConsumptionAccountResponse(val *ReadConsumptionAccountResponse) *NullableReadConsumptionAccountResponse {
	return &NullableReadConsumptionAccountResponse{value: val, isSet: true}
}

func (v NullableReadConsumptionAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadConsumptionAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDhcpOptionsRequest struct for ReadDhcpOptionsRequest
type ReadDhcpOptionsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersDhcpOptions `json:"Filters,omitempty"`
}

// NewReadDhcpOptionsRequest instantiates a new ReadDhcpOptionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDhcpOptionsRequest() *ReadDhcpOptionsRequest {
	this := ReadDhcpOptionsRequest{}
	return &this
}

// NewReadDhcpOptionsRequestWithDefaults instantiates a new ReadDhcpOptionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDhcpOptionsRequestWithDefaults() *ReadDhcpOptionsRequest {
	this := ReadDhcpOptionsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadDhcpOptionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDhcpOptionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadDhcpOptionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadDhcpOptionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadDhcpOptionsRequest) GetFilters() FiltersDhcpOptions {
	if o == nil || o.Filters == nil {
		var ret FiltersDhcpOptions
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDhcpOptionsRequest) GetFiltersOk() (*FiltersDhcpOptions, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadDhcpOptionsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersDhcpOptions and assigns it to the Filters field.
func (o *ReadDhcpOptionsRequest) SetFilters(v FiltersDhcpOptions) {
	o.Filters = &v
}

func (o ReadDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadDhcpOptionsRequest struct {
	value *ReadDhcpOptionsRequest
	isSet bool
}

func (v NullableReadDhcpOptionsRequest) Get() *ReadDhcpOptionsRequest {
	return v.value
}

func (v *NullableReadDhcpOptionsRequest) Set(val *ReadDhcpOptionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDhcpOptionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDhcpOptionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDhcpOptionsRequest(val *ReadDhcpOptionsRequest) *NullableReadDhcpOptionsRequest {
	return &NullableReadDhcpOptionsRequest{value: val, isSet: true}
}

func (v NullableReadDhcpOptionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDhcpOptionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDhcpOptionsResponse struct for ReadDhcpOptionsResponse
type ReadDhcpOptionsResponse struct {
	// Information about one or more DHCP options sets.
	DhcpOptionsSets *[]DhcpOptionsSet `json:"DhcpOptionsSets,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadDhcpOptionsResponse instantiates a new ReadDhcpOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDhcpOptionsResponse() *ReadDhcpOptionsResponse {
	this := ReadDhcpOptionsResponse{}
	return &this
}

// NewReadDhcpOptionsResponseWithDefaults instantiates a new ReadDhcpOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDhcpOptionsResponseWithDefaults() *ReadDhcpOptionsResponse {
	this := ReadDhcpOptionsResponse{}
	return &this
}

// GetDhcpOptionsSets returns the DhcpOptionsSets field value if set, zero value otherwise.
func (o *ReadDhcpOptionsResponse) GetDhcpOptionsSets() []DhcpOptionsSet {
	if o == nil || o.DhcpOptionsSets == nil {
		var ret []DhcpOptionsSet
		return ret
	}
	return *o.DhcpOptionsSets
}

// GetDhcpOptionsSetsOk returns a tuple with the DhcpOptionsSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDhcpOptionsResponse) GetDhcpOptionsSetsOk() (*[]DhcpOptionsSet, bool) {
	if o == nil || o.DhcpOptionsSets == nil {
		return nil, false
	}
	return o.DhcpOptionsSets, true
}

// HasDhcpOptionsSets returns a boolean if a field has been set.
func (o *ReadDhcpOptionsResponse) HasDhcpOptionsSets() bool {
	if o != nil && o.DhcpOptionsSets != nil {
		return true
	}

	return false
}

// SetDhcpOptionsSets gets a reference to the given []DhcpOptionsSet and assigns it to the DhcpOptionsSets field.
func (o *ReadDhcpOptionsResponse) SetDhcpOptionsSets(v []DhcpOptionsSet) {
	o.DhcpOptionsSets = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadDhcpOptionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDhcpOptionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadDhcpOptionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadDhcpOptionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DhcpOptionsSets != nil {
		toSerialize["DhcpOptionsSets"] = o.DhcpOptionsSets
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadDhcpOptionsResponse struct {
	value *ReadDhcpOptionsResponse
	isSet bool
}

func (v NullableReadDhcpOptionsResponse) Get() *ReadDhcpOptionsResponse {
	return v.value
}

func (v *NullableReadDhcpOptionsResponse) Set(val *ReadDhcpOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDhcpOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDhcpOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDhcpOptionsResponse(val *ReadDhcpOptionsResponse) *NullableReadDhcpOptionsResponse {
	return &NullableReadDhcpOptionsResponse{value: val, isSet: true}
}

func (v NullableReadDhcpOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDhcpOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDirectLinkInterfacesRequest struct for ReadDirectLinkInterfacesRequest
type ReadDirectLinkInterfacesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersDirectLinkInterface `json:"Filters,omitempty"`
}

// NewReadDirectLinkInterfacesRequest instantiates a new ReadDirectLinkInterfacesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDirectLinkInterfacesRequest() *ReadDirectLinkInterfacesRequest {
	this := ReadDirectLinkInterfacesRequest{}
	return &this
}

// NewReadDirectLinkInterfacesRequestWithDefaults instantiates a new ReadDirectLinkInterfacesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDirectLinkInterfacesRequestWithDefaults() *ReadDirectLinkInterfacesRequest {
	this := ReadDirectLinkInterfacesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadDirectLinkInterfacesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinkInterfacesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadDirectLinkInterfacesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadDirectLinkInterfacesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadDirectLinkInterfacesRequest) GetFilters() FiltersDirectLinkInterface {
	if o == nil || o.Filters == nil {
		var ret FiltersDirectLinkInterface
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinkInterfacesRequest) GetFiltersOk() (*FiltersDirectLinkInterface, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadDirectLinkInterfacesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersDirectLinkInterface and assigns it to the Filters field.
func (o *ReadDirectLinkInterfacesRequest) SetFilters(v FiltersDirectLinkInterface) {
	o.Filters = &v
}

func (o ReadDirectLinkInterfacesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadDirectLinkInterfacesRequest struct {
	value *ReadDirectLinkInterfacesRequest
	isSet bool
}

func (v NullableReadDirectLinkInterfacesRequest) Get() *ReadDirectLinkInterfacesRequest {
	return v.value
}

func (v *NullableReadDirectLinkInterfacesRequest) Set(val *ReadDirectLinkInterfacesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDirectLinkInterfacesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDirectLinkInterfacesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDirectLinkInterfacesRequest(val *ReadDirectLinkInterfacesRequest) *NullableReadDirectLinkInterfacesRequest {
	return &NullableReadDirectLinkInterfacesRequest{value: val, isSet: true}
}

func (v NullableReadDirectLinkInterfacesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDirectLinkInterfacesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDirectLinkInterfacesResponse struct for ReadDirectLinkInterfacesResponse
type ReadDirectLinkInterfacesResponse struct {
	// Information about one or more DirectLink interfaces.
	DirectLinkInterfaces *[]DirectLinkInterfaces `json:"DirectLinkInterfaces,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadDirectLinkInterfacesResponse instantiates a new ReadDirectLinkInterfacesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDirectLinkInterfacesResponse() *ReadDirectLinkInterfacesResponse {
	this := ReadDirectLinkInterfacesResponse{}
	return &this
}

// NewReadDirectLinkInterfacesResponseWithDefaults instantiates a new ReadDirectLinkInterfacesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDirectLinkInterfacesResponseWithDefaults() *ReadDirectLinkInterfacesResponse {
	this := ReadDirectLinkInterfacesResponse{}
	return &this
}

// GetDirectLinkInterfaces returns the DirectLinkInterfaces field value if set, zero value otherwise.
func (o *ReadDirectLinkInterfacesResponse) GetDirectLinkInterfaces() []DirectLinkInterfaces {
	if o == nil || o.DirectLinkInterfaces == nil {
		var ret []DirectLinkInterfaces
		return ret
	}
	return *o.DirectLinkInterfaces
}

// GetDirectLinkInterfacesOk returns a tuple with the DirectLinkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinkInterfacesResponse) GetDirectLinkInterfacesOk() (*[]DirectLinkInterfaces, bool) {
	if o == nil || o.DirectLinkInterfaces == nil {
		return nil, false
	}
	return o.DirectLinkInterfaces, true
}

// HasDirectLinkInterfaces returns a boolean if a field has been set.
func (o *ReadDirectLinkInterfacesResponse) HasDirectLinkInterfaces() bool {
	if o != nil && o.DirectLinkInterfaces != nil {
		return true
	}

	return false
}

// SetDirectLinkInterfaces gets a reference to the given []DirectLinkInterfaces and assigns it to the DirectLinkInterfaces field.
func (o *ReadDirectLinkInterfacesResponse) SetDirectLinkInterfaces(v []DirectLinkInterfaces) {
	o.DirectLinkInterfaces = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadDirectLinkInterfacesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinkInterfacesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadDirectLinkInterfacesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadDirectLinkInterfacesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadDirectLinkInterfacesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinkInterfaces != nil {
		toSerialize["DirectLinkInterfaces"] = o.DirectLinkInterfaces
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadDirectLinkInterfacesResponse struct {
	value *ReadDirectLinkInterfacesResponse
	isSet bool
}

func (v NullableReadDirectLinkInterfacesResponse) Get() *ReadDirectLinkInterfacesResponse {
	return v.value
}

func (v *NullableReadDirectLinkInterfacesResponse) Set(val *ReadDirectLinkInterfacesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDirectLinkInterfacesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDirectLinkInterfacesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDirectLinkInterfacesResponse(val *ReadDirectLinkInterfacesResponse) *NullableReadDirectLinkInterfacesResponse {
	return &NullableReadDirectLinkInterfacesResponse{value: val, isSet: true}
}

func (v NullableReadDirectLinkInterfacesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDirectLinkInterfacesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDirectLinksRequest struct for ReadDirectLinksRequest
type ReadDirectLinksRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersDirectLink `json:"Filters,omitempty"`
}

// NewReadDirectLinksRequest instantiates a new ReadDirectLinksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDirectLinksRequest() *ReadDirectLinksRequest {
	this := ReadDirectLinksRequest{}
	return &this
}

// NewReadDirectLinksRequestWithDefaults instantiates a new ReadDirectLinksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDirectLinksRequestWithDefaults() *ReadDirectLinksRequest {
	this := ReadDirectLinksRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadDirectLinksRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinksRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadDirectLinksRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadDirectLinksRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadDirectLinksRequest) GetFilters() FiltersDirectLink {
	if o == nil || o.Filters == nil {
		var ret FiltersDirectLink
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinksRequest) GetFiltersOk() (*FiltersDirectLink, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadDirectLinksRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersDirectLink and assigns it to the Filters field.
func (o *ReadDirectLinksRequest) SetFilters(v FiltersDirectLink) {
	o.Filters = &v
}

func (o ReadDirectLinksRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadDirectLinksRequest struct {
	value *ReadDirectLinksRequest
	isSet bool
}

func (v NullableReadDirectLinksRequest) Get() *ReadDirectLinksRequest {
	return v.value
}

func (v *NullableReadDirectLinksRequest) Set(val *ReadDirectLinksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDirectLinksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDirectLinksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDirectLinksRequest(val *ReadDirectLinksRequest) *NullableReadDirectLinksRequest {
	return &NullableReadDirectLinksRequest{value: val, isSet: true}
}

func (v NullableReadDirectLinksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDirectLinksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadDirectLinksResponse struct for ReadDirectLinksResponse
type ReadDirectLinksResponse struct {
	// Information about one or more DirectLinks.
	DirectLinks *[]DirectLink `json:"DirectLinks,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadDirectLinksResponse instantiates a new ReadDirectLinksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadDirectLinksResponse() *ReadDirectLinksResponse {
	this := ReadDirectLinksResponse{}
	return &this
}

// NewReadDirectLinksResponseWithDefaults instantiates a new ReadDirectLinksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadDirectLinksResponseWithDefaults() *ReadDirectLinksResponse {
	this := ReadDirectLinksResponse{}
	return &this
}

// GetDirectLinks returns the DirectLinks field value if set, zero value otherwise.
func (o *ReadDirectLinksResponse) GetDirectLinks() []DirectLink {
	if o == nil || o.DirectLinks == nil {
		var ret []DirectLink
		return ret
	}
	return *o.DirectLinks
}

// GetDirectLinksOk returns a tuple with the DirectLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinksResponse) GetDirectLinksOk() (*[]DirectLink, bool) {
	if o == nil || o.DirectLinks == nil {
		return nil, false
	}
	return o.DirectLinks, true
}

// HasDirectLinks returns a boolean if a field has been set.
func (o *ReadDirectLinksResponse) HasDirectLinks() bool {
	if o != nil && o.DirectLinks != nil {
		return true
	}

	return false
}

// SetDirectLinks gets a reference to the given []DirectLink and assigns it to the DirectLinks field.
func (o *ReadDirectLinksResponse) SetDirectLinks(v []DirectLink) {
	o.DirectLinks = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadDirectLinksResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadDirectLinksResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadDirectLinksResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadDirectLinksResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadDirectLinksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinks != nil {
		toSerialize["DirectLinks"] = o.DirectLinks
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadDirectLinksResponse struct {
	value *ReadDirectLinksResponse
	isSet bool
}

func (v NullableReadDirectLinksResponse) Get() *ReadDirectLinksResponse {
	return v.value
}

func (v *NullableReadDirectLinksResponse) Set(val *ReadDirectLinksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadDirectLinksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadDirectLinksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadDirectLinksResponse(val *ReadDirectLinksResponse) *NullableReadDirectLinksResponse {
	return &NullableReadDirectLinksResponse{value: val, isSet: true}
}

func (v NullableReadDirectLinksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadDirectLinksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadFlexibleGpuCatalogRequest struct for ReadFlexibleGpuCatalogRequest
type ReadFlexibleGpuCatalogRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadFlexibleGpuCatalogRequest instantiates a new ReadFlexibleGpuCatalogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadFlexibleGpuCatalogRequest() *ReadFlexibleGpuCatalogRequest {
	this := ReadFlexibleGpuCatalogRequest{}
	return &this
}

// NewReadFlexibleGpuCatalogRequestWithDefaults instantiates a new ReadFlexibleGpuCatalogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadFlexibleGpuCatalogRequestWithDefaults() *ReadFlexibleGpuCatalogRequest {
	this := ReadFlexibleGpuCatalogRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadFlexibleGpuCatalogRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpuCatalogRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadFlexibleGpuCatalogRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadFlexibleGpuCatalogRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadFlexibleGpuCatalogRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadFlexibleGpuCatalogRequest struct {
	value *ReadFlexibleGpuCatalogRequest
	isSet bool
}

func (v NullableReadFlexibleGpuCatalogRequest) Get() *ReadFlexibleGpuCatalogRequest {
	return v.value
}

func (v *NullableReadFlexibleGpuCatalogRequest) Set(val *ReadFlexibleGpuCatalogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadFlexibleGpuCatalogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadFlexibleGpuCatalogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadFlexibleGpuCatalogRequest(val *ReadFlexibleGpuCatalogRequest) *NullableReadFlexibleGpuCatalogRequest {
	return &NullableReadFlexibleGpuCatalogRequest{value: val, isSet: true}
}

func (v NullableReadFlexibleGpuCatalogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadFlexibleGpuCatalogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadFlexibleGpuCatalogResponse struct for ReadFlexibleGpuCatalogResponse
type ReadFlexibleGpuCatalogResponse struct {
	// Information about one or more fGPUs available in the public catalog.
	FlexibleGpuCatalog *[]FlexibleGpuCatalog `json:"FlexibleGpuCatalog,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadFlexibleGpuCatalogResponse instantiates a new ReadFlexibleGpuCatalogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadFlexibleGpuCatalogResponse() *ReadFlexibleGpuCatalogResponse {
	this := ReadFlexibleGpuCatalogResponse{}
	return &this
}

// NewReadFlexibleGpuCatalogResponseWithDefaults instantiates a new ReadFlexibleGpuCatalogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadFlexibleGpuCatalogResponseWithDefaults() *ReadFlexibleGpuCatalogResponse {
	this := ReadFlexibleGpuCatalogResponse{}
	return &this
}

// GetFlexibleGpuCatalog returns the FlexibleGpuCatalog field value if set, zero value otherwise.
func (o *ReadFlexibleGpuCatalogResponse) GetFlexibleGpuCatalog() []FlexibleGpuCatalog {
	if o == nil || o.FlexibleGpuCatalog == nil {
		var ret []FlexibleGpuCatalog
		return ret
	}
	return *o.FlexibleGpuCatalog
}

// GetFlexibleGpuCatalogOk returns a tuple with the FlexibleGpuCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpuCatalogResponse) GetFlexibleGpuCatalogOk() (*[]FlexibleGpuCatalog, bool) {
	if o == nil || o.FlexibleGpuCatalog == nil {
		return nil, false
	}
	return o.FlexibleGpuCatalog, true
}

// HasFlexibleGpuCatalog returns a boolean if a field has been set.
func (o *ReadFlexibleGpuCatalogResponse) HasFlexibleGpuCatalog() bool {
	if o != nil && o.FlexibleGpuCatalog != nil {
		return true
	}

	return false
}

// SetFlexibleGpuCatalog gets a reference to the given []FlexibleGpuCatalog and assigns it to the FlexibleGpuCatalog field.
func (o *ReadFlexibleGpuCatalogResponse) SetFlexibleGpuCatalog(v []FlexibleGpuCatalog) {
	o.FlexibleGpuCatalog = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadFlexibleGpuCatalogResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpuCatalogResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadFlexibleGpuCatalogResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadFlexibleGpuCatalogResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadFlexibleGpuCatalogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlexibleGpuCatalog != nil {
		toSerialize["FlexibleGpuCatalog"] = o.FlexibleGpuCatalog
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadFlexibleGpuCatalogResponse struct {
	value *ReadFlexibleGpuCatalogResponse
	isSet bool
}

func (v NullableReadFlexibleGpuCatalogResponse) Get() *ReadFlexibleGpuCatalogResponse {
	return v.value
}

func (v *NullableReadFlexibleGpuCatalogResponse) Set(val *ReadFlexibleGpuCatalogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadFlexibleGpuCatalogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadFlexibleGpuCatalogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadFlexibleGpuCatalogResponse(val *ReadFlexibleGpuCatalogResponse) *NullableReadFlexibleGpuCatalogResponse {
	return &NullableReadFlexibleGpuCatalogResponse{value: val, isSet: true}
}

func (v NullableReadFlexibleGpuCatalogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadFlexibleGpuCatalogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadFlexibleGpusRequest struct for ReadFlexibleGpusRequest
type ReadFlexibleGpusRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersFlexibleGpu `json:"Filters,omitempty"`
}

// NewReadFlexibleGpusRequest instantiates a new ReadFlexibleGpusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadFlexibleGpusRequest() *ReadFlexibleGpusRequest {
	this := ReadFlexibleGpusRequest{}
	return &this
}

// NewReadFlexibleGpusRequestWithDefaults instantiates a new ReadFlexibleGpusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadFlexibleGpusRequestWithDefaults() *ReadFlexibleGpusRequest {
	this := ReadFlexibleGpusRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadFlexibleGpusRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpusRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadFlexibleGpusRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadFlexibleGpusRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadFlexibleGpusRequest) GetFilters() FiltersFlexibleGpu {
	if o == nil || o.Filters == nil {
		var ret FiltersFlexibleGpu
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpusRequest) GetFiltersOk() (*FiltersFlexibleGpu, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadFlexibleGpusRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersFlexibleGpu and assigns it to the Filters field.
func (o *ReadFlexibleGpusRequest) SetFilters(v FiltersFlexibleGpu) {
	o.Filters = &v
}

func (o ReadFlexibleGpusRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadFlexibleGpusRequest struct {
	value *ReadFlexibleGpusRequest
	isSet bool
}

func (v NullableReadFlexibleGpusRequest) Get() *ReadFlexibleGpusRequest {
	return v.value
}

func (v *NullableReadFlexibleGpusRequest) Set(val *ReadFlexibleGpusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadFlexibleGpusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadFlexibleGpusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadFlexibleGpusRequest(val *ReadFlexibleGpusRequest) *NullableReadFlexibleGpusRequest {
	return &NullableReadFlexibleGpusRequest{value: val, isSet: true}
}

func (v NullableReadFlexibleGpusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadFlexibleGpusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadFlexibleGpusResponse struct for ReadFlexibleGpusResponse
type ReadFlexibleGpusResponse struct {
	// Information about one or more fGPUs.
	FlexibleGpus *[]FlexibleGpu `json:"FlexibleGpus,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadFlexibleGpusResponse instantiates a new ReadFlexibleGpusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadFlexibleGpusResponse() *ReadFlexibleGpusResponse {
	this := ReadFlexibleGpusResponse{}
	return &this
}

// NewReadFlexibleGpusResponseWithDefaults instantiates a new ReadFlexibleGpusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadFlexibleGpusResponseWithDefaults() *ReadFlexibleGpusResponse {
	this := ReadFlexibleGpusResponse{}
	return &this
}

// GetFlexibleGpus returns the FlexibleGpus field value if set, zero value otherwise.
func (o *ReadFlexibleGpusResponse) GetFlexibleGpus() []FlexibleGpu {
	if o == nil || o.FlexibleGpus == nil {
		var ret []FlexibleGpu
		return ret
	}
	return *o.FlexibleGpus
}

// GetFlexibleGpusOk returns a tuple with the FlexibleGpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpusResponse) GetFlexibleGpusOk() (*[]FlexibleGpu, bool) {
	if o == nil || o.FlexibleGpus == nil {
		return nil, false
	}
	return o.FlexibleGpus, true
}

// HasFlexibleGpus returns a boolean if a field has been set.
func (o *ReadFlexibleGpusResponse) HasFlexibleGpus() bool {
	if o != nil && o.FlexibleGpus != nil {
		return true
	}

	return false
}

// SetFlexibleGpus gets a reference to the given []FlexibleGpu and assigns it to the FlexibleGpus field.
func (o *ReadFlexibleGpusResponse) SetFlexibleGpus(v []FlexibleGpu) {
	o.FlexibleGpus = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadFlexibleGpusResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadFlexibleGpusResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadFlexibleGpusResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadFlexibleGpusResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadFlexibleGpusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlexibleGpus != nil {
		toSerialize["FlexibleGpus"] = o.FlexibleGpus
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadFlexibleGpusResponse struct {
	value *ReadFlexibleGpusResponse
	isSet bool
}

func (v NullableReadFlexibleGpusResponse) Get() *ReadFlexibleGpusResponse {
	return v.value
}

func (v *NullableReadFlexibleGpusResponse) Set(val *ReadFlexibleGpusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadFlexibleGpusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadFlexibleGpusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadFlexibleGpusResponse(val *ReadFlexibleGpusResponse) *NullableReadFlexibleGpusResponse {
	return &NullableReadFlexibleGpusResponse{value: val, isSet: true}
}

func (v NullableReadFlexibleGpusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadFlexibleGpusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadImageExportTasksRequest struct for ReadImageExportTasksRequest
type ReadImageExportTasksRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersExportTask `json:"Filters,omitempty"`
}

// NewReadImageExportTasksRequest instantiates a new ReadImageExportTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadImageExportTasksRequest() *ReadImageExportTasksRequest {
	this := ReadImageExportTasksRequest{}
	return &this
}

// NewReadImageExportTasksRequestWithDefaults instantiates a new ReadImageExportTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadImageExportTasksRequestWithDefaults() *ReadImageExportTasksRequest {
	this := ReadImageExportTasksRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadImageExportTasksRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImageExportTasksRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadImageExportTasksRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadImageExportTasksRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadImageExportTasksRequest) GetFilters() FiltersExportTask {
	if o == nil || o.Filters == nil {
		var ret FiltersExportTask
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImageExportTasksRequest) GetFiltersOk() (*FiltersExportTask, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadImageExportTasksRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersExportTask and assigns it to the Filters field.
func (o *ReadImageExportTasksRequest) SetFilters(v FiltersExportTask) {
	o.Filters = &v
}

func (o ReadImageExportTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadImageExportTasksRequest struct {
	value *ReadImageExportTasksRequest
	isSet bool
}

func (v NullableReadImageExportTasksRequest) Get() *ReadImageExportTasksRequest {
	return v.value
}

func (v *NullableReadImageExportTasksRequest) Set(val *ReadImageExportTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadImageExportTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadImageExportTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadImageExportTasksRequest(val *ReadImageExportTasksRequest) *NullableReadImageExportTasksRequest {
	return &NullableReadImageExportTasksRequest{value: val, isSet: true}
}

func (v NullableReadImageExportTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadImageExportTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadImageExportTasksResponse struct for ReadImageExportTasksResponse
type ReadImageExportTasksResponse struct {
	// Information about one or more image export tasks.
	ImageExportTasks *[]ImageExportTask `json:"ImageExportTasks,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadImageExportTasksResponse instantiates a new ReadImageExportTasksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadImageExportTasksResponse() *ReadImageExportTasksResponse {
	this := ReadImageExportTasksResponse{}
	return &this
}

// NewReadImageExportTasksResponseWithDefaults instantiates a new ReadImageExportTasksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadImageExportTasksResponseWithDefaults() *ReadImageExportTasksResponse {
	this := ReadImageExportTasksResponse{}
	return &this
}

// GetImageExportTasks returns the ImageExportTasks field value if set, zero value otherwise.
func (o *ReadImageExportTasksResponse) GetImageExportTasks() []ImageExportTask {
	if o == nil || o.ImageExportTasks == nil {
		var ret []ImageExportTask
		return ret
	}
	return *o.ImageExportTasks
}

// GetImageExportTasksOk returns a tuple with the ImageExportTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImageExportTasksResponse) GetImageExportTasksOk() (*[]ImageExportTask, bool) {
	if o == nil || o.ImageExportTasks == nil {
		return nil, false
	}
	return o.ImageExportTasks, true
}

// HasImageExportTasks returns a boolean if a field has been set.
func (o *ReadImageExportTasksResponse) HasImageExportTasks() bool {
	if o != nil && o.ImageExportTasks != nil {
		return true
	}

	return false
}

// SetImageExportTasks gets a reference to the given []ImageExportTask and assigns it to the ImageExportTasks field.
func (o *ReadImageExportTasksResponse) SetImageExportTasks(v []ImageExportTask) {
	o.ImageExportTasks = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadImageExportTasksResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImageExportTasksResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadImageExportTasksResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadImageExportTasksResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadImageExportTasksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageExportTasks != nil {
		toSerialize["ImageExportTasks"] = o.ImageExportTasks
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadImageExportTasksResponse struct {
	value *ReadImageExportTasksResponse
	isSet bool
}

func (v NullableReadImageExportTasksResponse) Get() *ReadImageExportTasksResponse {
	return v.value
}

func (v *NullableReadImageExportTasksResponse) Set(val *ReadImageExportTasksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadImageExportTasksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadImageExportTasksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadImageExportTasksResponse(val *ReadImageExportTasksResponse) *NullableReadImageExportTasksResponse {
	return &NullableReadImageExportTasksResponse{value: val, isSet: true}
}

func (v NullableReadImageExportTasksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadImageExportTasksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadImagesRequest struct for ReadImagesRequest
type ReadImagesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersImage `json:"Filters,omitempty"`
}

// NewReadImagesRequest instantiates a new ReadImagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadImagesRequest() *ReadImagesRequest {
	this := ReadImagesRequest{}
	return &this
}

// NewReadImagesRequestWithDefaults instantiates a new ReadImagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadImagesRequestWithDefaults() *ReadImagesRequest {
	this := ReadImagesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadImagesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImagesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadImagesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadImagesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadImagesRequest) GetFilters() FiltersImage {
	if o == nil || o.Filters == nil {
		var ret FiltersImage
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImagesRequest) GetFiltersOk() (*FiltersImage, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadImagesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersImage and assigns it to the Filters field.
func (o *ReadImagesRequest) SetFilters(v FiltersImage) {
	o.Filters = &v
}

func (o ReadImagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadImagesRequest struct {
	value *ReadImagesRequest
	isSet bool
}

func (v NullableReadImagesRequest) Get() *ReadImagesRequest {
	return v.value
}

func (v *NullableReadImagesRequest) Set(val *ReadImagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadImagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadImagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadImagesRequest(val *ReadImagesRequest) *NullableReadImagesRequest {
	return &NullableReadImagesRequest{value: val, isSet: true}
}

func (v NullableReadImagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadImagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadImagesResponse struct for ReadImagesResponse
type ReadImagesResponse struct {
	// Information about one or more OMIs.
	Images *[]Image `json:"Images,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadImagesResponse instantiates a new ReadImagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadImagesResponse() *ReadImagesResponse {
	this := ReadImagesResponse{}
	return &this
}

// NewReadImagesResponseWithDefaults instantiates a new ReadImagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadImagesResponseWithDefaults() *ReadImagesResponse {
	this := ReadImagesResponse{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ReadImagesResponse) GetImages() []Image {
	if o == nil || o.Images == nil {
		var ret []Image
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImagesResponse) GetImagesOk() (*[]Image, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ReadImagesResponse) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []Image and assigns it to the Images field.
func (o *ReadImagesResponse) SetImages(v []Image) {
	o.Images = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadImagesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadImagesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadImagesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadImagesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadImagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["Images"] = o.Images
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadImagesResponse struct {
	value *ReadImagesResponse
	isSet bool
}

func (v NullableReadImagesResponse) Get() *ReadImagesResponse {
	return v.value
}

func (v *NullableReadImagesResponse) Set(val *ReadImagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadImagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadImagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadImagesResponse(val *ReadImagesResponse) *NullableReadImagesResponse {
	return &NullableReadImagesResponse{value: val, isSet: true}
}

func (v NullableReadImagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadImagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadInternetServicesRequest struct for ReadInternetServicesRequest
type ReadInternetServicesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersInternetService `json:"Filters,omitempty"`
}

// NewReadInternetServicesRequest instantiates a new ReadInternetServicesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadInternetServicesRequest() *ReadInternetServicesRequest {
	this := ReadInternetServicesRequest{}
	return &this
}

// NewReadInternetServicesRequestWithDefaults instantiates a new ReadInternetServicesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadInternetServicesRequestWithDefaults() *ReadInternetServicesRequest {
	this := ReadInternetServicesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadInternetServicesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadInternetServicesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadInternetServicesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadInternetServicesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadInternetServicesRequest) GetFilters() FiltersInternetService {
	if o == nil || o.Filters == nil {
		var ret FiltersInternetService
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadInternetServicesRequest) GetFiltersOk() (*FiltersInternetService, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadInternetServicesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersInternetService and assigns it to the Filters field.
func (o *ReadInternetServicesRequest) SetFilters(v FiltersInternetService) {
	o.Filters = &v
}

func (o ReadInternetServicesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadInternetServicesRequest struct {
	value *ReadInternetServicesRequest
	isSet bool
}

func (v NullableReadInternetServicesRequest) Get() *ReadInternetServicesRequest {
	return v.value
}

func (v *NullableReadInternetServicesRequest) Set(val *ReadInternetServicesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadInternetServicesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadInternetServicesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadInternetServicesRequest(val *ReadInternetServicesRequest) *NullableReadInternetServicesRequest {
	return &NullableReadInternetServicesRequest{value: val, isSet: true}
}

func (v NullableReadInternetServicesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadInternetServicesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadInternetServicesResponse struct for ReadInternetServicesResponse
type ReadInternetServicesResponse struct {
	// Information about one or more Internet services.
	InternetServices *[]InternetService `json:"InternetServices,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadInternetServicesResponse instantiates a new ReadInternetServicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadInternetServicesResponse() *ReadInternetServicesResponse {
	this := ReadInternetServicesResponse{}
	return &this
}

// NewReadInternetServicesResponseWithDefaults instantiates a new ReadInternetServicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadInternetServicesResponseWithDefaults() *ReadInternetServicesResponse {
	this := ReadInternetServicesResponse{}
	return &this
}

// GetInternetServices returns the InternetServices field value if set, zero value otherwise.
func (o *ReadInternetServicesResponse) GetInternetServices() []InternetService {
	if o == nil || o.InternetServices == nil {
		var ret []InternetService
		return ret
	}
	return *o.InternetServices
}

// GetInternetServicesOk returns a tuple with the InternetServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadInternetServicesResponse) GetInternetServicesOk() (*[]InternetService, bool) {
	if o == nil || o.InternetServices == nil {
		return nil, false
	}
	return o.InternetServices, true
}

// HasInternetServices returns a boolean if a field has been set.
func (o *ReadInternetServicesResponse) HasInternetServices() bool {
	if o != nil && o.InternetServices != nil {
		return true
	}

	return false
}

// SetInternetServices gets a reference to the given []InternetService and assigns it to the InternetServices field.
func (o *ReadInternetServicesResponse) SetInternetServices(v []InternetService) {
	o.InternetServices = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadInternetServicesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadInternetServicesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadInternetServicesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadInternetServicesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadInternetServicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternetServices != nil {
		toSerialize["InternetServices"] = o.InternetServices
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadInternetServicesResponse struct {
	value *ReadInternetServicesResponse
	isSet bool
}

func (v NullableReadInternetServicesResponse) Get() *ReadInternetServicesResponse {
	return v.value
}

func (v *NullableReadInternetServicesResponse) Set(val *ReadInternetServicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadInternetServicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadInternetServicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadInternetServicesResponse(val *ReadInternetServicesResponse) *NullableReadInternetServicesResponse {
	return &NullableReadInternetServicesResponse{value: val, isSet: true}
}

func (v NullableReadInternetServicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadInternetServicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadKeypairsRequest struct for ReadKeypairsRequest
type ReadKeypairsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersKeypair `json:"Filters,omitempty"`
}

// NewReadKeypairsRequest instantiates a new ReadKeypairsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadKeypairsRequest() *ReadKeypairsRequest {
	this := ReadKeypairsRequest{}
	return &this
}

// NewReadKeypairsRequestWithDefaults instantiates a new ReadKeypairsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadKeypairsRequestWithDefaults() *ReadKeypairsRequest {
	this := ReadKeypairsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadKeypairsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadKeypairsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadKeypairsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadKeypairsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadKeypairsRequest) GetFilters() FiltersKeypair {
	if o == nil || o.Filters == nil {
		var ret FiltersKeypair
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadKeypairsRequest) GetFiltersOk() (*FiltersKeypair, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadKeypairsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersKeypair and assigns it to the Filters field.
func (o *ReadKeypairsRequest) SetFilters(v FiltersKeypair) {
	o.Filters = &v
}

func (o ReadKeypairsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadKeypairsRequest struct {
	value *ReadKeypairsRequest
	isSet bool
}

func (v NullableReadKeypairsRequest) Get() *ReadKeypairsRequest {
	return v.value
}

func (v *NullableReadKeypairsRequest) Set(val *ReadKeypairsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadKeypairsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadKeypairsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadKeypairsRequest(val *ReadKeypairsRequest) *NullableReadKeypairsRequest {
	return &NullableReadKeypairsRequest{value: val, isSet: true}
}

func (v NullableReadKeypairsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadKeypairsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadKeypairsResponse struct for ReadKeypairsResponse
type ReadKeypairsResponse struct {
	// Information about one or more keypairs.
	Keypairs *[]Keypair `json:"Keypairs,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadKeypairsResponse instantiates a new ReadKeypairsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadKeypairsResponse() *ReadKeypairsResponse {
	this := ReadKeypairsResponse{}
	return &this
}

// NewReadKeypairsResponseWithDefaults instantiates a new ReadKeypairsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadKeypairsResponseWithDefaults() *ReadKeypairsResponse {
	this := ReadKeypairsResponse{}
	return &this
}

// GetKeypairs returns the Keypairs field value if set, zero value otherwise.
func (o *ReadKeypairsResponse) GetKeypairs() []Keypair {
	if o == nil || o.Keypairs == nil {
		var ret []Keypair
		return ret
	}
	return *o.Keypairs
}

// GetKeypairsOk returns a tuple with the Keypairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadKeypairsResponse) GetKeypairsOk() (*[]Keypair, bool) {
	if o == nil || o.Keypairs == nil {
		return nil, false
	}
	return o.Keypairs, true
}

// HasKeypairs returns a boolean if a field has been set.
func (o *ReadKeypairsResponse) HasKeypairs() bool {
	if o != nil && o.Keypairs != nil {
		return true
	}

	return false
}

// SetKeypairs gets a reference to the given []Keypair and assigns it to the Keypairs field.
func (o *ReadKeypairsResponse) SetKeypairs(v []Keypair) {
	o.Keypairs = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadKeypairsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadKeypairsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadKeypairsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadKeypairsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadKeypairsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keypairs != nil {
		toSerialize["Keypairs"] = o.Keypairs
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadKeypairsResponse struct {
	value *ReadKeypairsResponse
	isSet bool
}

func (v NullableReadKeypairsResponse) Get() *ReadKeypairsResponse {
	return v.value
}

func (v *NullableReadKeypairsResponse) Set(val *ReadKeypairsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadKeypairsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadKeypairsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadKeypairsResponse(val *ReadKeypairsResponse) *NullableReadKeypairsResponse {
	return &NullableReadKeypairsResponse{value: val, isSet: true}
}

func (v NullableReadKeypairsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadKeypairsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadListenerRulesRequest struct for ReadListenerRulesRequest
type ReadListenerRulesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersListenerRule `json:"Filters,omitempty"`
}

// NewReadListenerRulesRequest instantiates a new ReadListenerRulesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadListenerRulesRequest() *ReadListenerRulesRequest {
	this := ReadListenerRulesRequest{}
	return &this
}

// NewReadListenerRulesRequestWithDefaults instantiates a new ReadListenerRulesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadListenerRulesRequestWithDefaults() *ReadListenerRulesRequest {
	this := ReadListenerRulesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadListenerRulesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadListenerRulesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadListenerRulesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadListenerRulesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadListenerRulesRequest) GetFilters() FiltersListenerRule {
	if o == nil || o.Filters == nil {
		var ret FiltersListenerRule
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadListenerRulesRequest) GetFiltersOk() (*FiltersListenerRule, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadListenerRulesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersListenerRule and assigns it to the Filters field.
func (o *ReadListenerRulesRequest) SetFilters(v FiltersListenerRule) {
	o.Filters = &v
}

func (o ReadListenerRulesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadListenerRulesRequest struct {
	value *ReadListenerRulesRequest
	isSet bool
}

func (v NullableReadListenerRulesRequest) Get() *ReadListenerRulesRequest {
	return v.value
}

func (v *NullableReadListenerRulesRequest) Set(val *ReadListenerRulesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadListenerRulesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadListenerRulesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadListenerRulesRequest(val *ReadListenerRulesRequest) *NullableReadListenerRulesRequest {
	return &NullableReadListenerRulesRequest{value: val, isSet: true}
}

func (v NullableReadListenerRulesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadListenerRulesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadListenerRulesResponse struct for ReadListenerRulesResponse
type ReadListenerRulesResponse struct {
	// The list of the rules to describe.
	ListenerRules *[]ListenerRule `json:"ListenerRules,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadListenerRulesResponse instantiates a new ReadListenerRulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadListenerRulesResponse() *ReadListenerRulesResponse {
	this := ReadListenerRulesResponse{}
	return &this
}

// NewReadListenerRulesResponseWithDefaults instantiates a new ReadListenerRulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadListenerRulesResponseWithDefaults() *ReadListenerRulesResponse {
	this := ReadListenerRulesResponse{}
	return &this
}

// GetListenerRules returns the ListenerRules field value if set, zero value otherwise.
func (o *ReadListenerRulesResponse) GetListenerRules() []ListenerRule {
	if o == nil || o.ListenerRules == nil {
		var ret []ListenerRule
		return ret
	}
	return *o.ListenerRules
}

// GetListenerRulesOk returns a tuple with the ListenerRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadListenerRulesResponse) GetListenerRulesOk() (*[]ListenerRule, bool) {
	if o == nil || o.ListenerRules == nil {
		return nil, false
	}
	return o.ListenerRules, true
}

// HasListenerRules returns a boolean if a field has been set.
func (o *ReadListenerRulesResponse) HasListenerRules() bool {
	if o != nil && o.ListenerRules != nil {
		return true
	}

	return false
}

// SetListenerRules gets a reference to the given []ListenerRule and assigns it to the ListenerRules field.
func (o *ReadListenerRulesResponse) SetListenerRules(v []ListenerRule) {
	o.ListenerRules = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadListenerRulesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadListenerRulesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadListenerRulesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadListenerRulesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadListenerRulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ListenerRules != nil {
		toSerialize["ListenerRules"] = o.ListenerRules
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadListenerRulesResponse struct {
	value *ReadListenerRulesResponse
	isSet bool
}

func (v NullableReadListenerRulesResponse) Get() *ReadListenerRulesResponse {
	return v.value
}

func (v *NullableReadListenerRulesResponse) Set(val *ReadListenerRulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadListenerRulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadListenerRulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadListenerRulesResponse(val *ReadListenerRulesResponse) *NullableReadListenerRulesResponse {
	return &NullableReadListenerRulesResponse{value: val, isSet: true}
}

func (v NullableReadListenerRulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadListenerRulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLoadBalancerTagsRequest struct for ReadLoadBalancerTagsRequest
type ReadLoadBalancerTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more load balancer names.
	LoadBalancerNames []string `json:"LoadBalancerNames"`
}

// NewReadLoadBalancerTagsRequest instantiates a new ReadLoadBalancerTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLoadBalancerTagsRequest(loadBalancerNames []string, ) *ReadLoadBalancerTagsRequest {
	this := ReadLoadBalancerTagsRequest{}
	this.LoadBalancerNames = loadBalancerNames
	return &this
}

// NewReadLoadBalancerTagsRequestWithDefaults instantiates a new ReadLoadBalancerTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLoadBalancerTagsRequestWithDefaults() *ReadLoadBalancerTagsRequest {
	this := ReadLoadBalancerTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadLoadBalancerTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancerTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadLoadBalancerTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadLoadBalancerTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerNames returns the LoadBalancerNames field value
func (o *ReadLoadBalancerTagsRequest) GetLoadBalancerNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.LoadBalancerNames
}

// GetLoadBalancerNamesOk returns a tuple with the LoadBalancerNames field value
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancerTagsRequest) GetLoadBalancerNamesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerNames, true
}

// SetLoadBalancerNames sets field value
func (o *ReadLoadBalancerTagsRequest) SetLoadBalancerNames(v []string) {
	o.LoadBalancerNames = v
}

func (o ReadLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerNames"] = o.LoadBalancerNames
	}
	return json.Marshal(toSerialize)
}

type NullableReadLoadBalancerTagsRequest struct {
	value *ReadLoadBalancerTagsRequest
	isSet bool
}

func (v NullableReadLoadBalancerTagsRequest) Get() *ReadLoadBalancerTagsRequest {
	return v.value
}

func (v *NullableReadLoadBalancerTagsRequest) Set(val *ReadLoadBalancerTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLoadBalancerTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLoadBalancerTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLoadBalancerTagsRequest(val *ReadLoadBalancerTagsRequest) *NullableReadLoadBalancerTagsRequest {
	return &NullableReadLoadBalancerTagsRequest{value: val, isSet: true}
}

func (v NullableReadLoadBalancerTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLoadBalancerTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLoadBalancerTagsResponse struct for ReadLoadBalancerTagsResponse
type ReadLoadBalancerTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more load balancer tags.
	Tags *[]LoadBalancerTag `json:"Tags,omitempty"`
}

// NewReadLoadBalancerTagsResponse instantiates a new ReadLoadBalancerTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLoadBalancerTagsResponse() *ReadLoadBalancerTagsResponse {
	this := ReadLoadBalancerTagsResponse{}
	return &this
}

// NewReadLoadBalancerTagsResponseWithDefaults instantiates a new ReadLoadBalancerTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLoadBalancerTagsResponseWithDefaults() *ReadLoadBalancerTagsResponse {
	this := ReadLoadBalancerTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadLoadBalancerTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancerTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadLoadBalancerTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadLoadBalancerTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ReadLoadBalancerTagsResponse) GetTags() []LoadBalancerTag {
	if o == nil || o.Tags == nil {
		var ret []LoadBalancerTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancerTagsResponse) GetTagsOk() (*[]LoadBalancerTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReadLoadBalancerTagsResponse) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []LoadBalancerTag and assigns it to the Tags field.
func (o *ReadLoadBalancerTagsResponse) SetTags(v []LoadBalancerTag) {
	o.Tags = &v
}

func (o ReadLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableReadLoadBalancerTagsResponse struct {
	value *ReadLoadBalancerTagsResponse
	isSet bool
}

func (v NullableReadLoadBalancerTagsResponse) Get() *ReadLoadBalancerTagsResponse {
	return v.value
}

func (v *NullableReadLoadBalancerTagsResponse) Set(val *ReadLoadBalancerTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLoadBalancerTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLoadBalancerTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLoadBalancerTagsResponse(val *ReadLoadBalancerTagsResponse) *NullableReadLoadBalancerTagsResponse {
	return &NullableReadLoadBalancerTagsResponse{value: val, isSet: true}
}

func (v NullableReadLoadBalancerTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLoadBalancerTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLoadBalancersRequest struct for ReadLoadBalancersRequest
type ReadLoadBalancersRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersLoadBalancer `json:"Filters,omitempty"`
}

// NewReadLoadBalancersRequest instantiates a new ReadLoadBalancersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLoadBalancersRequest() *ReadLoadBalancersRequest {
	this := ReadLoadBalancersRequest{}
	return &this
}

// NewReadLoadBalancersRequestWithDefaults instantiates a new ReadLoadBalancersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLoadBalancersRequestWithDefaults() *ReadLoadBalancersRequest {
	this := ReadLoadBalancersRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadLoadBalancersRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancersRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadLoadBalancersRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadLoadBalancersRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadLoadBalancersRequest) GetFilters() FiltersLoadBalancer {
	if o == nil || o.Filters == nil {
		var ret FiltersLoadBalancer
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancersRequest) GetFiltersOk() (*FiltersLoadBalancer, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadLoadBalancersRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersLoadBalancer and assigns it to the Filters field.
func (o *ReadLoadBalancersRequest) SetFilters(v FiltersLoadBalancer) {
	o.Filters = &v
}

func (o ReadLoadBalancersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadLoadBalancersRequest struct {
	value *ReadLoadBalancersRequest
	isSet bool
}

func (v NullableReadLoadBalancersRequest) Get() *ReadLoadBalancersRequest {
	return v.value
}

func (v *NullableReadLoadBalancersRequest) Set(val *ReadLoadBalancersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLoadBalancersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLoadBalancersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLoadBalancersRequest(val *ReadLoadBalancersRequest) *NullableReadLoadBalancersRequest {
	return &NullableReadLoadBalancersRequest{value: val, isSet: true}
}

func (v NullableReadLoadBalancersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLoadBalancersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLoadBalancersResponse struct for ReadLoadBalancersResponse
type ReadLoadBalancersResponse struct {
	// Information about one or more load balancers.
	LoadBalancers *[]LoadBalancer `json:"LoadBalancers,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadLoadBalancersResponse instantiates a new ReadLoadBalancersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLoadBalancersResponse() *ReadLoadBalancersResponse {
	this := ReadLoadBalancersResponse{}
	return &this
}

// NewReadLoadBalancersResponseWithDefaults instantiates a new ReadLoadBalancersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLoadBalancersResponseWithDefaults() *ReadLoadBalancersResponse {
	this := ReadLoadBalancersResponse{}
	return &this
}

// GetLoadBalancers returns the LoadBalancers field value if set, zero value otherwise.
func (o *ReadLoadBalancersResponse) GetLoadBalancers() []LoadBalancer {
	if o == nil || o.LoadBalancers == nil {
		var ret []LoadBalancer
		return ret
	}
	return *o.LoadBalancers
}

// GetLoadBalancersOk returns a tuple with the LoadBalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancersResponse) GetLoadBalancersOk() (*[]LoadBalancer, bool) {
	if o == nil || o.LoadBalancers == nil {
		return nil, false
	}
	return o.LoadBalancers, true
}

// HasLoadBalancers returns a boolean if a field has been set.
func (o *ReadLoadBalancersResponse) HasLoadBalancers() bool {
	if o != nil && o.LoadBalancers != nil {
		return true
	}

	return false
}

// SetLoadBalancers gets a reference to the given []LoadBalancer and assigns it to the LoadBalancers field.
func (o *ReadLoadBalancersResponse) SetLoadBalancers(v []LoadBalancer) {
	o.LoadBalancers = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadLoadBalancersResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLoadBalancersResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadLoadBalancersResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadLoadBalancersResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadLoadBalancersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancers != nil {
		toSerialize["LoadBalancers"] = o.LoadBalancers
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadLoadBalancersResponse struct {
	value *ReadLoadBalancersResponse
	isSet bool
}

func (v NullableReadLoadBalancersResponse) Get() *ReadLoadBalancersResponse {
	return v.value
}

func (v *NullableReadLoadBalancersResponse) Set(val *ReadLoadBalancersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLoadBalancersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLoadBalancersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLoadBalancersResponse(val *ReadLoadBalancersResponse) *NullableReadLoadBalancersResponse {
	return &NullableReadLoadBalancersResponse{value: val, isSet: true}
}

func (v NullableReadLoadBalancersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLoadBalancersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLocationsRequest struct for ReadLocationsRequest
type ReadLocationsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadLocationsRequest instantiates a new ReadLocationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLocationsRequest() *ReadLocationsRequest {
	this := ReadLocationsRequest{}
	return &this
}

// NewReadLocationsRequestWithDefaults instantiates a new ReadLocationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLocationsRequestWithDefaults() *ReadLocationsRequest {
	this := ReadLocationsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadLocationsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLocationsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadLocationsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadLocationsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadLocationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadLocationsRequest struct {
	value *ReadLocationsRequest
	isSet bool
}

func (v NullableReadLocationsRequest) Get() *ReadLocationsRequest {
	return v.value
}

func (v *NullableReadLocationsRequest) Set(val *ReadLocationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLocationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLocationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLocationsRequest(val *ReadLocationsRequest) *NullableReadLocationsRequest {
	return &NullableReadLocationsRequest{value: val, isSet: true}
}

func (v NullableReadLocationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLocationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadLocationsResponse struct for ReadLocationsResponse
type ReadLocationsResponse struct {
	// Information about one or more locations.
	Locations *[]Location `json:"Locations,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadLocationsResponse instantiates a new ReadLocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadLocationsResponse() *ReadLocationsResponse {
	this := ReadLocationsResponse{}
	return &this
}

// NewReadLocationsResponseWithDefaults instantiates a new ReadLocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadLocationsResponseWithDefaults() *ReadLocationsResponse {
	this := ReadLocationsResponse{}
	return &this
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ReadLocationsResponse) GetLocations() []Location {
	if o == nil || o.Locations == nil {
		var ret []Location
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLocationsResponse) GetLocationsOk() (*[]Location, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ReadLocationsResponse) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []Location and assigns it to the Locations field.
func (o *ReadLocationsResponse) SetLocations(v []Location) {
	o.Locations = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadLocationsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadLocationsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadLocationsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadLocationsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadLocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Locations != nil {
		toSerialize["Locations"] = o.Locations
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadLocationsResponse struct {
	value *ReadLocationsResponse
	isSet bool
}

func (v NullableReadLocationsResponse) Get() *ReadLocationsResponse {
	return v.value
}

func (v *NullableReadLocationsResponse) Set(val *ReadLocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadLocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadLocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadLocationsResponse(val *ReadLocationsResponse) *NullableReadLocationsResponse {
	return &NullableReadLocationsResponse{value: val, isSet: true}
}

func (v NullableReadLocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadLocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNatServicesRequest struct for ReadNatServicesRequest
type ReadNatServicesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersNatService `json:"Filters,omitempty"`
}

// NewReadNatServicesRequest instantiates a new ReadNatServicesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNatServicesRequest() *ReadNatServicesRequest {
	this := ReadNatServicesRequest{}
	return &this
}

// NewReadNatServicesRequestWithDefaults instantiates a new ReadNatServicesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNatServicesRequestWithDefaults() *ReadNatServicesRequest {
	this := ReadNatServicesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNatServicesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNatServicesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNatServicesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNatServicesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNatServicesRequest) GetFilters() FiltersNatService {
	if o == nil || o.Filters == nil {
		var ret FiltersNatService
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNatServicesRequest) GetFiltersOk() (*FiltersNatService, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNatServicesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersNatService and assigns it to the Filters field.
func (o *ReadNatServicesRequest) SetFilters(v FiltersNatService) {
	o.Filters = &v
}

func (o ReadNatServicesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNatServicesRequest struct {
	value *ReadNatServicesRequest
	isSet bool
}

func (v NullableReadNatServicesRequest) Get() *ReadNatServicesRequest {
	return v.value
}

func (v *NullableReadNatServicesRequest) Set(val *ReadNatServicesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNatServicesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNatServicesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNatServicesRequest(val *ReadNatServicesRequest) *NullableReadNatServicesRequest {
	return &NullableReadNatServicesRequest{value: val, isSet: true}
}

func (v NullableReadNatServicesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNatServicesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNatServicesResponse struct for ReadNatServicesResponse
type ReadNatServicesResponse struct {
	// Information about one or more NAT services.
	NatServices *[]NatService `json:"NatServices,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadNatServicesResponse instantiates a new ReadNatServicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNatServicesResponse() *ReadNatServicesResponse {
	this := ReadNatServicesResponse{}
	return &this
}

// NewReadNatServicesResponseWithDefaults instantiates a new ReadNatServicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNatServicesResponseWithDefaults() *ReadNatServicesResponse {
	this := ReadNatServicesResponse{}
	return &this
}

// GetNatServices returns the NatServices field value if set, zero value otherwise.
func (o *ReadNatServicesResponse) GetNatServices() []NatService {
	if o == nil || o.NatServices == nil {
		var ret []NatService
		return ret
	}
	return *o.NatServices
}

// GetNatServicesOk returns a tuple with the NatServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNatServicesResponse) GetNatServicesOk() (*[]NatService, bool) {
	if o == nil || o.NatServices == nil {
		return nil, false
	}
	return o.NatServices, true
}

// HasNatServices returns a boolean if a field has been set.
func (o *ReadNatServicesResponse) HasNatServices() bool {
	if o != nil && o.NatServices != nil {
		return true
	}

	return false
}

// SetNatServices gets a reference to the given []NatService and assigns it to the NatServices field.
func (o *ReadNatServicesResponse) SetNatServices(v []NatService) {
	o.NatServices = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNatServicesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNatServicesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNatServicesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNatServicesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadNatServicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatServices != nil {
		toSerialize["NatServices"] = o.NatServices
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadNatServicesResponse struct {
	value *ReadNatServicesResponse
	isSet bool
}

func (v NullableReadNatServicesResponse) Get() *ReadNatServicesResponse {
	return v.value
}

func (v *NullableReadNatServicesResponse) Set(val *ReadNatServicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNatServicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNatServicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNatServicesResponse(val *ReadNatServicesResponse) *NullableReadNatServicesResponse {
	return &NullableReadNatServicesResponse{value: val, isSet: true}
}

func (v NullableReadNatServicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNatServicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetAccessPointServicesRequest struct for ReadNetAccessPointServicesRequest
type ReadNetAccessPointServicesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersService `json:"Filters,omitempty"`
}

// NewReadNetAccessPointServicesRequest instantiates a new ReadNetAccessPointServicesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetAccessPointServicesRequest() *ReadNetAccessPointServicesRequest {
	this := ReadNetAccessPointServicesRequest{}
	return &this
}

// NewReadNetAccessPointServicesRequestWithDefaults instantiates a new ReadNetAccessPointServicesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetAccessPointServicesRequestWithDefaults() *ReadNetAccessPointServicesRequest {
	this := ReadNetAccessPointServicesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNetAccessPointServicesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointServicesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNetAccessPointServicesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNetAccessPointServicesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNetAccessPointServicesRequest) GetFilters() FiltersService {
	if o == nil || o.Filters == nil {
		var ret FiltersService
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointServicesRequest) GetFiltersOk() (*FiltersService, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNetAccessPointServicesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersService and assigns it to the Filters field.
func (o *ReadNetAccessPointServicesRequest) SetFilters(v FiltersService) {
	o.Filters = &v
}

func (o ReadNetAccessPointServicesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetAccessPointServicesRequest struct {
	value *ReadNetAccessPointServicesRequest
	isSet bool
}

func (v NullableReadNetAccessPointServicesRequest) Get() *ReadNetAccessPointServicesRequest {
	return v.value
}

func (v *NullableReadNetAccessPointServicesRequest) Set(val *ReadNetAccessPointServicesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetAccessPointServicesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetAccessPointServicesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetAccessPointServicesRequest(val *ReadNetAccessPointServicesRequest) *NullableReadNetAccessPointServicesRequest {
	return &NullableReadNetAccessPointServicesRequest{value: val, isSet: true}
}

func (v NullableReadNetAccessPointServicesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetAccessPointServicesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetAccessPointServicesResponse struct for ReadNetAccessPointServicesResponse
type ReadNetAccessPointServicesResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// The names of the services you can use for Net access points.
	Services *[]Service `json:"Services,omitempty"`
}

// NewReadNetAccessPointServicesResponse instantiates a new ReadNetAccessPointServicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetAccessPointServicesResponse() *ReadNetAccessPointServicesResponse {
	this := ReadNetAccessPointServicesResponse{}
	return &this
}

// NewReadNetAccessPointServicesResponseWithDefaults instantiates a new ReadNetAccessPointServicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetAccessPointServicesResponseWithDefaults() *ReadNetAccessPointServicesResponse {
	this := ReadNetAccessPointServicesResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNetAccessPointServicesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointServicesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNetAccessPointServicesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNetAccessPointServicesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ReadNetAccessPointServicesResponse) GetServices() []Service {
	if o == nil || o.Services == nil {
		var ret []Service
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointServicesResponse) GetServicesOk() (*[]Service, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ReadNetAccessPointServicesResponse) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []Service and assigns it to the Services field.
func (o *ReadNetAccessPointServicesResponse) SetServices(v []Service) {
	o.Services = &v
}

func (o ReadNetAccessPointServicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Services != nil {
		toSerialize["Services"] = o.Services
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetAccessPointServicesResponse struct {
	value *ReadNetAccessPointServicesResponse
	isSet bool
}

func (v NullableReadNetAccessPointServicesResponse) Get() *ReadNetAccessPointServicesResponse {
	return v.value
}

func (v *NullableReadNetAccessPointServicesResponse) Set(val *ReadNetAccessPointServicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetAccessPointServicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetAccessPointServicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetAccessPointServicesResponse(val *ReadNetAccessPointServicesResponse) *NullableReadNetAccessPointServicesResponse {
	return &NullableReadNetAccessPointServicesResponse{value: val, isSet: true}
}

func (v NullableReadNetAccessPointServicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetAccessPointServicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetAccessPointsRequest struct for ReadNetAccessPointsRequest
type ReadNetAccessPointsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersNetAccessPoint `json:"Filters,omitempty"`
}

// NewReadNetAccessPointsRequest instantiates a new ReadNetAccessPointsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetAccessPointsRequest() *ReadNetAccessPointsRequest {
	this := ReadNetAccessPointsRequest{}
	return &this
}

// NewReadNetAccessPointsRequestWithDefaults instantiates a new ReadNetAccessPointsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetAccessPointsRequestWithDefaults() *ReadNetAccessPointsRequest {
	this := ReadNetAccessPointsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNetAccessPointsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNetAccessPointsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNetAccessPointsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNetAccessPointsRequest) GetFilters() FiltersNetAccessPoint {
	if o == nil || o.Filters == nil {
		var ret FiltersNetAccessPoint
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointsRequest) GetFiltersOk() (*FiltersNetAccessPoint, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNetAccessPointsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersNetAccessPoint and assigns it to the Filters field.
func (o *ReadNetAccessPointsRequest) SetFilters(v FiltersNetAccessPoint) {
	o.Filters = &v
}

func (o ReadNetAccessPointsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetAccessPointsRequest struct {
	value *ReadNetAccessPointsRequest
	isSet bool
}

func (v NullableReadNetAccessPointsRequest) Get() *ReadNetAccessPointsRequest {
	return v.value
}

func (v *NullableReadNetAccessPointsRequest) Set(val *ReadNetAccessPointsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetAccessPointsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetAccessPointsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetAccessPointsRequest(val *ReadNetAccessPointsRequest) *NullableReadNetAccessPointsRequest {
	return &NullableReadNetAccessPointsRequest{value: val, isSet: true}
}

func (v NullableReadNetAccessPointsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetAccessPointsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetAccessPointsResponse struct for ReadNetAccessPointsResponse
type ReadNetAccessPointsResponse struct {
	// One or more Net access points.
	NetAccessPoints *[]NetAccessPoint `json:"NetAccessPoints,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadNetAccessPointsResponse instantiates a new ReadNetAccessPointsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetAccessPointsResponse() *ReadNetAccessPointsResponse {
	this := ReadNetAccessPointsResponse{}
	return &this
}

// NewReadNetAccessPointsResponseWithDefaults instantiates a new ReadNetAccessPointsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetAccessPointsResponseWithDefaults() *ReadNetAccessPointsResponse {
	this := ReadNetAccessPointsResponse{}
	return &this
}

// GetNetAccessPoints returns the NetAccessPoints field value if set, zero value otherwise.
func (o *ReadNetAccessPointsResponse) GetNetAccessPoints() []NetAccessPoint {
	if o == nil || o.NetAccessPoints == nil {
		var ret []NetAccessPoint
		return ret
	}
	return *o.NetAccessPoints
}

// GetNetAccessPointsOk returns a tuple with the NetAccessPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointsResponse) GetNetAccessPointsOk() (*[]NetAccessPoint, bool) {
	if o == nil || o.NetAccessPoints == nil {
		return nil, false
	}
	return o.NetAccessPoints, true
}

// HasNetAccessPoints returns a boolean if a field has been set.
func (o *ReadNetAccessPointsResponse) HasNetAccessPoints() bool {
	if o != nil && o.NetAccessPoints != nil {
		return true
	}

	return false
}

// SetNetAccessPoints gets a reference to the given []NetAccessPoint and assigns it to the NetAccessPoints field.
func (o *ReadNetAccessPointsResponse) SetNetAccessPoints(v []NetAccessPoint) {
	o.NetAccessPoints = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNetAccessPointsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetAccessPointsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNetAccessPointsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNetAccessPointsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadNetAccessPointsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetAccessPoints != nil {
		toSerialize["NetAccessPoints"] = o.NetAccessPoints
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetAccessPointsResponse struct {
	value *ReadNetAccessPointsResponse
	isSet bool
}

func (v NullableReadNetAccessPointsResponse) Get() *ReadNetAccessPointsResponse {
	return v.value
}

func (v *NullableReadNetAccessPointsResponse) Set(val *ReadNetAccessPointsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetAccessPointsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetAccessPointsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetAccessPointsResponse(val *ReadNetAccessPointsResponse) *NullableReadNetAccessPointsResponse {
	return &NullableReadNetAccessPointsResponse{value: val, isSet: true}
}

func (v NullableReadNetAccessPointsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetAccessPointsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetPeeringsRequest struct for ReadNetPeeringsRequest
type ReadNetPeeringsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersNetPeering `json:"Filters,omitempty"`
}

// NewReadNetPeeringsRequest instantiates a new ReadNetPeeringsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetPeeringsRequest() *ReadNetPeeringsRequest {
	this := ReadNetPeeringsRequest{}
	return &this
}

// NewReadNetPeeringsRequestWithDefaults instantiates a new ReadNetPeeringsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetPeeringsRequestWithDefaults() *ReadNetPeeringsRequest {
	this := ReadNetPeeringsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNetPeeringsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetPeeringsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNetPeeringsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNetPeeringsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNetPeeringsRequest) GetFilters() FiltersNetPeering {
	if o == nil || o.Filters == nil {
		var ret FiltersNetPeering
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetPeeringsRequest) GetFiltersOk() (*FiltersNetPeering, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNetPeeringsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersNetPeering and assigns it to the Filters field.
func (o *ReadNetPeeringsRequest) SetFilters(v FiltersNetPeering) {
	o.Filters = &v
}

func (o ReadNetPeeringsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetPeeringsRequest struct {
	value *ReadNetPeeringsRequest
	isSet bool
}

func (v NullableReadNetPeeringsRequest) Get() *ReadNetPeeringsRequest {
	return v.value
}

func (v *NullableReadNetPeeringsRequest) Set(val *ReadNetPeeringsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetPeeringsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetPeeringsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetPeeringsRequest(val *ReadNetPeeringsRequest) *NullableReadNetPeeringsRequest {
	return &NullableReadNetPeeringsRequest{value: val, isSet: true}
}

func (v NullableReadNetPeeringsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetPeeringsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetPeeringsResponse struct for ReadNetPeeringsResponse
type ReadNetPeeringsResponse struct {
	// Information about one or more Net peering connections.
	NetPeerings *[]NetPeering `json:"NetPeerings,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadNetPeeringsResponse instantiates a new ReadNetPeeringsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetPeeringsResponse() *ReadNetPeeringsResponse {
	this := ReadNetPeeringsResponse{}
	return &this
}

// NewReadNetPeeringsResponseWithDefaults instantiates a new ReadNetPeeringsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetPeeringsResponseWithDefaults() *ReadNetPeeringsResponse {
	this := ReadNetPeeringsResponse{}
	return &this
}

// GetNetPeerings returns the NetPeerings field value if set, zero value otherwise.
func (o *ReadNetPeeringsResponse) GetNetPeerings() []NetPeering {
	if o == nil || o.NetPeerings == nil {
		var ret []NetPeering
		return ret
	}
	return *o.NetPeerings
}

// GetNetPeeringsOk returns a tuple with the NetPeerings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetPeeringsResponse) GetNetPeeringsOk() (*[]NetPeering, bool) {
	if o == nil || o.NetPeerings == nil {
		return nil, false
	}
	return o.NetPeerings, true
}

// HasNetPeerings returns a boolean if a field has been set.
func (o *ReadNetPeeringsResponse) HasNetPeerings() bool {
	if o != nil && o.NetPeerings != nil {
		return true
	}

	return false
}

// SetNetPeerings gets a reference to the given []NetPeering and assigns it to the NetPeerings field.
func (o *ReadNetPeeringsResponse) SetNetPeerings(v []NetPeering) {
	o.NetPeerings = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNetPeeringsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetPeeringsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNetPeeringsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNetPeeringsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadNetPeeringsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetPeerings != nil {
		toSerialize["NetPeerings"] = o.NetPeerings
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetPeeringsResponse struct {
	value *ReadNetPeeringsResponse
	isSet bool
}

func (v NullableReadNetPeeringsResponse) Get() *ReadNetPeeringsResponse {
	return v.value
}

func (v *NullableReadNetPeeringsResponse) Set(val *ReadNetPeeringsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetPeeringsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetPeeringsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetPeeringsResponse(val *ReadNetPeeringsResponse) *NullableReadNetPeeringsResponse {
	return &NullableReadNetPeeringsResponse{value: val, isSet: true}
}

func (v NullableReadNetPeeringsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetPeeringsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetsRequest struct for ReadNetsRequest
type ReadNetsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersNet `json:"Filters,omitempty"`
}

// NewReadNetsRequest instantiates a new ReadNetsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetsRequest() *ReadNetsRequest {
	this := ReadNetsRequest{}
	return &this
}

// NewReadNetsRequestWithDefaults instantiates a new ReadNetsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetsRequestWithDefaults() *ReadNetsRequest {
	this := ReadNetsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNetsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNetsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNetsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNetsRequest) GetFilters() FiltersNet {
	if o == nil || o.Filters == nil {
		var ret FiltersNet
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetsRequest) GetFiltersOk() (*FiltersNet, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNetsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersNet and assigns it to the Filters field.
func (o *ReadNetsRequest) SetFilters(v FiltersNet) {
	o.Filters = &v
}

func (o ReadNetsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetsRequest struct {
	value *ReadNetsRequest
	isSet bool
}

func (v NullableReadNetsRequest) Get() *ReadNetsRequest {
	return v.value
}

func (v *NullableReadNetsRequest) Set(val *ReadNetsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetsRequest(val *ReadNetsRequest) *NullableReadNetsRequest {
	return &NullableReadNetsRequest{value: val, isSet: true}
}

func (v NullableReadNetsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNetsResponse struct for ReadNetsResponse
type ReadNetsResponse struct {
	// Information about the described Nets.
	Nets *[]Net `json:"Nets,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadNetsResponse instantiates a new ReadNetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNetsResponse() *ReadNetsResponse {
	this := ReadNetsResponse{}
	return &this
}

// NewReadNetsResponseWithDefaults instantiates a new ReadNetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNetsResponseWithDefaults() *ReadNetsResponse {
	this := ReadNetsResponse{}
	return &this
}

// GetNets returns the Nets field value if set, zero value otherwise.
func (o *ReadNetsResponse) GetNets() []Net {
	if o == nil || o.Nets == nil {
		var ret []Net
		return ret
	}
	return *o.Nets
}

// GetNetsOk returns a tuple with the Nets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetsResponse) GetNetsOk() (*[]Net, bool) {
	if o == nil || o.Nets == nil {
		return nil, false
	}
	return o.Nets, true
}

// HasNets returns a boolean if a field has been set.
func (o *ReadNetsResponse) HasNets() bool {
	if o != nil && o.Nets != nil {
		return true
	}

	return false
}

// SetNets gets a reference to the given []Net and assigns it to the Nets field.
func (o *ReadNetsResponse) SetNets(v []Net) {
	o.Nets = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNetsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNetsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNetsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNetsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadNetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nets != nil {
		toSerialize["Nets"] = o.Nets
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadNetsResponse struct {
	value *ReadNetsResponse
	isSet bool
}

func (v NullableReadNetsResponse) Get() *ReadNetsResponse {
	return v.value
}

func (v *NullableReadNetsResponse) Set(val *ReadNetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNetsResponse(val *ReadNetsResponse) *NullableReadNetsResponse {
	return &NullableReadNetsResponse{value: val, isSet: true}
}

func (v NullableReadNetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNicsRequest struct for ReadNicsRequest
type ReadNicsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersNic `json:"Filters,omitempty"`
}

// NewReadNicsRequest instantiates a new ReadNicsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNicsRequest() *ReadNicsRequest {
	this := ReadNicsRequest{}
	return &this
}

// NewReadNicsRequestWithDefaults instantiates a new ReadNicsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNicsRequestWithDefaults() *ReadNicsRequest {
	this := ReadNicsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadNicsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNicsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadNicsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadNicsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadNicsRequest) GetFilters() FiltersNic {
	if o == nil || o.Filters == nil {
		var ret FiltersNic
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNicsRequest) GetFiltersOk() (*FiltersNic, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadNicsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersNic and assigns it to the Filters field.
func (o *ReadNicsRequest) SetFilters(v FiltersNic) {
	o.Filters = &v
}

func (o ReadNicsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadNicsRequest struct {
	value *ReadNicsRequest
	isSet bool
}

func (v NullableReadNicsRequest) Get() *ReadNicsRequest {
	return v.value
}

func (v *NullableReadNicsRequest) Set(val *ReadNicsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNicsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNicsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNicsRequest(val *ReadNicsRequest) *NullableReadNicsRequest {
	return &NullableReadNicsRequest{value: val, isSet: true}
}

func (v NullableReadNicsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNicsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadNicsResponse struct for ReadNicsResponse
type ReadNicsResponse struct {
	// Information about one or more NICs.
	Nics *[]Nic `json:"Nics,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadNicsResponse instantiates a new ReadNicsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadNicsResponse() *ReadNicsResponse {
	this := ReadNicsResponse{}
	return &this
}

// NewReadNicsResponseWithDefaults instantiates a new ReadNicsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadNicsResponseWithDefaults() *ReadNicsResponse {
	this := ReadNicsResponse{}
	return &this
}

// GetNics returns the Nics field value if set, zero value otherwise.
func (o *ReadNicsResponse) GetNics() []Nic {
	if o == nil || o.Nics == nil {
		var ret []Nic
		return ret
	}
	return *o.Nics
}

// GetNicsOk returns a tuple with the Nics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNicsResponse) GetNicsOk() (*[]Nic, bool) {
	if o == nil || o.Nics == nil {
		return nil, false
	}
	return o.Nics, true
}

// HasNics returns a boolean if a field has been set.
func (o *ReadNicsResponse) HasNics() bool {
	if o != nil && o.Nics != nil {
		return true
	}

	return false
}

// SetNics gets a reference to the given []Nic and assigns it to the Nics field.
func (o *ReadNicsResponse) SetNics(v []Nic) {
	o.Nics = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadNicsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadNicsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadNicsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadNicsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadNicsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nics != nil {
		toSerialize["Nics"] = o.Nics
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadNicsResponse struct {
	value *ReadNicsResponse
	isSet bool
}

func (v NullableReadNicsResponse) Get() *ReadNicsResponse {
	return v.value
}

func (v *NullableReadNicsResponse) Set(val *ReadNicsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadNicsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadNicsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadNicsResponse(val *ReadNicsResponse) *NullableReadNicsResponse {
	return &NullableReadNicsResponse{value: val, isSet: true}
}

func (v NullableReadNicsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadNicsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadProductTypesRequest struct for ReadProductTypesRequest
type ReadProductTypesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersProductType `json:"Filters,omitempty"`
}

// NewReadProductTypesRequest instantiates a new ReadProductTypesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadProductTypesRequest() *ReadProductTypesRequest {
	this := ReadProductTypesRequest{}
	return &this
}

// NewReadProductTypesRequestWithDefaults instantiates a new ReadProductTypesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadProductTypesRequestWithDefaults() *ReadProductTypesRequest {
	this := ReadProductTypesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadProductTypesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadProductTypesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadProductTypesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadProductTypesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadProductTypesRequest) GetFilters() FiltersProductType {
	if o == nil || o.Filters == nil {
		var ret FiltersProductType
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadProductTypesRequest) GetFiltersOk() (*FiltersProductType, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadProductTypesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersProductType and assigns it to the Filters field.
func (o *ReadProductTypesRequest) SetFilters(v FiltersProductType) {
	o.Filters = &v
}

func (o ReadProductTypesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadProductTypesRequest struct {
	value *ReadProductTypesRequest
	isSet bool
}

func (v NullableReadProductTypesRequest) Get() *ReadProductTypesRequest {
	return v.value
}

func (v *NullableReadProductTypesRequest) Set(val *ReadProductTypesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadProductTypesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadProductTypesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadProductTypesRequest(val *ReadProductTypesRequest) *NullableReadProductTypesRequest {
	return &NullableReadProductTypesRequest{value: val, isSet: true}
}

func (v NullableReadProductTypesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadProductTypesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadProductTypesResponse struct for ReadProductTypesResponse
type ReadProductTypesResponse struct {
	// Information about one or more product types.
	ProductTypes *[]ProductType `json:"ProductTypes,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadProductTypesResponse instantiates a new ReadProductTypesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadProductTypesResponse() *ReadProductTypesResponse {
	this := ReadProductTypesResponse{}
	return &this
}

// NewReadProductTypesResponseWithDefaults instantiates a new ReadProductTypesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadProductTypesResponseWithDefaults() *ReadProductTypesResponse {
	this := ReadProductTypesResponse{}
	return &this
}

// GetProductTypes returns the ProductTypes field value if set, zero value otherwise.
func (o *ReadProductTypesResponse) GetProductTypes() []ProductType {
	if o == nil || o.ProductTypes == nil {
		var ret []ProductType
		return ret
	}
	return *o.ProductTypes
}

// GetProductTypesOk returns a tuple with the ProductTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadProductTypesResponse) GetProductTypesOk() (*[]ProductType, bool) {
	if o == nil || o.ProductTypes == nil {
		return nil, false
	}
	return o.ProductTypes, true
}

// HasProductTypes returns a boolean if a field has been set.
func (o *ReadProductTypesResponse) HasProductTypes() bool {
	if o != nil && o.ProductTypes != nil {
		return true
	}

	return false
}

// SetProductTypes gets a reference to the given []ProductType and assigns it to the ProductTypes field.
func (o *ReadProductTypesResponse) SetProductTypes(v []ProductType) {
	o.ProductTypes = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadProductTypesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadProductTypesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadProductTypesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadProductTypesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadProductTypesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductTypes != nil {
		toSerialize["ProductTypes"] = o.ProductTypes
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadProductTypesResponse struct {
	value *ReadProductTypesResponse
	isSet bool
}

func (v NullableReadProductTypesResponse) Get() *ReadProductTypesResponse {
	return v.value
}

func (v *NullableReadProductTypesResponse) Set(val *ReadProductTypesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadProductTypesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadProductTypesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadProductTypesResponse(val *ReadProductTypesResponse) *NullableReadProductTypesResponse {
	return &NullableReadProductTypesResponse{value: val, isSet: true}
}

func (v NullableReadProductTypesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadProductTypesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadPublicIpRangesRequest struct for ReadPublicIpRangesRequest
type ReadPublicIpRangesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadPublicIpRangesRequest instantiates a new ReadPublicIpRangesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadPublicIpRangesRequest() *ReadPublicIpRangesRequest {
	this := ReadPublicIpRangesRequest{}
	return &this
}

// NewReadPublicIpRangesRequestWithDefaults instantiates a new ReadPublicIpRangesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadPublicIpRangesRequestWithDefaults() *ReadPublicIpRangesRequest {
	this := ReadPublicIpRangesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadPublicIpRangesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpRangesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadPublicIpRangesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadPublicIpRangesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadPublicIpRangesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadPublicIpRangesRequest struct {
	value *ReadPublicIpRangesRequest
	isSet bool
}

func (v NullableReadPublicIpRangesRequest) Get() *ReadPublicIpRangesRequest {
	return v.value
}

func (v *NullableReadPublicIpRangesRequest) Set(val *ReadPublicIpRangesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadPublicIpRangesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadPublicIpRangesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadPublicIpRangesRequest(val *ReadPublicIpRangesRequest) *NullableReadPublicIpRangesRequest {
	return &NullableReadPublicIpRangesRequest{value: val, isSet: true}
}

func (v NullableReadPublicIpRangesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadPublicIpRangesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadPublicIpRangesResponse struct for ReadPublicIpRangesResponse
type ReadPublicIpRangesResponse struct {
	// The list of public IPv4 addresses used in the Region, in CIDR notation.
	PublicIps *[]string `json:"PublicIps,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadPublicIpRangesResponse instantiates a new ReadPublicIpRangesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadPublicIpRangesResponse() *ReadPublicIpRangesResponse {
	this := ReadPublicIpRangesResponse{}
	return &this
}

// NewReadPublicIpRangesResponseWithDefaults instantiates a new ReadPublicIpRangesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadPublicIpRangesResponseWithDefaults() *ReadPublicIpRangesResponse {
	this := ReadPublicIpRangesResponse{}
	return &this
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *ReadPublicIpRangesResponse) GetPublicIps() []string {
	if o == nil || o.PublicIps == nil {
		var ret []string
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpRangesResponse) GetPublicIpsOk() (*[]string, bool) {
	if o == nil || o.PublicIps == nil {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *ReadPublicIpRangesResponse) HasPublicIps() bool {
	if o != nil && o.PublicIps != nil {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []string and assigns it to the PublicIps field.
func (o *ReadPublicIpRangesResponse) SetPublicIps(v []string) {
	o.PublicIps = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadPublicIpRangesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpRangesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadPublicIpRangesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadPublicIpRangesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadPublicIpRangesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicIps != nil {
		toSerialize["PublicIps"] = o.PublicIps
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadPublicIpRangesResponse struct {
	value *ReadPublicIpRangesResponse
	isSet bool
}

func (v NullableReadPublicIpRangesResponse) Get() *ReadPublicIpRangesResponse {
	return v.value
}

func (v *NullableReadPublicIpRangesResponse) Set(val *ReadPublicIpRangesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadPublicIpRangesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadPublicIpRangesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadPublicIpRangesResponse(val *ReadPublicIpRangesResponse) *NullableReadPublicIpRangesResponse {
	return &NullableReadPublicIpRangesResponse{value: val, isSet: true}
}

func (v NullableReadPublicIpRangesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadPublicIpRangesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadPublicIpsRequest struct for ReadPublicIpsRequest
type ReadPublicIpsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersPublicIp `json:"Filters,omitempty"`
}

// NewReadPublicIpsRequest instantiates a new ReadPublicIpsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadPublicIpsRequest() *ReadPublicIpsRequest {
	this := ReadPublicIpsRequest{}
	return &this
}

// NewReadPublicIpsRequestWithDefaults instantiates a new ReadPublicIpsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadPublicIpsRequestWithDefaults() *ReadPublicIpsRequest {
	this := ReadPublicIpsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadPublicIpsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadPublicIpsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadPublicIpsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadPublicIpsRequest) GetFilters() FiltersPublicIp {
	if o == nil || o.Filters == nil {
		var ret FiltersPublicIp
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpsRequest) GetFiltersOk() (*FiltersPublicIp, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadPublicIpsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersPublicIp and assigns it to the Filters field.
func (o *ReadPublicIpsRequest) SetFilters(v FiltersPublicIp) {
	o.Filters = &v
}

func (o ReadPublicIpsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadPublicIpsRequest struct {
	value *ReadPublicIpsRequest
	isSet bool
}

func (v NullableReadPublicIpsRequest) Get() *ReadPublicIpsRequest {
	return v.value
}

func (v *NullableReadPublicIpsRequest) Set(val *ReadPublicIpsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadPublicIpsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadPublicIpsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadPublicIpsRequest(val *ReadPublicIpsRequest) *NullableReadPublicIpsRequest {
	return &NullableReadPublicIpsRequest{value: val, isSet: true}
}

func (v NullableReadPublicIpsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadPublicIpsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadPublicIpsResponse struct for ReadPublicIpsResponse
type ReadPublicIpsResponse struct {
	// Information about one or more EIPs.
	PublicIps *[]PublicIp `json:"PublicIps,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadPublicIpsResponse instantiates a new ReadPublicIpsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadPublicIpsResponse() *ReadPublicIpsResponse {
	this := ReadPublicIpsResponse{}
	return &this
}

// NewReadPublicIpsResponseWithDefaults instantiates a new ReadPublicIpsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadPublicIpsResponseWithDefaults() *ReadPublicIpsResponse {
	this := ReadPublicIpsResponse{}
	return &this
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *ReadPublicIpsResponse) GetPublicIps() []PublicIp {
	if o == nil || o.PublicIps == nil {
		var ret []PublicIp
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpsResponse) GetPublicIpsOk() (*[]PublicIp, bool) {
	if o == nil || o.PublicIps == nil {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *ReadPublicIpsResponse) HasPublicIps() bool {
	if o != nil && o.PublicIps != nil {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []PublicIp and assigns it to the PublicIps field.
func (o *ReadPublicIpsResponse) SetPublicIps(v []PublicIp) {
	o.PublicIps = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadPublicIpsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadPublicIpsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadPublicIpsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadPublicIpsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadPublicIpsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicIps != nil {
		toSerialize["PublicIps"] = o.PublicIps
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadPublicIpsResponse struct {
	value *ReadPublicIpsResponse
	isSet bool
}

func (v NullableReadPublicIpsResponse) Get() *ReadPublicIpsResponse {
	return v.value
}

func (v *NullableReadPublicIpsResponse) Set(val *ReadPublicIpsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadPublicIpsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadPublicIpsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadPublicIpsResponse(val *ReadPublicIpsResponse) *NullableReadPublicIpsResponse {
	return &NullableReadPublicIpsResponse{value: val, isSet: true}
}

func (v NullableReadPublicIpsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadPublicIpsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadQuotasRequest struct for ReadQuotasRequest
type ReadQuotasRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersQuota `json:"Filters,omitempty"`
}

// NewReadQuotasRequest instantiates a new ReadQuotasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadQuotasRequest() *ReadQuotasRequest {
	this := ReadQuotasRequest{}
	return &this
}

// NewReadQuotasRequestWithDefaults instantiates a new ReadQuotasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadQuotasRequestWithDefaults() *ReadQuotasRequest {
	this := ReadQuotasRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadQuotasRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadQuotasRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadQuotasRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadQuotasRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadQuotasRequest) GetFilters() FiltersQuota {
	if o == nil || o.Filters == nil {
		var ret FiltersQuota
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadQuotasRequest) GetFiltersOk() (*FiltersQuota, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadQuotasRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersQuota and assigns it to the Filters field.
func (o *ReadQuotasRequest) SetFilters(v FiltersQuota) {
	o.Filters = &v
}

func (o ReadQuotasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadQuotasRequest struct {
	value *ReadQuotasRequest
	isSet bool
}

func (v NullableReadQuotasRequest) Get() *ReadQuotasRequest {
	return v.value
}

func (v *NullableReadQuotasRequest) Set(val *ReadQuotasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadQuotasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadQuotasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadQuotasRequest(val *ReadQuotasRequest) *NullableReadQuotasRequest {
	return &NullableReadQuotasRequest{value: val, isSet: true}
}

func (v NullableReadQuotasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadQuotasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadQuotasResponse struct for ReadQuotasResponse
type ReadQuotasResponse struct {
	// Information about one or more quotas.
	QuotaTypes *[]QuotaTypes `json:"QuotaTypes,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadQuotasResponse instantiates a new ReadQuotasResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadQuotasResponse() *ReadQuotasResponse {
	this := ReadQuotasResponse{}
	return &this
}

// NewReadQuotasResponseWithDefaults instantiates a new ReadQuotasResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadQuotasResponseWithDefaults() *ReadQuotasResponse {
	this := ReadQuotasResponse{}
	return &this
}

// GetQuotaTypes returns the QuotaTypes field value if set, zero value otherwise.
func (o *ReadQuotasResponse) GetQuotaTypes() []QuotaTypes {
	if o == nil || o.QuotaTypes == nil {
		var ret []QuotaTypes
		return ret
	}
	return *o.QuotaTypes
}

// GetQuotaTypesOk returns a tuple with the QuotaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadQuotasResponse) GetQuotaTypesOk() (*[]QuotaTypes, bool) {
	if o == nil || o.QuotaTypes == nil {
		return nil, false
	}
	return o.QuotaTypes, true
}

// HasQuotaTypes returns a boolean if a field has been set.
func (o *ReadQuotasResponse) HasQuotaTypes() bool {
	if o != nil && o.QuotaTypes != nil {
		return true
	}

	return false
}

// SetQuotaTypes gets a reference to the given []QuotaTypes and assigns it to the QuotaTypes field.
func (o *ReadQuotasResponse) SetQuotaTypes(v []QuotaTypes) {
	o.QuotaTypes = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadQuotasResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadQuotasResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadQuotasResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadQuotasResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadQuotasResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QuotaTypes != nil {
		toSerialize["QuotaTypes"] = o.QuotaTypes
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadQuotasResponse struct {
	value *ReadQuotasResponse
	isSet bool
}

func (v NullableReadQuotasResponse) Get() *ReadQuotasResponse {
	return v.value
}

func (v *NullableReadQuotasResponse) Set(val *ReadQuotasResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadQuotasResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadQuotasResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadQuotasResponse(val *ReadQuotasResponse) *NullableReadQuotasResponse {
	return &NullableReadQuotasResponse{value: val, isSet: true}
}

func (v NullableReadQuotasResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadQuotasResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadRegionsRequest struct for ReadRegionsRequest
type ReadRegionsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadRegionsRequest instantiates a new ReadRegionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRegionsRequest() *ReadRegionsRequest {
	this := ReadRegionsRequest{}
	return &this
}

// NewReadRegionsRequestWithDefaults instantiates a new ReadRegionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRegionsRequestWithDefaults() *ReadRegionsRequest {
	this := ReadRegionsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadRegionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRegionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadRegionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadRegionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadRegionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadRegionsRequest struct {
	value *ReadRegionsRequest
	isSet bool
}

func (v NullableReadRegionsRequest) Get() *ReadRegionsRequest {
	return v.value
}

func (v *NullableReadRegionsRequest) Set(val *ReadRegionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRegionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRegionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRegionsRequest(val *ReadRegionsRequest) *NullableReadRegionsRequest {
	return &NullableReadRegionsRequest{value: val, isSet: true}
}

func (v NullableReadRegionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRegionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadRegionsResponse struct for ReadRegionsResponse
type ReadRegionsResponse struct {
	// Information about one or more Regions.
	Regions *[]Region `json:"Regions,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadRegionsResponse instantiates a new ReadRegionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRegionsResponse() *ReadRegionsResponse {
	this := ReadRegionsResponse{}
	return &this
}

// NewReadRegionsResponseWithDefaults instantiates a new ReadRegionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRegionsResponseWithDefaults() *ReadRegionsResponse {
	this := ReadRegionsResponse{}
	return &this
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *ReadRegionsResponse) GetRegions() []Region {
	if o == nil || o.Regions == nil {
		var ret []Region
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRegionsResponse) GetRegionsOk() (*[]Region, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *ReadRegionsResponse) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []Region and assigns it to the Regions field.
func (o *ReadRegionsResponse) SetRegions(v []Region) {
	o.Regions = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadRegionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRegionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadRegionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadRegionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadRegionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Regions != nil {
		toSerialize["Regions"] = o.Regions
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadRegionsResponse struct {
	value *ReadRegionsResponse
	isSet bool
}

func (v NullableReadRegionsResponse) Get() *ReadRegionsResponse {
	return v.value
}

func (v *NullableReadRegionsResponse) Set(val *ReadRegionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRegionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRegionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRegionsResponse(val *ReadRegionsResponse) *NullableReadRegionsResponse {
	return &NullableReadRegionsResponse{value: val, isSet: true}
}

func (v NullableReadRegionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRegionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadRouteTablesRequest struct for ReadRouteTablesRequest
type ReadRouteTablesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersRouteTable `json:"Filters,omitempty"`
}

// NewReadRouteTablesRequest instantiates a new ReadRouteTablesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRouteTablesRequest() *ReadRouteTablesRequest {
	this := ReadRouteTablesRequest{}
	return &this
}

// NewReadRouteTablesRequestWithDefaults instantiates a new ReadRouteTablesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRouteTablesRequestWithDefaults() *ReadRouteTablesRequest {
	this := ReadRouteTablesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadRouteTablesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRouteTablesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadRouteTablesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadRouteTablesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadRouteTablesRequest) GetFilters() FiltersRouteTable {
	if o == nil || o.Filters == nil {
		var ret FiltersRouteTable
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRouteTablesRequest) GetFiltersOk() (*FiltersRouteTable, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadRouteTablesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersRouteTable and assigns it to the Filters field.
func (o *ReadRouteTablesRequest) SetFilters(v FiltersRouteTable) {
	o.Filters = &v
}

func (o ReadRouteTablesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadRouteTablesRequest struct {
	value *ReadRouteTablesRequest
	isSet bool
}

func (v NullableReadRouteTablesRequest) Get() *ReadRouteTablesRequest {
	return v.value
}

func (v *NullableReadRouteTablesRequest) Set(val *ReadRouteTablesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRouteTablesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRouteTablesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRouteTablesRequest(val *ReadRouteTablesRequest) *NullableReadRouteTablesRequest {
	return &NullableReadRouteTablesRequest{value: val, isSet: true}
}

func (v NullableReadRouteTablesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRouteTablesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadRouteTablesResponse struct for ReadRouteTablesResponse
type ReadRouteTablesResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more route tables.
	RouteTables *[]RouteTable `json:"RouteTables,omitempty"`
}

// NewReadRouteTablesResponse instantiates a new ReadRouteTablesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRouteTablesResponse() *ReadRouteTablesResponse {
	this := ReadRouteTablesResponse{}
	return &this
}

// NewReadRouteTablesResponseWithDefaults instantiates a new ReadRouteTablesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRouteTablesResponseWithDefaults() *ReadRouteTablesResponse {
	this := ReadRouteTablesResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadRouteTablesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRouteTablesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadRouteTablesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadRouteTablesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTables returns the RouteTables field value if set, zero value otherwise.
func (o *ReadRouteTablesResponse) GetRouteTables() []RouteTable {
	if o == nil || o.RouteTables == nil {
		var ret []RouteTable
		return ret
	}
	return *o.RouteTables
}

// GetRouteTablesOk returns a tuple with the RouteTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRouteTablesResponse) GetRouteTablesOk() (*[]RouteTable, bool) {
	if o == nil || o.RouteTables == nil {
		return nil, false
	}
	return o.RouteTables, true
}

// HasRouteTables returns a boolean if a field has been set.
func (o *ReadRouteTablesResponse) HasRouteTables() bool {
	if o != nil && o.RouteTables != nil {
		return true
	}

	return false
}

// SetRouteTables gets a reference to the given []RouteTable and assigns it to the RouteTables field.
func (o *ReadRouteTablesResponse) SetRouteTables(v []RouteTable) {
	o.RouteTables = &v
}

func (o ReadRouteTablesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTables != nil {
		toSerialize["RouteTables"] = o.RouteTables
	}
	return json.Marshal(toSerialize)
}

type NullableReadRouteTablesResponse struct {
	value *ReadRouteTablesResponse
	isSet bool
}

func (v NullableReadRouteTablesResponse) Get() *ReadRouteTablesResponse {
	return v.value
}

func (v *NullableReadRouteTablesResponse) Set(val *ReadRouteTablesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRouteTablesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRouteTablesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRouteTablesResponse(val *ReadRouteTablesResponse) *NullableReadRouteTablesResponse {
	return &NullableReadRouteTablesResponse{value: val, isSet: true}
}

func (v NullableReadRouteTablesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRouteTablesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSecretAccessKeyRequest struct for ReadSecretAccessKeyRequest
type ReadSecretAccessKeyRequest struct {
	// The ID of the access key.
	AccessKeyId string `json:"AccessKeyId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
}

// NewReadSecretAccessKeyRequest instantiates a new ReadSecretAccessKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSecretAccessKeyRequest(accessKeyId string, ) *ReadSecretAccessKeyRequest {
	this := ReadSecretAccessKeyRequest{}
	this.AccessKeyId = accessKeyId
	return &this
}

// NewReadSecretAccessKeyRequestWithDefaults instantiates a new ReadSecretAccessKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSecretAccessKeyRequestWithDefaults() *ReadSecretAccessKeyRequest {
	this := ReadSecretAccessKeyRequest{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value
func (o *ReadSecretAccessKeyRequest) GetAccessKeyId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
func (o *ReadSecretAccessKeyRequest) GetAccessKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKeyId, true
}

// SetAccessKeyId sets field value
func (o *ReadSecretAccessKeyRequest) SetAccessKeyId(v string) {
	o.AccessKeyId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSecretAccessKeyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecretAccessKeyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSecretAccessKeyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSecretAccessKeyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ReadSecretAccessKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AccessKeyId"] = o.AccessKeyId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	return json.Marshal(toSerialize)
}

type NullableReadSecretAccessKeyRequest struct {
	value *ReadSecretAccessKeyRequest
	isSet bool
}

func (v NullableReadSecretAccessKeyRequest) Get() *ReadSecretAccessKeyRequest {
	return v.value
}

func (v *NullableReadSecretAccessKeyRequest) Set(val *ReadSecretAccessKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSecretAccessKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSecretAccessKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSecretAccessKeyRequest(val *ReadSecretAccessKeyRequest) *NullableReadSecretAccessKeyRequest {
	return &NullableReadSecretAccessKeyRequest{value: val, isSet: true}
}

func (v NullableReadSecretAccessKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSecretAccessKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSecretAccessKeyResponse struct for ReadSecretAccessKeyResponse
type ReadSecretAccessKeyResponse struct {
	AccessKey *AccessKeySecretKey `json:"AccessKey,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadSecretAccessKeyResponse instantiates a new ReadSecretAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSecretAccessKeyResponse() *ReadSecretAccessKeyResponse {
	this := ReadSecretAccessKeyResponse{}
	return &this
}

// NewReadSecretAccessKeyResponseWithDefaults instantiates a new ReadSecretAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSecretAccessKeyResponseWithDefaults() *ReadSecretAccessKeyResponse {
	this := ReadSecretAccessKeyResponse{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *ReadSecretAccessKeyResponse) GetAccessKey() AccessKeySecretKey {
	if o == nil || o.AccessKey == nil {
		var ret AccessKeySecretKey
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecretAccessKeyResponse) GetAccessKeyOk() (*AccessKeySecretKey, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *ReadSecretAccessKeyResponse) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given AccessKeySecretKey and assigns it to the AccessKey field.
func (o *ReadSecretAccessKeyResponse) SetAccessKey(v AccessKeySecretKey) {
	o.AccessKey = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSecretAccessKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecretAccessKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSecretAccessKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSecretAccessKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadSecretAccessKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["AccessKey"] = o.AccessKey
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadSecretAccessKeyResponse struct {
	value *ReadSecretAccessKeyResponse
	isSet bool
}

func (v NullableReadSecretAccessKeyResponse) Get() *ReadSecretAccessKeyResponse {
	return v.value
}

func (v *NullableReadSecretAccessKeyResponse) Set(val *ReadSecretAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSecretAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSecretAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSecretAccessKeyResponse(val *ReadSecretAccessKeyResponse) *NullableReadSecretAccessKeyResponse {
	return &NullableReadSecretAccessKeyResponse{value: val, isSet: true}
}

func (v NullableReadSecretAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSecretAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSecurityGroupsRequest struct for ReadSecurityGroupsRequest
type ReadSecurityGroupsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersSecurityGroup `json:"Filters,omitempty"`
}

// NewReadSecurityGroupsRequest instantiates a new ReadSecurityGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSecurityGroupsRequest() *ReadSecurityGroupsRequest {
	this := ReadSecurityGroupsRequest{}
	return &this
}

// NewReadSecurityGroupsRequestWithDefaults instantiates a new ReadSecurityGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSecurityGroupsRequestWithDefaults() *ReadSecurityGroupsRequest {
	this := ReadSecurityGroupsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSecurityGroupsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecurityGroupsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSecurityGroupsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSecurityGroupsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadSecurityGroupsRequest) GetFilters() FiltersSecurityGroup {
	if o == nil || o.Filters == nil {
		var ret FiltersSecurityGroup
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecurityGroupsRequest) GetFiltersOk() (*FiltersSecurityGroup, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadSecurityGroupsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersSecurityGroup and assigns it to the Filters field.
func (o *ReadSecurityGroupsRequest) SetFilters(v FiltersSecurityGroup) {
	o.Filters = &v
}

func (o ReadSecurityGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadSecurityGroupsRequest struct {
	value *ReadSecurityGroupsRequest
	isSet bool
}

func (v NullableReadSecurityGroupsRequest) Get() *ReadSecurityGroupsRequest {
	return v.value
}

func (v *NullableReadSecurityGroupsRequest) Set(val *ReadSecurityGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSecurityGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSecurityGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSecurityGroupsRequest(val *ReadSecurityGroupsRequest) *NullableReadSecurityGroupsRequest {
	return &NullableReadSecurityGroupsRequest{value: val, isSet: true}
}

func (v NullableReadSecurityGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSecurityGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSecurityGroupsResponse struct for ReadSecurityGroupsResponse
type ReadSecurityGroupsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more security groups.
	SecurityGroups *[]SecurityGroup `json:"SecurityGroups,omitempty"`
}

// NewReadSecurityGroupsResponse instantiates a new ReadSecurityGroupsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSecurityGroupsResponse() *ReadSecurityGroupsResponse {
	this := ReadSecurityGroupsResponse{}
	return &this
}

// NewReadSecurityGroupsResponseWithDefaults instantiates a new ReadSecurityGroupsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSecurityGroupsResponseWithDefaults() *ReadSecurityGroupsResponse {
	this := ReadSecurityGroupsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSecurityGroupsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecurityGroupsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSecurityGroupsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSecurityGroupsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *ReadSecurityGroupsResponse) GetSecurityGroups() []SecurityGroup {
	if o == nil || o.SecurityGroups == nil {
		var ret []SecurityGroup
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSecurityGroupsResponse) GetSecurityGroupsOk() (*[]SecurityGroup, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *ReadSecurityGroupsResponse) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []SecurityGroup and assigns it to the SecurityGroups field.
func (o *ReadSecurityGroupsResponse) SetSecurityGroups(v []SecurityGroup) {
	o.SecurityGroups = &v
}

func (o ReadSecurityGroupsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	return json.Marshal(toSerialize)
}

type NullableReadSecurityGroupsResponse struct {
	value *ReadSecurityGroupsResponse
	isSet bool
}

func (v NullableReadSecurityGroupsResponse) Get() *ReadSecurityGroupsResponse {
	return v.value
}

func (v *NullableReadSecurityGroupsResponse) Set(val *ReadSecurityGroupsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSecurityGroupsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSecurityGroupsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSecurityGroupsResponse(val *ReadSecurityGroupsResponse) *NullableReadSecurityGroupsResponse {
	return &NullableReadSecurityGroupsResponse{value: val, isSet: true}
}

func (v NullableReadSecurityGroupsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSecurityGroupsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadServerCertificatesRequest struct for ReadServerCertificatesRequest
type ReadServerCertificatesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersServerCertificate `json:"Filters,omitempty"`
}

// NewReadServerCertificatesRequest instantiates a new ReadServerCertificatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadServerCertificatesRequest() *ReadServerCertificatesRequest {
	this := ReadServerCertificatesRequest{}
	return &this
}

// NewReadServerCertificatesRequestWithDefaults instantiates a new ReadServerCertificatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadServerCertificatesRequestWithDefaults() *ReadServerCertificatesRequest {
	this := ReadServerCertificatesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadServerCertificatesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadServerCertificatesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadServerCertificatesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadServerCertificatesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadServerCertificatesRequest) GetFilters() FiltersServerCertificate {
	if o == nil || o.Filters == nil {
		var ret FiltersServerCertificate
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadServerCertificatesRequest) GetFiltersOk() (*FiltersServerCertificate, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadServerCertificatesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersServerCertificate and assigns it to the Filters field.
func (o *ReadServerCertificatesRequest) SetFilters(v FiltersServerCertificate) {
	o.Filters = &v
}

func (o ReadServerCertificatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadServerCertificatesRequest struct {
	value *ReadServerCertificatesRequest
	isSet bool
}

func (v NullableReadServerCertificatesRequest) Get() *ReadServerCertificatesRequest {
	return v.value
}

func (v *NullableReadServerCertificatesRequest) Set(val *ReadServerCertificatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadServerCertificatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadServerCertificatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadServerCertificatesRequest(val *ReadServerCertificatesRequest) *NullableReadServerCertificatesRequest {
	return &NullableReadServerCertificatesRequest{value: val, isSet: true}
}

func (v NullableReadServerCertificatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadServerCertificatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadServerCertificatesResponse struct for ReadServerCertificatesResponse
type ReadServerCertificatesResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more server certificates.
	ServerCertificates *[]ServerCertificate `json:"ServerCertificates,omitempty"`
}

// NewReadServerCertificatesResponse instantiates a new ReadServerCertificatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadServerCertificatesResponse() *ReadServerCertificatesResponse {
	this := ReadServerCertificatesResponse{}
	return &this
}

// NewReadServerCertificatesResponseWithDefaults instantiates a new ReadServerCertificatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadServerCertificatesResponseWithDefaults() *ReadServerCertificatesResponse {
	this := ReadServerCertificatesResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadServerCertificatesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadServerCertificatesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadServerCertificatesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadServerCertificatesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetServerCertificates returns the ServerCertificates field value if set, zero value otherwise.
func (o *ReadServerCertificatesResponse) GetServerCertificates() []ServerCertificate {
	if o == nil || o.ServerCertificates == nil {
		var ret []ServerCertificate
		return ret
	}
	return *o.ServerCertificates
}

// GetServerCertificatesOk returns a tuple with the ServerCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadServerCertificatesResponse) GetServerCertificatesOk() (*[]ServerCertificate, bool) {
	if o == nil || o.ServerCertificates == nil {
		return nil, false
	}
	return o.ServerCertificates, true
}

// HasServerCertificates returns a boolean if a field has been set.
func (o *ReadServerCertificatesResponse) HasServerCertificates() bool {
	if o != nil && o.ServerCertificates != nil {
		return true
	}

	return false
}

// SetServerCertificates gets a reference to the given []ServerCertificate and assigns it to the ServerCertificates field.
func (o *ReadServerCertificatesResponse) SetServerCertificates(v []ServerCertificate) {
	o.ServerCertificates = &v
}

func (o ReadServerCertificatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.ServerCertificates != nil {
		toSerialize["ServerCertificates"] = o.ServerCertificates
	}
	return json.Marshal(toSerialize)
}

type NullableReadServerCertificatesResponse struct {
	value *ReadServerCertificatesResponse
	isSet bool
}

func (v NullableReadServerCertificatesResponse) Get() *ReadServerCertificatesResponse {
	return v.value
}

func (v *NullableReadServerCertificatesResponse) Set(val *ReadServerCertificatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadServerCertificatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadServerCertificatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadServerCertificatesResponse(val *ReadServerCertificatesResponse) *NullableReadServerCertificatesResponse {
	return &NullableReadServerCertificatesResponse{value: val, isSet: true}
}

func (v NullableReadServerCertificatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadServerCertificatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSnapshotExportTasksRequest struct for ReadSnapshotExportTasksRequest
type ReadSnapshotExportTasksRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersExportTask `json:"Filters,omitempty"`
}

// NewReadSnapshotExportTasksRequest instantiates a new ReadSnapshotExportTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSnapshotExportTasksRequest() *ReadSnapshotExportTasksRequest {
	this := ReadSnapshotExportTasksRequest{}
	return &this
}

// NewReadSnapshotExportTasksRequestWithDefaults instantiates a new ReadSnapshotExportTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSnapshotExportTasksRequestWithDefaults() *ReadSnapshotExportTasksRequest {
	this := ReadSnapshotExportTasksRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSnapshotExportTasksRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotExportTasksRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSnapshotExportTasksRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSnapshotExportTasksRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadSnapshotExportTasksRequest) GetFilters() FiltersExportTask {
	if o == nil || o.Filters == nil {
		var ret FiltersExportTask
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotExportTasksRequest) GetFiltersOk() (*FiltersExportTask, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadSnapshotExportTasksRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersExportTask and assigns it to the Filters field.
func (o *ReadSnapshotExportTasksRequest) SetFilters(v FiltersExportTask) {
	o.Filters = &v
}

func (o ReadSnapshotExportTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadSnapshotExportTasksRequest struct {
	value *ReadSnapshotExportTasksRequest
	isSet bool
}

func (v NullableReadSnapshotExportTasksRequest) Get() *ReadSnapshotExportTasksRequest {
	return v.value
}

func (v *NullableReadSnapshotExportTasksRequest) Set(val *ReadSnapshotExportTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSnapshotExportTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSnapshotExportTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSnapshotExportTasksRequest(val *ReadSnapshotExportTasksRequest) *NullableReadSnapshotExportTasksRequest {
	return &NullableReadSnapshotExportTasksRequest{value: val, isSet: true}
}

func (v NullableReadSnapshotExportTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSnapshotExportTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSnapshotExportTasksResponse struct for ReadSnapshotExportTasksResponse
type ReadSnapshotExportTasksResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more snapshot export tasks.
	SnapshotExportTasks *[]SnapshotExportTask `json:"SnapshotExportTasks,omitempty"`
}

// NewReadSnapshotExportTasksResponse instantiates a new ReadSnapshotExportTasksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSnapshotExportTasksResponse() *ReadSnapshotExportTasksResponse {
	this := ReadSnapshotExportTasksResponse{}
	return &this
}

// NewReadSnapshotExportTasksResponseWithDefaults instantiates a new ReadSnapshotExportTasksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSnapshotExportTasksResponseWithDefaults() *ReadSnapshotExportTasksResponse {
	this := ReadSnapshotExportTasksResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSnapshotExportTasksResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotExportTasksResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSnapshotExportTasksResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSnapshotExportTasksResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSnapshotExportTasks returns the SnapshotExportTasks field value if set, zero value otherwise.
func (o *ReadSnapshotExportTasksResponse) GetSnapshotExportTasks() []SnapshotExportTask {
	if o == nil || o.SnapshotExportTasks == nil {
		var ret []SnapshotExportTask
		return ret
	}
	return *o.SnapshotExportTasks
}

// GetSnapshotExportTasksOk returns a tuple with the SnapshotExportTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotExportTasksResponse) GetSnapshotExportTasksOk() (*[]SnapshotExportTask, bool) {
	if o == nil || o.SnapshotExportTasks == nil {
		return nil, false
	}
	return o.SnapshotExportTasks, true
}

// HasSnapshotExportTasks returns a boolean if a field has been set.
func (o *ReadSnapshotExportTasksResponse) HasSnapshotExportTasks() bool {
	if o != nil && o.SnapshotExportTasks != nil {
		return true
	}

	return false
}

// SetSnapshotExportTasks gets a reference to the given []SnapshotExportTask and assigns it to the SnapshotExportTasks field.
func (o *ReadSnapshotExportTasksResponse) SetSnapshotExportTasks(v []SnapshotExportTask) {
	o.SnapshotExportTasks = &v
}

func (o ReadSnapshotExportTasksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.SnapshotExportTasks != nil {
		toSerialize["SnapshotExportTasks"] = o.SnapshotExportTasks
	}
	return json.Marshal(toSerialize)
}

type NullableReadSnapshotExportTasksResponse struct {
	value *ReadSnapshotExportTasksResponse
	isSet bool
}

func (v NullableReadSnapshotExportTasksResponse) Get() *ReadSnapshotExportTasksResponse {
	return v.value
}

func (v *NullableReadSnapshotExportTasksResponse) Set(val *ReadSnapshotExportTasksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSnapshotExportTasksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSnapshotExportTasksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSnapshotExportTasksResponse(val *ReadSnapshotExportTasksResponse) *NullableReadSnapshotExportTasksResponse {
	return &NullableReadSnapshotExportTasksResponse{value: val, isSet: true}
}

func (v NullableReadSnapshotExportTasksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSnapshotExportTasksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSnapshotsRequest struct for ReadSnapshotsRequest
type ReadSnapshotsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersSnapshot `json:"Filters,omitempty"`
}

// NewReadSnapshotsRequest instantiates a new ReadSnapshotsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSnapshotsRequest() *ReadSnapshotsRequest {
	this := ReadSnapshotsRequest{}
	return &this
}

// NewReadSnapshotsRequestWithDefaults instantiates a new ReadSnapshotsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSnapshotsRequestWithDefaults() *ReadSnapshotsRequest {
	this := ReadSnapshotsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSnapshotsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSnapshotsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSnapshotsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadSnapshotsRequest) GetFilters() FiltersSnapshot {
	if o == nil || o.Filters == nil {
		var ret FiltersSnapshot
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotsRequest) GetFiltersOk() (*FiltersSnapshot, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadSnapshotsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersSnapshot and assigns it to the Filters field.
func (o *ReadSnapshotsRequest) SetFilters(v FiltersSnapshot) {
	o.Filters = &v
}

func (o ReadSnapshotsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadSnapshotsRequest struct {
	value *ReadSnapshotsRequest
	isSet bool
}

func (v NullableReadSnapshotsRequest) Get() *ReadSnapshotsRequest {
	return v.value
}

func (v *NullableReadSnapshotsRequest) Set(val *ReadSnapshotsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSnapshotsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSnapshotsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSnapshotsRequest(val *ReadSnapshotsRequest) *NullableReadSnapshotsRequest {
	return &NullableReadSnapshotsRequest{value: val, isSet: true}
}

func (v NullableReadSnapshotsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSnapshotsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSnapshotsResponse struct for ReadSnapshotsResponse
type ReadSnapshotsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more snapshots and their permissions.
	Snapshots *[]Snapshot `json:"Snapshots,omitempty"`
}

// NewReadSnapshotsResponse instantiates a new ReadSnapshotsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSnapshotsResponse() *ReadSnapshotsResponse {
	this := ReadSnapshotsResponse{}
	return &this
}

// NewReadSnapshotsResponseWithDefaults instantiates a new ReadSnapshotsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSnapshotsResponseWithDefaults() *ReadSnapshotsResponse {
	this := ReadSnapshotsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSnapshotsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSnapshotsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSnapshotsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *ReadSnapshotsResponse) GetSnapshots() []Snapshot {
	if o == nil || o.Snapshots == nil {
		var ret []Snapshot
		return ret
	}
	return *o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSnapshotsResponse) GetSnapshotsOk() (*[]Snapshot, bool) {
	if o == nil || o.Snapshots == nil {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *ReadSnapshotsResponse) HasSnapshots() bool {
	if o != nil && o.Snapshots != nil {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given []Snapshot and assigns it to the Snapshots field.
func (o *ReadSnapshotsResponse) SetSnapshots(v []Snapshot) {
	o.Snapshots = &v
}

func (o ReadSnapshotsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Snapshots != nil {
		toSerialize["Snapshots"] = o.Snapshots
	}
	return json.Marshal(toSerialize)
}

type NullableReadSnapshotsResponse struct {
	value *ReadSnapshotsResponse
	isSet bool
}

func (v NullableReadSnapshotsResponse) Get() *ReadSnapshotsResponse {
	return v.value
}

func (v *NullableReadSnapshotsResponse) Set(val *ReadSnapshotsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSnapshotsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSnapshotsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSnapshotsResponse(val *ReadSnapshotsResponse) *NullableReadSnapshotsResponse {
	return &NullableReadSnapshotsResponse{value: val, isSet: true}
}

func (v NullableReadSnapshotsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSnapshotsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSubnetsRequest struct for ReadSubnetsRequest
type ReadSubnetsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersSubnet `json:"Filters,omitempty"`
}

// NewReadSubnetsRequest instantiates a new ReadSubnetsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSubnetsRequest() *ReadSubnetsRequest {
	this := ReadSubnetsRequest{}
	return &this
}

// NewReadSubnetsRequestWithDefaults instantiates a new ReadSubnetsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSubnetsRequestWithDefaults() *ReadSubnetsRequest {
	this := ReadSubnetsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSubnetsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubnetsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSubnetsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSubnetsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadSubnetsRequest) GetFilters() FiltersSubnet {
	if o == nil || o.Filters == nil {
		var ret FiltersSubnet
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubnetsRequest) GetFiltersOk() (*FiltersSubnet, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadSubnetsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersSubnet and assigns it to the Filters field.
func (o *ReadSubnetsRequest) SetFilters(v FiltersSubnet) {
	o.Filters = &v
}

func (o ReadSubnetsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadSubnetsRequest struct {
	value *ReadSubnetsRequest
	isSet bool
}

func (v NullableReadSubnetsRequest) Get() *ReadSubnetsRequest {
	return v.value
}

func (v *NullableReadSubnetsRequest) Set(val *ReadSubnetsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSubnetsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSubnetsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSubnetsRequest(val *ReadSubnetsRequest) *NullableReadSubnetsRequest {
	return &NullableReadSubnetsRequest{value: val, isSet: true}
}

func (v NullableReadSubnetsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSubnetsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSubnetsResponse struct for ReadSubnetsResponse
type ReadSubnetsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more Subnets.
	Subnets *[]Subnet `json:"Subnets,omitempty"`
}

// NewReadSubnetsResponse instantiates a new ReadSubnetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSubnetsResponse() *ReadSubnetsResponse {
	this := ReadSubnetsResponse{}
	return &this
}

// NewReadSubnetsResponseWithDefaults instantiates a new ReadSubnetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSubnetsResponseWithDefaults() *ReadSubnetsResponse {
	this := ReadSubnetsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSubnetsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubnetsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSubnetsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSubnetsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *ReadSubnetsResponse) GetSubnets() []Subnet {
	if o == nil || o.Subnets == nil {
		var ret []Subnet
		return ret
	}
	return *o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubnetsResponse) GetSubnetsOk() (*[]Subnet, bool) {
	if o == nil || o.Subnets == nil {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *ReadSubnetsResponse) HasSubnets() bool {
	if o != nil && o.Subnets != nil {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []Subnet and assigns it to the Subnets field.
func (o *ReadSubnetsResponse) SetSubnets(v []Subnet) {
	o.Subnets = &v
}

func (o ReadSubnetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Subnets != nil {
		toSerialize["Subnets"] = o.Subnets
	}
	return json.Marshal(toSerialize)
}

type NullableReadSubnetsResponse struct {
	value *ReadSubnetsResponse
	isSet bool
}

func (v NullableReadSubnetsResponse) Get() *ReadSubnetsResponse {
	return v.value
}

func (v *NullableReadSubnetsResponse) Set(val *ReadSubnetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSubnetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSubnetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSubnetsResponse(val *ReadSubnetsResponse) *NullableReadSubnetsResponse {
	return &NullableReadSubnetsResponse{value: val, isSet: true}
}

func (v NullableReadSubnetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSubnetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSubregionsRequest struct for ReadSubregionsRequest
type ReadSubregionsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersSubregion `json:"Filters,omitempty"`
}

// NewReadSubregionsRequest instantiates a new ReadSubregionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSubregionsRequest() *ReadSubregionsRequest {
	this := ReadSubregionsRequest{}
	return &this
}

// NewReadSubregionsRequestWithDefaults instantiates a new ReadSubregionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSubregionsRequestWithDefaults() *ReadSubregionsRequest {
	this := ReadSubregionsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadSubregionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubregionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadSubregionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadSubregionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadSubregionsRequest) GetFilters() FiltersSubregion {
	if o == nil || o.Filters == nil {
		var ret FiltersSubregion
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubregionsRequest) GetFiltersOk() (*FiltersSubregion, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadSubregionsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersSubregion and assigns it to the Filters field.
func (o *ReadSubregionsRequest) SetFilters(v FiltersSubregion) {
	o.Filters = &v
}

func (o ReadSubregionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadSubregionsRequest struct {
	value *ReadSubregionsRequest
	isSet bool
}

func (v NullableReadSubregionsRequest) Get() *ReadSubregionsRequest {
	return v.value
}

func (v *NullableReadSubregionsRequest) Set(val *ReadSubregionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSubregionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSubregionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSubregionsRequest(val *ReadSubregionsRequest) *NullableReadSubregionsRequest {
	return &NullableReadSubregionsRequest{value: val, isSet: true}
}

func (v NullableReadSubregionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSubregionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadSubregionsResponse struct for ReadSubregionsResponse
type ReadSubregionsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more Subregions.
	Subregions *[]Subregion `json:"Subregions,omitempty"`
}

// NewReadSubregionsResponse instantiates a new ReadSubregionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadSubregionsResponse() *ReadSubregionsResponse {
	this := ReadSubregionsResponse{}
	return &this
}

// NewReadSubregionsResponseWithDefaults instantiates a new ReadSubregionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadSubregionsResponseWithDefaults() *ReadSubregionsResponse {
	this := ReadSubregionsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadSubregionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubregionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadSubregionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadSubregionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSubregions returns the Subregions field value if set, zero value otherwise.
func (o *ReadSubregionsResponse) GetSubregions() []Subregion {
	if o == nil || o.Subregions == nil {
		var ret []Subregion
		return ret
	}
	return *o.Subregions
}

// GetSubregionsOk returns a tuple with the Subregions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadSubregionsResponse) GetSubregionsOk() (*[]Subregion, bool) {
	if o == nil || o.Subregions == nil {
		return nil, false
	}
	return o.Subregions, true
}

// HasSubregions returns a boolean if a field has been set.
func (o *ReadSubregionsResponse) HasSubregions() bool {
	if o != nil && o.Subregions != nil {
		return true
	}

	return false
}

// SetSubregions gets a reference to the given []Subregion and assigns it to the Subregions field.
func (o *ReadSubregionsResponse) SetSubregions(v []Subregion) {
	o.Subregions = &v
}

func (o ReadSubregionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Subregions != nil {
		toSerialize["Subregions"] = o.Subregions
	}
	return json.Marshal(toSerialize)
}

type NullableReadSubregionsResponse struct {
	value *ReadSubregionsResponse
	isSet bool
}

func (v NullableReadSubregionsResponse) Get() *ReadSubregionsResponse {
	return v.value
}

func (v *NullableReadSubregionsResponse) Set(val *ReadSubregionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadSubregionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadSubregionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadSubregionsResponse(val *ReadSubregionsResponse) *NullableReadSubregionsResponse {
	return &NullableReadSubregionsResponse{value: val, isSet: true}
}

func (v NullableReadSubregionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadSubregionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadTagsRequest struct for ReadTagsRequest
type ReadTagsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersTag `json:"Filters,omitempty"`
}

// NewReadTagsRequest instantiates a new ReadTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadTagsRequest() *ReadTagsRequest {
	this := ReadTagsRequest{}
	return &this
}

// NewReadTagsRequestWithDefaults instantiates a new ReadTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadTagsRequestWithDefaults() *ReadTagsRequest {
	this := ReadTagsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadTagsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTagsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadTagsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadTagsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadTagsRequest) GetFilters() FiltersTag {
	if o == nil || o.Filters == nil {
		var ret FiltersTag
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTagsRequest) GetFiltersOk() (*FiltersTag, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadTagsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersTag and assigns it to the Filters field.
func (o *ReadTagsRequest) SetFilters(v FiltersTag) {
	o.Filters = &v
}

func (o ReadTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadTagsRequest struct {
	value *ReadTagsRequest
	isSet bool
}

func (v NullableReadTagsRequest) Get() *ReadTagsRequest {
	return v.value
}

func (v *NullableReadTagsRequest) Set(val *ReadTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadTagsRequest(val *ReadTagsRequest) *NullableReadTagsRequest {
	return &NullableReadTagsRequest{value: val, isSet: true}
}

func (v NullableReadTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadTagsResponse struct for ReadTagsResponse
type ReadTagsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more tags.
	Tags *[]Tag `json:"Tags,omitempty"`
}

// NewReadTagsResponse instantiates a new ReadTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadTagsResponse() *ReadTagsResponse {
	this := ReadTagsResponse{}
	return &this
}

// NewReadTagsResponseWithDefaults instantiates a new ReadTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadTagsResponseWithDefaults() *ReadTagsResponse {
	this := ReadTagsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadTagsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTagsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadTagsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadTagsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ReadTagsResponse) GetTags() []Tag {
	if o == nil || o.Tags == nil {
		var ret []Tag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTagsResponse) GetTagsOk() (*[]Tag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReadTagsResponse) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ReadTagsResponse) SetTags(v []Tag) {
	o.Tags = &v
}

func (o ReadTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableReadTagsResponse struct {
	value *ReadTagsResponse
	isSet bool
}

func (v NullableReadTagsResponse) Get() *ReadTagsResponse {
	return v.value
}

func (v *NullableReadTagsResponse) Set(val *ReadTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadTagsResponse(val *ReadTagsResponse) *NullableReadTagsResponse {
	return &NullableReadTagsResponse{value: val, isSet: true}
}

func (v NullableReadTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVirtualGatewaysRequest struct for ReadVirtualGatewaysRequest
type ReadVirtualGatewaysRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVirtualGateway `json:"Filters,omitempty"`
}

// NewReadVirtualGatewaysRequest instantiates a new ReadVirtualGatewaysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVirtualGatewaysRequest() *ReadVirtualGatewaysRequest {
	this := ReadVirtualGatewaysRequest{}
	return &this
}

// NewReadVirtualGatewaysRequestWithDefaults instantiates a new ReadVirtualGatewaysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVirtualGatewaysRequestWithDefaults() *ReadVirtualGatewaysRequest {
	this := ReadVirtualGatewaysRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVirtualGatewaysRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVirtualGatewaysRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVirtualGatewaysRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVirtualGatewaysRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVirtualGatewaysRequest) GetFilters() FiltersVirtualGateway {
	if o == nil || o.Filters == nil {
		var ret FiltersVirtualGateway
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVirtualGatewaysRequest) GetFiltersOk() (*FiltersVirtualGateway, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVirtualGatewaysRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVirtualGateway and assigns it to the Filters field.
func (o *ReadVirtualGatewaysRequest) SetFilters(v FiltersVirtualGateway) {
	o.Filters = &v
}

func (o ReadVirtualGatewaysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVirtualGatewaysRequest struct {
	value *ReadVirtualGatewaysRequest
	isSet bool
}

func (v NullableReadVirtualGatewaysRequest) Get() *ReadVirtualGatewaysRequest {
	return v.value
}

func (v *NullableReadVirtualGatewaysRequest) Set(val *ReadVirtualGatewaysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVirtualGatewaysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVirtualGatewaysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVirtualGatewaysRequest(val *ReadVirtualGatewaysRequest) *NullableReadVirtualGatewaysRequest {
	return &NullableReadVirtualGatewaysRequest{value: val, isSet: true}
}

func (v NullableReadVirtualGatewaysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVirtualGatewaysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVirtualGatewaysResponse struct for ReadVirtualGatewaysResponse
type ReadVirtualGatewaysResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more virtual gateways.
	VirtualGateways *[]VirtualGateway `json:"VirtualGateways,omitempty"`
}

// NewReadVirtualGatewaysResponse instantiates a new ReadVirtualGatewaysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVirtualGatewaysResponse() *ReadVirtualGatewaysResponse {
	this := ReadVirtualGatewaysResponse{}
	return &this
}

// NewReadVirtualGatewaysResponseWithDefaults instantiates a new ReadVirtualGatewaysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVirtualGatewaysResponseWithDefaults() *ReadVirtualGatewaysResponse {
	this := ReadVirtualGatewaysResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVirtualGatewaysResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVirtualGatewaysResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVirtualGatewaysResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVirtualGatewaysResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVirtualGateways returns the VirtualGateways field value if set, zero value otherwise.
func (o *ReadVirtualGatewaysResponse) GetVirtualGateways() []VirtualGateway {
	if o == nil || o.VirtualGateways == nil {
		var ret []VirtualGateway
		return ret
	}
	return *o.VirtualGateways
}

// GetVirtualGatewaysOk returns a tuple with the VirtualGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVirtualGatewaysResponse) GetVirtualGatewaysOk() (*[]VirtualGateway, bool) {
	if o == nil || o.VirtualGateways == nil {
		return nil, false
	}
	return o.VirtualGateways, true
}

// HasVirtualGateways returns a boolean if a field has been set.
func (o *ReadVirtualGatewaysResponse) HasVirtualGateways() bool {
	if o != nil && o.VirtualGateways != nil {
		return true
	}

	return false
}

// SetVirtualGateways gets a reference to the given []VirtualGateway and assigns it to the VirtualGateways field.
func (o *ReadVirtualGatewaysResponse) SetVirtualGateways(v []VirtualGateway) {
	o.VirtualGateways = &v
}

func (o ReadVirtualGatewaysResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VirtualGateways != nil {
		toSerialize["VirtualGateways"] = o.VirtualGateways
	}
	return json.Marshal(toSerialize)
}

type NullableReadVirtualGatewaysResponse struct {
	value *ReadVirtualGatewaysResponse
	isSet bool
}

func (v NullableReadVirtualGatewaysResponse) Get() *ReadVirtualGatewaysResponse {
	return v.value
}

func (v *NullableReadVirtualGatewaysResponse) Set(val *ReadVirtualGatewaysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVirtualGatewaysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVirtualGatewaysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVirtualGatewaysResponse(val *ReadVirtualGatewaysResponse) *NullableReadVirtualGatewaysResponse {
	return &NullableReadVirtualGatewaysResponse{value: val, isSet: true}
}

func (v NullableReadVirtualGatewaysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVirtualGatewaysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmTypesRequest struct for ReadVmTypesRequest
type ReadVmTypesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVmType `json:"Filters,omitempty"`
}

// NewReadVmTypesRequest instantiates a new ReadVmTypesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmTypesRequest() *ReadVmTypesRequest {
	this := ReadVmTypesRequest{}
	return &this
}

// NewReadVmTypesRequestWithDefaults instantiates a new ReadVmTypesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmTypesRequestWithDefaults() *ReadVmTypesRequest {
	this := ReadVmTypesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVmTypesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmTypesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVmTypesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVmTypesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVmTypesRequest) GetFilters() FiltersVmType {
	if o == nil || o.Filters == nil {
		var ret FiltersVmType
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmTypesRequest) GetFiltersOk() (*FiltersVmType, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVmTypesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVmType and assigns it to the Filters field.
func (o *ReadVmTypesRequest) SetFilters(v FiltersVmType) {
	o.Filters = &v
}

func (o ReadVmTypesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmTypesRequest struct {
	value *ReadVmTypesRequest
	isSet bool
}

func (v NullableReadVmTypesRequest) Get() *ReadVmTypesRequest {
	return v.value
}

func (v *NullableReadVmTypesRequest) Set(val *ReadVmTypesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmTypesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmTypesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmTypesRequest(val *ReadVmTypesRequest) *NullableReadVmTypesRequest {
	return &NullableReadVmTypesRequest{value: val, isSet: true}
}

func (v NullableReadVmTypesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmTypesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmTypesResponse struct for ReadVmTypesResponse
type ReadVmTypesResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more VM types.
	VmTypes *[]VmType `json:"VmTypes,omitempty"`
}

// NewReadVmTypesResponse instantiates a new ReadVmTypesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmTypesResponse() *ReadVmTypesResponse {
	this := ReadVmTypesResponse{}
	return &this
}

// NewReadVmTypesResponseWithDefaults instantiates a new ReadVmTypesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmTypesResponseWithDefaults() *ReadVmTypesResponse {
	this := ReadVmTypesResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVmTypesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmTypesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVmTypesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVmTypesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVmTypes returns the VmTypes field value if set, zero value otherwise.
func (o *ReadVmTypesResponse) GetVmTypes() []VmType {
	if o == nil || o.VmTypes == nil {
		var ret []VmType
		return ret
	}
	return *o.VmTypes
}

// GetVmTypesOk returns a tuple with the VmTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmTypesResponse) GetVmTypesOk() (*[]VmType, bool) {
	if o == nil || o.VmTypes == nil {
		return nil, false
	}
	return o.VmTypes, true
}

// HasVmTypes returns a boolean if a field has been set.
func (o *ReadVmTypesResponse) HasVmTypes() bool {
	if o != nil && o.VmTypes != nil {
		return true
	}

	return false
}

// SetVmTypes gets a reference to the given []VmType and assigns it to the VmTypes field.
func (o *ReadVmTypesResponse) SetVmTypes(v []VmType) {
	o.VmTypes = &v
}

func (o ReadVmTypesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VmTypes != nil {
		toSerialize["VmTypes"] = o.VmTypes
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmTypesResponse struct {
	value *ReadVmTypesResponse
	isSet bool
}

func (v NullableReadVmTypesResponse) Get() *ReadVmTypesResponse {
	return v.value
}

func (v *NullableReadVmTypesResponse) Set(val *ReadVmTypesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmTypesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmTypesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmTypesResponse(val *ReadVmTypesResponse) *NullableReadVmTypesResponse {
	return &NullableReadVmTypesResponse{value: val, isSet: true}
}

func (v NullableReadVmTypesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmTypesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsHealthRequest struct for ReadVmsHealthRequest
type ReadVmsHealthRequest struct {
	// One or more IDs of back-end VMs.
	BackendVmIds *[]string `json:"BackendVmIds,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer.
	LoadBalancerName string `json:"LoadBalancerName"`
}

// NewReadVmsHealthRequest instantiates a new ReadVmsHealthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsHealthRequest(loadBalancerName string, ) *ReadVmsHealthRequest {
	this := ReadVmsHealthRequest{}
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewReadVmsHealthRequestWithDefaults instantiates a new ReadVmsHealthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsHealthRequestWithDefaults() *ReadVmsHealthRequest {
	this := ReadVmsHealthRequest{}
	return &this
}

// GetBackendVmIds returns the BackendVmIds field value if set, zero value otherwise.
func (o *ReadVmsHealthRequest) GetBackendVmIds() []string {
	if o == nil || o.BackendVmIds == nil {
		var ret []string
		return ret
	}
	return *o.BackendVmIds
}

// GetBackendVmIdsOk returns a tuple with the BackendVmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsHealthRequest) GetBackendVmIdsOk() (*[]string, bool) {
	if o == nil || o.BackendVmIds == nil {
		return nil, false
	}
	return o.BackendVmIds, true
}

// HasBackendVmIds returns a boolean if a field has been set.
func (o *ReadVmsHealthRequest) HasBackendVmIds() bool {
	if o != nil && o.BackendVmIds != nil {
		return true
	}

	return false
}

// SetBackendVmIds gets a reference to the given []string and assigns it to the BackendVmIds field.
func (o *ReadVmsHealthRequest) SetBackendVmIds(v []string) {
	o.BackendVmIds = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVmsHealthRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsHealthRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVmsHealthRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVmsHealthRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *ReadVmsHealthRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *ReadVmsHealthRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *ReadVmsHealthRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

func (o ReadVmsHealthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackendVmIds != nil {
		toSerialize["BackendVmIds"] = o.BackendVmIds
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsHealthRequest struct {
	value *ReadVmsHealthRequest
	isSet bool
}

func (v NullableReadVmsHealthRequest) Get() *ReadVmsHealthRequest {
	return v.value
}

func (v *NullableReadVmsHealthRequest) Set(val *ReadVmsHealthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsHealthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsHealthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsHealthRequest(val *ReadVmsHealthRequest) *NullableReadVmsHealthRequest {
	return &NullableReadVmsHealthRequest{value: val, isSet: true}
}

func (v NullableReadVmsHealthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsHealthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsHealthResponse struct for ReadVmsHealthResponse
type ReadVmsHealthResponse struct {
	// Information about the health of one or more back-end VMs.
	BackendVmHealth *[]BackendVmHealth `json:"BackendVmHealth,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewReadVmsHealthResponse instantiates a new ReadVmsHealthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsHealthResponse() *ReadVmsHealthResponse {
	this := ReadVmsHealthResponse{}
	return &this
}

// NewReadVmsHealthResponseWithDefaults instantiates a new ReadVmsHealthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsHealthResponseWithDefaults() *ReadVmsHealthResponse {
	this := ReadVmsHealthResponse{}
	return &this
}

// GetBackendVmHealth returns the BackendVmHealth field value if set, zero value otherwise.
func (o *ReadVmsHealthResponse) GetBackendVmHealth() []BackendVmHealth {
	if o == nil || o.BackendVmHealth == nil {
		var ret []BackendVmHealth
		return ret
	}
	return *o.BackendVmHealth
}

// GetBackendVmHealthOk returns a tuple with the BackendVmHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsHealthResponse) GetBackendVmHealthOk() (*[]BackendVmHealth, bool) {
	if o == nil || o.BackendVmHealth == nil {
		return nil, false
	}
	return o.BackendVmHealth, true
}

// HasBackendVmHealth returns a boolean if a field has been set.
func (o *ReadVmsHealthResponse) HasBackendVmHealth() bool {
	if o != nil && o.BackendVmHealth != nil {
		return true
	}

	return false
}

// SetBackendVmHealth gets a reference to the given []BackendVmHealth and assigns it to the BackendVmHealth field.
func (o *ReadVmsHealthResponse) SetBackendVmHealth(v []BackendVmHealth) {
	o.BackendVmHealth = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVmsHealthResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsHealthResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVmsHealthResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVmsHealthResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ReadVmsHealthResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackendVmHealth != nil {
		toSerialize["BackendVmHealth"] = o.BackendVmHealth
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsHealthResponse struct {
	value *ReadVmsHealthResponse
	isSet bool
}

func (v NullableReadVmsHealthResponse) Get() *ReadVmsHealthResponse {
	return v.value
}

func (v *NullableReadVmsHealthResponse) Set(val *ReadVmsHealthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsHealthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsHealthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsHealthResponse(val *ReadVmsHealthResponse) *NullableReadVmsHealthResponse {
	return &NullableReadVmsHealthResponse{value: val, isSet: true}
}

func (v NullableReadVmsHealthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsHealthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsRequest struct for ReadVmsRequest
type ReadVmsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVm `json:"Filters,omitempty"`
}

// NewReadVmsRequest instantiates a new ReadVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsRequest() *ReadVmsRequest {
	this := ReadVmsRequest{}
	return &this
}

// NewReadVmsRequestWithDefaults instantiates a new ReadVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsRequestWithDefaults() *ReadVmsRequest {
	this := ReadVmsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVmsRequest) GetFilters() FiltersVm {
	if o == nil || o.Filters == nil {
		var ret FiltersVm
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsRequest) GetFiltersOk() (*FiltersVm, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVmsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVm and assigns it to the Filters field.
func (o *ReadVmsRequest) SetFilters(v FiltersVm) {
	o.Filters = &v
}

func (o ReadVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsRequest struct {
	value *ReadVmsRequest
	isSet bool
}

func (v NullableReadVmsRequest) Get() *ReadVmsRequest {
	return v.value
}

func (v *NullableReadVmsRequest) Set(val *ReadVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsRequest(val *ReadVmsRequest) *NullableReadVmsRequest {
	return &NullableReadVmsRequest{value: val, isSet: true}
}

func (v NullableReadVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsResponse struct for ReadVmsResponse
type ReadVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more VMs.
	Vms *[]Vm `json:"Vms,omitempty"`
}

// NewReadVmsResponse instantiates a new ReadVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsResponse() *ReadVmsResponse {
	this := ReadVmsResponse{}
	return &this
}

// NewReadVmsResponseWithDefaults instantiates a new ReadVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsResponseWithDefaults() *ReadVmsResponse {
	this := ReadVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *ReadVmsResponse) GetVms() []Vm {
	if o == nil || o.Vms == nil {
		var ret []Vm
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsResponse) GetVmsOk() (*[]Vm, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *ReadVmsResponse) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []Vm and assigns it to the Vms field.
func (o *ReadVmsResponse) SetVms(v []Vm) {
	o.Vms = &v
}

func (o ReadVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vms != nil {
		toSerialize["Vms"] = o.Vms
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsResponse struct {
	value *ReadVmsResponse
	isSet bool
}

func (v NullableReadVmsResponse) Get() *ReadVmsResponse {
	return v.value
}

func (v *NullableReadVmsResponse) Set(val *ReadVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsResponse(val *ReadVmsResponse) *NullableReadVmsResponse {
	return &NullableReadVmsResponse{value: val, isSet: true}
}

func (v NullableReadVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsStateRequest struct for ReadVmsStateRequest
type ReadVmsStateRequest struct {
	// If `true`, includes the status of all VMs. By default or if set to `false`, only includes the status of running VMs.
	AllVms *bool `json:"AllVms,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVmsState `json:"Filters,omitempty"`
}

// NewReadVmsStateRequest instantiates a new ReadVmsStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsStateRequest() *ReadVmsStateRequest {
	this := ReadVmsStateRequest{}
	return &this
}

// NewReadVmsStateRequestWithDefaults instantiates a new ReadVmsStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsStateRequestWithDefaults() *ReadVmsStateRequest {
	this := ReadVmsStateRequest{}
	return &this
}

// GetAllVms returns the AllVms field value if set, zero value otherwise.
func (o *ReadVmsStateRequest) GetAllVms() bool {
	if o == nil || o.AllVms == nil {
		var ret bool
		return ret
	}
	return *o.AllVms
}

// GetAllVmsOk returns a tuple with the AllVms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsStateRequest) GetAllVmsOk() (*bool, bool) {
	if o == nil || o.AllVms == nil {
		return nil, false
	}
	return o.AllVms, true
}

// HasAllVms returns a boolean if a field has been set.
func (o *ReadVmsStateRequest) HasAllVms() bool {
	if o != nil && o.AllVms != nil {
		return true
	}

	return false
}

// SetAllVms gets a reference to the given bool and assigns it to the AllVms field.
func (o *ReadVmsStateRequest) SetAllVms(v bool) {
	o.AllVms = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVmsStateRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsStateRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVmsStateRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVmsStateRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVmsStateRequest) GetFilters() FiltersVmsState {
	if o == nil || o.Filters == nil {
		var ret FiltersVmsState
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsStateRequest) GetFiltersOk() (*FiltersVmsState, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVmsStateRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVmsState and assigns it to the Filters field.
func (o *ReadVmsStateRequest) SetFilters(v FiltersVmsState) {
	o.Filters = &v
}

func (o ReadVmsStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllVms != nil {
		toSerialize["AllVms"] = o.AllVms
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsStateRequest struct {
	value *ReadVmsStateRequest
	isSet bool
}

func (v NullableReadVmsStateRequest) Get() *ReadVmsStateRequest {
	return v.value
}

func (v *NullableReadVmsStateRequest) Set(val *ReadVmsStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsStateRequest(val *ReadVmsStateRequest) *NullableReadVmsStateRequest {
	return &NullableReadVmsStateRequest{value: val, isSet: true}
}

func (v NullableReadVmsStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVmsStateResponse struct for ReadVmsStateResponse
type ReadVmsStateResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more VM states.
	VmStates *[]VmStates `json:"VmStates,omitempty"`
}

// NewReadVmsStateResponse instantiates a new ReadVmsStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVmsStateResponse() *ReadVmsStateResponse {
	this := ReadVmsStateResponse{}
	return &this
}

// NewReadVmsStateResponseWithDefaults instantiates a new ReadVmsStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVmsStateResponseWithDefaults() *ReadVmsStateResponse {
	this := ReadVmsStateResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVmsStateResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsStateResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVmsStateResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVmsStateResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVmStates returns the VmStates field value if set, zero value otherwise.
func (o *ReadVmsStateResponse) GetVmStates() []VmStates {
	if o == nil || o.VmStates == nil {
		var ret []VmStates
		return ret
	}
	return *o.VmStates
}

// GetVmStatesOk returns a tuple with the VmStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVmsStateResponse) GetVmStatesOk() (*[]VmStates, bool) {
	if o == nil || o.VmStates == nil {
		return nil, false
	}
	return o.VmStates, true
}

// HasVmStates returns a boolean if a field has been set.
func (o *ReadVmsStateResponse) HasVmStates() bool {
	if o != nil && o.VmStates != nil {
		return true
	}

	return false
}

// SetVmStates gets a reference to the given []VmStates and assigns it to the VmStates field.
func (o *ReadVmsStateResponse) SetVmStates(v []VmStates) {
	o.VmStates = &v
}

func (o ReadVmsStateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VmStates != nil {
		toSerialize["VmStates"] = o.VmStates
	}
	return json.Marshal(toSerialize)
}

type NullableReadVmsStateResponse struct {
	value *ReadVmsStateResponse
	isSet bool
}

func (v NullableReadVmsStateResponse) Get() *ReadVmsStateResponse {
	return v.value
}

func (v *NullableReadVmsStateResponse) Set(val *ReadVmsStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVmsStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVmsStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVmsStateResponse(val *ReadVmsStateResponse) *NullableReadVmsStateResponse {
	return &NullableReadVmsStateResponse{value: val, isSet: true}
}

func (v NullableReadVmsStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVmsStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVolumesRequest struct for ReadVolumesRequest
type ReadVolumesRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVolume `json:"Filters,omitempty"`
}

// NewReadVolumesRequest instantiates a new ReadVolumesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVolumesRequest() *ReadVolumesRequest {
	this := ReadVolumesRequest{}
	return &this
}

// NewReadVolumesRequestWithDefaults instantiates a new ReadVolumesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVolumesRequestWithDefaults() *ReadVolumesRequest {
	this := ReadVolumesRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVolumesRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVolumesRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVolumesRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVolumesRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVolumesRequest) GetFilters() FiltersVolume {
	if o == nil || o.Filters == nil {
		var ret FiltersVolume
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVolumesRequest) GetFiltersOk() (*FiltersVolume, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVolumesRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVolume and assigns it to the Filters field.
func (o *ReadVolumesRequest) SetFilters(v FiltersVolume) {
	o.Filters = &v
}

func (o ReadVolumesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVolumesRequest struct {
	value *ReadVolumesRequest
	isSet bool
}

func (v NullableReadVolumesRequest) Get() *ReadVolumesRequest {
	return v.value
}

func (v *NullableReadVolumesRequest) Set(val *ReadVolumesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVolumesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVolumesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVolumesRequest(val *ReadVolumesRequest) *NullableReadVolumesRequest {
	return &NullableReadVolumesRequest{value: val, isSet: true}
}

func (v NullableReadVolumesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVolumesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVolumesResponse struct for ReadVolumesResponse
type ReadVolumesResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more volumes.
	Volumes *[]Volume `json:"Volumes,omitempty"`
}

// NewReadVolumesResponse instantiates a new ReadVolumesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVolumesResponse() *ReadVolumesResponse {
	this := ReadVolumesResponse{}
	return &this
}

// NewReadVolumesResponseWithDefaults instantiates a new ReadVolumesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVolumesResponseWithDefaults() *ReadVolumesResponse {
	this := ReadVolumesResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVolumesResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVolumesResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVolumesResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVolumesResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *ReadVolumesResponse) GetVolumes() []Volume {
	if o == nil || o.Volumes == nil {
		var ret []Volume
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVolumesResponse) GetVolumesOk() (*[]Volume, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *ReadVolumesResponse) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []Volume and assigns it to the Volumes field.
func (o *ReadVolumesResponse) SetVolumes(v []Volume) {
	o.Volumes = &v
}

func (o ReadVolumesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Volumes != nil {
		toSerialize["Volumes"] = o.Volumes
	}
	return json.Marshal(toSerialize)
}

type NullableReadVolumesResponse struct {
	value *ReadVolumesResponse
	isSet bool
}

func (v NullableReadVolumesResponse) Get() *ReadVolumesResponse {
	return v.value
}

func (v *NullableReadVolumesResponse) Set(val *ReadVolumesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVolumesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVolumesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVolumesResponse(val *ReadVolumesResponse) *NullableReadVolumesResponse {
	return &NullableReadVolumesResponse{value: val, isSet: true}
}

func (v NullableReadVolumesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVolumesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVpnConnectionsRequest struct for ReadVpnConnectionsRequest
type ReadVpnConnectionsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	Filters *FiltersVpnConnection `json:"Filters,omitempty"`
}

// NewReadVpnConnectionsRequest instantiates a new ReadVpnConnectionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVpnConnectionsRequest() *ReadVpnConnectionsRequest {
	this := ReadVpnConnectionsRequest{}
	return &this
}

// NewReadVpnConnectionsRequestWithDefaults instantiates a new ReadVpnConnectionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVpnConnectionsRequestWithDefaults() *ReadVpnConnectionsRequest {
	this := ReadVpnConnectionsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadVpnConnectionsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVpnConnectionsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadVpnConnectionsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadVpnConnectionsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadVpnConnectionsRequest) GetFilters() FiltersVpnConnection {
	if o == nil || o.Filters == nil {
		var ret FiltersVpnConnection
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVpnConnectionsRequest) GetFiltersOk() (*FiltersVpnConnection, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadVpnConnectionsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersVpnConnection and assigns it to the Filters field.
func (o *ReadVpnConnectionsRequest) SetFilters(v FiltersVpnConnection) {
	o.Filters = &v
}

func (o ReadVpnConnectionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableReadVpnConnectionsRequest struct {
	value *ReadVpnConnectionsRequest
	isSet bool
}

func (v NullableReadVpnConnectionsRequest) Get() *ReadVpnConnectionsRequest {
	return v.value
}

func (v *NullableReadVpnConnectionsRequest) Set(val *ReadVpnConnectionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVpnConnectionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVpnConnectionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVpnConnectionsRequest(val *ReadVpnConnectionsRequest) *NullableReadVpnConnectionsRequest {
	return &NullableReadVpnConnectionsRequest{value: val, isSet: true}
}

func (v NullableReadVpnConnectionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVpnConnectionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ReadVpnConnectionsResponse struct for ReadVpnConnectionsResponse
type ReadVpnConnectionsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more VPN connections.
	VpnConnections *[]VpnConnection `json:"VpnConnections,omitempty"`
}

// NewReadVpnConnectionsResponse instantiates a new ReadVpnConnectionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadVpnConnectionsResponse() *ReadVpnConnectionsResponse {
	this := ReadVpnConnectionsResponse{}
	return &this
}

// NewReadVpnConnectionsResponseWithDefaults instantiates a new ReadVpnConnectionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadVpnConnectionsResponseWithDefaults() *ReadVpnConnectionsResponse {
	this := ReadVpnConnectionsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ReadVpnConnectionsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVpnConnectionsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ReadVpnConnectionsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ReadVpnConnectionsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVpnConnections returns the VpnConnections field value if set, zero value otherwise.
func (o *ReadVpnConnectionsResponse) GetVpnConnections() []VpnConnection {
	if o == nil || o.VpnConnections == nil {
		var ret []VpnConnection
		return ret
	}
	return *o.VpnConnections
}

// GetVpnConnectionsOk returns a tuple with the VpnConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadVpnConnectionsResponse) GetVpnConnectionsOk() (*[]VpnConnection, bool) {
	if o == nil || o.VpnConnections == nil {
		return nil, false
	}
	return o.VpnConnections, true
}

// HasVpnConnections returns a boolean if a field has been set.
func (o *ReadVpnConnectionsResponse) HasVpnConnections() bool {
	if o != nil && o.VpnConnections != nil {
		return true
	}

	return false
}

// SetVpnConnections gets a reference to the given []VpnConnection and assigns it to the VpnConnections field.
func (o *ReadVpnConnectionsResponse) SetVpnConnections(v []VpnConnection) {
	o.VpnConnections = &v
}

func (o ReadVpnConnectionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.VpnConnections != nil {
		toSerialize["VpnConnections"] = o.VpnConnections
	}
	return json.Marshal(toSerialize)
}

type NullableReadVpnConnectionsResponse struct {
	value *ReadVpnConnectionsResponse
	isSet bool
}

func (v NullableReadVpnConnectionsResponse) Get() *ReadVpnConnectionsResponse {
	return v.value
}

func (v *NullableReadVpnConnectionsResponse) Set(val *ReadVpnConnectionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadVpnConnectionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadVpnConnectionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadVpnConnectionsResponse(val *ReadVpnConnectionsResponse) *NullableReadVpnConnectionsResponse {
	return &NullableReadVpnConnectionsResponse{value: val, isSet: true}
}

func (v NullableReadVpnConnectionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadVpnConnectionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RebootVmsRequest struct for RebootVmsRequest
type RebootVmsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more IDs of the VMs you want to reboot.
	VmIds []string `json:"VmIds"`
}

// NewRebootVmsRequest instantiates a new RebootVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootVmsRequest(vmIds []string, ) *RebootVmsRequest {
	this := RebootVmsRequest{}
	this.VmIds = vmIds
	return &this
}

// NewRebootVmsRequestWithDefaults instantiates a new RebootVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootVmsRequestWithDefaults() *RebootVmsRequest {
	this := RebootVmsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *RebootVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *RebootVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *RebootVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmIds returns the VmIds field value
func (o *RebootVmsRequest) GetVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *RebootVmsRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *RebootVmsRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o RebootVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableRebootVmsRequest struct {
	value *RebootVmsRequest
	isSet bool
}

func (v NullableRebootVmsRequest) Get() *RebootVmsRequest {
	return v.value
}

func (v *NullableRebootVmsRequest) Set(val *RebootVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootVmsRequest(val *RebootVmsRequest) *NullableRebootVmsRequest {
	return &NullableRebootVmsRequest{value: val, isSet: true}
}

func (v NullableRebootVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RebootVmsResponse struct for RebootVmsResponse
type RebootVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewRebootVmsResponse instantiates a new RebootVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootVmsResponse() *RebootVmsResponse {
	this := RebootVmsResponse{}
	return &this
}

// NewRebootVmsResponseWithDefaults instantiates a new RebootVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootVmsResponseWithDefaults() *RebootVmsResponse {
	this := RebootVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *RebootVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *RebootVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *RebootVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o RebootVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableRebootVmsResponse struct {
	value *RebootVmsResponse
	isSet bool
}

func (v NullableRebootVmsResponse) Get() *RebootVmsResponse {
	return v.value
}

func (v *NullableRebootVmsResponse) Set(val *RebootVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootVmsResponse(val *RebootVmsResponse) *NullableRebootVmsResponse {
	return &NullableRebootVmsResponse{value: val, isSet: true}
}

func (v NullableRebootVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Region Information about the Region.
type Region struct {
	// The hostname of the gateway to access the Region.
	Endpoint *string `json:"Endpoint,omitempty"`
	// The administrative name of the Region.
	RegionName *string `json:"RegionName,omitempty"`
}

// NewRegion instantiates a new Region object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegion() *Region {
	this := Region{}
	return &this
}

// NewRegionWithDefaults instantiates a new Region object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionWithDefaults() *Region {
	this := Region{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *Region) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *Region) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *Region) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *Region) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *Region) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *Region) SetRegionName(v string) {
	o.RegionName = &v
}

func (o Region) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Endpoint != nil {
		toSerialize["Endpoint"] = o.Endpoint
	}
	if o.RegionName != nil {
		toSerialize["RegionName"] = o.RegionName
	}
	return json.Marshal(toSerialize)
}

type NullableRegion struct {
	value *Region
	isSet bool
}

func (v NullableRegion) Get() *Region {
	return v.value
}

func (v *NullableRegion) Set(val *Region) {
	v.value = val
	v.isSet = true
}

func (v NullableRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegion(val *Region) *NullableRegion {
	return &NullableRegion{value: val, isSet: true}
}

func (v NullableRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RegisterVmsInLoadBalancerRequest struct for RegisterVmsInLoadBalancerRequest
type RegisterVmsInLoadBalancerRequest struct {
	// One or more IDs of back-end VMs.<br /> Specifying the same ID several times has no effect as each back-end VM has equal weight.
	BackendVmIds []string `json:"BackendVmIds"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the load balancer.
	LoadBalancerName string `json:"LoadBalancerName"`
}

// NewRegisterVmsInLoadBalancerRequest instantiates a new RegisterVmsInLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterVmsInLoadBalancerRequest(backendVmIds []string, loadBalancerName string, ) *RegisterVmsInLoadBalancerRequest {
	this := RegisterVmsInLoadBalancerRequest{}
	this.BackendVmIds = backendVmIds
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewRegisterVmsInLoadBalancerRequestWithDefaults instantiates a new RegisterVmsInLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterVmsInLoadBalancerRequestWithDefaults() *RegisterVmsInLoadBalancerRequest {
	this := RegisterVmsInLoadBalancerRequest{}
	return &this
}

// GetBackendVmIds returns the BackendVmIds field value
func (o *RegisterVmsInLoadBalancerRequest) GetBackendVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.BackendVmIds
}

// GetBackendVmIdsOk returns a tuple with the BackendVmIds field value
// and a boolean to check if the value has been set.
func (o *RegisterVmsInLoadBalancerRequest) GetBackendVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackendVmIds, true
}

// SetBackendVmIds sets field value
func (o *RegisterVmsInLoadBalancerRequest) SetBackendVmIds(v []string) {
	o.BackendVmIds = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *RegisterVmsInLoadBalancerRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterVmsInLoadBalancerRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *RegisterVmsInLoadBalancerRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *RegisterVmsInLoadBalancerRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *RegisterVmsInLoadBalancerRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *RegisterVmsInLoadBalancerRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *RegisterVmsInLoadBalancerRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

func (o RegisterVmsInLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BackendVmIds"] = o.BackendVmIds
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterVmsInLoadBalancerRequest struct {
	value *RegisterVmsInLoadBalancerRequest
	isSet bool
}

func (v NullableRegisterVmsInLoadBalancerRequest) Get() *RegisterVmsInLoadBalancerRequest {
	return v.value
}

func (v *NullableRegisterVmsInLoadBalancerRequest) Set(val *RegisterVmsInLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterVmsInLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterVmsInLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterVmsInLoadBalancerRequest(val *RegisterVmsInLoadBalancerRequest) *NullableRegisterVmsInLoadBalancerRequest {
	return &NullableRegisterVmsInLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableRegisterVmsInLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterVmsInLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RegisterVmsInLoadBalancerResponse struct for RegisterVmsInLoadBalancerResponse
type RegisterVmsInLoadBalancerResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewRegisterVmsInLoadBalancerResponse instantiates a new RegisterVmsInLoadBalancerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterVmsInLoadBalancerResponse() *RegisterVmsInLoadBalancerResponse {
	this := RegisterVmsInLoadBalancerResponse{}
	return &this
}

// NewRegisterVmsInLoadBalancerResponseWithDefaults instantiates a new RegisterVmsInLoadBalancerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterVmsInLoadBalancerResponseWithDefaults() *RegisterVmsInLoadBalancerResponse {
	this := RegisterVmsInLoadBalancerResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *RegisterVmsInLoadBalancerResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterVmsInLoadBalancerResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *RegisterVmsInLoadBalancerResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *RegisterVmsInLoadBalancerResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o RegisterVmsInLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterVmsInLoadBalancerResponse struct {
	value *RegisterVmsInLoadBalancerResponse
	isSet bool
}

func (v NullableRegisterVmsInLoadBalancerResponse) Get() *RegisterVmsInLoadBalancerResponse {
	return v.value
}

func (v *NullableRegisterVmsInLoadBalancerResponse) Set(val *RegisterVmsInLoadBalancerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterVmsInLoadBalancerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterVmsInLoadBalancerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterVmsInLoadBalancerResponse(val *RegisterVmsInLoadBalancerResponse) *NullableRegisterVmsInLoadBalancerResponse {
	return &NullableRegisterVmsInLoadBalancerResponse{value: val, isSet: true}
}

func (v NullableRegisterVmsInLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterVmsInLoadBalancerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RejectNetPeeringRequest struct for RejectNetPeeringRequest
type RejectNetPeeringRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net peering connection you want to reject.
	NetPeeringId string `json:"NetPeeringId"`
}

// NewRejectNetPeeringRequest instantiates a new RejectNetPeeringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRejectNetPeeringRequest(netPeeringId string, ) *RejectNetPeeringRequest {
	this := RejectNetPeeringRequest{}
	this.NetPeeringId = netPeeringId
	return &this
}

// NewRejectNetPeeringRequestWithDefaults instantiates a new RejectNetPeeringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRejectNetPeeringRequestWithDefaults() *RejectNetPeeringRequest {
	this := RejectNetPeeringRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *RejectNetPeeringRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RejectNetPeeringRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *RejectNetPeeringRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *RejectNetPeeringRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetPeeringId returns the NetPeeringId field value
func (o *RejectNetPeeringRequest) GetNetPeeringId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value
// and a boolean to check if the value has been set.
func (o *RejectNetPeeringRequest) GetNetPeeringIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetPeeringId, true
}

// SetNetPeeringId sets field value
func (o *RejectNetPeeringRequest) SetNetPeeringId(v string) {
	o.NetPeeringId = v
}

func (o RejectNetPeeringRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	return json.Marshal(toSerialize)
}

type NullableRejectNetPeeringRequest struct {
	value *RejectNetPeeringRequest
	isSet bool
}

func (v NullableRejectNetPeeringRequest) Get() *RejectNetPeeringRequest {
	return v.value
}

func (v *NullableRejectNetPeeringRequest) Set(val *RejectNetPeeringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRejectNetPeeringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRejectNetPeeringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRejectNetPeeringRequest(val *RejectNetPeeringRequest) *NullableRejectNetPeeringRequest {
	return &NullableRejectNetPeeringRequest{value: val, isSet: true}
}

func (v NullableRejectNetPeeringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRejectNetPeeringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RejectNetPeeringResponse struct for RejectNetPeeringResponse
type RejectNetPeeringResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewRejectNetPeeringResponse instantiates a new RejectNetPeeringResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRejectNetPeeringResponse() *RejectNetPeeringResponse {
	this := RejectNetPeeringResponse{}
	return &this
}

// NewRejectNetPeeringResponseWithDefaults instantiates a new RejectNetPeeringResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRejectNetPeeringResponseWithDefaults() *RejectNetPeeringResponse {
	this := RejectNetPeeringResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *RejectNetPeeringResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RejectNetPeeringResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *RejectNetPeeringResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *RejectNetPeeringResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o RejectNetPeeringResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableRejectNetPeeringResponse struct {
	value *RejectNetPeeringResponse
	isSet bool
}

func (v NullableRejectNetPeeringResponse) Get() *RejectNetPeeringResponse {
	return v.value
}

func (v *NullableRejectNetPeeringResponse) Set(val *RejectNetPeeringResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRejectNetPeeringResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRejectNetPeeringResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRejectNetPeeringResponse(val *RejectNetPeeringResponse) *NullableRejectNetPeeringResponse {
	return &NullableRejectNetPeeringResponse{value: val, isSet: true}
}

func (v NullableRejectNetPeeringResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRejectNetPeeringResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ResetAccountPasswordRequest struct for ResetAccountPasswordRequest
type ResetAccountPasswordRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The new password for the account.
	Password string `json:"Password"`
	// The token you received at the email address provided for the account.
	Token string `json:"Token"`
}

// NewResetAccountPasswordRequest instantiates a new ResetAccountPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetAccountPasswordRequest(password string, token string, ) *ResetAccountPasswordRequest {
	this := ResetAccountPasswordRequest{}
	this.Password = password
	this.Token = token
	return &this
}

// NewResetAccountPasswordRequestWithDefaults instantiates a new ResetAccountPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetAccountPasswordRequestWithDefaults() *ResetAccountPasswordRequest {
	this := ResetAccountPasswordRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ResetAccountPasswordRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetAccountPasswordRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ResetAccountPasswordRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ResetAccountPasswordRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPassword returns the Password field value
func (o *ResetAccountPasswordRequest) GetPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ResetAccountPasswordRequest) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ResetAccountPasswordRequest) SetPassword(v string) {
	o.Password = v
}

// GetToken returns the Token field value
func (o *ResetAccountPasswordRequest) GetToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ResetAccountPasswordRequest) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ResetAccountPasswordRequest) SetToken(v string) {
	o.Token = v
}

func (o ResetAccountPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Password"] = o.Password
	}
	if true {
		toSerialize["Token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableResetAccountPasswordRequest struct {
	value *ResetAccountPasswordRequest
	isSet bool
}

func (v NullableResetAccountPasswordRequest) Get() *ResetAccountPasswordRequest {
	return v.value
}

func (v *NullableResetAccountPasswordRequest) Set(val *ResetAccountPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResetAccountPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResetAccountPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetAccountPasswordRequest(val *ResetAccountPasswordRequest) *NullableResetAccountPasswordRequest {
	return &NullableResetAccountPasswordRequest{value: val, isSet: true}
}

func (v NullableResetAccountPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetAccountPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ResetAccountPasswordResponse struct for ResetAccountPasswordResponse
type ResetAccountPasswordResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewResetAccountPasswordResponse instantiates a new ResetAccountPasswordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetAccountPasswordResponse() *ResetAccountPasswordResponse {
	this := ResetAccountPasswordResponse{}
	return &this
}

// NewResetAccountPasswordResponseWithDefaults instantiates a new ResetAccountPasswordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetAccountPasswordResponseWithDefaults() *ResetAccountPasswordResponse {
	this := ResetAccountPasswordResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *ResetAccountPasswordResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetAccountPasswordResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *ResetAccountPasswordResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *ResetAccountPasswordResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o ResetAccountPasswordResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableResetAccountPasswordResponse struct {
	value *ResetAccountPasswordResponse
	isSet bool
}

func (v NullableResetAccountPasswordResponse) Get() *ResetAccountPasswordResponse {
	return v.value
}

func (v *NullableResetAccountPasswordResponse) Set(val *ResetAccountPasswordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResetAccountPasswordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResetAccountPasswordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetAccountPasswordResponse(val *ResetAccountPasswordResponse) *NullableResetAccountPasswordResponse {
	return &NullableResetAccountPasswordResponse{value: val, isSet: true}
}

func (v NullableResetAccountPasswordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetAccountPasswordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ResourceLoadBalancerTag Information about the tag.
type ResourceLoadBalancerTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `json:"Key,omitempty"`
}

// NewResourceLoadBalancerTag instantiates a new ResourceLoadBalancerTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceLoadBalancerTag() *ResourceLoadBalancerTag {
	this := ResourceLoadBalancerTag{}
	return &this
}

// NewResourceLoadBalancerTagWithDefaults instantiates a new ResourceLoadBalancerTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLoadBalancerTagWithDefaults() *ResourceLoadBalancerTag {
	this := ResourceLoadBalancerTag{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ResourceLoadBalancerTag) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLoadBalancerTag) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ResourceLoadBalancerTag) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ResourceLoadBalancerTag) SetKey(v string) {
	o.Key = &v
}

func (o ResourceLoadBalancerTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["Key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableResourceLoadBalancerTag struct {
	value *ResourceLoadBalancerTag
	isSet bool
}

func (v NullableResourceLoadBalancerTag) Get() *ResourceLoadBalancerTag {
	return v.value
}

func (v *NullableResourceLoadBalancerTag) Set(val *ResourceLoadBalancerTag) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLoadBalancerTag) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLoadBalancerTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLoadBalancerTag(val *ResourceLoadBalancerTag) *NullableResourceLoadBalancerTag {
	return &NullableResourceLoadBalancerTag{value: val, isSet: true}
}

func (v NullableResourceLoadBalancerTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLoadBalancerTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ResourceTag Information about the tag.
type ResourceTag struct {
	// The key of the tag, with a minimum of 1 character.
	Key string `json:"Key"`
	// The value of the tag, between 0 and 255 characters.
	Value string `json:"Value"`
}

// NewResourceTag instantiates a new ResourceTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceTag(key string, value string, ) *ResourceTag {
	this := ResourceTag{}
	this.Key = key
	this.Value = value
	return &this
}

// NewResourceTagWithDefaults instantiates a new ResourceTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceTagWithDefaults() *ResourceTag {
	this := ResourceTag{}
	return &this
}

// GetKey returns the Key field value
func (o *ResourceTag) GetKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceTag) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceTag) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *ResourceTag) GetValue() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ResourceTag) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ResourceTag) SetValue(v string) {
	o.Value = v
}

func (o ResourceTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Key"] = o.Key
	}
	if true {
		toSerialize["Value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableResourceTag struct {
	value *ResourceTag
	isSet bool
}

func (v NullableResourceTag) Get() *ResourceTag {
	return v.value
}

func (v *NullableResourceTag) Set(val *ResourceTag) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceTag) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceTag(val *ResourceTag) *NullableResourceTag {
	return &NullableResourceTag{value: val, isSet: true}
}

func (v NullableResourceTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ResponseContext Information about the context of the response.
type ResponseContext struct {
	// The ID of the request.
	RequestId *string `json:"RequestId,omitempty"`
}

// NewResponseContext instantiates a new ResponseContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseContext() *ResponseContext {
	this := ResponseContext{}
	return &this
}

// NewResponseContextWithDefaults instantiates a new ResponseContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseContextWithDefaults() *ResponseContext {
	this := ResponseContext{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ResponseContext) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseContext) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ResponseContext) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ResponseContext) SetRequestId(v string) {
	o.RequestId = &v
}

func (o ResponseContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestId != nil {
		toSerialize["RequestId"] = o.RequestId
	}
	return json.Marshal(toSerialize)
}

type NullableResponseContext struct {
	value *ResponseContext
	isSet bool
}

func (v NullableResponseContext) Get() *ResponseContext {
	return v.value
}

func (v *NullableResponseContext) Set(val *ResponseContext) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseContext) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseContext(val *ResponseContext) *NullableResponseContext {
	return &NullableResponseContext{value: val, isSet: true}
}

func (v NullableResponseContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Route Information about the route.
type Route struct {
	// The method used to create the route.
	CreationMethod *string `json:"CreationMethod,omitempty"`
	// The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24).
	DestinationIpRange *string `json:"DestinationIpRange,omitempty"`
	// The ID of the 3DS OUTSCALE service.
	DestinationServiceId *string `json:"DestinationServiceId,omitempty"`
	// The ID of the Internet service or virtual gateway attached to the Net.
	GatewayId *string `json:"GatewayId,omitempty"`
	// The ID of a NAT service attached to the Net.
	NatServiceId *string `json:"NatServiceId,omitempty"`
	// The ID of the Net access point.
	NetAccessPointId *string `json:"NetAccessPointId,omitempty"`
	// The ID of the Net peering connection.
	NetPeeringId *string `json:"NetPeeringId,omitempty"`
	// The ID of the NIC.
	NicId *string `json:"NicId,omitempty"`
	// The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available.
	State *string `json:"State,omitempty"`
	// The account ID of the owner of the VM.
	VmAccountId *string `json:"VmAccountId,omitempty"`
	// The ID of a VM specified in a route in the table.
	VmId *string `json:"VmId,omitempty"`
}

// NewRoute instantiates a new Route object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoute() *Route {
	this := Route{}
	return &this
}

// NewRouteWithDefaults instantiates a new Route object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteWithDefaults() *Route {
	this := Route{}
	return &this
}

// GetCreationMethod returns the CreationMethod field value if set, zero value otherwise.
func (o *Route) GetCreationMethod() string {
	if o == nil || o.CreationMethod == nil {
		var ret string
		return ret
	}
	return *o.CreationMethod
}

// GetCreationMethodOk returns a tuple with the CreationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetCreationMethodOk() (*string, bool) {
	if o == nil || o.CreationMethod == nil {
		return nil, false
	}
	return o.CreationMethod, true
}

// HasCreationMethod returns a boolean if a field has been set.
func (o *Route) HasCreationMethod() bool {
	if o != nil && o.CreationMethod != nil {
		return true
	}

	return false
}

// SetCreationMethod gets a reference to the given string and assigns it to the CreationMethod field.
func (o *Route) SetCreationMethod(v string) {
	o.CreationMethod = &v
}

// GetDestinationIpRange returns the DestinationIpRange field value if set, zero value otherwise.
func (o *Route) GetDestinationIpRange() string {
	if o == nil || o.DestinationIpRange == nil {
		var ret string
		return ret
	}
	return *o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil || o.DestinationIpRange == nil {
		return nil, false
	}
	return o.DestinationIpRange, true
}

// HasDestinationIpRange returns a boolean if a field has been set.
func (o *Route) HasDestinationIpRange() bool {
	if o != nil && o.DestinationIpRange != nil {
		return true
	}

	return false
}

// SetDestinationIpRange gets a reference to the given string and assigns it to the DestinationIpRange field.
func (o *Route) SetDestinationIpRange(v string) {
	o.DestinationIpRange = &v
}

// GetDestinationServiceId returns the DestinationServiceId field value if set, zero value otherwise.
func (o *Route) GetDestinationServiceId() string {
	if o == nil || o.DestinationServiceId == nil {
		var ret string
		return ret
	}
	return *o.DestinationServiceId
}

// GetDestinationServiceIdOk returns a tuple with the DestinationServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetDestinationServiceIdOk() (*string, bool) {
	if o == nil || o.DestinationServiceId == nil {
		return nil, false
	}
	return o.DestinationServiceId, true
}

// HasDestinationServiceId returns a boolean if a field has been set.
func (o *Route) HasDestinationServiceId() bool {
	if o != nil && o.DestinationServiceId != nil {
		return true
	}

	return false
}

// SetDestinationServiceId gets a reference to the given string and assigns it to the DestinationServiceId field.
func (o *Route) SetDestinationServiceId(v string) {
	o.DestinationServiceId = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *Route) GetGatewayId() string {
	if o == nil || o.GatewayId == nil {
		var ret string
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetGatewayIdOk() (*string, bool) {
	if o == nil || o.GatewayId == nil {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *Route) HasGatewayId() bool {
	if o != nil && o.GatewayId != nil {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given string and assigns it to the GatewayId field.
func (o *Route) SetGatewayId(v string) {
	o.GatewayId = &v
}

// GetNatServiceId returns the NatServiceId field value if set, zero value otherwise.
func (o *Route) GetNatServiceId() string {
	if o == nil || o.NatServiceId == nil {
		var ret string
		return ret
	}
	return *o.NatServiceId
}

// GetNatServiceIdOk returns a tuple with the NatServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetNatServiceIdOk() (*string, bool) {
	if o == nil || o.NatServiceId == nil {
		return nil, false
	}
	return o.NatServiceId, true
}

// HasNatServiceId returns a boolean if a field has been set.
func (o *Route) HasNatServiceId() bool {
	if o != nil && o.NatServiceId != nil {
		return true
	}

	return false
}

// SetNatServiceId gets a reference to the given string and assigns it to the NatServiceId field.
func (o *Route) SetNatServiceId(v string) {
	o.NatServiceId = &v
}

// GetNetAccessPointId returns the NetAccessPointId field value if set, zero value otherwise.
func (o *Route) GetNetAccessPointId() string {
	if o == nil || o.NetAccessPointId == nil {
		var ret string
		return ret
	}
	return *o.NetAccessPointId
}

// GetNetAccessPointIdOk returns a tuple with the NetAccessPointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetNetAccessPointIdOk() (*string, bool) {
	if o == nil || o.NetAccessPointId == nil {
		return nil, false
	}
	return o.NetAccessPointId, true
}

// HasNetAccessPointId returns a boolean if a field has been set.
func (o *Route) HasNetAccessPointId() bool {
	if o != nil && o.NetAccessPointId != nil {
		return true
	}

	return false
}

// SetNetAccessPointId gets a reference to the given string and assigns it to the NetAccessPointId field.
func (o *Route) SetNetAccessPointId(v string) {
	o.NetAccessPointId = &v
}

// GetNetPeeringId returns the NetPeeringId field value if set, zero value otherwise.
func (o *Route) GetNetPeeringId() string {
	if o == nil || o.NetPeeringId == nil {
		var ret string
		return ret
	}
	return *o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetNetPeeringIdOk() (*string, bool) {
	if o == nil || o.NetPeeringId == nil {
		return nil, false
	}
	return o.NetPeeringId, true
}

// HasNetPeeringId returns a boolean if a field has been set.
func (o *Route) HasNetPeeringId() bool {
	if o != nil && o.NetPeeringId != nil {
		return true
	}

	return false
}

// SetNetPeeringId gets a reference to the given string and assigns it to the NetPeeringId field.
func (o *Route) SetNetPeeringId(v string) {
	o.NetPeeringId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *Route) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *Route) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *Route) SetNicId(v string) {
	o.NicId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Route) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Route) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Route) SetState(v string) {
	o.State = &v
}

// GetVmAccountId returns the VmAccountId field value if set, zero value otherwise.
func (o *Route) GetVmAccountId() string {
	if o == nil || o.VmAccountId == nil {
		var ret string
		return ret
	}
	return *o.VmAccountId
}

// GetVmAccountIdOk returns a tuple with the VmAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetVmAccountIdOk() (*string, bool) {
	if o == nil || o.VmAccountId == nil {
		return nil, false
	}
	return o.VmAccountId, true
}

// HasVmAccountId returns a boolean if a field has been set.
func (o *Route) HasVmAccountId() bool {
	if o != nil && o.VmAccountId != nil {
		return true
	}

	return false
}

// SetVmAccountId gets a reference to the given string and assigns it to the VmAccountId field.
func (o *Route) SetVmAccountId(v string) {
	o.VmAccountId = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *Route) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *Route) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *Route) SetVmId(v string) {
	o.VmId = &v
}

func (o Route) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationMethod != nil {
		toSerialize["CreationMethod"] = o.CreationMethod
	}
	if o.DestinationIpRange != nil {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DestinationServiceId != nil {
		toSerialize["DestinationServiceId"] = o.DestinationServiceId
	}
	if o.GatewayId != nil {
		toSerialize["GatewayId"] = o.GatewayId
	}
	if o.NatServiceId != nil {
		toSerialize["NatServiceId"] = o.NatServiceId
	}
	if o.NetAccessPointId != nil {
		toSerialize["NetAccessPointId"] = o.NetAccessPointId
	}
	if o.NetPeeringId != nil {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.VmAccountId != nil {
		toSerialize["VmAccountId"] = o.VmAccountId
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableRoute struct {
	value *Route
	isSet bool
}

func (v NullableRoute) Get() *Route {
	return v.value
}

func (v *NullableRoute) Set(val *Route) {
	v.value = val
	v.isSet = true
}

func (v NullableRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoute(val *Route) *NullableRoute {
	return &NullableRoute{value: val, isSet: true}
}

func (v NullableRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RouteLight Information about the route.
type RouteLight struct {
	// The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24).
	DestinationIpRange *string `json:"DestinationIpRange,omitempty"`
	// The type of route (always `static`).
	RouteType *string `json:"RouteType,omitempty"`
	// The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
}

// NewRouteLight instantiates a new RouteLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteLight() *RouteLight {
	this := RouteLight{}
	return &this
}

// NewRouteLightWithDefaults instantiates a new RouteLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteLightWithDefaults() *RouteLight {
	this := RouteLight{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value if set, zero value otherwise.
func (o *RouteLight) GetDestinationIpRange() string {
	if o == nil || o.DestinationIpRange == nil {
		var ret string
		return ret
	}
	return *o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLight) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil || o.DestinationIpRange == nil {
		return nil, false
	}
	return o.DestinationIpRange, true
}

// HasDestinationIpRange returns a boolean if a field has been set.
func (o *RouteLight) HasDestinationIpRange() bool {
	if o != nil && o.DestinationIpRange != nil {
		return true
	}

	return false
}

// SetDestinationIpRange gets a reference to the given string and assigns it to the DestinationIpRange field.
func (o *RouteLight) SetDestinationIpRange(v string) {
	o.DestinationIpRange = &v
}

// GetRouteType returns the RouteType field value if set, zero value otherwise.
func (o *RouteLight) GetRouteType() string {
	if o == nil || o.RouteType == nil {
		var ret string
		return ret
	}
	return *o.RouteType
}

// GetRouteTypeOk returns a tuple with the RouteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLight) GetRouteTypeOk() (*string, bool) {
	if o == nil || o.RouteType == nil {
		return nil, false
	}
	return o.RouteType, true
}

// HasRouteType returns a boolean if a field has been set.
func (o *RouteLight) HasRouteType() bool {
	if o != nil && o.RouteType != nil {
		return true
	}

	return false
}

// SetRouteType gets a reference to the given string and assigns it to the RouteType field.
func (o *RouteLight) SetRouteType(v string) {
	o.RouteType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RouteLight) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLight) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RouteLight) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RouteLight) SetState(v string) {
	o.State = &v
}

func (o RouteLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestinationIpRange != nil {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.RouteType != nil {
		toSerialize["RouteType"] = o.RouteType
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableRouteLight struct {
	value *RouteLight
	isSet bool
}

func (v NullableRouteLight) Get() *RouteLight {
	return v.value
}

func (v *NullableRouteLight) Set(val *RouteLight) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteLight) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteLight(val *RouteLight) *NullableRouteLight {
	return &NullableRouteLight{value: val, isSet: true}
}

func (v NullableRouteLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RoutePropagatingVirtualGateway Information about the route propagating virtual gateway.
type RoutePropagatingVirtualGateway struct {
	// The ID of the virtual gateway.
	VirtualGatewayId *string `json:"VirtualGatewayId,omitempty"`
}

// NewRoutePropagatingVirtualGateway instantiates a new RoutePropagatingVirtualGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutePropagatingVirtualGateway() *RoutePropagatingVirtualGateway {
	this := RoutePropagatingVirtualGateway{}
	return &this
}

// NewRoutePropagatingVirtualGatewayWithDefaults instantiates a new RoutePropagatingVirtualGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutePropagatingVirtualGatewayWithDefaults() *RoutePropagatingVirtualGateway {
	this := RoutePropagatingVirtualGateway{}
	return &this
}

// GetVirtualGatewayId returns the VirtualGatewayId field value if set, zero value otherwise.
func (o *RoutePropagatingVirtualGateway) GetVirtualGatewayId() string {
	if o == nil || o.VirtualGatewayId == nil {
		var ret string
		return ret
	}
	return *o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePropagatingVirtualGateway) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil || o.VirtualGatewayId == nil {
		return nil, false
	}
	return o.VirtualGatewayId, true
}

// HasVirtualGatewayId returns a boolean if a field has been set.
func (o *RoutePropagatingVirtualGateway) HasVirtualGatewayId() bool {
	if o != nil && o.VirtualGatewayId != nil {
		return true
	}

	return false
}

// SetVirtualGatewayId gets a reference to the given string and assigns it to the VirtualGatewayId field.
func (o *RoutePropagatingVirtualGateway) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = &v
}

func (o RoutePropagatingVirtualGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VirtualGatewayId != nil {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableRoutePropagatingVirtualGateway struct {
	value *RoutePropagatingVirtualGateway
	isSet bool
}

func (v NullableRoutePropagatingVirtualGateway) Get() *RoutePropagatingVirtualGateway {
	return v.value
}

func (v *NullableRoutePropagatingVirtualGateway) Set(val *RoutePropagatingVirtualGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutePropagatingVirtualGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutePropagatingVirtualGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutePropagatingVirtualGateway(val *RoutePropagatingVirtualGateway) *NullableRoutePropagatingVirtualGateway {
	return &NullableRoutePropagatingVirtualGateway{value: val, isSet: true}
}

func (v NullableRoutePropagatingVirtualGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutePropagatingVirtualGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// RouteTable Information about the route table.
type RouteTable struct {
	// One or more associations between the route table and Subnets.
	LinkRouteTables *[]LinkRouteTable `json:"LinkRouteTables,omitempty"`
	// The ID of the Net for the route table.
	NetId *string `json:"NetId,omitempty"`
	// Information about virtual gateways propagating routes.
	RoutePropagatingVirtualGateways *[]RoutePropagatingVirtualGateway `json:"RoutePropagatingVirtualGateways,omitempty"`
	// The ID of the route table.
	RouteTableId *string `json:"RouteTableId,omitempty"`
	// One or more routes in the route table.
	Routes *[]Route `json:"Routes,omitempty"`
	// One or more tags associated with the route table.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewRouteTable instantiates a new RouteTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteTable() *RouteTable {
	this := RouteTable{}
	return &this
}

// NewRouteTableWithDefaults instantiates a new RouteTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteTableWithDefaults() *RouteTable {
	this := RouteTable{}
	return &this
}

// GetLinkRouteTables returns the LinkRouteTables field value if set, zero value otherwise.
func (o *RouteTable) GetLinkRouteTables() []LinkRouteTable {
	if o == nil || o.LinkRouteTables == nil {
		var ret []LinkRouteTable
		return ret
	}
	return *o.LinkRouteTables
}

// GetLinkRouteTablesOk returns a tuple with the LinkRouteTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetLinkRouteTablesOk() (*[]LinkRouteTable, bool) {
	if o == nil || o.LinkRouteTables == nil {
		return nil, false
	}
	return o.LinkRouteTables, true
}

// HasLinkRouteTables returns a boolean if a field has been set.
func (o *RouteTable) HasLinkRouteTables() bool {
	if o != nil && o.LinkRouteTables != nil {
		return true
	}

	return false
}

// SetLinkRouteTables gets a reference to the given []LinkRouteTable and assigns it to the LinkRouteTables field.
func (o *RouteTable) SetLinkRouteTables(v []LinkRouteTable) {
	o.LinkRouteTables = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *RouteTable) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *RouteTable) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *RouteTable) SetNetId(v string) {
	o.NetId = &v
}

// GetRoutePropagatingVirtualGateways returns the RoutePropagatingVirtualGateways field value if set, zero value otherwise.
func (o *RouteTable) GetRoutePropagatingVirtualGateways() []RoutePropagatingVirtualGateway {
	if o == nil || o.RoutePropagatingVirtualGateways == nil {
		var ret []RoutePropagatingVirtualGateway
		return ret
	}
	return *o.RoutePropagatingVirtualGateways
}

// GetRoutePropagatingVirtualGatewaysOk returns a tuple with the RoutePropagatingVirtualGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRoutePropagatingVirtualGatewaysOk() (*[]RoutePropagatingVirtualGateway, bool) {
	if o == nil || o.RoutePropagatingVirtualGateways == nil {
		return nil, false
	}
	return o.RoutePropagatingVirtualGateways, true
}

// HasRoutePropagatingVirtualGateways returns a boolean if a field has been set.
func (o *RouteTable) HasRoutePropagatingVirtualGateways() bool {
	if o != nil && o.RoutePropagatingVirtualGateways != nil {
		return true
	}

	return false
}

// SetRoutePropagatingVirtualGateways gets a reference to the given []RoutePropagatingVirtualGateway and assigns it to the RoutePropagatingVirtualGateways field.
func (o *RouteTable) SetRoutePropagatingVirtualGateways(v []RoutePropagatingVirtualGateway) {
	o.RoutePropagatingVirtualGateways = &v
}

// GetRouteTableId returns the RouteTableId field value if set, zero value otherwise.
func (o *RouteTable) GetRouteTableId() string {
	if o == nil || o.RouteTableId == nil {
		var ret string
		return ret
	}
	return *o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRouteTableIdOk() (*string, bool) {
	if o == nil || o.RouteTableId == nil {
		return nil, false
	}
	return o.RouteTableId, true
}

// HasRouteTableId returns a boolean if a field has been set.
func (o *RouteTable) HasRouteTableId() bool {
	if o != nil && o.RouteTableId != nil {
		return true
	}

	return false
}

// SetRouteTableId gets a reference to the given string and assigns it to the RouteTableId field.
func (o *RouteTable) SetRouteTableId(v string) {
	o.RouteTableId = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *RouteTable) GetRoutes() []Route {
	if o == nil || o.Routes == nil {
		var ret []Route
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRoutesOk() (*[]Route, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *RouteTable) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *RouteTable) SetRoutes(v []Route) {
	o.Routes = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RouteTable) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RouteTable) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *RouteTable) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o RouteTable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkRouteTables != nil {
		toSerialize["LinkRouteTables"] = o.LinkRouteTables
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.RoutePropagatingVirtualGateways != nil {
		toSerialize["RoutePropagatingVirtualGateways"] = o.RoutePropagatingVirtualGateways
	}
	if o.RouteTableId != nil {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if o.Routes != nil {
		toSerialize["Routes"] = o.Routes
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableRouteTable struct {
	value *RouteTable
	isSet bool
}

func (v NullableRouteTable) Get() *RouteTable {
	return v.value
}

func (v *NullableRouteTable) Set(val *RouteTable) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteTable) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteTable(val *RouteTable) *NullableRouteTable {
	return &NullableRouteTable{value: val, isSet: true}
}

func (v NullableRouteTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SecurityGroup Information about the security group.
type SecurityGroup struct {
	// The account ID of a user that has been granted permission.
	AccountId *string `json:"AccountId,omitempty"`
	// The description of the security group.
	Description *string `json:"Description,omitempty"`
	// The inbound rules associated with the security group.
	InboundRules *[]SecurityGroupRule `json:"InboundRules,omitempty"`
	// The ID of the Net for the security group.
	NetId *string `json:"NetId,omitempty"`
	// The outbound rules associated with the security group.
	OutboundRules *[]SecurityGroupRule `json:"OutboundRules,omitempty"`
	// The ID of the security group.
	SecurityGroupId *string `json:"SecurityGroupId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
	// One or more tags associated with the security group.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SecurityGroup) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SecurityGroup) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *SecurityGroup) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SecurityGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SecurityGroup) SetDescription(v string) {
	o.Description = &v
}

// GetInboundRules returns the InboundRules field value if set, zero value otherwise.
func (o *SecurityGroup) GetInboundRules() []SecurityGroupRule {
	if o == nil || o.InboundRules == nil {
		var ret []SecurityGroupRule
		return ret
	}
	return *o.InboundRules
}

// GetInboundRulesOk returns a tuple with the InboundRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetInboundRulesOk() (*[]SecurityGroupRule, bool) {
	if o == nil || o.InboundRules == nil {
		return nil, false
	}
	return o.InboundRules, true
}

// HasInboundRules returns a boolean if a field has been set.
func (o *SecurityGroup) HasInboundRules() bool {
	if o != nil && o.InboundRules != nil {
		return true
	}

	return false
}

// SetInboundRules gets a reference to the given []SecurityGroupRule and assigns it to the InboundRules field.
func (o *SecurityGroup) SetInboundRules(v []SecurityGroupRule) {
	o.InboundRules = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *SecurityGroup) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *SecurityGroup) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *SecurityGroup) SetNetId(v string) {
	o.NetId = &v
}

// GetOutboundRules returns the OutboundRules field value if set, zero value otherwise.
func (o *SecurityGroup) GetOutboundRules() []SecurityGroupRule {
	if o == nil || o.OutboundRules == nil {
		var ret []SecurityGroupRule
		return ret
	}
	return *o.OutboundRules
}

// GetOutboundRulesOk returns a tuple with the OutboundRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetOutboundRulesOk() (*[]SecurityGroupRule, bool) {
	if o == nil || o.OutboundRules == nil {
		return nil, false
	}
	return o.OutboundRules, true
}

// HasOutboundRules returns a boolean if a field has been set.
func (o *SecurityGroup) HasOutboundRules() bool {
	if o != nil && o.OutboundRules != nil {
		return true
	}

	return false
}

// SetOutboundRules gets a reference to the given []SecurityGroupRule and assigns it to the OutboundRules field.
func (o *SecurityGroup) SetOutboundRules(v []SecurityGroupRule) {
	o.OutboundRules = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value if set, zero value otherwise.
func (o *SecurityGroup) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupId == nil {
		return nil, false
	}
	return o.SecurityGroupId, true
}

// HasSecurityGroupId returns a boolean if a field has been set.
func (o *SecurityGroup) HasSecurityGroupId() bool {
	if o != nil && o.SecurityGroupId != nil {
		return true
	}

	return false
}

// SetSecurityGroupId gets a reference to the given string and assigns it to the SecurityGroupId field.
func (o *SecurityGroup) SetSecurityGroupId(v string) {
	o.SecurityGroupId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *SecurityGroup) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *SecurityGroup) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *SecurityGroup) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SecurityGroup) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SecurityGroup) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *SecurityGroup) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o SecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.InboundRules != nil {
		toSerialize["InboundRules"] = o.InboundRules
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.OutboundRules != nil {
		toSerialize["OutboundRules"] = o.OutboundRules
	}
	if o.SecurityGroupId != nil {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SecurityGroupLight Information about the security group.
type SecurityGroupLight struct {
	// The ID of the security group.
	SecurityGroupId *string `json:"SecurityGroupId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
}

// NewSecurityGroupLight instantiates a new SecurityGroupLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupLight() *SecurityGroupLight {
	this := SecurityGroupLight{}
	return &this
}

// NewSecurityGroupLightWithDefaults instantiates a new SecurityGroupLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupLightWithDefaults() *SecurityGroupLight {
	this := SecurityGroupLight{}
	return &this
}

// GetSecurityGroupId returns the SecurityGroupId field value if set, zero value otherwise.
func (o *SecurityGroupLight) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLight) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupId == nil {
		return nil, false
	}
	return o.SecurityGroupId, true
}

// HasSecurityGroupId returns a boolean if a field has been set.
func (o *SecurityGroupLight) HasSecurityGroupId() bool {
	if o != nil && o.SecurityGroupId != nil {
		return true
	}

	return false
}

// SetSecurityGroupId gets a reference to the given string and assigns it to the SecurityGroupId field.
func (o *SecurityGroupLight) SetSecurityGroupId(v string) {
	o.SecurityGroupId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *SecurityGroupLight) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLight) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *SecurityGroupLight) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *SecurityGroupLight) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

func (o SecurityGroupLight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityGroupId != nil {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroupLight struct {
	value *SecurityGroupLight
	isSet bool
}

func (v NullableSecurityGroupLight) Get() *SecurityGroupLight {
	return v.value
}

func (v *NullableSecurityGroupLight) Set(val *SecurityGroupLight) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupLight) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupLight(val *SecurityGroupLight) *NullableSecurityGroupLight {
	return &NullableSecurityGroupLight{value: val, isSet: true}
}

func (v NullableSecurityGroupLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SecurityGroupRule Information about the security group rule.
type SecurityGroupRule struct {
	// The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
	FromPortRange *int32 `json:"FromPortRange,omitempty"`
	// The IP protocol name (`tcp`, `udp`, `icmp`) or protocol number. By default, `-1`, which means all protocols.
	IpProtocol *string `json:"IpProtocol,omitempty"`
	// One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).
	IpRanges *[]string `json:"IpRanges,omitempty"`
	// Information about one or more members of a security group.
	SecurityGroupsMembers *[]SecurityGroupsMember `json:"SecurityGroupsMembers,omitempty"`
	// One or more service IDs to allow traffic from a Net to access the corresponding 3DS OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).
	ServiceIds *[]string `json:"ServiceIds,omitempty"`
	// The end of the port range for the TCP and UDP protocols, or an ICMP type number.
	ToPortRange *int32 `json:"ToPortRange,omitempty"`
}

// NewSecurityGroupRule instantiates a new SecurityGroupRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupRule() *SecurityGroupRule {
	this := SecurityGroupRule{}
	return &this
}

// NewSecurityGroupRuleWithDefaults instantiates a new SecurityGroupRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupRuleWithDefaults() *SecurityGroupRule {
	this := SecurityGroupRule{}
	return &this
}

// GetFromPortRange returns the FromPortRange field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetFromPortRange() int32 {
	if o == nil || o.FromPortRange == nil {
		var ret int32
		return ret
	}
	return *o.FromPortRange
}

// GetFromPortRangeOk returns a tuple with the FromPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetFromPortRangeOk() (*int32, bool) {
	if o == nil || o.FromPortRange == nil {
		return nil, false
	}
	return o.FromPortRange, true
}

// HasFromPortRange returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasFromPortRange() bool {
	if o != nil && o.FromPortRange != nil {
		return true
	}

	return false
}

// SetFromPortRange gets a reference to the given int32 and assigns it to the FromPortRange field.
func (o *SecurityGroupRule) SetFromPortRange(v int32) {
	o.FromPortRange = &v
}

// GetIpProtocol returns the IpProtocol field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetIpProtocol() string {
	if o == nil || o.IpProtocol == nil {
		var ret string
		return ret
	}
	return *o.IpProtocol
}

// GetIpProtocolOk returns a tuple with the IpProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetIpProtocolOk() (*string, bool) {
	if o == nil || o.IpProtocol == nil {
		return nil, false
	}
	return o.IpProtocol, true
}

// HasIpProtocol returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasIpProtocol() bool {
	if o != nil && o.IpProtocol != nil {
		return true
	}

	return false
}

// SetIpProtocol gets a reference to the given string and assigns it to the IpProtocol field.
func (o *SecurityGroupRule) SetIpProtocol(v string) {
	o.IpProtocol = &v
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetIpRanges() []string {
	if o == nil || o.IpRanges == nil {
		var ret []string
		return ret
	}
	return *o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetIpRangesOk() (*[]string, bool) {
	if o == nil || o.IpRanges == nil {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasIpRanges() bool {
	if o != nil && o.IpRanges != nil {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []string and assigns it to the IpRanges field.
func (o *SecurityGroupRule) SetIpRanges(v []string) {
	o.IpRanges = &v
}

// GetSecurityGroupsMembers returns the SecurityGroupsMembers field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetSecurityGroupsMembers() []SecurityGroupsMember {
	if o == nil || o.SecurityGroupsMembers == nil {
		var ret []SecurityGroupsMember
		return ret
	}
	return *o.SecurityGroupsMembers
}

// GetSecurityGroupsMembersOk returns a tuple with the SecurityGroupsMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetSecurityGroupsMembersOk() (*[]SecurityGroupsMember, bool) {
	if o == nil || o.SecurityGroupsMembers == nil {
		return nil, false
	}
	return o.SecurityGroupsMembers, true
}

// HasSecurityGroupsMembers returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasSecurityGroupsMembers() bool {
	if o != nil && o.SecurityGroupsMembers != nil {
		return true
	}

	return false
}

// SetSecurityGroupsMembers gets a reference to the given []SecurityGroupsMember and assigns it to the SecurityGroupsMembers field.
func (o *SecurityGroupRule) SetSecurityGroupsMembers(v []SecurityGroupsMember) {
	o.SecurityGroupsMembers = &v
}

// GetServiceIds returns the ServiceIds field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetServiceIds() []string {
	if o == nil || o.ServiceIds == nil {
		var ret []string
		return ret
	}
	return *o.ServiceIds
}

// GetServiceIdsOk returns a tuple with the ServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetServiceIdsOk() (*[]string, bool) {
	if o == nil || o.ServiceIds == nil {
		return nil, false
	}
	return o.ServiceIds, true
}

// HasServiceIds returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasServiceIds() bool {
	if o != nil && o.ServiceIds != nil {
		return true
	}

	return false
}

// SetServiceIds gets a reference to the given []string and assigns it to the ServiceIds field.
func (o *SecurityGroupRule) SetServiceIds(v []string) {
	o.ServiceIds = &v
}

// GetToPortRange returns the ToPortRange field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetToPortRange() int32 {
	if o == nil || o.ToPortRange == nil {
		var ret int32
		return ret
	}
	return *o.ToPortRange
}

// GetToPortRangeOk returns a tuple with the ToPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetToPortRangeOk() (*int32, bool) {
	if o == nil || o.ToPortRange == nil {
		return nil, false
	}
	return o.ToPortRange, true
}

// HasToPortRange returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasToPortRange() bool {
	if o != nil && o.ToPortRange != nil {
		return true
	}

	return false
}

// SetToPortRange gets a reference to the given int32 and assigns it to the ToPortRange field.
func (o *SecurityGroupRule) SetToPortRange(v int32) {
	o.ToPortRange = &v
}

func (o SecurityGroupRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FromPortRange != nil {
		toSerialize["FromPortRange"] = o.FromPortRange
	}
	if o.IpProtocol != nil {
		toSerialize["IpProtocol"] = o.IpProtocol
	}
	if o.IpRanges != nil {
		toSerialize["IpRanges"] = o.IpRanges
	}
	if o.SecurityGroupsMembers != nil {
		toSerialize["SecurityGroupsMembers"] = o.SecurityGroupsMembers
	}
	if o.ServiceIds != nil {
		toSerialize["ServiceIds"] = o.ServiceIds
	}
	if o.ToPortRange != nil {
		toSerialize["ToPortRange"] = o.ToPortRange
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroupRule struct {
	value *SecurityGroupRule
	isSet bool
}

func (v NullableSecurityGroupRule) Get() *SecurityGroupRule {
	return v.value
}

func (v *NullableSecurityGroupRule) Set(val *SecurityGroupRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupRule(val *SecurityGroupRule) *NullableSecurityGroupRule {
	return &NullableSecurityGroupRule{value: val, isSet: true}
}

func (v NullableSecurityGroupRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SecurityGroupsMember Information about the member of a security group.
type SecurityGroupsMember struct {
	// The account ID of a user.
	AccountId *string `json:"AccountId,omitempty"`
	// The ID of the security group.
	SecurityGroupId *string `json:"SecurityGroupId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
}

// NewSecurityGroupsMember instantiates a new SecurityGroupsMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupsMember() *SecurityGroupsMember {
	this := SecurityGroupsMember{}
	return &this
}

// NewSecurityGroupsMemberWithDefaults instantiates a new SecurityGroupsMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupsMemberWithDefaults() *SecurityGroupsMember {
	this := SecurityGroupsMember{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SecurityGroupsMember) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupsMember) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SecurityGroupsMember) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *SecurityGroupsMember) SetAccountId(v string) {
	o.AccountId = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value if set, zero value otherwise.
func (o *SecurityGroupsMember) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupsMember) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupId == nil {
		return nil, false
	}
	return o.SecurityGroupId, true
}

// HasSecurityGroupId returns a boolean if a field has been set.
func (o *SecurityGroupsMember) HasSecurityGroupId() bool {
	if o != nil && o.SecurityGroupId != nil {
		return true
	}

	return false
}

// SetSecurityGroupId gets a reference to the given string and assigns it to the SecurityGroupId field.
func (o *SecurityGroupsMember) SetSecurityGroupId(v string) {
	o.SecurityGroupId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *SecurityGroupsMember) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupsMember) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *SecurityGroupsMember) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *SecurityGroupsMember) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

func (o SecurityGroupsMember) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.SecurityGroupId != nil {
		toSerialize["SecurityGroupId"] = o.SecurityGroupId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroupsMember struct {
	value *SecurityGroupsMember
	isSet bool
}

func (v NullableSecurityGroupsMember) Get() *SecurityGroupsMember {
	return v.value
}

func (v *NullableSecurityGroupsMember) Set(val *SecurityGroupsMember) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupsMember) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupsMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupsMember(val *SecurityGroupsMember) *NullableSecurityGroupsMember {
	return &NullableSecurityGroupsMember{value: val, isSet: true}
}

func (v NullableSecurityGroupsMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupsMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SendResetPasswordEmailRequest struct for SendResetPasswordEmailRequest
type SendResetPasswordEmailRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The email address provided for the account.
	Email string `json:"Email"`
}

// NewSendResetPasswordEmailRequest instantiates a new SendResetPasswordEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendResetPasswordEmailRequest(email string, ) *SendResetPasswordEmailRequest {
	this := SendResetPasswordEmailRequest{}
	this.Email = email
	return &this
}

// NewSendResetPasswordEmailRequestWithDefaults instantiates a new SendResetPasswordEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendResetPasswordEmailRequestWithDefaults() *SendResetPasswordEmailRequest {
	this := SendResetPasswordEmailRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *SendResetPasswordEmailRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendResetPasswordEmailRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *SendResetPasswordEmailRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *SendResetPasswordEmailRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetEmail returns the Email field value
func (o *SendResetPasswordEmailRequest) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SendResetPasswordEmailRequest) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SendResetPasswordEmailRequest) SetEmail(v string) {
	o.Email = v
}

func (o SendResetPasswordEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableSendResetPasswordEmailRequest struct {
	value *SendResetPasswordEmailRequest
	isSet bool
}

func (v NullableSendResetPasswordEmailRequest) Get() *SendResetPasswordEmailRequest {
	return v.value
}

func (v *NullableSendResetPasswordEmailRequest) Set(val *SendResetPasswordEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendResetPasswordEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendResetPasswordEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendResetPasswordEmailRequest(val *SendResetPasswordEmailRequest) *NullableSendResetPasswordEmailRequest {
	return &NullableSendResetPasswordEmailRequest{value: val, isSet: true}
}

func (v NullableSendResetPasswordEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendResetPasswordEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SendResetPasswordEmailResponse struct for SendResetPasswordEmailResponse
type SendResetPasswordEmailResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewSendResetPasswordEmailResponse instantiates a new SendResetPasswordEmailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendResetPasswordEmailResponse() *SendResetPasswordEmailResponse {
	this := SendResetPasswordEmailResponse{}
	return &this
}

// NewSendResetPasswordEmailResponseWithDefaults instantiates a new SendResetPasswordEmailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendResetPasswordEmailResponseWithDefaults() *SendResetPasswordEmailResponse {
	this := SendResetPasswordEmailResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *SendResetPasswordEmailResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendResetPasswordEmailResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *SendResetPasswordEmailResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *SendResetPasswordEmailResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o SendResetPasswordEmailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableSendResetPasswordEmailResponse struct {
	value *SendResetPasswordEmailResponse
	isSet bool
}

func (v NullableSendResetPasswordEmailResponse) Get() *SendResetPasswordEmailResponse {
	return v.value
}

func (v *NullableSendResetPasswordEmailResponse) Set(val *SendResetPasswordEmailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSendResetPasswordEmailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSendResetPasswordEmailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendResetPasswordEmailResponse(val *SendResetPasswordEmailResponse) *NullableSendResetPasswordEmailResponse {
	return &NullableSendResetPasswordEmailResponse{value: val, isSet: true}
}

func (v NullableSendResetPasswordEmailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendResetPasswordEmailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// ServerCertificate Information about the server certificate.
type ServerCertificate struct {
	// The date at which the server certificate expires.
	ExpirationDate *string `json:"ExpirationDate,omitempty"`
	// The ID of the server certificate.
	Id *string `json:"Id,omitempty"`
	// The name of the server certificate.
	Name *string `json:"Name,omitempty"`
	// The path to the server certificate.
	Path *string `json:"Path,omitempty"`
	// The date at which the server certificate has been uploaded.
	UploadDate *string `json:"UploadDate,omitempty"`
}

// NewServerCertificate instantiates a new ServerCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerCertificate() *ServerCertificate {
	this := ServerCertificate{}
	return &this
}

// NewServerCertificateWithDefaults instantiates a new ServerCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerCertificateWithDefaults() *ServerCertificate {
	this := ServerCertificate{}
	return &this
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *ServerCertificate) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCertificate) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *ServerCertificate) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *ServerCertificate) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServerCertificate) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCertificate) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServerCertificate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServerCertificate) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServerCertificate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCertificate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServerCertificate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServerCertificate) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ServerCertificate) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCertificate) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ServerCertificate) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ServerCertificate) SetPath(v string) {
	o.Path = &v
}

// GetUploadDate returns the UploadDate field value if set, zero value otherwise.
func (o *ServerCertificate) GetUploadDate() string {
	if o == nil || o.UploadDate == nil {
		var ret string
		return ret
	}
	return *o.UploadDate
}

// GetUploadDateOk returns a tuple with the UploadDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCertificate) GetUploadDateOk() (*string, bool) {
	if o == nil || o.UploadDate == nil {
		return nil, false
	}
	return o.UploadDate, true
}

// HasUploadDate returns a boolean if a field has been set.
func (o *ServerCertificate) HasUploadDate() bool {
	if o != nil && o.UploadDate != nil {
		return true
	}

	return false
}

// SetUploadDate gets a reference to the given string and assigns it to the UploadDate field.
func (o *ServerCertificate) SetUploadDate(v string) {
	o.UploadDate = &v
}

func (o ServerCertificate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	if o.Id != nil {
		toSerialize["Id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Path != nil {
		toSerialize["Path"] = o.Path
	}
	if o.UploadDate != nil {
		toSerialize["UploadDate"] = o.UploadDate
	}
	return json.Marshal(toSerialize)
}

type NullableServerCertificate struct {
	value *ServerCertificate
	isSet bool
}

func (v NullableServerCertificate) Get() *ServerCertificate {
	return v.value
}

func (v *NullableServerCertificate) Set(val *ServerCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullableServerCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullableServerCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerCertificate(val *ServerCertificate) *NullableServerCertificate {
	return &NullableServerCertificate{value: val, isSet: true}
}

func (v NullableServerCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Service Information about the service.
type Service struct {
	// The list of network prefixes used by the service, in CIDR notation.
	IpRanges *[]string `json:"IpRanges,omitempty"`
	// The ID of the service.
	ServiceId *string `json:"ServiceId,omitempty"`
	// The name of the prefix list, which identifies the 3DS OUTSCALE service it is associated with.
	ServiceName *string `json:"ServiceName,omitempty"`
}

// NewService instantiates a new Service object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewService() *Service {
	this := Service{}
	return &this
}

// NewServiceWithDefaults instantiates a new Service object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceWithDefaults() *Service {
	this := Service{}
	return &this
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *Service) GetIpRanges() []string {
	if o == nil || o.IpRanges == nil {
		var ret []string
		return ret
	}
	return *o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIpRangesOk() (*[]string, bool) {
	if o == nil || o.IpRanges == nil {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *Service) HasIpRanges() bool {
	if o != nil && o.IpRanges != nil {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []string and assigns it to the IpRanges field.
func (o *Service) SetIpRanges(v []string) {
	o.IpRanges = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *Service) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *Service) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *Service) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *Service) GetServiceName() string {
	if o == nil || o.ServiceName == nil {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetServiceNameOk() (*string, bool) {
	if o == nil || o.ServiceName == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *Service) HasServiceName() bool {
	if o != nil && o.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *Service) SetServiceName(v string) {
	o.ServiceName = &v
}

func (o Service) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpRanges != nil {
		toSerialize["IpRanges"] = o.IpRanges
	}
	if o.ServiceId != nil {
		toSerialize["ServiceId"] = o.ServiceId
	}
	if o.ServiceName != nil {
		toSerialize["ServiceName"] = o.ServiceName
	}
	return json.Marshal(toSerialize)
}

type NullableService struct {
	value *Service
	isSet bool
}

func (v NullableService) Get() *Service {
	return v.value
}

func (v *NullableService) Set(val *Service) {
	v.value = val
	v.isSet = true
}

func (v NullableService) IsSet() bool {
	return v.isSet
}

func (v *NullableService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableService(val *Service) *NullableService {
	return &NullableService{value: val, isSet: true}
}

func (v NullableService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Snapshot Information about the snapshot.
type Snapshot struct {
	// The account alias of the owner of the snapshot.
	AccountAlias *string `json:"AccountAlias,omitempty"`
	// The account ID of the owner of the snapshot.
	AccountId *string `json:"AccountId,omitempty"`
	// The description of the snapshot.
	Description *string `json:"Description,omitempty"`
	PermissionsToCreateVolume *PermissionsOnResource `json:"PermissionsToCreateVolume,omitempty"`
	// The progress of the snapshot, as a percentage.
	Progress *int32 `json:"Progress,omitempty"`
	// The ID of the snapshot.
	SnapshotId *string `json:"SnapshotId,omitempty"`
	// The state of the snapshot (`in-queue` \\| `completed` \\| `error`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the snapshot.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the volume used to create the snapshot.
	VolumeId *string `json:"VolumeId,omitempty"`
	// The size of the volume used to create the snapshot, in gibibytes (GiB).
	VolumeSize *int32 `json:"VolumeSize,omitempty"`
}

// NewSnapshot instantiates a new Snapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshot() *Snapshot {
	this := Snapshot{}
	return &this
}

// NewSnapshotWithDefaults instantiates a new Snapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotWithDefaults() *Snapshot {
	this := Snapshot{}
	return &this
}

// GetAccountAlias returns the AccountAlias field value if set, zero value otherwise.
func (o *Snapshot) GetAccountAlias() string {
	if o == nil || o.AccountAlias == nil {
		var ret string
		return ret
	}
	return *o.AccountAlias
}

// GetAccountAliasOk returns a tuple with the AccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetAccountAliasOk() (*string, bool) {
	if o == nil || o.AccountAlias == nil {
		return nil, false
	}
	return o.AccountAlias, true
}

// HasAccountAlias returns a boolean if a field has been set.
func (o *Snapshot) HasAccountAlias() bool {
	if o != nil && o.AccountAlias != nil {
		return true
	}

	return false
}

// SetAccountAlias gets a reference to the given string and assigns it to the AccountAlias field.
func (o *Snapshot) SetAccountAlias(v string) {
	o.AccountAlias = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Snapshot) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Snapshot) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Snapshot) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Snapshot) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Snapshot) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Snapshot) SetDescription(v string) {
	o.Description = &v
}

// GetPermissionsToCreateVolume returns the PermissionsToCreateVolume field value if set, zero value otherwise.
func (o *Snapshot) GetPermissionsToCreateVolume() PermissionsOnResource {
	if o == nil || o.PermissionsToCreateVolume == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.PermissionsToCreateVolume
}

// GetPermissionsToCreateVolumeOk returns a tuple with the PermissionsToCreateVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetPermissionsToCreateVolumeOk() (*PermissionsOnResource, bool) {
	if o == nil || o.PermissionsToCreateVolume == nil {
		return nil, false
	}
	return o.PermissionsToCreateVolume, true
}

// HasPermissionsToCreateVolume returns a boolean if a field has been set.
func (o *Snapshot) HasPermissionsToCreateVolume() bool {
	if o != nil && o.PermissionsToCreateVolume != nil {
		return true
	}

	return false
}

// SetPermissionsToCreateVolume gets a reference to the given PermissionsOnResource and assigns it to the PermissionsToCreateVolume field.
func (o *Snapshot) SetPermissionsToCreateVolume(v PermissionsOnResource) {
	o.PermissionsToCreateVolume = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *Snapshot) GetProgress() int32 {
	if o == nil || o.Progress == nil {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetProgressOk() (*int32, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *Snapshot) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *Snapshot) SetProgress(v int32) {
	o.Progress = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *Snapshot) GetSnapshotId() string {
	if o == nil || o.SnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetSnapshotIdOk() (*string, bool) {
	if o == nil || o.SnapshotId == nil {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *Snapshot) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *Snapshot) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Snapshot) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Snapshot) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Snapshot) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Snapshot) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Snapshot) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Snapshot) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *Snapshot) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *Snapshot) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *Snapshot) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *Snapshot) GetVolumeSize() int32 {
	if o == nil || o.VolumeSize == nil {
		var ret int32
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetVolumeSizeOk() (*int32, bool) {
	if o == nil || o.VolumeSize == nil {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *Snapshot) HasVolumeSize() bool {
	if o != nil && o.VolumeSize != nil {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int32 and assigns it to the VolumeSize field.
func (o *Snapshot) SetVolumeSize(v int32) {
	o.VolumeSize = &v
}

func (o Snapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountAlias != nil {
		toSerialize["AccountAlias"] = o.AccountAlias
	}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.PermissionsToCreateVolume != nil {
		toSerialize["PermissionsToCreateVolume"] = o.PermissionsToCreateVolume
	}
	if o.Progress != nil {
		toSerialize["Progress"] = o.Progress
	}
	if o.SnapshotId != nil {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	if o.VolumeSize != nil {
		toSerialize["VolumeSize"] = o.VolumeSize
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshot struct {
	value *Snapshot
	isSet bool
}

func (v NullableSnapshot) Get() *Snapshot {
	return v.value
}

func (v *NullableSnapshot) Set(val *Snapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshot(val *Snapshot) *NullableSnapshot {
	return &NullableSnapshot{value: val, isSet: true}
}

func (v NullableSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SnapshotExportTask Information about the snapshot export task.
type SnapshotExportTask struct {
	// If the snapshot export task fails, an error message appears.
	Comment *string `json:"Comment,omitempty"`
	OsuExport *OsuExport `json:"OsuExport,omitempty"`
	// The progress of the snapshot export task, as a percentage.
	Progress *int32 `json:"Progress,omitempty"`
	// The ID of the snapshot to be exported.
	SnapshotId *string `json:"SnapshotId,omitempty"`
	// The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the snapshot export task.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the snapshot export task.
	TaskId *string `json:"TaskId,omitempty"`
}

// NewSnapshotExportTask instantiates a new SnapshotExportTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotExportTask() *SnapshotExportTask {
	this := SnapshotExportTask{}
	return &this
}

// NewSnapshotExportTaskWithDefaults instantiates a new SnapshotExportTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotExportTaskWithDefaults() *SnapshotExportTask {
	this := SnapshotExportTask{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SnapshotExportTask) SetComment(v string) {
	o.Comment = &v
}

// GetOsuExport returns the OsuExport field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetOsuExport() OsuExport {
	if o == nil || o.OsuExport == nil {
		var ret OsuExport
		return ret
	}
	return *o.OsuExport
}

// GetOsuExportOk returns a tuple with the OsuExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetOsuExportOk() (*OsuExport, bool) {
	if o == nil || o.OsuExport == nil {
		return nil, false
	}
	return o.OsuExport, true
}

// HasOsuExport returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasOsuExport() bool {
	if o != nil && o.OsuExport != nil {
		return true
	}

	return false
}

// SetOsuExport gets a reference to the given OsuExport and assigns it to the OsuExport field.
func (o *SnapshotExportTask) SetOsuExport(v OsuExport) {
	o.OsuExport = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetProgress() int32 {
	if o == nil || o.Progress == nil {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetProgressOk() (*int32, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *SnapshotExportTask) SetProgress(v int32) {
	o.Progress = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetSnapshotId() string {
	if o == nil || o.SnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetSnapshotIdOk() (*string, bool) {
	if o == nil || o.SnapshotId == nil {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *SnapshotExportTask) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SnapshotExportTask) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *SnapshotExportTask) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *SnapshotExportTask) GetTaskId() string {
	if o == nil || o.TaskId == nil {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotExportTask) GetTaskIdOk() (*string, bool) {
	if o == nil || o.TaskId == nil {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *SnapshotExportTask) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *SnapshotExportTask) SetTaskId(v string) {
	o.TaskId = &v
}

func (o SnapshotExportTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["Comment"] = o.Comment
	}
	if o.OsuExport != nil {
		toSerialize["OsuExport"] = o.OsuExport
	}
	if o.Progress != nil {
		toSerialize["Progress"] = o.Progress
	}
	if o.SnapshotId != nil {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.TaskId != nil {
		toSerialize["TaskId"] = o.TaskId
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotExportTask struct {
	value *SnapshotExportTask
	isSet bool
}

func (v NullableSnapshotExportTask) Get() *SnapshotExportTask {
	return v.value
}

func (v *NullableSnapshotExportTask) Set(val *SnapshotExportTask) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotExportTask) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotExportTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotExportTask(val *SnapshotExportTask) *NullableSnapshotExportTask {
	return &NullableSnapshotExportTask{value: val, isSet: true}
}

func (v NullableSnapshotExportTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotExportTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SourceNet Information about the source Net.
type SourceNet struct {
	// The account ID of the owner of the source Net.
	AccountId *string `json:"AccountId,omitempty"`
	// The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// The ID of the source Net.
	NetId *string `json:"NetId,omitempty"`
}

// NewSourceNet instantiates a new SourceNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceNet() *SourceNet {
	this := SourceNet{}
	return &this
}

// NewSourceNetWithDefaults instantiates a new SourceNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceNetWithDefaults() *SourceNet {
	this := SourceNet{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SourceNet) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceNet) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SourceNet) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *SourceNet) SetAccountId(v string) {
	o.AccountId = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *SourceNet) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceNet) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *SourceNet) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *SourceNet) SetIpRange(v string) {
	o.IpRange = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *SourceNet) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceNet) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *SourceNet) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *SourceNet) SetNetId(v string) {
	o.NetId = &v
}

func (o SourceNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableSourceNet struct {
	value *SourceNet
	isSet bool
}

func (v NullableSourceNet) Get() *SourceNet {
	return v.value
}

func (v *NullableSourceNet) Set(val *SourceNet) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceNet) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceNet(val *SourceNet) *NullableSourceNet {
	return &NullableSourceNet{value: val, isSet: true}
}

func (v NullableSourceNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// SourceSecurityGroup Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br /> To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
type SourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId *string `json:"SecurityGroupAccountId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
}

// NewSourceSecurityGroup instantiates a new SourceSecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceSecurityGroup() *SourceSecurityGroup {
	this := SourceSecurityGroup{}
	return &this
}

// NewSourceSecurityGroupWithDefaults instantiates a new SourceSecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceSecurityGroupWithDefaults() *SourceSecurityGroup {
	this := SourceSecurityGroup{}
	return &this
}

// GetSecurityGroupAccountId returns the SecurityGroupAccountId field value if set, zero value otherwise.
func (o *SourceSecurityGroup) GetSecurityGroupAccountId() string {
	if o == nil || o.SecurityGroupAccountId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupAccountId
}

// GetSecurityGroupAccountIdOk returns a tuple with the SecurityGroupAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceSecurityGroup) GetSecurityGroupAccountIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupAccountId == nil {
		return nil, false
	}
	return o.SecurityGroupAccountId, true
}

// HasSecurityGroupAccountId returns a boolean if a field has been set.
func (o *SourceSecurityGroup) HasSecurityGroupAccountId() bool {
	if o != nil && o.SecurityGroupAccountId != nil {
		return true
	}

	return false
}

// SetSecurityGroupAccountId gets a reference to the given string and assigns it to the SecurityGroupAccountId field.
func (o *SourceSecurityGroup) SetSecurityGroupAccountId(v string) {
	o.SecurityGroupAccountId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *SourceSecurityGroup) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceSecurityGroup) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *SourceSecurityGroup) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *SourceSecurityGroup) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

func (o SourceSecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityGroupAccountId != nil {
		toSerialize["SecurityGroupAccountId"] = o.SecurityGroupAccountId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableSourceSecurityGroup struct {
	value *SourceSecurityGroup
	isSet bool
}

func (v NullableSourceSecurityGroup) Get() *SourceSecurityGroup {
	return v.value
}

func (v *NullableSourceSecurityGroup) Set(val *SourceSecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceSecurityGroup(val *SourceSecurityGroup) *NullableSourceSecurityGroup {
	return &NullableSourceSecurityGroup{value: val, isSet: true}
}

func (v NullableSourceSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// StartVmsRequest struct for StartVmsRequest
type StartVmsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// One or more IDs of VMs.
	VmIds []string `json:"VmIds"`
}

// NewStartVmsRequest instantiates a new StartVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartVmsRequest(vmIds []string, ) *StartVmsRequest {
	this := StartVmsRequest{}
	this.VmIds = vmIds
	return &this
}

// NewStartVmsRequestWithDefaults instantiates a new StartVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartVmsRequestWithDefaults() *StartVmsRequest {
	this := StartVmsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *StartVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *StartVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *StartVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetVmIds returns the VmIds field value
func (o *StartVmsRequest) GetVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *StartVmsRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *StartVmsRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o StartVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableStartVmsRequest struct {
	value *StartVmsRequest
	isSet bool
}

func (v NullableStartVmsRequest) Get() *StartVmsRequest {
	return v.value
}

func (v *NullableStartVmsRequest) Set(val *StartVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartVmsRequest(val *StartVmsRequest) *NullableStartVmsRequest {
	return &NullableStartVmsRequest{value: val, isSet: true}
}

func (v NullableStartVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// StartVmsResponse struct for StartVmsResponse
type StartVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more started VMs.
	Vms *[]VmState `json:"Vms,omitempty"`
}

// NewStartVmsResponse instantiates a new StartVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartVmsResponse() *StartVmsResponse {
	this := StartVmsResponse{}
	return &this
}

// NewStartVmsResponseWithDefaults instantiates a new StartVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartVmsResponseWithDefaults() *StartVmsResponse {
	this := StartVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *StartVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *StartVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *StartVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *StartVmsResponse) GetVms() []VmState {
	if o == nil || o.Vms == nil {
		var ret []VmState
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVmsResponse) GetVmsOk() (*[]VmState, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *StartVmsResponse) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []VmState and assigns it to the Vms field.
func (o *StartVmsResponse) SetVms(v []VmState) {
	o.Vms = &v
}

func (o StartVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vms != nil {
		toSerialize["Vms"] = o.Vms
	}
	return json.Marshal(toSerialize)
}

type NullableStartVmsResponse struct {
	value *StartVmsResponse
	isSet bool
}

func (v NullableStartVmsResponse) Get() *StartVmsResponse {
	return v.value
}

func (v *NullableStartVmsResponse) Set(val *StartVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStartVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStartVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartVmsResponse(val *StartVmsResponse) *NullableStartVmsResponse {
	return &NullableStartVmsResponse{value: val, isSet: true}
}

func (v NullableStartVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// StateComment Information about the change of state.
type StateComment struct {
	// The code of the change of state.
	StateCode *string `json:"StateCode,omitempty"`
	// A message explaining the change of state.
	StateMessage *string `json:"StateMessage,omitempty"`
}

// NewStateComment instantiates a new StateComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateComment() *StateComment {
	this := StateComment{}
	return &this
}

// NewStateCommentWithDefaults instantiates a new StateComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateCommentWithDefaults() *StateComment {
	this := StateComment{}
	return &this
}

// GetStateCode returns the StateCode field value if set, zero value otherwise.
func (o *StateComment) GetStateCode() string {
	if o == nil || o.StateCode == nil {
		var ret string
		return ret
	}
	return *o.StateCode
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateComment) GetStateCodeOk() (*string, bool) {
	if o == nil || o.StateCode == nil {
		return nil, false
	}
	return o.StateCode, true
}

// HasStateCode returns a boolean if a field has been set.
func (o *StateComment) HasStateCode() bool {
	if o != nil && o.StateCode != nil {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given string and assigns it to the StateCode field.
func (o *StateComment) SetStateCode(v string) {
	o.StateCode = &v
}

// GetStateMessage returns the StateMessage field value if set, zero value otherwise.
func (o *StateComment) GetStateMessage() string {
	if o == nil || o.StateMessage == nil {
		var ret string
		return ret
	}
	return *o.StateMessage
}

// GetStateMessageOk returns a tuple with the StateMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateComment) GetStateMessageOk() (*string, bool) {
	if o == nil || o.StateMessage == nil {
		return nil, false
	}
	return o.StateMessage, true
}

// HasStateMessage returns a boolean if a field has been set.
func (o *StateComment) HasStateMessage() bool {
	if o != nil && o.StateMessage != nil {
		return true
	}

	return false
}

// SetStateMessage gets a reference to the given string and assigns it to the StateMessage field.
func (o *StateComment) SetStateMessage(v string) {
	o.StateMessage = &v
}

func (o StateComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StateCode != nil {
		toSerialize["StateCode"] = o.StateCode
	}
	if o.StateMessage != nil {
		toSerialize["StateMessage"] = o.StateMessage
	}
	return json.Marshal(toSerialize)
}

type NullableStateComment struct {
	value *StateComment
	isSet bool
}

func (v NullableStateComment) Get() *StateComment {
	return v.value
}

func (v *NullableStateComment) Set(val *StateComment) {
	v.value = val
	v.isSet = true
}

func (v NullableStateComment) IsSet() bool {
	return v.isSet
}

func (v *NullableStateComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateComment(val *StateComment) *NullableStateComment {
	return &NullableStateComment{value: val, isSet: true}
}

func (v NullableStateComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// StopVmsRequest struct for StopVmsRequest
type StopVmsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// Forces the VM to stop.
	ForceStop *bool `json:"ForceStop,omitempty"`
	// One or more IDs of VMs.
	VmIds []string `json:"VmIds"`
}

// NewStopVmsRequest instantiates a new StopVmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStopVmsRequest(vmIds []string, ) *StopVmsRequest {
	this := StopVmsRequest{}
	this.VmIds = vmIds
	return &this
}

// NewStopVmsRequestWithDefaults instantiates a new StopVmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStopVmsRequestWithDefaults() *StopVmsRequest {
	this := StopVmsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *StopVmsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StopVmsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *StopVmsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *StopVmsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetForceStop returns the ForceStop field value if set, zero value otherwise.
func (o *StopVmsRequest) GetForceStop() bool {
	if o == nil || o.ForceStop == nil {
		var ret bool
		return ret
	}
	return *o.ForceStop
}

// GetForceStopOk returns a tuple with the ForceStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StopVmsRequest) GetForceStopOk() (*bool, bool) {
	if o == nil || o.ForceStop == nil {
		return nil, false
	}
	return o.ForceStop, true
}

// HasForceStop returns a boolean if a field has been set.
func (o *StopVmsRequest) HasForceStop() bool {
	if o != nil && o.ForceStop != nil {
		return true
	}

	return false
}

// SetForceStop gets a reference to the given bool and assigns it to the ForceStop field.
func (o *StopVmsRequest) SetForceStop(v bool) {
	o.ForceStop = &v
}

// GetVmIds returns the VmIds field value
func (o *StopVmsRequest) GetVmIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *StopVmsRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *StopVmsRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o StopVmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.ForceStop != nil {
		toSerialize["ForceStop"] = o.ForceStop
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableStopVmsRequest struct {
	value *StopVmsRequest
	isSet bool
}

func (v NullableStopVmsRequest) Get() *StopVmsRequest {
	return v.value
}

func (v *NullableStopVmsRequest) Set(val *StopVmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStopVmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStopVmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStopVmsRequest(val *StopVmsRequest) *NullableStopVmsRequest {
	return &NullableStopVmsRequest{value: val, isSet: true}
}

func (v NullableStopVmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStopVmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// StopVmsResponse struct for StopVmsResponse
type StopVmsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	// Information about one or more stopped VMs.
	Vms *[]VmState `json:"Vms,omitempty"`
}

// NewStopVmsResponse instantiates a new StopVmsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStopVmsResponse() *StopVmsResponse {
	this := StopVmsResponse{}
	return &this
}

// NewStopVmsResponseWithDefaults instantiates a new StopVmsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStopVmsResponseWithDefaults() *StopVmsResponse {
	this := StopVmsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *StopVmsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StopVmsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *StopVmsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *StopVmsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *StopVmsResponse) GetVms() []VmState {
	if o == nil || o.Vms == nil {
		var ret []VmState
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StopVmsResponse) GetVmsOk() (*[]VmState, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *StopVmsResponse) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []VmState and assigns it to the Vms field.
func (o *StopVmsResponse) SetVms(v []VmState) {
	o.Vms = &v
}

func (o StopVmsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vms != nil {
		toSerialize["Vms"] = o.Vms
	}
	return json.Marshal(toSerialize)
}

type NullableStopVmsResponse struct {
	value *StopVmsResponse
	isSet bool
}

func (v NullableStopVmsResponse) Get() *StopVmsResponse {
	return v.value
}

func (v *NullableStopVmsResponse) Set(val *StopVmsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStopVmsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStopVmsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStopVmsResponse(val *StopVmsResponse) *NullableStopVmsResponse {
	return &NullableStopVmsResponse{value: val, isSet: true}
}

func (v NullableStopVmsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStopVmsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Subnet Information about the Subnet.
type Subnet struct {
	// The number of available IP addresses in the Subnets.
	AvailableIpsCount *int32 `json:"AvailableIpsCount,omitempty"`
	// The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16).
	IpRange *string `json:"IpRange,omitempty"`
	// If `true`, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet.
	MapPublicIpOnLaunch *bool `json:"MapPublicIpOnLaunch,omitempty"`
	// The ID of the Net in which the Subnet is.
	NetId *string `json:"NetId,omitempty"`
	// The state of the Subnet (`pending` \\| `available`).
	State *string `json:"State,omitempty"`
	// The ID of the Subnet.
	SubnetId *string `json:"SubnetId,omitempty"`
	// The name of the Subregion in which the Subnet is located.
	SubregionName *string `json:"SubregionName,omitempty"`
	// One or more tags associated with the Subnet.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// NewSubnet instantiates a new Subnet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubnet() *Subnet {
	this := Subnet{}
	return &this
}

// NewSubnetWithDefaults instantiates a new Subnet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubnetWithDefaults() *Subnet {
	this := Subnet{}
	return &this
}

// GetAvailableIpsCount returns the AvailableIpsCount field value if set, zero value otherwise.
func (o *Subnet) GetAvailableIpsCount() int32 {
	if o == nil || o.AvailableIpsCount == nil {
		var ret int32
		return ret
	}
	return *o.AvailableIpsCount
}

// GetAvailableIpsCountOk returns a tuple with the AvailableIpsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetAvailableIpsCountOk() (*int32, bool) {
	if o == nil || o.AvailableIpsCount == nil {
		return nil, false
	}
	return o.AvailableIpsCount, true
}

// HasAvailableIpsCount returns a boolean if a field has been set.
func (o *Subnet) HasAvailableIpsCount() bool {
	if o != nil && o.AvailableIpsCount != nil {
		return true
	}

	return false
}

// SetAvailableIpsCount gets a reference to the given int32 and assigns it to the AvailableIpsCount field.
func (o *Subnet) SetAvailableIpsCount(v int32) {
	o.AvailableIpsCount = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise.
func (o *Subnet) GetIpRange() string {
	if o == nil || o.IpRange == nil {
		var ret string
		return ret
	}
	return *o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetIpRangeOk() (*string, bool) {
	if o == nil || o.IpRange == nil {
		return nil, false
	}
	return o.IpRange, true
}

// HasIpRange returns a boolean if a field has been set.
func (o *Subnet) HasIpRange() bool {
	if o != nil && o.IpRange != nil {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given string and assigns it to the IpRange field.
func (o *Subnet) SetIpRange(v string) {
	o.IpRange = &v
}

// GetMapPublicIpOnLaunch returns the MapPublicIpOnLaunch field value if set, zero value otherwise.
func (o *Subnet) GetMapPublicIpOnLaunch() bool {
	if o == nil || o.MapPublicIpOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.MapPublicIpOnLaunch
}

// GetMapPublicIpOnLaunchOk returns a tuple with the MapPublicIpOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetMapPublicIpOnLaunchOk() (*bool, bool) {
	if o == nil || o.MapPublicIpOnLaunch == nil {
		return nil, false
	}
	return o.MapPublicIpOnLaunch, true
}

// HasMapPublicIpOnLaunch returns a boolean if a field has been set.
func (o *Subnet) HasMapPublicIpOnLaunch() bool {
	if o != nil && o.MapPublicIpOnLaunch != nil {
		return true
	}

	return false
}

// SetMapPublicIpOnLaunch gets a reference to the given bool and assigns it to the MapPublicIpOnLaunch field.
func (o *Subnet) SetMapPublicIpOnLaunch(v bool) {
	o.MapPublicIpOnLaunch = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *Subnet) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *Subnet) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *Subnet) SetNetId(v string) {
	o.NetId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Subnet) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Subnet) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Subnet) SetState(v string) {
	o.State = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *Subnet) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *Subnet) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *Subnet) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *Subnet) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *Subnet) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *Subnet) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Subnet) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subnet) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Subnet) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Subnet) SetTags(v []ResourceTag) {
	o.Tags = &v
}

func (o Subnet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailableIpsCount != nil {
		toSerialize["AvailableIpsCount"] = o.AvailableIpsCount
	}
	if o.IpRange != nil {
		toSerialize["IpRange"] = o.IpRange
	}
	if o.MapPublicIpOnLaunch != nil {
		toSerialize["MapPublicIpOnLaunch"] = o.MapPublicIpOnLaunch
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableSubnet struct {
	value *Subnet
	isSet bool
}

func (v NullableSubnet) Get() *Subnet {
	return v.value
}

func (v *NullableSubnet) Set(val *Subnet) {
	v.value = val
	v.isSet = true
}

func (v NullableSubnet) IsSet() bool {
	return v.isSet
}

func (v *NullableSubnet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubnet(val *Subnet) *NullableSubnet {
	return &NullableSubnet{value: val, isSet: true}
}

func (v NullableSubnet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubnet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Subregion Information about the Subregion.
type Subregion struct {
	// The name of the Region containing the Subregion.
	RegionName *string `json:"RegionName,omitempty"`
	// The state of the Subregion (`available` \\| `information` \\| `impaired` \\| `unavailable`).
	State *string `json:"State,omitempty"`
	// The name of the Subregion.
	SubregionName *string `json:"SubregionName,omitempty"`
}

// NewSubregion instantiates a new Subregion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubregion() *Subregion {
	this := Subregion{}
	return &this
}

// NewSubregionWithDefaults instantiates a new Subregion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubregionWithDefaults() *Subregion {
	this := Subregion{}
	return &this
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *Subregion) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subregion) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *Subregion) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *Subregion) SetRegionName(v string) {
	o.RegionName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Subregion) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subregion) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Subregion) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Subregion) SetState(v string) {
	o.State = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *Subregion) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subregion) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *Subregion) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *Subregion) SetSubregionName(v string) {
	o.SubregionName = &v
}

func (o Subregion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RegionName != nil {
		toSerialize["RegionName"] = o.RegionName
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	return json.Marshal(toSerialize)
}

type NullableSubregion struct {
	value *Subregion
	isSet bool
}

func (v NullableSubregion) Get() *Subregion {
	return v.value
}

func (v *NullableSubregion) Set(val *Subregion) {
	v.value = val
	v.isSet = true
}

func (v NullableSubregion) IsSet() bool {
	return v.isSet
}

func (v *NullableSubregion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubregion(val *Subregion) *NullableSubregion {
	return &NullableSubregion{value: val, isSet: true}
}

func (v NullableSubregion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubregion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Tag Information about the tag.
type Tag struct {
	// The key of the tag, with a minimum of 1 character.
	Key *string `json:"Key,omitempty"`
	// The ID of the resource.
	ResourceId *string `json:"ResourceId,omitempty"`
	// The type of the resource.
	ResourceType *string `json:"ResourceType,omitempty"`
	// The value of the tag, between 0 and 255 characters.
	Value *string `json:"Value,omitempty"`
}

// NewTag instantiates a new Tag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTag() *Tag {
	this := Tag{}
	return &this
}

// NewTagWithDefaults instantiates a new Tag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagWithDefaults() *Tag {
	this := Tag{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *Tag) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tag) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *Tag) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *Tag) SetKey(v string) {
	o.Key = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *Tag) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tag) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *Tag) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *Tag) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *Tag) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tag) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *Tag) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *Tag) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Tag) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tag) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Tag) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *Tag) SetValue(v string) {
	o.Value = &v
}

func (o Tag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["Key"] = o.Key
	}
	if o.ResourceId != nil {
		toSerialize["ResourceId"] = o.ResourceId
	}
	if o.ResourceType != nil {
		toSerialize["ResourceType"] = o.ResourceType
	}
	if o.Value != nil {
		toSerialize["Value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableTag struct {
	value *Tag
	isSet bool
}

func (v NullableTag) Get() *Tag {
	return v.value
}

func (v *NullableTag) Set(val *Tag) {
	v.value = val
	v.isSet = true
}

func (v NullableTag) IsSet() bool {
	return v.isSet
}

func (v *NullableTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTag(val *Tag) *NullableTag {
	return &NullableTag{value: val, isSet: true}
}

func (v NullableTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkFlexibleGpuRequest struct for UnlinkFlexibleGpuRequest
type UnlinkFlexibleGpuRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the fGPU you want to detach from your VM.
	FlexibleGpuId string `json:"FlexibleGpuId"`
}

// NewUnlinkFlexibleGpuRequest instantiates a new UnlinkFlexibleGpuRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkFlexibleGpuRequest(flexibleGpuId string, ) *UnlinkFlexibleGpuRequest {
	this := UnlinkFlexibleGpuRequest{}
	this.FlexibleGpuId = flexibleGpuId
	return &this
}

// NewUnlinkFlexibleGpuRequestWithDefaults instantiates a new UnlinkFlexibleGpuRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkFlexibleGpuRequestWithDefaults() *UnlinkFlexibleGpuRequest {
	this := UnlinkFlexibleGpuRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkFlexibleGpuRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkFlexibleGpuRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkFlexibleGpuRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkFlexibleGpuRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value
func (o *UnlinkFlexibleGpuRequest) GetFlexibleGpuId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value
// and a boolean to check if the value has been set.
func (o *UnlinkFlexibleGpuRequest) GetFlexibleGpuIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlexibleGpuId, true
}

// SetFlexibleGpuId sets field value
func (o *UnlinkFlexibleGpuRequest) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = v
}

func (o UnlinkFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["FlexibleGpuId"] = o.FlexibleGpuId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkFlexibleGpuRequest struct {
	value *UnlinkFlexibleGpuRequest
	isSet bool
}

func (v NullableUnlinkFlexibleGpuRequest) Get() *UnlinkFlexibleGpuRequest {
	return v.value
}

func (v *NullableUnlinkFlexibleGpuRequest) Set(val *UnlinkFlexibleGpuRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkFlexibleGpuRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkFlexibleGpuRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkFlexibleGpuRequest(val *UnlinkFlexibleGpuRequest) *NullableUnlinkFlexibleGpuRequest {
	return &NullableUnlinkFlexibleGpuRequest{value: val, isSet: true}
}

func (v NullableUnlinkFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkFlexibleGpuRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkFlexibleGpuResponse struct for UnlinkFlexibleGpuResponse
type UnlinkFlexibleGpuResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkFlexibleGpuResponse instantiates a new UnlinkFlexibleGpuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkFlexibleGpuResponse() *UnlinkFlexibleGpuResponse {
	this := UnlinkFlexibleGpuResponse{}
	return &this
}

// NewUnlinkFlexibleGpuResponseWithDefaults instantiates a new UnlinkFlexibleGpuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkFlexibleGpuResponseWithDefaults() *UnlinkFlexibleGpuResponse {
	this := UnlinkFlexibleGpuResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkFlexibleGpuResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkFlexibleGpuResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkFlexibleGpuResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkFlexibleGpuResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkFlexibleGpuResponse struct {
	value *UnlinkFlexibleGpuResponse
	isSet bool
}

func (v NullableUnlinkFlexibleGpuResponse) Get() *UnlinkFlexibleGpuResponse {
	return v.value
}

func (v *NullableUnlinkFlexibleGpuResponse) Set(val *UnlinkFlexibleGpuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkFlexibleGpuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkFlexibleGpuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkFlexibleGpuResponse(val *UnlinkFlexibleGpuResponse) *NullableUnlinkFlexibleGpuResponse {
	return &NullableUnlinkFlexibleGpuResponse{value: val, isSet: true}
}

func (v NullableUnlinkFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkFlexibleGpuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkInternetServiceRequest struct for UnlinkInternetServiceRequest
type UnlinkInternetServiceRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Internet service you want to detach.
	InternetServiceId string `json:"InternetServiceId"`
	// The ID of the Net from which you want to detach the Internet service.
	NetId string `json:"NetId"`
}

// NewUnlinkInternetServiceRequest instantiates a new UnlinkInternetServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkInternetServiceRequest(internetServiceId string, netId string, ) *UnlinkInternetServiceRequest {
	this := UnlinkInternetServiceRequest{}
	this.InternetServiceId = internetServiceId
	this.NetId = netId
	return &this
}

// NewUnlinkInternetServiceRequestWithDefaults instantiates a new UnlinkInternetServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkInternetServiceRequestWithDefaults() *UnlinkInternetServiceRequest {
	this := UnlinkInternetServiceRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkInternetServiceRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkInternetServiceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkInternetServiceRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkInternetServiceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetInternetServiceId returns the InternetServiceId field value
func (o *UnlinkInternetServiceRequest) GetInternetServiceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InternetServiceId
}

// GetInternetServiceIdOk returns a tuple with the InternetServiceId field value
// and a boolean to check if the value has been set.
func (o *UnlinkInternetServiceRequest) GetInternetServiceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InternetServiceId, true
}

// SetInternetServiceId sets field value
func (o *UnlinkInternetServiceRequest) SetInternetServiceId(v string) {
	o.InternetServiceId = v
}

// GetNetId returns the NetId field value
func (o *UnlinkInternetServiceRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *UnlinkInternetServiceRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *UnlinkInternetServiceRequest) SetNetId(v string) {
	o.NetId = v
}

func (o UnlinkInternetServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["InternetServiceId"] = o.InternetServiceId
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkInternetServiceRequest struct {
	value *UnlinkInternetServiceRequest
	isSet bool
}

func (v NullableUnlinkInternetServiceRequest) Get() *UnlinkInternetServiceRequest {
	return v.value
}

func (v *NullableUnlinkInternetServiceRequest) Set(val *UnlinkInternetServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkInternetServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkInternetServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkInternetServiceRequest(val *UnlinkInternetServiceRequest) *NullableUnlinkInternetServiceRequest {
	return &NullableUnlinkInternetServiceRequest{value: val, isSet: true}
}

func (v NullableUnlinkInternetServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkInternetServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkInternetServiceResponse struct for UnlinkInternetServiceResponse
type UnlinkInternetServiceResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkInternetServiceResponse instantiates a new UnlinkInternetServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkInternetServiceResponse() *UnlinkInternetServiceResponse {
	this := UnlinkInternetServiceResponse{}
	return &this
}

// NewUnlinkInternetServiceResponseWithDefaults instantiates a new UnlinkInternetServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkInternetServiceResponseWithDefaults() *UnlinkInternetServiceResponse {
	this := UnlinkInternetServiceResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkInternetServiceResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkInternetServiceResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkInternetServiceResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkInternetServiceResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkInternetServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkInternetServiceResponse struct {
	value *UnlinkInternetServiceResponse
	isSet bool
}

func (v NullableUnlinkInternetServiceResponse) Get() *UnlinkInternetServiceResponse {
	return v.value
}

func (v *NullableUnlinkInternetServiceResponse) Set(val *UnlinkInternetServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkInternetServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkInternetServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkInternetServiceResponse(val *UnlinkInternetServiceResponse) *NullableUnlinkInternetServiceResponse {
	return &NullableUnlinkInternetServiceResponse{value: val, isSet: true}
}

func (v NullableUnlinkInternetServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkInternetServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkNicRequest struct for UnlinkNicRequest
type UnlinkNicRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the attachment operation.
	LinkNicId string `json:"LinkNicId"`
}

// NewUnlinkNicRequest instantiates a new UnlinkNicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkNicRequest(linkNicId string, ) *UnlinkNicRequest {
	this := UnlinkNicRequest{}
	this.LinkNicId = linkNicId
	return &this
}

// NewUnlinkNicRequestWithDefaults instantiates a new UnlinkNicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkNicRequestWithDefaults() *UnlinkNicRequest {
	this := UnlinkNicRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkNicRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLinkNicId returns the LinkNicId field value
func (o *UnlinkNicRequest) GetLinkNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LinkNicId
}

// GetLinkNicIdOk returns a tuple with the LinkNicId field value
// and a boolean to check if the value has been set.
func (o *UnlinkNicRequest) GetLinkNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkNicId, true
}

// SetLinkNicId sets field value
func (o *UnlinkNicRequest) SetLinkNicId(v string) {
	o.LinkNicId = v
}

func (o UnlinkNicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LinkNicId"] = o.LinkNicId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkNicRequest struct {
	value *UnlinkNicRequest
	isSet bool
}

func (v NullableUnlinkNicRequest) Get() *UnlinkNicRequest {
	return v.value
}

func (v *NullableUnlinkNicRequest) Set(val *UnlinkNicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkNicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkNicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkNicRequest(val *UnlinkNicRequest) *NullableUnlinkNicRequest {
	return &NullableUnlinkNicRequest{value: val, isSet: true}
}

func (v NullableUnlinkNicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkNicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkNicResponse struct for UnlinkNicResponse
type UnlinkNicResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkNicResponse instantiates a new UnlinkNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkNicResponse() *UnlinkNicResponse {
	this := UnlinkNicResponse{}
	return &this
}

// NewUnlinkNicResponseWithDefaults instantiates a new UnlinkNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkNicResponseWithDefaults() *UnlinkNicResponse {
	this := UnlinkNicResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkNicResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkNicResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkNicResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkNicResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkNicResponse struct {
	value *UnlinkNicResponse
	isSet bool
}

func (v NullableUnlinkNicResponse) Get() *UnlinkNicResponse {
	return v.value
}

func (v *NullableUnlinkNicResponse) Set(val *UnlinkNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkNicResponse(val *UnlinkNicResponse) *NullableUnlinkNicResponse {
	return &NullableUnlinkNicResponse{value: val, isSet: true}
}

func (v NullableUnlinkNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkPrivateIpsRequest struct for UnlinkPrivateIpsRequest
type UnlinkPrivateIpsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the NIC.
	NicId string `json:"NicId"`
	// One or more secondary private IP addresses you want to unassign from the NIC.
	PrivateIps []string `json:"PrivateIps"`
}

// NewUnlinkPrivateIpsRequest instantiates a new UnlinkPrivateIpsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkPrivateIpsRequest(nicId string, privateIps []string, ) *UnlinkPrivateIpsRequest {
	this := UnlinkPrivateIpsRequest{}
	this.NicId = nicId
	this.PrivateIps = privateIps
	return &this
}

// NewUnlinkPrivateIpsRequestWithDefaults instantiates a new UnlinkPrivateIpsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkPrivateIpsRequestWithDefaults() *UnlinkPrivateIpsRequest {
	this := UnlinkPrivateIpsRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkPrivateIpsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPrivateIpsRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkPrivateIpsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkPrivateIpsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNicId returns the NicId field value
func (o *UnlinkPrivateIpsRequest) GetNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value
// and a boolean to check if the value has been set.
func (o *UnlinkPrivateIpsRequest) GetNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NicId, true
}

// SetNicId sets field value
func (o *UnlinkPrivateIpsRequest) SetNicId(v string) {
	o.NicId = v
}

// GetPrivateIps returns the PrivateIps field value
func (o *UnlinkPrivateIpsRequest) GetPrivateIps() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.PrivateIps
}

// GetPrivateIpsOk returns a tuple with the PrivateIps field value
// and a boolean to check if the value has been set.
func (o *UnlinkPrivateIpsRequest) GetPrivateIpsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrivateIps, true
}

// SetPrivateIps sets field value
func (o *UnlinkPrivateIpsRequest) SetPrivateIps(v []string) {
	o.PrivateIps = v
}

func (o UnlinkPrivateIpsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NicId"] = o.NicId
	}
	if true {
		toSerialize["PrivateIps"] = o.PrivateIps
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkPrivateIpsRequest struct {
	value *UnlinkPrivateIpsRequest
	isSet bool
}

func (v NullableUnlinkPrivateIpsRequest) Get() *UnlinkPrivateIpsRequest {
	return v.value
}

func (v *NullableUnlinkPrivateIpsRequest) Set(val *UnlinkPrivateIpsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkPrivateIpsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkPrivateIpsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkPrivateIpsRequest(val *UnlinkPrivateIpsRequest) *NullableUnlinkPrivateIpsRequest {
	return &NullableUnlinkPrivateIpsRequest{value: val, isSet: true}
}

func (v NullableUnlinkPrivateIpsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkPrivateIpsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkPrivateIpsResponse struct for UnlinkPrivateIpsResponse
type UnlinkPrivateIpsResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkPrivateIpsResponse instantiates a new UnlinkPrivateIpsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkPrivateIpsResponse() *UnlinkPrivateIpsResponse {
	this := UnlinkPrivateIpsResponse{}
	return &this
}

// NewUnlinkPrivateIpsResponseWithDefaults instantiates a new UnlinkPrivateIpsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkPrivateIpsResponseWithDefaults() *UnlinkPrivateIpsResponse {
	this := UnlinkPrivateIpsResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkPrivateIpsResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPrivateIpsResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkPrivateIpsResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkPrivateIpsResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkPrivateIpsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkPrivateIpsResponse struct {
	value *UnlinkPrivateIpsResponse
	isSet bool
}

func (v NullableUnlinkPrivateIpsResponse) Get() *UnlinkPrivateIpsResponse {
	return v.value
}

func (v *NullableUnlinkPrivateIpsResponse) Set(val *UnlinkPrivateIpsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkPrivateIpsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkPrivateIpsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkPrivateIpsResponse(val *UnlinkPrivateIpsResponse) *NullableUnlinkPrivateIpsResponse {
	return &NullableUnlinkPrivateIpsResponse{value: val, isSet: true}
}

func (v NullableUnlinkPrivateIpsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkPrivateIpsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkPublicIpRequest struct for UnlinkPublicIpRequest
type UnlinkPublicIpRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// (Required in a Net) The ID representing the association of the EIP with the VM or the NIC.
	LinkPublicIpId *string `json:"LinkPublicIpId,omitempty"`
	// The External IP address. In the public Cloud, this parameter is required.
	PublicIp *string `json:"PublicIp,omitempty"`
}

// NewUnlinkPublicIpRequest instantiates a new UnlinkPublicIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkPublicIpRequest() *UnlinkPublicIpRequest {
	this := UnlinkPublicIpRequest{}
	return &this
}

// NewUnlinkPublicIpRequestWithDefaults instantiates a new UnlinkPublicIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkPublicIpRequestWithDefaults() *UnlinkPublicIpRequest {
	this := UnlinkPublicIpRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkPublicIpRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPublicIpRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkPublicIpRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkPublicIpRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLinkPublicIpId returns the LinkPublicIpId field value if set, zero value otherwise.
func (o *UnlinkPublicIpRequest) GetLinkPublicIpId() string {
	if o == nil || o.LinkPublicIpId == nil {
		var ret string
		return ret
	}
	return *o.LinkPublicIpId
}

// GetLinkPublicIpIdOk returns a tuple with the LinkPublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPublicIpRequest) GetLinkPublicIpIdOk() (*string, bool) {
	if o == nil || o.LinkPublicIpId == nil {
		return nil, false
	}
	return o.LinkPublicIpId, true
}

// HasLinkPublicIpId returns a boolean if a field has been set.
func (o *UnlinkPublicIpRequest) HasLinkPublicIpId() bool {
	if o != nil && o.LinkPublicIpId != nil {
		return true
	}

	return false
}

// SetLinkPublicIpId gets a reference to the given string and assigns it to the LinkPublicIpId field.
func (o *UnlinkPublicIpRequest) SetLinkPublicIpId(v string) {
	o.LinkPublicIpId = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *UnlinkPublicIpRequest) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPublicIpRequest) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *UnlinkPublicIpRequest) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *UnlinkPublicIpRequest) SetPublicIp(v string) {
	o.PublicIp = &v
}

func (o UnlinkPublicIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.LinkPublicIpId != nil {
		toSerialize["LinkPublicIpId"] = o.LinkPublicIpId
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkPublicIpRequest struct {
	value *UnlinkPublicIpRequest
	isSet bool
}

func (v NullableUnlinkPublicIpRequest) Get() *UnlinkPublicIpRequest {
	return v.value
}

func (v *NullableUnlinkPublicIpRequest) Set(val *UnlinkPublicIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkPublicIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkPublicIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkPublicIpRequest(val *UnlinkPublicIpRequest) *NullableUnlinkPublicIpRequest {
	return &NullableUnlinkPublicIpRequest{value: val, isSet: true}
}

func (v NullableUnlinkPublicIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkPublicIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkPublicIpResponse struct for UnlinkPublicIpResponse
type UnlinkPublicIpResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkPublicIpResponse instantiates a new UnlinkPublicIpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkPublicIpResponse() *UnlinkPublicIpResponse {
	this := UnlinkPublicIpResponse{}
	return &this
}

// NewUnlinkPublicIpResponseWithDefaults instantiates a new UnlinkPublicIpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkPublicIpResponseWithDefaults() *UnlinkPublicIpResponse {
	this := UnlinkPublicIpResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkPublicIpResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkPublicIpResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkPublicIpResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkPublicIpResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkPublicIpResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkPublicIpResponse struct {
	value *UnlinkPublicIpResponse
	isSet bool
}

func (v NullableUnlinkPublicIpResponse) Get() *UnlinkPublicIpResponse {
	return v.value
}

func (v *NullableUnlinkPublicIpResponse) Set(val *UnlinkPublicIpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkPublicIpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkPublicIpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkPublicIpResponse(val *UnlinkPublicIpResponse) *NullableUnlinkPublicIpResponse {
	return &NullableUnlinkPublicIpResponse{value: val, isSet: true}
}

func (v NullableUnlinkPublicIpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkPublicIpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkRouteTableRequest struct for UnlinkRouteTableRequest
type UnlinkRouteTableRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the association between the route table and the Subnet.
	LinkRouteTableId string `json:"LinkRouteTableId"`
}

// NewUnlinkRouteTableRequest instantiates a new UnlinkRouteTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkRouteTableRequest(linkRouteTableId string, ) *UnlinkRouteTableRequest {
	this := UnlinkRouteTableRequest{}
	this.LinkRouteTableId = linkRouteTableId
	return &this
}

// NewUnlinkRouteTableRequestWithDefaults instantiates a new UnlinkRouteTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkRouteTableRequestWithDefaults() *UnlinkRouteTableRequest {
	this := UnlinkRouteTableRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkRouteTableRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkRouteTableRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkRouteTableRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkRouteTableRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLinkRouteTableId returns the LinkRouteTableId field value
func (o *UnlinkRouteTableRequest) GetLinkRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LinkRouteTableId
}

// GetLinkRouteTableIdOk returns a tuple with the LinkRouteTableId field value
// and a boolean to check if the value has been set.
func (o *UnlinkRouteTableRequest) GetLinkRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkRouteTableId, true
}

// SetLinkRouteTableId sets field value
func (o *UnlinkRouteTableRequest) SetLinkRouteTableId(v string) {
	o.LinkRouteTableId = v
}

func (o UnlinkRouteTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["LinkRouteTableId"] = o.LinkRouteTableId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkRouteTableRequest struct {
	value *UnlinkRouteTableRequest
	isSet bool
}

func (v NullableUnlinkRouteTableRequest) Get() *UnlinkRouteTableRequest {
	return v.value
}

func (v *NullableUnlinkRouteTableRequest) Set(val *UnlinkRouteTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkRouteTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkRouteTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkRouteTableRequest(val *UnlinkRouteTableRequest) *NullableUnlinkRouteTableRequest {
	return &NullableUnlinkRouteTableRequest{value: val, isSet: true}
}

func (v NullableUnlinkRouteTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkRouteTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkRouteTableResponse struct for UnlinkRouteTableResponse
type UnlinkRouteTableResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkRouteTableResponse instantiates a new UnlinkRouteTableResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkRouteTableResponse() *UnlinkRouteTableResponse {
	this := UnlinkRouteTableResponse{}
	return &this
}

// NewUnlinkRouteTableResponseWithDefaults instantiates a new UnlinkRouteTableResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkRouteTableResponseWithDefaults() *UnlinkRouteTableResponse {
	this := UnlinkRouteTableResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkRouteTableResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkRouteTableResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkRouteTableResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkRouteTableResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkRouteTableResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkRouteTableResponse struct {
	value *UnlinkRouteTableResponse
	isSet bool
}

func (v NullableUnlinkRouteTableResponse) Get() *UnlinkRouteTableResponse {
	return v.value
}

func (v *NullableUnlinkRouteTableResponse) Set(val *UnlinkRouteTableResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkRouteTableResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkRouteTableResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkRouteTableResponse(val *UnlinkRouteTableResponse) *NullableUnlinkRouteTableResponse {
	return &NullableUnlinkRouteTableResponse{value: val, isSet: true}
}

func (v NullableUnlinkRouteTableResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkRouteTableResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkVirtualGatewayRequest struct for UnlinkVirtualGatewayRequest
type UnlinkVirtualGatewayRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net from which you want to detach the virtual gateway.
	NetId string `json:"NetId"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// NewUnlinkVirtualGatewayRequest instantiates a new UnlinkVirtualGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkVirtualGatewayRequest(netId string, virtualGatewayId string, ) *UnlinkVirtualGatewayRequest {
	this := UnlinkVirtualGatewayRequest{}
	this.NetId = netId
	this.VirtualGatewayId = virtualGatewayId
	return &this
}

// NewUnlinkVirtualGatewayRequestWithDefaults instantiates a new UnlinkVirtualGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkVirtualGatewayRequestWithDefaults() *UnlinkVirtualGatewayRequest {
	this := UnlinkVirtualGatewayRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkVirtualGatewayRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkVirtualGatewayRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkVirtualGatewayRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkVirtualGatewayRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *UnlinkVirtualGatewayRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *UnlinkVirtualGatewayRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *UnlinkVirtualGatewayRequest) SetNetId(v string) {
	o.NetId = v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *UnlinkVirtualGatewayRequest) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *UnlinkVirtualGatewayRequest) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *UnlinkVirtualGatewayRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

func (o UnlinkVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkVirtualGatewayRequest struct {
	value *UnlinkVirtualGatewayRequest
	isSet bool
}

func (v NullableUnlinkVirtualGatewayRequest) Get() *UnlinkVirtualGatewayRequest {
	return v.value
}

func (v *NullableUnlinkVirtualGatewayRequest) Set(val *UnlinkVirtualGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkVirtualGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkVirtualGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkVirtualGatewayRequest(val *UnlinkVirtualGatewayRequest) *NullableUnlinkVirtualGatewayRequest {
	return &NullableUnlinkVirtualGatewayRequest{value: val, isSet: true}
}

func (v NullableUnlinkVirtualGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkVirtualGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkVirtualGatewayResponse struct for UnlinkVirtualGatewayResponse
type UnlinkVirtualGatewayResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkVirtualGatewayResponse instantiates a new UnlinkVirtualGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkVirtualGatewayResponse() *UnlinkVirtualGatewayResponse {
	this := UnlinkVirtualGatewayResponse{}
	return &this
}

// NewUnlinkVirtualGatewayResponseWithDefaults instantiates a new UnlinkVirtualGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkVirtualGatewayResponseWithDefaults() *UnlinkVirtualGatewayResponse {
	this := UnlinkVirtualGatewayResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkVirtualGatewayResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkVirtualGatewayResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkVirtualGatewayResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkVirtualGatewayResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkVirtualGatewayResponse struct {
	value *UnlinkVirtualGatewayResponse
	isSet bool
}

func (v NullableUnlinkVirtualGatewayResponse) Get() *UnlinkVirtualGatewayResponse {
	return v.value
}

func (v *NullableUnlinkVirtualGatewayResponse) Set(val *UnlinkVirtualGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkVirtualGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkVirtualGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkVirtualGatewayResponse(val *UnlinkVirtualGatewayResponse) *NullableUnlinkVirtualGatewayResponse {
	return &NullableUnlinkVirtualGatewayResponse{value: val, isSet: true}
}

func (v NullableUnlinkVirtualGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkVirtualGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkVolumeRequest struct for UnlinkVolumeRequest
type UnlinkVolumeRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// Forces the detachment of the volume in case of previous failure. Important: This action may damage your data or file systems.
	ForceUnlink *bool `json:"ForceUnlink,omitempty"`
	// The ID of the volume you want to detach.
	VolumeId string `json:"VolumeId"`
}

// NewUnlinkVolumeRequest instantiates a new UnlinkVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkVolumeRequest(volumeId string, ) *UnlinkVolumeRequest {
	this := UnlinkVolumeRequest{}
	this.VolumeId = volumeId
	return &this
}

// NewUnlinkVolumeRequestWithDefaults instantiates a new UnlinkVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkVolumeRequestWithDefaults() *UnlinkVolumeRequest {
	this := UnlinkVolumeRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UnlinkVolumeRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkVolumeRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UnlinkVolumeRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UnlinkVolumeRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetForceUnlink returns the ForceUnlink field value if set, zero value otherwise.
func (o *UnlinkVolumeRequest) GetForceUnlink() bool {
	if o == nil || o.ForceUnlink == nil {
		var ret bool
		return ret
	}
	return *o.ForceUnlink
}

// GetForceUnlinkOk returns a tuple with the ForceUnlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkVolumeRequest) GetForceUnlinkOk() (*bool, bool) {
	if o == nil || o.ForceUnlink == nil {
		return nil, false
	}
	return o.ForceUnlink, true
}

// HasForceUnlink returns a boolean if a field has been set.
func (o *UnlinkVolumeRequest) HasForceUnlink() bool {
	if o != nil && o.ForceUnlink != nil {
		return true
	}

	return false
}

// SetForceUnlink gets a reference to the given bool and assigns it to the ForceUnlink field.
func (o *UnlinkVolumeRequest) SetForceUnlink(v bool) {
	o.ForceUnlink = &v
}

// GetVolumeId returns the VolumeId field value
func (o *UnlinkVolumeRequest) GetVolumeId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *UnlinkVolumeRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *UnlinkVolumeRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o UnlinkVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.ForceUnlink != nil {
		toSerialize["ForceUnlink"] = o.ForceUnlink
	}
	if true {
		toSerialize["VolumeId"] = o.VolumeId
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkVolumeRequest struct {
	value *UnlinkVolumeRequest
	isSet bool
}

func (v NullableUnlinkVolumeRequest) Get() *UnlinkVolumeRequest {
	return v.value
}

func (v *NullableUnlinkVolumeRequest) Set(val *UnlinkVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkVolumeRequest(val *UnlinkVolumeRequest) *NullableUnlinkVolumeRequest {
	return &NullableUnlinkVolumeRequest{value: val, isSet: true}
}

func (v NullableUnlinkVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UnlinkVolumeResponse struct for UnlinkVolumeResponse
type UnlinkVolumeResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUnlinkVolumeResponse instantiates a new UnlinkVolumeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkVolumeResponse() *UnlinkVolumeResponse {
	this := UnlinkVolumeResponse{}
	return &this
}

// NewUnlinkVolumeResponseWithDefaults instantiates a new UnlinkVolumeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkVolumeResponseWithDefaults() *UnlinkVolumeResponse {
	this := UnlinkVolumeResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UnlinkVolumeResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkVolumeResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UnlinkVolumeResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UnlinkVolumeResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UnlinkVolumeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUnlinkVolumeResponse struct {
	value *UnlinkVolumeResponse
	isSet bool
}

func (v NullableUnlinkVolumeResponse) Get() *UnlinkVolumeResponse {
	return v.value
}

func (v *NullableUnlinkVolumeResponse) Set(val *UnlinkVolumeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkVolumeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkVolumeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkVolumeResponse(val *UnlinkVolumeResponse) *NullableUnlinkVolumeResponse {
	return &NullableUnlinkVolumeResponse{value: val, isSet: true}
}

func (v NullableUnlinkVolumeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkVolumeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateAccessKeyRequest struct for UpdateAccessKeyRequest
type UpdateAccessKeyRequest struct {
	// The ID of the access key.
	AccessKeyId string `json:"AccessKeyId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The new state for the access key (`ACTIVE` \\| `INACTIVE`).
	State string `json:"State"`
}

// NewUpdateAccessKeyRequest instantiates a new UpdateAccessKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccessKeyRequest(accessKeyId string, state string, ) *UpdateAccessKeyRequest {
	this := UpdateAccessKeyRequest{}
	this.AccessKeyId = accessKeyId
	this.State = state
	return &this
}

// NewUpdateAccessKeyRequestWithDefaults instantiates a new UpdateAccessKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccessKeyRequestWithDefaults() *UpdateAccessKeyRequest {
	this := UpdateAccessKeyRequest{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value
func (o *UpdateAccessKeyRequest) GetAccessKeyId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
func (o *UpdateAccessKeyRequest) GetAccessKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKeyId, true
}

// SetAccessKeyId sets field value
func (o *UpdateAccessKeyRequest) SetAccessKeyId(v string) {
	o.AccessKeyId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateAccessKeyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessKeyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateAccessKeyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateAccessKeyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetState returns the State field value
func (o *UpdateAccessKeyRequest) GetState() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *UpdateAccessKeyRequest) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *UpdateAccessKeyRequest) SetState(v string) {
	o.State = v
}

func (o UpdateAccessKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AccessKeyId"] = o.AccessKeyId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["State"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAccessKeyRequest struct {
	value *UpdateAccessKeyRequest
	isSet bool
}

func (v NullableUpdateAccessKeyRequest) Get() *UpdateAccessKeyRequest {
	return v.value
}

func (v *NullableUpdateAccessKeyRequest) Set(val *UpdateAccessKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccessKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccessKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccessKeyRequest(val *UpdateAccessKeyRequest) *NullableUpdateAccessKeyRequest {
	return &NullableUpdateAccessKeyRequest{value: val, isSet: true}
}

func (v NullableUpdateAccessKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccessKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateAccessKeyResponse struct for UpdateAccessKeyResponse
type UpdateAccessKeyResponse struct {
	AccessKey *AccessKey `json:"AccessKey,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateAccessKeyResponse instantiates a new UpdateAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccessKeyResponse() *UpdateAccessKeyResponse {
	this := UpdateAccessKeyResponse{}
	return &this
}

// NewUpdateAccessKeyResponseWithDefaults instantiates a new UpdateAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccessKeyResponseWithDefaults() *UpdateAccessKeyResponse {
	this := UpdateAccessKeyResponse{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *UpdateAccessKeyResponse) GetAccessKey() AccessKey {
	if o == nil || o.AccessKey == nil {
		var ret AccessKey
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessKeyResponse) GetAccessKeyOk() (*AccessKey, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *UpdateAccessKeyResponse) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given AccessKey and assigns it to the AccessKey field.
func (o *UpdateAccessKeyResponse) SetAccessKey(v AccessKey) {
	o.AccessKey = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateAccessKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateAccessKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateAccessKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["AccessKey"] = o.AccessKey
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAccessKeyResponse struct {
	value *UpdateAccessKeyResponse
	isSet bool
}

func (v NullableUpdateAccessKeyResponse) Get() *UpdateAccessKeyResponse {
	return v.value
}

func (v *NullableUpdateAccessKeyResponse) Set(val *UpdateAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccessKeyResponse(val *UpdateAccessKeyResponse) *NullableUpdateAccessKeyResponse {
	return &NullableUpdateAccessKeyResponse{value: val, isSet: true}
}

func (v NullableUpdateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateAccountRequest struct for UpdateAccountRequest
type UpdateAccountRequest struct {
	// The new city of the account owner.
	City *string `json:"City,omitempty"`
	// The new name of the company for the account.
	CompanyName *string `json:"CompanyName,omitempty"`
	// The new country of the account owner.
	Country *string `json:"Country,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The new email address for the account.
	Email *string `json:"Email,omitempty"`
	// The new first name of the account owner.
	FirstName *string `json:"FirstName,omitempty"`
	// The new job title of the account owner.
	JobTitle *string `json:"JobTitle,omitempty"`
	// The new last name of the account owner.
	LastName *string `json:"LastName,omitempty"`
	// The new mobile phone number of the account owner.
	MobileNumber *string `json:"MobileNumber,omitempty"`
	// The new landline phone number of the account owner.
	PhoneNumber *string `json:"PhoneNumber,omitempty"`
	// The new state/province of the account owner.
	StateProvince *string `json:"StateProvince,omitempty"`
	// The new value added tax (VAT) number for the account.
	VatNumber *string `json:"VatNumber,omitempty"`
	// The new ZIP code of the city.
	ZipCode *string `json:"ZipCode,omitempty"`
}

// NewUpdateAccountRequest instantiates a new UpdateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountRequest() *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	return &this
}

// NewUpdateAccountRequestWithDefaults instantiates a new UpdateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountRequestWithDefaults() *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *UpdateAccountRequest) SetCity(v string) {
	o.City = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *UpdateAccountRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *UpdateAccountRequest) SetCountry(v string) {
	o.Country = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateAccountRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateAccountRequest) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UpdateAccountRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetJobTitle() string {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetJobTitleOk() (*string, bool) {
	if o == nil || o.JobTitle == nil {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasJobTitle() bool {
	if o != nil && o.JobTitle != nil {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *UpdateAccountRequest) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UpdateAccountRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetMobileNumber() string {
	if o == nil || o.MobileNumber == nil {
		var ret string
		return ret
	}
	return *o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetMobileNumberOk() (*string, bool) {
	if o == nil || o.MobileNumber == nil {
		return nil, false
	}
	return o.MobileNumber, true
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasMobileNumber() bool {
	if o != nil && o.MobileNumber != nil {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given string and assigns it to the MobileNumber field.
func (o *UpdateAccountRequest) SetMobileNumber(v string) {
	o.MobileNumber = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *UpdateAccountRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStateProvince returns the StateProvince field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetStateProvince() string {
	if o == nil || o.StateProvince == nil {
		var ret string
		return ret
	}
	return *o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetStateProvinceOk() (*string, bool) {
	if o == nil || o.StateProvince == nil {
		return nil, false
	}
	return o.StateProvince, true
}

// HasStateProvince returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasStateProvince() bool {
	if o != nil && o.StateProvince != nil {
		return true
	}

	return false
}

// SetStateProvince gets a reference to the given string and assigns it to the StateProvince field.
func (o *UpdateAccountRequest) SetStateProvince(v string) {
	o.StateProvince = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetVatNumber() string {
	if o == nil || o.VatNumber == nil {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetVatNumberOk() (*string, bool) {
	if o == nil || o.VatNumber == nil {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasVatNumber() bool {
	if o != nil && o.VatNumber != nil {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *UpdateAccountRequest) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *UpdateAccountRequest) SetZipCode(v string) {
	o.ZipCode = &v
}

func (o UpdateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.City != nil {
		toSerialize["City"] = o.City
	}
	if o.CompanyName != nil {
		toSerialize["CompanyName"] = o.CompanyName
	}
	if o.Country != nil {
		toSerialize["Country"] = o.Country
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Email != nil {
		toSerialize["Email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["FirstName"] = o.FirstName
	}
	if o.JobTitle != nil {
		toSerialize["JobTitle"] = o.JobTitle
	}
	if o.LastName != nil {
		toSerialize["LastName"] = o.LastName
	}
	if o.MobileNumber != nil {
		toSerialize["MobileNumber"] = o.MobileNumber
	}
	if o.PhoneNumber != nil {
		toSerialize["PhoneNumber"] = o.PhoneNumber
	}
	if o.StateProvince != nil {
		toSerialize["StateProvince"] = o.StateProvince
	}
	if o.VatNumber != nil {
		toSerialize["VatNumber"] = o.VatNumber
	}
	if o.ZipCode != nil {
		toSerialize["ZipCode"] = o.ZipCode
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAccountRequest struct {
	value *UpdateAccountRequest
	isSet bool
}

func (v NullableUpdateAccountRequest) Get() *UpdateAccountRequest {
	return v.value
}

func (v *NullableUpdateAccountRequest) Set(val *UpdateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountRequest(val *UpdateAccountRequest) *NullableUpdateAccountRequest {
	return &NullableUpdateAccountRequest{value: val, isSet: true}
}

func (v NullableUpdateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateAccountResponse struct for UpdateAccountResponse
type UpdateAccountResponse struct {
	Account *Account `json:"Account,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateAccountResponse instantiates a new UpdateAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountResponse() *UpdateAccountResponse {
	this := UpdateAccountResponse{}
	return &this
}

// NewUpdateAccountResponseWithDefaults instantiates a new UpdateAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountResponseWithDefaults() *UpdateAccountResponse {
	this := UpdateAccountResponse{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *UpdateAccountResponse) GetAccount() Account {
	if o == nil || o.Account == nil {
		var ret Account
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountResponse) GetAccountOk() (*Account, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *UpdateAccountResponse) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given Account and assigns it to the Account field.
func (o *UpdateAccountResponse) SetAccount(v Account) {
	o.Account = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateAccountResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateAccountResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateAccountResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["Account"] = o.Account
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAccountResponse struct {
	value *UpdateAccountResponse
	isSet bool
}

func (v NullableUpdateAccountResponse) Get() *UpdateAccountResponse {
	return v.value
}

func (v *NullableUpdateAccountResponse) Set(val *UpdateAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountResponse(val *UpdateAccountResponse) *NullableUpdateAccountResponse {
	return &NullableUpdateAccountResponse{value: val, isSet: true}
}

func (v NullableUpdateAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateFlexibleGpuRequest struct for UpdateFlexibleGpuRequest
type UpdateFlexibleGpuRequest struct {
	// If `true`, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the fGPU you want to modify.
	FlexibleGpuId string `json:"FlexibleGpuId"`
}

// NewUpdateFlexibleGpuRequest instantiates a new UpdateFlexibleGpuRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFlexibleGpuRequest(flexibleGpuId string, ) *UpdateFlexibleGpuRequest {
	this := UpdateFlexibleGpuRequest{}
	this.FlexibleGpuId = flexibleGpuId
	return &this
}

// NewUpdateFlexibleGpuRequestWithDefaults instantiates a new UpdateFlexibleGpuRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFlexibleGpuRequestWithDefaults() *UpdateFlexibleGpuRequest {
	this := UpdateFlexibleGpuRequest{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *UpdateFlexibleGpuRequest) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlexibleGpuRequest) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *UpdateFlexibleGpuRequest) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *UpdateFlexibleGpuRequest) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateFlexibleGpuRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlexibleGpuRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateFlexibleGpuRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateFlexibleGpuRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value
func (o *UpdateFlexibleGpuRequest) GetFlexibleGpuId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value
// and a boolean to check if the value has been set.
func (o *UpdateFlexibleGpuRequest) GetFlexibleGpuIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlexibleGpuId, true
}

// SetFlexibleGpuId sets field value
func (o *UpdateFlexibleGpuRequest) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = v
}

func (o UpdateFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["FlexibleGpuId"] = o.FlexibleGpuId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateFlexibleGpuRequest struct {
	value *UpdateFlexibleGpuRequest
	isSet bool
}

func (v NullableUpdateFlexibleGpuRequest) Get() *UpdateFlexibleGpuRequest {
	return v.value
}

func (v *NullableUpdateFlexibleGpuRequest) Set(val *UpdateFlexibleGpuRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFlexibleGpuRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFlexibleGpuRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFlexibleGpuRequest(val *UpdateFlexibleGpuRequest) *NullableUpdateFlexibleGpuRequest {
	return &NullableUpdateFlexibleGpuRequest{value: val, isSet: true}
}

func (v NullableUpdateFlexibleGpuRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFlexibleGpuRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateFlexibleGpuResponse struct for UpdateFlexibleGpuResponse
type UpdateFlexibleGpuResponse struct {
	FlexibleGpu *FlexibleGpu `json:"FlexibleGpu,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateFlexibleGpuResponse instantiates a new UpdateFlexibleGpuResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFlexibleGpuResponse() *UpdateFlexibleGpuResponse {
	this := UpdateFlexibleGpuResponse{}
	return &this
}

// NewUpdateFlexibleGpuResponseWithDefaults instantiates a new UpdateFlexibleGpuResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFlexibleGpuResponseWithDefaults() *UpdateFlexibleGpuResponse {
	this := UpdateFlexibleGpuResponse{}
	return &this
}

// GetFlexibleGpu returns the FlexibleGpu field value if set, zero value otherwise.
func (o *UpdateFlexibleGpuResponse) GetFlexibleGpu() FlexibleGpu {
	if o == nil || o.FlexibleGpu == nil {
		var ret FlexibleGpu
		return ret
	}
	return *o.FlexibleGpu
}

// GetFlexibleGpuOk returns a tuple with the FlexibleGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlexibleGpuResponse) GetFlexibleGpuOk() (*FlexibleGpu, bool) {
	if o == nil || o.FlexibleGpu == nil {
		return nil, false
	}
	return o.FlexibleGpu, true
}

// HasFlexibleGpu returns a boolean if a field has been set.
func (o *UpdateFlexibleGpuResponse) HasFlexibleGpu() bool {
	if o != nil && o.FlexibleGpu != nil {
		return true
	}

	return false
}

// SetFlexibleGpu gets a reference to the given FlexibleGpu and assigns it to the FlexibleGpu field.
func (o *UpdateFlexibleGpuResponse) SetFlexibleGpu(v FlexibleGpu) {
	o.FlexibleGpu = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateFlexibleGpuResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlexibleGpuResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateFlexibleGpuResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateFlexibleGpuResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlexibleGpu != nil {
		toSerialize["FlexibleGpu"] = o.FlexibleGpu
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateFlexibleGpuResponse struct {
	value *UpdateFlexibleGpuResponse
	isSet bool
}

func (v NullableUpdateFlexibleGpuResponse) Get() *UpdateFlexibleGpuResponse {
	return v.value
}

func (v *NullableUpdateFlexibleGpuResponse) Set(val *UpdateFlexibleGpuResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFlexibleGpuResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFlexibleGpuResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFlexibleGpuResponse(val *UpdateFlexibleGpuResponse) *NullableUpdateFlexibleGpuResponse {
	return &NullableUpdateFlexibleGpuResponse{value: val, isSet: true}
}

func (v NullableUpdateFlexibleGpuResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFlexibleGpuResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateImageRequest struct for UpdateImageRequest
type UpdateImageRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the OMI you want to modify.
	ImageId string `json:"ImageId"`
	PermissionsToLaunch PermissionsOnResourceCreation `json:"PermissionsToLaunch"`
}

// NewUpdateImageRequest instantiates a new UpdateImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateImageRequest(imageId string, permissionsToLaunch PermissionsOnResourceCreation, ) *UpdateImageRequest {
	this := UpdateImageRequest{}
	this.ImageId = imageId
	this.PermissionsToLaunch = permissionsToLaunch
	return &this
}

// NewUpdateImageRequestWithDefaults instantiates a new UpdateImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateImageRequestWithDefaults() *UpdateImageRequest {
	this := UpdateImageRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateImageRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateImageRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateImageRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateImageRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetImageId returns the ImageId field value
func (o *UpdateImageRequest) GetImageId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *UpdateImageRequest) GetImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *UpdateImageRequest) SetImageId(v string) {
	o.ImageId = v
}

// GetPermissionsToLaunch returns the PermissionsToLaunch field value
func (o *UpdateImageRequest) GetPermissionsToLaunch() PermissionsOnResourceCreation {
	if o == nil  {
		var ret PermissionsOnResourceCreation
		return ret
	}

	return o.PermissionsToLaunch
}

// GetPermissionsToLaunchOk returns a tuple with the PermissionsToLaunch field value
// and a boolean to check if the value has been set.
func (o *UpdateImageRequest) GetPermissionsToLaunchOk() (*PermissionsOnResourceCreation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PermissionsToLaunch, true
}

// SetPermissionsToLaunch sets field value
func (o *UpdateImageRequest) SetPermissionsToLaunch(v PermissionsOnResourceCreation) {
	o.PermissionsToLaunch = v
}

func (o UpdateImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["ImageId"] = o.ImageId
	}
	if true {
		toSerialize["PermissionsToLaunch"] = o.PermissionsToLaunch
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateImageRequest struct {
	value *UpdateImageRequest
	isSet bool
}

func (v NullableUpdateImageRequest) Get() *UpdateImageRequest {
	return v.value
}

func (v *NullableUpdateImageRequest) Set(val *UpdateImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateImageRequest(val *UpdateImageRequest) *NullableUpdateImageRequest {
	return &NullableUpdateImageRequest{value: val, isSet: true}
}

func (v NullableUpdateImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateImageResponse struct for UpdateImageResponse
type UpdateImageResponse struct {
	Image *Image `json:"Image,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateImageResponse instantiates a new UpdateImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateImageResponse() *UpdateImageResponse {
	this := UpdateImageResponse{}
	return &this
}

// NewUpdateImageResponseWithDefaults instantiates a new UpdateImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateImageResponseWithDefaults() *UpdateImageResponse {
	this := UpdateImageResponse{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *UpdateImageResponse) GetImage() Image {
	if o == nil || o.Image == nil {
		var ret Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateImageResponse) GetImageOk() (*Image, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *UpdateImageResponse) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given Image and assigns it to the Image field.
func (o *UpdateImageResponse) SetImage(v Image) {
	o.Image = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateImageResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateImageResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateImageResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateImageResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["Image"] = o.Image
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateImageResponse struct {
	value *UpdateImageResponse
	isSet bool
}

func (v NullableUpdateImageResponse) Get() *UpdateImageResponse {
	return v.value
}

func (v *NullableUpdateImageResponse) Set(val *UpdateImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateImageResponse(val *UpdateImageResponse) *NullableUpdateImageResponse {
	return &NullableUpdateImageResponse{value: val, isSet: true}
}

func (v NullableUpdateImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateListenerRuleRequest struct for UpdateListenerRuleRequest
type UpdateListenerRuleRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
	HostPattern *string `json:"HostPattern,omitempty"`
	// The name of the listener rule.
	ListenerRuleName string `json:"ListenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~\"'@:+?].
	PathPattern *string `json:"PathPattern,omitempty"`
}

// NewUpdateListenerRuleRequest instantiates a new UpdateListenerRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateListenerRuleRequest(listenerRuleName string, ) *UpdateListenerRuleRequest {
	this := UpdateListenerRuleRequest{}
	this.ListenerRuleName = listenerRuleName
	return &this
}

// NewUpdateListenerRuleRequestWithDefaults instantiates a new UpdateListenerRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateListenerRuleRequestWithDefaults() *UpdateListenerRuleRequest {
	this := UpdateListenerRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateListenerRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateListenerRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateListenerRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetHostPattern returns the HostPattern field value if set, zero value otherwise.
func (o *UpdateListenerRuleRequest) GetHostPattern() string {
	if o == nil || o.HostPattern == nil {
		var ret string
		return ret
	}
	return *o.HostPattern
}

// GetHostPatternOk returns a tuple with the HostPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleRequest) GetHostPatternOk() (*string, bool) {
	if o == nil || o.HostPattern == nil {
		return nil, false
	}
	return o.HostPattern, true
}

// HasHostPattern returns a boolean if a field has been set.
func (o *UpdateListenerRuleRequest) HasHostPattern() bool {
	if o != nil && o.HostPattern != nil {
		return true
	}

	return false
}

// SetHostPattern gets a reference to the given string and assigns it to the HostPattern field.
func (o *UpdateListenerRuleRequest) SetHostPattern(v string) {
	o.HostPattern = &v
}

// GetListenerRuleName returns the ListenerRuleName field value
func (o *UpdateListenerRuleRequest) GetListenerRuleName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleRequest) GetListenerRuleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ListenerRuleName, true
}

// SetListenerRuleName sets field value
func (o *UpdateListenerRuleRequest) SetListenerRuleName(v string) {
	o.ListenerRuleName = v
}

// GetPathPattern returns the PathPattern field value if set, zero value otherwise.
func (o *UpdateListenerRuleRequest) GetPathPattern() string {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret
	}
	return *o.PathPattern
}

// GetPathPatternOk returns a tuple with the PathPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleRequest) GetPathPatternOk() (*string, bool) {
	if o == nil || o.PathPattern == nil {
		return nil, false
	}
	return o.PathPattern, true
}

// HasPathPattern returns a boolean if a field has been set.
func (o *UpdateListenerRuleRequest) HasPathPattern() bool {
	if o != nil && o.PathPattern != nil {
		return true
	}

	return false
}

// SetPathPattern gets a reference to the given string and assigns it to the PathPattern field.
func (o *UpdateListenerRuleRequest) SetPathPattern(v string) {
	o.PathPattern = &v
}

func (o UpdateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.HostPattern != nil {
		toSerialize["HostPattern"] = o.HostPattern
	}
	if true {
		toSerialize["ListenerRuleName"] = o.ListenerRuleName
	}
	if o.PathPattern != nil {
		toSerialize["PathPattern"] = o.PathPattern
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateListenerRuleRequest struct {
	value *UpdateListenerRuleRequest
	isSet bool
}

func (v NullableUpdateListenerRuleRequest) Get() *UpdateListenerRuleRequest {
	return v.value
}

func (v *NullableUpdateListenerRuleRequest) Set(val *UpdateListenerRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateListenerRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateListenerRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateListenerRuleRequest(val *UpdateListenerRuleRequest) *NullableUpdateListenerRuleRequest {
	return &NullableUpdateListenerRuleRequest{value: val, isSet: true}
}

func (v NullableUpdateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateListenerRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateListenerRuleResponse struct for UpdateListenerRuleResponse
type UpdateListenerRuleResponse struct {
	ListenerRule *ListenerRule `json:"ListenerRule,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateListenerRuleResponse instantiates a new UpdateListenerRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateListenerRuleResponse() *UpdateListenerRuleResponse {
	this := UpdateListenerRuleResponse{}
	return &this
}

// NewUpdateListenerRuleResponseWithDefaults instantiates a new UpdateListenerRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateListenerRuleResponseWithDefaults() *UpdateListenerRuleResponse {
	this := UpdateListenerRuleResponse{}
	return &this
}

// GetListenerRule returns the ListenerRule field value if set, zero value otherwise.
func (o *UpdateListenerRuleResponse) GetListenerRule() ListenerRule {
	if o == nil || o.ListenerRule == nil {
		var ret ListenerRule
		return ret
	}
	return *o.ListenerRule
}

// GetListenerRuleOk returns a tuple with the ListenerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleResponse) GetListenerRuleOk() (*ListenerRule, bool) {
	if o == nil || o.ListenerRule == nil {
		return nil, false
	}
	return o.ListenerRule, true
}

// HasListenerRule returns a boolean if a field has been set.
func (o *UpdateListenerRuleResponse) HasListenerRule() bool {
	if o != nil && o.ListenerRule != nil {
		return true
	}

	return false
}

// SetListenerRule gets a reference to the given ListenerRule and assigns it to the ListenerRule field.
func (o *UpdateListenerRuleResponse) SetListenerRule(v ListenerRule) {
	o.ListenerRule = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateListenerRuleResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListenerRuleResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateListenerRuleResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateListenerRuleResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateListenerRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ListenerRule != nil {
		toSerialize["ListenerRule"] = o.ListenerRule
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateListenerRuleResponse struct {
	value *UpdateListenerRuleResponse
	isSet bool
}

func (v NullableUpdateListenerRuleResponse) Get() *UpdateListenerRuleResponse {
	return v.value
}

func (v *NullableUpdateListenerRuleResponse) Set(val *UpdateListenerRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateListenerRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateListenerRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateListenerRuleResponse(val *UpdateListenerRuleResponse) *NullableUpdateListenerRuleResponse {
	return &NullableUpdateListenerRuleResponse{value: val, isSet: true}
}

func (v NullableUpdateListenerRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateListenerRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateLoadBalancerRequest struct for UpdateLoadBalancerRequest
type UpdateLoadBalancerRequest struct {
	AccessLog *AccessLog `json:"AccessLog,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	HealthCheck *HealthCheck `json:"HealthCheck,omitempty"`
	// The name of the load balancer.
	LoadBalancerName string `json:"LoadBalancerName"`
	// The port on which the load balancer is listening (between `1` and `65535`, both included).
	LoadBalancerPort *int32 `json:"LoadBalancerPort,omitempty"`
	// The list of policy names (must contain all the policies to be enabled).
	PolicyNames *[]string `json:"PolicyNames,omitempty"`
	// The Outscale Resource Name (ORN) of the SSL certificate.
	ServerCertificateId *string `json:"ServerCertificateId,omitempty"`
}

// NewUpdateLoadBalancerRequest instantiates a new UpdateLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLoadBalancerRequest(loadBalancerName string, ) *UpdateLoadBalancerRequest {
	this := UpdateLoadBalancerRequest{}
	this.LoadBalancerName = loadBalancerName
	return &this
}

// NewUpdateLoadBalancerRequestWithDefaults instantiates a new UpdateLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLoadBalancerRequestWithDefaults() *UpdateLoadBalancerRequest {
	this := UpdateLoadBalancerRequest{}
	return &this
}

// GetAccessLog returns the AccessLog field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetAccessLog() AccessLog {
	if o == nil || o.AccessLog == nil {
		var ret AccessLog
		return ret
	}
	return *o.AccessLog
}

// GetAccessLogOk returns a tuple with the AccessLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetAccessLogOk() (*AccessLog, bool) {
	if o == nil || o.AccessLog == nil {
		return nil, false
	}
	return o.AccessLog, true
}

// HasAccessLog returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasAccessLog() bool {
	if o != nil && o.AccessLog != nil {
		return true
	}

	return false
}

// SetAccessLog gets a reference to the given AccessLog and assigns it to the AccessLog field.
func (o *UpdateLoadBalancerRequest) SetAccessLog(v AccessLog) {
	o.AccessLog = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateLoadBalancerRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetHealthCheck returns the HealthCheck field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetHealthCheck() HealthCheck {
	if o == nil || o.HealthCheck == nil {
		var ret HealthCheck
		return ret
	}
	return *o.HealthCheck
}

// GetHealthCheckOk returns a tuple with the HealthCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetHealthCheckOk() (*HealthCheck, bool) {
	if o == nil || o.HealthCheck == nil {
		return nil, false
	}
	return o.HealthCheck, true
}

// HasHealthCheck returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasHealthCheck() bool {
	if o != nil && o.HealthCheck != nil {
		return true
	}

	return false
}

// SetHealthCheck gets a reference to the given HealthCheck and assigns it to the HealthCheck field.
func (o *UpdateLoadBalancerRequest) SetHealthCheck(v HealthCheck) {
	o.HealthCheck = &v
}

// GetLoadBalancerName returns the LoadBalancerName field value
func (o *UpdateLoadBalancerRequest) GetLoadBalancerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LoadBalancerName
}

// GetLoadBalancerNameOk returns a tuple with the LoadBalancerName field value
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetLoadBalancerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoadBalancerName, true
}

// SetLoadBalancerName sets field value
func (o *UpdateLoadBalancerRequest) SetLoadBalancerName(v string) {
	o.LoadBalancerName = v
}

// GetLoadBalancerPort returns the LoadBalancerPort field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetLoadBalancerPort() int32 {
	if o == nil || o.LoadBalancerPort == nil {
		var ret int32
		return ret
	}
	return *o.LoadBalancerPort
}

// GetLoadBalancerPortOk returns a tuple with the LoadBalancerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetLoadBalancerPortOk() (*int32, bool) {
	if o == nil || o.LoadBalancerPort == nil {
		return nil, false
	}
	return o.LoadBalancerPort, true
}

// HasLoadBalancerPort returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasLoadBalancerPort() bool {
	if o != nil && o.LoadBalancerPort != nil {
		return true
	}

	return false
}

// SetLoadBalancerPort gets a reference to the given int32 and assigns it to the LoadBalancerPort field.
func (o *UpdateLoadBalancerRequest) SetLoadBalancerPort(v int32) {
	o.LoadBalancerPort = &v
}

// GetPolicyNames returns the PolicyNames field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetPolicyNames() []string {
	if o == nil || o.PolicyNames == nil {
		var ret []string
		return ret
	}
	return *o.PolicyNames
}

// GetPolicyNamesOk returns a tuple with the PolicyNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetPolicyNamesOk() (*[]string, bool) {
	if o == nil || o.PolicyNames == nil {
		return nil, false
	}
	return o.PolicyNames, true
}

// HasPolicyNames returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasPolicyNames() bool {
	if o != nil && o.PolicyNames != nil {
		return true
	}

	return false
}

// SetPolicyNames gets a reference to the given []string and assigns it to the PolicyNames field.
func (o *UpdateLoadBalancerRequest) SetPolicyNames(v []string) {
	o.PolicyNames = &v
}

// GetServerCertificateId returns the ServerCertificateId field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetServerCertificateId() string {
	if o == nil || o.ServerCertificateId == nil {
		var ret string
		return ret
	}
	return *o.ServerCertificateId
}

// GetServerCertificateIdOk returns a tuple with the ServerCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetServerCertificateIdOk() (*string, bool) {
	if o == nil || o.ServerCertificateId == nil {
		return nil, false
	}
	return o.ServerCertificateId, true
}

// HasServerCertificateId returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) HasServerCertificateId() bool {
	if o != nil && o.ServerCertificateId != nil {
		return true
	}

	return false
}

// SetServerCertificateId gets a reference to the given string and assigns it to the ServerCertificateId field.
func (o *UpdateLoadBalancerRequest) SetServerCertificateId(v string) {
	o.ServerCertificateId = &v
}

func (o UpdateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessLog != nil {
		toSerialize["AccessLog"] = o.AccessLog
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.HealthCheck != nil {
		toSerialize["HealthCheck"] = o.HealthCheck
	}
	if true {
		toSerialize["LoadBalancerName"] = o.LoadBalancerName
	}
	if o.LoadBalancerPort != nil {
		toSerialize["LoadBalancerPort"] = o.LoadBalancerPort
	}
	if o.PolicyNames != nil {
		toSerialize["PolicyNames"] = o.PolicyNames
	}
	if o.ServerCertificateId != nil {
		toSerialize["ServerCertificateId"] = o.ServerCertificateId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLoadBalancerRequest struct {
	value *UpdateLoadBalancerRequest
	isSet bool
}

func (v NullableUpdateLoadBalancerRequest) Get() *UpdateLoadBalancerRequest {
	return v.value
}

func (v *NullableUpdateLoadBalancerRequest) Set(val *UpdateLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLoadBalancerRequest(val *UpdateLoadBalancerRequest) *NullableUpdateLoadBalancerRequest {
	return &NullableUpdateLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableUpdateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateLoadBalancerResponse struct for UpdateLoadBalancerResponse
type UpdateLoadBalancerResponse struct {
	LoadBalancer *LoadBalancer `json:"LoadBalancer,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateLoadBalancerResponse instantiates a new UpdateLoadBalancerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLoadBalancerResponse() *UpdateLoadBalancerResponse {
	this := UpdateLoadBalancerResponse{}
	return &this
}

// NewUpdateLoadBalancerResponseWithDefaults instantiates a new UpdateLoadBalancerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLoadBalancerResponseWithDefaults() *UpdateLoadBalancerResponse {
	this := UpdateLoadBalancerResponse{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *UpdateLoadBalancerResponse) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerResponse) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *UpdateLoadBalancerResponse) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *UpdateLoadBalancerResponse) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateLoadBalancerResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateLoadBalancerResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateLoadBalancerResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["LoadBalancer"] = o.LoadBalancer
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLoadBalancerResponse struct {
	value *UpdateLoadBalancerResponse
	isSet bool
}

func (v NullableUpdateLoadBalancerResponse) Get() *UpdateLoadBalancerResponse {
	return v.value
}

func (v *NullableUpdateLoadBalancerResponse) Set(val *UpdateLoadBalancerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLoadBalancerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLoadBalancerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLoadBalancerResponse(val *UpdateLoadBalancerResponse) *NullableUpdateLoadBalancerResponse {
	return &NullableUpdateLoadBalancerResponse{value: val, isSet: true}
}

func (v NullableUpdateLoadBalancerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLoadBalancerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNetAccessPointRequest struct for UpdateNetAccessPointRequest
type UpdateNetAccessPointRequest struct {
	// One or more IDs of route tables to associate with the specified Net access point.
	AddRouteTableIds *[]string `json:"AddRouteTableIds,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net access point.
	NetAccessPointId string `json:"NetAccessPointId"`
	// One or more IDs of route tables to disassociate from the specified Net access point.
	RemoveRouteTableIds *[]string `json:"RemoveRouteTableIds,omitempty"`
}

// NewUpdateNetAccessPointRequest instantiates a new UpdateNetAccessPointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetAccessPointRequest(netAccessPointId string, ) *UpdateNetAccessPointRequest {
	this := UpdateNetAccessPointRequest{}
	this.NetAccessPointId = netAccessPointId
	return &this
}

// NewUpdateNetAccessPointRequestWithDefaults instantiates a new UpdateNetAccessPointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetAccessPointRequestWithDefaults() *UpdateNetAccessPointRequest {
	this := UpdateNetAccessPointRequest{}
	return &this
}

// GetAddRouteTableIds returns the AddRouteTableIds field value if set, zero value otherwise.
func (o *UpdateNetAccessPointRequest) GetAddRouteTableIds() []string {
	if o == nil || o.AddRouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.AddRouteTableIds
}

// GetAddRouteTableIdsOk returns a tuple with the AddRouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointRequest) GetAddRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.AddRouteTableIds == nil {
		return nil, false
	}
	return o.AddRouteTableIds, true
}

// HasAddRouteTableIds returns a boolean if a field has been set.
func (o *UpdateNetAccessPointRequest) HasAddRouteTableIds() bool {
	if o != nil && o.AddRouteTableIds != nil {
		return true
	}

	return false
}

// SetAddRouteTableIds gets a reference to the given []string and assigns it to the AddRouteTableIds field.
func (o *UpdateNetAccessPointRequest) SetAddRouteTableIds(v []string) {
	o.AddRouteTableIds = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateNetAccessPointRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateNetAccessPointRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateNetAccessPointRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetAccessPointId returns the NetAccessPointId field value
func (o *UpdateNetAccessPointRequest) GetNetAccessPointId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetAccessPointId
}

// GetNetAccessPointIdOk returns a tuple with the NetAccessPointId field value
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointRequest) GetNetAccessPointIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetAccessPointId, true
}

// SetNetAccessPointId sets field value
func (o *UpdateNetAccessPointRequest) SetNetAccessPointId(v string) {
	o.NetAccessPointId = v
}

// GetRemoveRouteTableIds returns the RemoveRouteTableIds field value if set, zero value otherwise.
func (o *UpdateNetAccessPointRequest) GetRemoveRouteTableIds() []string {
	if o == nil || o.RemoveRouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.RemoveRouteTableIds
}

// GetRemoveRouteTableIdsOk returns a tuple with the RemoveRouteTableIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointRequest) GetRemoveRouteTableIdsOk() (*[]string, bool) {
	if o == nil || o.RemoveRouteTableIds == nil {
		return nil, false
	}
	return o.RemoveRouteTableIds, true
}

// HasRemoveRouteTableIds returns a boolean if a field has been set.
func (o *UpdateNetAccessPointRequest) HasRemoveRouteTableIds() bool {
	if o != nil && o.RemoveRouteTableIds != nil {
		return true
	}

	return false
}

// SetRemoveRouteTableIds gets a reference to the given []string and assigns it to the RemoveRouteTableIds field.
func (o *UpdateNetAccessPointRequest) SetRemoveRouteTableIds(v []string) {
	o.RemoveRouteTableIds = &v
}

func (o UpdateNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddRouteTableIds != nil {
		toSerialize["AddRouteTableIds"] = o.AddRouteTableIds
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetAccessPointId"] = o.NetAccessPointId
	}
	if o.RemoveRouteTableIds != nil {
		toSerialize["RemoveRouteTableIds"] = o.RemoveRouteTableIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNetAccessPointRequest struct {
	value *UpdateNetAccessPointRequest
	isSet bool
}

func (v NullableUpdateNetAccessPointRequest) Get() *UpdateNetAccessPointRequest {
	return v.value
}

func (v *NullableUpdateNetAccessPointRequest) Set(val *UpdateNetAccessPointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetAccessPointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetAccessPointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetAccessPointRequest(val *UpdateNetAccessPointRequest) *NullableUpdateNetAccessPointRequest {
	return &NullableUpdateNetAccessPointRequest{value: val, isSet: true}
}

func (v NullableUpdateNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetAccessPointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNetAccessPointResponse struct for UpdateNetAccessPointResponse
type UpdateNetAccessPointResponse struct {
	NetAccessPoint *NetAccessPoint `json:"NetAccessPoint,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateNetAccessPointResponse instantiates a new UpdateNetAccessPointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetAccessPointResponse() *UpdateNetAccessPointResponse {
	this := UpdateNetAccessPointResponse{}
	return &this
}

// NewUpdateNetAccessPointResponseWithDefaults instantiates a new UpdateNetAccessPointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetAccessPointResponseWithDefaults() *UpdateNetAccessPointResponse {
	this := UpdateNetAccessPointResponse{}
	return &this
}

// GetNetAccessPoint returns the NetAccessPoint field value if set, zero value otherwise.
func (o *UpdateNetAccessPointResponse) GetNetAccessPoint() NetAccessPoint {
	if o == nil || o.NetAccessPoint == nil {
		var ret NetAccessPoint
		return ret
	}
	return *o.NetAccessPoint
}

// GetNetAccessPointOk returns a tuple with the NetAccessPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointResponse) GetNetAccessPointOk() (*NetAccessPoint, bool) {
	if o == nil || o.NetAccessPoint == nil {
		return nil, false
	}
	return o.NetAccessPoint, true
}

// HasNetAccessPoint returns a boolean if a field has been set.
func (o *UpdateNetAccessPointResponse) HasNetAccessPoint() bool {
	if o != nil && o.NetAccessPoint != nil {
		return true
	}

	return false
}

// SetNetAccessPoint gets a reference to the given NetAccessPoint and assigns it to the NetAccessPoint field.
func (o *UpdateNetAccessPointResponse) SetNetAccessPoint(v NetAccessPoint) {
	o.NetAccessPoint = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateNetAccessPointResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetAccessPointResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateNetAccessPointResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateNetAccessPointResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetAccessPoint != nil {
		toSerialize["NetAccessPoint"] = o.NetAccessPoint
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNetAccessPointResponse struct {
	value *UpdateNetAccessPointResponse
	isSet bool
}

func (v NullableUpdateNetAccessPointResponse) Get() *UpdateNetAccessPointResponse {
	return v.value
}

func (v *NullableUpdateNetAccessPointResponse) Set(val *UpdateNetAccessPointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetAccessPointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetAccessPointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetAccessPointResponse(val *UpdateNetAccessPointResponse) *NullableUpdateNetAccessPointResponse {
	return &NullableUpdateNetAccessPointResponse{value: val, isSet: true}
}

func (v NullableUpdateNetAccessPointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetAccessPointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNetRequest struct for UpdateNetRequest
type UpdateNetRequest struct {
	// The ID of the DHCP options set (or `default` if you want to associate the default one).
	DhcpOptionsSetId string `json:"DhcpOptionsSetId"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net.
	NetId string `json:"NetId"`
}

// NewUpdateNetRequest instantiates a new UpdateNetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetRequest(dhcpOptionsSetId string, netId string, ) *UpdateNetRequest {
	this := UpdateNetRequest{}
	this.DhcpOptionsSetId = dhcpOptionsSetId
	this.NetId = netId
	return &this
}

// NewUpdateNetRequestWithDefaults instantiates a new UpdateNetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetRequestWithDefaults() *UpdateNetRequest {
	this := UpdateNetRequest{}
	return &this
}

// GetDhcpOptionsSetId returns the DhcpOptionsSetId field value
func (o *UpdateNetRequest) GetDhcpOptionsSetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DhcpOptionsSetId
}

// GetDhcpOptionsSetIdOk returns a tuple with the DhcpOptionsSetId field value
// and a boolean to check if the value has been set.
func (o *UpdateNetRequest) GetDhcpOptionsSetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DhcpOptionsSetId, true
}

// SetDhcpOptionsSetId sets field value
func (o *UpdateNetRequest) SetDhcpOptionsSetId(v string) {
	o.DhcpOptionsSetId = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateNetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateNetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateNetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *UpdateNetRequest) GetNetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value
// and a boolean to check if the value has been set.
func (o *UpdateNetRequest) GetNetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetId, true
}

// SetNetId sets field value
func (o *UpdateNetRequest) SetNetId(v string) {
	o.NetId = v
}

func (o UpdateNetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DhcpOptionsSetId"] = o.DhcpOptionsSetId
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["NetId"] = o.NetId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNetRequest struct {
	value *UpdateNetRequest
	isSet bool
}

func (v NullableUpdateNetRequest) Get() *UpdateNetRequest {
	return v.value
}

func (v *NullableUpdateNetRequest) Set(val *UpdateNetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetRequest(val *UpdateNetRequest) *NullableUpdateNetRequest {
	return &NullableUpdateNetRequest{value: val, isSet: true}
}

func (v NullableUpdateNetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNetResponse struct for UpdateNetResponse
type UpdateNetResponse struct {
	Net *Net `json:"Net,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateNetResponse instantiates a new UpdateNetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetResponse() *UpdateNetResponse {
	this := UpdateNetResponse{}
	return &this
}

// NewUpdateNetResponseWithDefaults instantiates a new UpdateNetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetResponseWithDefaults() *UpdateNetResponse {
	this := UpdateNetResponse{}
	return &this
}

// GetNet returns the Net field value if set, zero value otherwise.
func (o *UpdateNetResponse) GetNet() Net {
	if o == nil || o.Net == nil {
		var ret Net
		return ret
	}
	return *o.Net
}

// GetNetOk returns a tuple with the Net field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetResponse) GetNetOk() (*Net, bool) {
	if o == nil || o.Net == nil {
		return nil, false
	}
	return o.Net, true
}

// HasNet returns a boolean if a field has been set.
func (o *UpdateNetResponse) HasNet() bool {
	if o != nil && o.Net != nil {
		return true
	}

	return false
}

// SetNet gets a reference to the given Net and assigns it to the Net field.
func (o *UpdateNetResponse) SetNet(v Net) {
	o.Net = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateNetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateNetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateNetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateNetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Net != nil {
		toSerialize["Net"] = o.Net
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNetResponse struct {
	value *UpdateNetResponse
	isSet bool
}

func (v NullableUpdateNetResponse) Get() *UpdateNetResponse {
	return v.value
}

func (v *NullableUpdateNetResponse) Set(val *UpdateNetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetResponse(val *UpdateNetResponse) *NullableUpdateNetResponse {
	return &NullableUpdateNetResponse{value: val, isSet: true}
}

func (v NullableUpdateNetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNicRequest struct for UpdateNicRequest
type UpdateNicRequest struct {
	// A new description for the NIC.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	LinkNic *LinkNicToUpdate `json:"LinkNic,omitempty"`
	// The ID of the NIC you want to modify.
	NicId string `json:"NicId"`
	// One or more IDs of security groups for the NIC.<br /> You must specify at least one group, even if you use the default security group in the Net.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
}

// NewUpdateNicRequest instantiates a new UpdateNicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNicRequest(nicId string, ) *UpdateNicRequest {
	this := UpdateNicRequest{}
	this.NicId = nicId
	return &this
}

// NewUpdateNicRequestWithDefaults instantiates a new UpdateNicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNicRequestWithDefaults() *UpdateNicRequest {
	this := UpdateNicRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateNicRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLinkNic returns the LinkNic field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetLinkNic() LinkNicToUpdate {
	if o == nil || o.LinkNic == nil {
		var ret LinkNicToUpdate
		return ret
	}
	return *o.LinkNic
}

// GetLinkNicOk returns a tuple with the LinkNic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetLinkNicOk() (*LinkNicToUpdate, bool) {
	if o == nil || o.LinkNic == nil {
		return nil, false
	}
	return o.LinkNic, true
}

// HasLinkNic returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasLinkNic() bool {
	if o != nil && o.LinkNic != nil {
		return true
	}

	return false
}

// SetLinkNic gets a reference to the given LinkNicToUpdate and assigns it to the LinkNic field.
func (o *UpdateNicRequest) SetLinkNic(v LinkNicToUpdate) {
	o.LinkNic = &v
}

// GetNicId returns the NicId field value
func (o *UpdateNicRequest) GetNicId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetNicIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NicId, true
}

// SetNicId sets field value
func (o *UpdateNicRequest) SetNicId(v string) {
	o.NicId = v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *UpdateNicRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

func (o UpdateNicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.LinkNic != nil {
		toSerialize["LinkNic"] = o.LinkNic
	}
	if true {
		toSerialize["NicId"] = o.NicId
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNicRequest struct {
	value *UpdateNicRequest
	isSet bool
}

func (v NullableUpdateNicRequest) Get() *UpdateNicRequest {
	return v.value
}

func (v *NullableUpdateNicRequest) Set(val *UpdateNicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNicRequest(val *UpdateNicRequest) *NullableUpdateNicRequest {
	return &NullableUpdateNicRequest{value: val, isSet: true}
}

func (v NullableUpdateNicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateNicResponse struct for UpdateNicResponse
type UpdateNicResponse struct {
	Nic *Nic `json:"Nic,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewUpdateNicResponse instantiates a new UpdateNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNicResponse() *UpdateNicResponse {
	this := UpdateNicResponse{}
	return &this
}

// NewUpdateNicResponseWithDefaults instantiates a new UpdateNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNicResponseWithDefaults() *UpdateNicResponse {
	this := UpdateNicResponse{}
	return &this
}

// GetNic returns the Nic field value if set, zero value otherwise.
func (o *UpdateNicResponse) GetNic() Nic {
	if o == nil || o.Nic == nil {
		var ret Nic
		return ret
	}
	return *o.Nic
}

// GetNicOk returns a tuple with the Nic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicResponse) GetNicOk() (*Nic, bool) {
	if o == nil || o.Nic == nil {
		return nil, false
	}
	return o.Nic, true
}

// HasNic returns a boolean if a field has been set.
func (o *UpdateNicResponse) HasNic() bool {
	if o != nil && o.Nic != nil {
		return true
	}

	return false
}

// SetNic gets a reference to the given Nic and assigns it to the Nic field.
func (o *UpdateNicResponse) SetNic(v Nic) {
	o.Nic = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateNicResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateNicResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateNicResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o UpdateNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nic != nil {
		toSerialize["Nic"] = o.Nic
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNicResponse struct {
	value *UpdateNicResponse
	isSet bool
}

func (v NullableUpdateNicResponse) Get() *UpdateNicResponse {
	return v.value
}

func (v *NullableUpdateNicResponse) Set(val *UpdateNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNicResponse(val *UpdateNicResponse) *NullableUpdateNicResponse {
	return &NullableUpdateNicResponse{value: val, isSet: true}
}

func (v NullableUpdateNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateRoutePropagationRequest struct for UpdateRoutePropagationRequest
type UpdateRoutePropagationRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// If `true`, a virtual gateway can propagate routes to a specified route table of a Net. If `false`, the propagation is disabled.
	Enable bool `json:"Enable"`
	// The ID of the route table.
	RouteTableId string `json:"RouteTableId"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// NewUpdateRoutePropagationRequest instantiates a new UpdateRoutePropagationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoutePropagationRequest(enable bool, routeTableId string, virtualGatewayId string, ) *UpdateRoutePropagationRequest {
	this := UpdateRoutePropagationRequest{}
	this.Enable = enable
	this.RouteTableId = routeTableId
	this.VirtualGatewayId = virtualGatewayId
	return &this
}

// NewUpdateRoutePropagationRequestWithDefaults instantiates a new UpdateRoutePropagationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoutePropagationRequestWithDefaults() *UpdateRoutePropagationRequest {
	this := UpdateRoutePropagationRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateRoutePropagationRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateRoutePropagationRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateRoutePropagationRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetEnable returns the Enable field value
func (o *UpdateRoutePropagationRequest) GetEnable() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationRequest) GetEnableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enable, true
}

// SetEnable sets field value
func (o *UpdateRoutePropagationRequest) SetEnable(v bool) {
	o.Enable = v
}

// GetRouteTableId returns the RouteTableId field value
func (o *UpdateRoutePropagationRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *UpdateRoutePropagationRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *UpdateRoutePropagationRequest) GetVirtualGatewayId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationRequest) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualGatewayId, true
}

// SetVirtualGatewayId sets field value
func (o *UpdateRoutePropagationRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

func (o UpdateRoutePropagationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Enable"] = o.Enable
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if true {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateRoutePropagationRequest struct {
	value *UpdateRoutePropagationRequest
	isSet bool
}

func (v NullableUpdateRoutePropagationRequest) Get() *UpdateRoutePropagationRequest {
	return v.value
}

func (v *NullableUpdateRoutePropagationRequest) Set(val *UpdateRoutePropagationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRoutePropagationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRoutePropagationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRoutePropagationRequest(val *UpdateRoutePropagationRequest) *NullableUpdateRoutePropagationRequest {
	return &NullableUpdateRoutePropagationRequest{value: val, isSet: true}
}

func (v NullableUpdateRoutePropagationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRoutePropagationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateRoutePropagationResponse struct for UpdateRoutePropagationResponse
type UpdateRoutePropagationResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	RouteTable *RouteTable `json:"RouteTable,omitempty"`
}

// NewUpdateRoutePropagationResponse instantiates a new UpdateRoutePropagationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoutePropagationResponse() *UpdateRoutePropagationResponse {
	this := UpdateRoutePropagationResponse{}
	return &this
}

// NewUpdateRoutePropagationResponseWithDefaults instantiates a new UpdateRoutePropagationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoutePropagationResponseWithDefaults() *UpdateRoutePropagationResponse {
	this := UpdateRoutePropagationResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateRoutePropagationResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateRoutePropagationResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateRoutePropagationResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *UpdateRoutePropagationResponse) GetRouteTable() RouteTable {
	if o == nil || o.RouteTable == nil {
		var ret RouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoutePropagationResponse) GetRouteTableOk() (*RouteTable, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *UpdateRoutePropagationResponse) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given RouteTable and assigns it to the RouteTable field.
func (o *UpdateRoutePropagationResponse) SetRouteTable(v RouteTable) {
	o.RouteTable = &v
}

func (o UpdateRoutePropagationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTable != nil {
		toSerialize["RouteTable"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateRoutePropagationResponse struct {
	value *UpdateRoutePropagationResponse
	isSet bool
}

func (v NullableUpdateRoutePropagationResponse) Get() *UpdateRoutePropagationResponse {
	return v.value
}

func (v *NullableUpdateRoutePropagationResponse) Set(val *UpdateRoutePropagationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRoutePropagationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRoutePropagationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRoutePropagationResponse(val *UpdateRoutePropagationResponse) *NullableUpdateRoutePropagationResponse {
	return &NullableUpdateRoutePropagationResponse{value: val, isSet: true}
}

func (v NullableUpdateRoutePropagationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRoutePropagationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateRouteRequest struct for UpdateRouteRequest
type UpdateRouteRequest struct {
	// The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24).
	DestinationIpRange string `json:"DestinationIpRange"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of an Internet service or virtual gateway attached to your Net.
	GatewayId *string `json:"GatewayId,omitempty"`
	// The ID of a NAT service.
	NatServiceId *string `json:"NatServiceId,omitempty"`
	// The ID of a Net peering connection.
	NetPeeringId *string `json:"NetPeeringId,omitempty"`
	// The ID of a network interface card (NIC).
	NicId *string `json:"NicId,omitempty"`
	// The ID of the route table.
	RouteTableId string `json:"RouteTableId"`
	// The ID of a NAT VM in your Net.
	VmId *string `json:"VmId,omitempty"`
}

// NewUpdateRouteRequest instantiates a new UpdateRouteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRouteRequest(destinationIpRange string, routeTableId string, ) *UpdateRouteRequest {
	this := UpdateRouteRequest{}
	this.DestinationIpRange = destinationIpRange
	this.RouteTableId = routeTableId
	return &this
}

// NewUpdateRouteRequestWithDefaults instantiates a new UpdateRouteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRouteRequestWithDefaults() *UpdateRouteRequest {
	this := UpdateRouteRequest{}
	return &this
}

// GetDestinationIpRange returns the DestinationIpRange field value
func (o *UpdateRouteRequest) GetDestinationIpRange() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestinationIpRange
}

// GetDestinationIpRangeOk returns a tuple with the DestinationIpRange field value
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetDestinationIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationIpRange, true
}

// SetDestinationIpRange sets field value
func (o *UpdateRouteRequest) SetDestinationIpRange(v string) {
	o.DestinationIpRange = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateRouteRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetGatewayId() string {
	if o == nil || o.GatewayId == nil {
		var ret string
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetGatewayIdOk() (*string, bool) {
	if o == nil || o.GatewayId == nil {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasGatewayId() bool {
	if o != nil && o.GatewayId != nil {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given string and assigns it to the GatewayId field.
func (o *UpdateRouteRequest) SetGatewayId(v string) {
	o.GatewayId = &v
}

// GetNatServiceId returns the NatServiceId field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetNatServiceId() string {
	if o == nil || o.NatServiceId == nil {
		var ret string
		return ret
	}
	return *o.NatServiceId
}

// GetNatServiceIdOk returns a tuple with the NatServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetNatServiceIdOk() (*string, bool) {
	if o == nil || o.NatServiceId == nil {
		return nil, false
	}
	return o.NatServiceId, true
}

// HasNatServiceId returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasNatServiceId() bool {
	if o != nil && o.NatServiceId != nil {
		return true
	}

	return false
}

// SetNatServiceId gets a reference to the given string and assigns it to the NatServiceId field.
func (o *UpdateRouteRequest) SetNatServiceId(v string) {
	o.NatServiceId = &v
}

// GetNetPeeringId returns the NetPeeringId field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetNetPeeringId() string {
	if o == nil || o.NetPeeringId == nil {
		var ret string
		return ret
	}
	return *o.NetPeeringId
}

// GetNetPeeringIdOk returns a tuple with the NetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetNetPeeringIdOk() (*string, bool) {
	if o == nil || o.NetPeeringId == nil {
		return nil, false
	}
	return o.NetPeeringId, true
}

// HasNetPeeringId returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasNetPeeringId() bool {
	if o != nil && o.NetPeeringId != nil {
		return true
	}

	return false
}

// SetNetPeeringId gets a reference to the given string and assigns it to the NetPeeringId field.
func (o *UpdateRouteRequest) SetNetPeeringId(v string) {
	o.NetPeeringId = &v
}

// GetNicId returns the NicId field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetNicId() string {
	if o == nil || o.NicId == nil {
		var ret string
		return ret
	}
	return *o.NicId
}

// GetNicIdOk returns a tuple with the NicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetNicIdOk() (*string, bool) {
	if o == nil || o.NicId == nil {
		return nil, false
	}
	return o.NicId, true
}

// HasNicId returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasNicId() bool {
	if o != nil && o.NicId != nil {
		return true
	}

	return false
}

// SetNicId gets a reference to the given string and assigns it to the NicId field.
func (o *UpdateRouteRequest) SetNicId(v string) {
	o.NicId = &v
}

// GetRouteTableId returns the RouteTableId field value
func (o *UpdateRouteRequest) GetRouteTableId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetRouteTableIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RouteTableId, true
}

// SetRouteTableId sets field value
func (o *UpdateRouteRequest) SetRouteTableId(v string) {
	o.RouteTableId = v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *UpdateRouteRequest) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteRequest) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *UpdateRouteRequest) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *UpdateRouteRequest) SetVmId(v string) {
	o.VmId = &v
}

func (o UpdateRouteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DestinationIpRange"] = o.DestinationIpRange
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.GatewayId != nil {
		toSerialize["GatewayId"] = o.GatewayId
	}
	if o.NatServiceId != nil {
		toSerialize["NatServiceId"] = o.NatServiceId
	}
	if o.NetPeeringId != nil {
		toSerialize["NetPeeringId"] = o.NetPeeringId
	}
	if o.NicId != nil {
		toSerialize["NicId"] = o.NicId
	}
	if true {
		toSerialize["RouteTableId"] = o.RouteTableId
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateRouteRequest struct {
	value *UpdateRouteRequest
	isSet bool
}

func (v NullableUpdateRouteRequest) Get() *UpdateRouteRequest {
	return v.value
}

func (v *NullableUpdateRouteRequest) Set(val *UpdateRouteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRouteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRouteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRouteRequest(val *UpdateRouteRequest) *NullableUpdateRouteRequest {
	return &NullableUpdateRouteRequest{value: val, isSet: true}
}

func (v NullableUpdateRouteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRouteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateRouteResponse struct for UpdateRouteResponse
type UpdateRouteResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	RouteTable *RouteTable `json:"RouteTable,omitempty"`
}

// NewUpdateRouteResponse instantiates a new UpdateRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRouteResponse() *UpdateRouteResponse {
	this := UpdateRouteResponse{}
	return &this
}

// NewUpdateRouteResponseWithDefaults instantiates a new UpdateRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRouteResponseWithDefaults() *UpdateRouteResponse {
	this := UpdateRouteResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateRouteResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateRouteResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateRouteResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *UpdateRouteResponse) GetRouteTable() RouteTable {
	if o == nil || o.RouteTable == nil {
		var ret RouteTable
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteResponse) GetRouteTableOk() (*RouteTable, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *UpdateRouteResponse) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given RouteTable and assigns it to the RouteTable field.
func (o *UpdateRouteResponse) SetRouteTable(v RouteTable) {
	o.RouteTable = &v
}

func (o UpdateRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.RouteTable != nil {
		toSerialize["RouteTable"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateRouteResponse struct {
	value *UpdateRouteResponse
	isSet bool
}

func (v NullableUpdateRouteResponse) Get() *UpdateRouteResponse {
	return v.value
}

func (v *NullableUpdateRouteResponse) Set(val *UpdateRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRouteResponse(val *UpdateRouteResponse) *NullableUpdateRouteResponse {
	return &NullableUpdateRouteResponse{value: val, isSet: true}
}

func (v NullableUpdateRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateServerCertificateRequest struct for UpdateServerCertificateRequest
type UpdateServerCertificateRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The name of the server certificate you want to modify.
	Name *string `json:"Name,omitempty"`
	// A new name for the server certificate.
	NewName *string `json:"NewName,omitempty"`
	// A new path for the server certificate.
	NewPath *string `json:"NewPath,omitempty"`
}

// NewUpdateServerCertificateRequest instantiates a new UpdateServerCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServerCertificateRequest() *UpdateServerCertificateRequest {
	this := UpdateServerCertificateRequest{}
	return &this
}

// NewUpdateServerCertificateRequestWithDefaults instantiates a new UpdateServerCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServerCertificateRequestWithDefaults() *UpdateServerCertificateRequest {
	this := UpdateServerCertificateRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateServerCertificateRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateServerCertificateRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateServerCertificateRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateServerCertificateRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateServerCertificateRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateServerCertificateRequest) SetName(v string) {
	o.Name = &v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *UpdateServerCertificateRequest) GetNewName() string {
	if o == nil || o.NewName == nil {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateRequest) GetNewNameOk() (*string, bool) {
	if o == nil || o.NewName == nil {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *UpdateServerCertificateRequest) HasNewName() bool {
	if o != nil && o.NewName != nil {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *UpdateServerCertificateRequest) SetNewName(v string) {
	o.NewName = &v
}

// GetNewPath returns the NewPath field value if set, zero value otherwise.
func (o *UpdateServerCertificateRequest) GetNewPath() string {
	if o == nil || o.NewPath == nil {
		var ret string
		return ret
	}
	return *o.NewPath
}

// GetNewPathOk returns a tuple with the NewPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateRequest) GetNewPathOk() (*string, bool) {
	if o == nil || o.NewPath == nil {
		return nil, false
	}
	return o.NewPath, true
}

// HasNewPath returns a boolean if a field has been set.
func (o *UpdateServerCertificateRequest) HasNewPath() bool {
	if o != nil && o.NewPath != nil {
		return true
	}

	return false
}

// SetNewPath gets a reference to the given string and assigns it to the NewPath field.
func (o *UpdateServerCertificateRequest) SetNewPath(v string) {
	o.NewPath = &v
}

func (o UpdateServerCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.NewName != nil {
		toSerialize["NewName"] = o.NewName
	}
	if o.NewPath != nil {
		toSerialize["NewPath"] = o.NewPath
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateServerCertificateRequest struct {
	value *UpdateServerCertificateRequest
	isSet bool
}

func (v NullableUpdateServerCertificateRequest) Get() *UpdateServerCertificateRequest {
	return v.value
}

func (v *NullableUpdateServerCertificateRequest) Set(val *UpdateServerCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServerCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServerCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServerCertificateRequest(val *UpdateServerCertificateRequest) *NullableUpdateServerCertificateRequest {
	return &NullableUpdateServerCertificateRequest{value: val, isSet: true}
}

func (v NullableUpdateServerCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServerCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateServerCertificateResponse struct for UpdateServerCertificateResponse
type UpdateServerCertificateResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	ServerCertificate *ServerCertificate `json:"ServerCertificate,omitempty"`
}

// NewUpdateServerCertificateResponse instantiates a new UpdateServerCertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServerCertificateResponse() *UpdateServerCertificateResponse {
	this := UpdateServerCertificateResponse{}
	return &this
}

// NewUpdateServerCertificateResponseWithDefaults instantiates a new UpdateServerCertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServerCertificateResponseWithDefaults() *UpdateServerCertificateResponse {
	this := UpdateServerCertificateResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateServerCertificateResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateServerCertificateResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateServerCertificateResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetServerCertificate returns the ServerCertificate field value if set, zero value otherwise.
func (o *UpdateServerCertificateResponse) GetServerCertificate() ServerCertificate {
	if o == nil || o.ServerCertificate == nil {
		var ret ServerCertificate
		return ret
	}
	return *o.ServerCertificate
}

// GetServerCertificateOk returns a tuple with the ServerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerCertificateResponse) GetServerCertificateOk() (*ServerCertificate, bool) {
	if o == nil || o.ServerCertificate == nil {
		return nil, false
	}
	return o.ServerCertificate, true
}

// HasServerCertificate returns a boolean if a field has been set.
func (o *UpdateServerCertificateResponse) HasServerCertificate() bool {
	if o != nil && o.ServerCertificate != nil {
		return true
	}

	return false
}

// SetServerCertificate gets a reference to the given ServerCertificate and assigns it to the ServerCertificate field.
func (o *UpdateServerCertificateResponse) SetServerCertificate(v ServerCertificate) {
	o.ServerCertificate = &v
}

func (o UpdateServerCertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.ServerCertificate != nil {
		toSerialize["ServerCertificate"] = o.ServerCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateServerCertificateResponse struct {
	value *UpdateServerCertificateResponse
	isSet bool
}

func (v NullableUpdateServerCertificateResponse) Get() *UpdateServerCertificateResponse {
	return v.value
}

func (v *NullableUpdateServerCertificateResponse) Set(val *UpdateServerCertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServerCertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServerCertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServerCertificateResponse(val *UpdateServerCertificateResponse) *NullableUpdateServerCertificateResponse {
	return &NullableUpdateServerCertificateResponse{value: val, isSet: true}
}

func (v NullableUpdateServerCertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServerCertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateSnapshotRequest struct for UpdateSnapshotRequest
type UpdateSnapshotRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	PermissionsToCreateVolume PermissionsOnResourceCreation `json:"PermissionsToCreateVolume"`
	// The ID of the snapshot.
	SnapshotId string `json:"SnapshotId"`
}

// NewUpdateSnapshotRequest instantiates a new UpdateSnapshotRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSnapshotRequest(permissionsToCreateVolume PermissionsOnResourceCreation, snapshotId string, ) *UpdateSnapshotRequest {
	this := UpdateSnapshotRequest{}
	this.PermissionsToCreateVolume = permissionsToCreateVolume
	this.SnapshotId = snapshotId
	return &this
}

// NewUpdateSnapshotRequestWithDefaults instantiates a new UpdateSnapshotRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSnapshotRequestWithDefaults() *UpdateSnapshotRequest {
	this := UpdateSnapshotRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateSnapshotRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateSnapshotRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateSnapshotRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetPermissionsToCreateVolume returns the PermissionsToCreateVolume field value
func (o *UpdateSnapshotRequest) GetPermissionsToCreateVolume() PermissionsOnResourceCreation {
	if o == nil  {
		var ret PermissionsOnResourceCreation
		return ret
	}

	return o.PermissionsToCreateVolume
}

// GetPermissionsToCreateVolumeOk returns a tuple with the PermissionsToCreateVolume field value
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotRequest) GetPermissionsToCreateVolumeOk() (*PermissionsOnResourceCreation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PermissionsToCreateVolume, true
}

// SetPermissionsToCreateVolume sets field value
func (o *UpdateSnapshotRequest) SetPermissionsToCreateVolume(v PermissionsOnResourceCreation) {
	o.PermissionsToCreateVolume = v
}

// GetSnapshotId returns the SnapshotId field value
func (o *UpdateSnapshotRequest) GetSnapshotId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotRequest) GetSnapshotIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *UpdateSnapshotRequest) SetSnapshotId(v string) {
	o.SnapshotId = v
}

func (o UpdateSnapshotRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["PermissionsToCreateVolume"] = o.PermissionsToCreateVolume
	}
	if true {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateSnapshotRequest struct {
	value *UpdateSnapshotRequest
	isSet bool
}

func (v NullableUpdateSnapshotRequest) Get() *UpdateSnapshotRequest {
	return v.value
}

func (v *NullableUpdateSnapshotRequest) Set(val *UpdateSnapshotRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSnapshotRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSnapshotRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSnapshotRequest(val *UpdateSnapshotRequest) *NullableUpdateSnapshotRequest {
	return &NullableUpdateSnapshotRequest{value: val, isSet: true}
}

func (v NullableUpdateSnapshotRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSnapshotRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateSnapshotResponse struct for UpdateSnapshotResponse
type UpdateSnapshotResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Snapshot *Snapshot `json:"Snapshot,omitempty"`
}

// NewUpdateSnapshotResponse instantiates a new UpdateSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSnapshotResponse() *UpdateSnapshotResponse {
	this := UpdateSnapshotResponse{}
	return &this
}

// NewUpdateSnapshotResponseWithDefaults instantiates a new UpdateSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSnapshotResponseWithDefaults() *UpdateSnapshotResponse {
	this := UpdateSnapshotResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateSnapshotResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateSnapshotResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateSnapshotResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *UpdateSnapshotResponse) GetSnapshot() Snapshot {
	if o == nil || o.Snapshot == nil {
		var ret Snapshot
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotResponse) GetSnapshotOk() (*Snapshot, bool) {
	if o == nil || o.Snapshot == nil {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *UpdateSnapshotResponse) HasSnapshot() bool {
	if o != nil && o.Snapshot != nil {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given Snapshot and assigns it to the Snapshot field.
func (o *UpdateSnapshotResponse) SetSnapshot(v Snapshot) {
	o.Snapshot = &v
}

func (o UpdateSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Snapshot != nil {
		toSerialize["Snapshot"] = o.Snapshot
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateSnapshotResponse struct {
	value *UpdateSnapshotResponse
	isSet bool
}

func (v NullableUpdateSnapshotResponse) Get() *UpdateSnapshotResponse {
	return v.value
}

func (v *NullableUpdateSnapshotResponse) Set(val *UpdateSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSnapshotResponse(val *UpdateSnapshotResponse) *NullableUpdateSnapshotResponse {
	return &NullableUpdateSnapshotResponse{value: val, isSet: true}
}

func (v NullableUpdateSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateSubnetRequest struct for UpdateSubnetRequest
type UpdateSubnetRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// If `true`, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet.
	MapPublicIpOnLaunch bool `json:"MapPublicIpOnLaunch"`
	// The ID of the Subnet.
	SubnetId string `json:"SubnetId"`
}

// NewUpdateSubnetRequest instantiates a new UpdateSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubnetRequest(mapPublicIpOnLaunch bool, subnetId string, ) *UpdateSubnetRequest {
	this := UpdateSubnetRequest{}
	this.MapPublicIpOnLaunch = mapPublicIpOnLaunch
	this.SubnetId = subnetId
	return &this
}

// NewUpdateSubnetRequestWithDefaults instantiates a new UpdateSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubnetRequestWithDefaults() *UpdateSubnetRequest {
	this := UpdateSubnetRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateSubnetRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubnetRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateSubnetRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateSubnetRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetMapPublicIpOnLaunch returns the MapPublicIpOnLaunch field value
func (o *UpdateSubnetRequest) GetMapPublicIpOnLaunch() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MapPublicIpOnLaunch
}

// GetMapPublicIpOnLaunchOk returns a tuple with the MapPublicIpOnLaunch field value
// and a boolean to check if the value has been set.
func (o *UpdateSubnetRequest) GetMapPublicIpOnLaunchOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MapPublicIpOnLaunch, true
}

// SetMapPublicIpOnLaunch sets field value
func (o *UpdateSubnetRequest) SetMapPublicIpOnLaunch(v bool) {
	o.MapPublicIpOnLaunch = v
}

// GetSubnetId returns the SubnetId field value
func (o *UpdateSubnetRequest) GetSubnetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *UpdateSubnetRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *UpdateSubnetRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o UpdateSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["MapPublicIpOnLaunch"] = o.MapPublicIpOnLaunch
	}
	if true {
		toSerialize["SubnetId"] = o.SubnetId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateSubnetRequest struct {
	value *UpdateSubnetRequest
	isSet bool
}

func (v NullableUpdateSubnetRequest) Get() *UpdateSubnetRequest {
	return v.value
}

func (v *NullableUpdateSubnetRequest) Set(val *UpdateSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubnetRequest(val *UpdateSubnetRequest) *NullableUpdateSubnetRequest {
	return &NullableUpdateSubnetRequest{value: val, isSet: true}
}

func (v NullableUpdateSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateSubnetResponse struct for UpdateSubnetResponse
type UpdateSubnetResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Subnet *Subnet `json:"Subnet,omitempty"`
}

// NewUpdateSubnetResponse instantiates a new UpdateSubnetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubnetResponse() *UpdateSubnetResponse {
	this := UpdateSubnetResponse{}
	return &this
}

// NewUpdateSubnetResponseWithDefaults instantiates a new UpdateSubnetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubnetResponseWithDefaults() *UpdateSubnetResponse {
	this := UpdateSubnetResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateSubnetResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubnetResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateSubnetResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateSubnetResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *UpdateSubnetResponse) GetSubnet() Subnet {
	if o == nil || o.Subnet == nil {
		var ret Subnet
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubnetResponse) GetSubnetOk() (*Subnet, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *UpdateSubnetResponse) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given Subnet and assigns it to the Subnet field.
func (o *UpdateSubnetResponse) SetSubnet(v Subnet) {
	o.Subnet = &v
}

func (o UpdateSubnetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Subnet != nil {
		toSerialize["Subnet"] = o.Subnet
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateSubnetResponse struct {
	value *UpdateSubnetResponse
	isSet bool
}

func (v NullableUpdateSubnetResponse) Get() *UpdateSubnetResponse {
	return v.value
}

func (v *NullableUpdateSubnetResponse) Set(val *UpdateSubnetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubnetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubnetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubnetResponse(val *UpdateSubnetResponse) *NullableUpdateSubnetResponse {
	return &NullableUpdateSubnetResponse{value: val, isSet: true}
}

func (v NullableUpdateSubnetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubnetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateVmRequest struct for UpdateVmRequest
type UpdateVmRequest struct {
	// One or more block device mappings of the VM.
	BlockDeviceMappings *[]BlockDeviceMappingVmUpdate `json:"BlockDeviceMappings,omitempty"`
	// If `true`, the VM is optimized for BSU I/O.
	BsuOptimized *bool `json:"BsuOptimized,omitempty"`
	// If `true`, you cannot terminate the VM using Cockpit, the CLI or the API. If `false`, you can.
	DeletionProtection *bool `json:"DeletionProtection,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// (Net only) If `true`, the source/destination check is enabled. If `false`, it is disabled. This value must be `false` for a NAT VM to perform network address translation (NAT) in a Net.
	IsSourceDestChecked *bool `json:"IsSourceDestChecked,omitempty"`
	// The name of the keypair.<br /> To complete the replacement, manually replace the old public key with the new public key in the ~/.ssh/authorized_keys file located in the VM. Restart the VM to apply the change.
	KeypairName *string `json:"KeypairName,omitempty"`
	// The performance of the VM (`standard` \\| `high` \\|  `highest`).
	Performance *string `json:"Performance,omitempty"`
	// One or more IDs of security groups for the VM.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
	// The Base64-encoded MIME user data.
	UserData *string `json:"UserData,omitempty"`
	// The ID of the VM.
	VmId string `json:"VmId"`
	// The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
	VmInitiatedShutdownBehavior *string `json:"VmInitiatedShutdownBehavior,omitempty"`
	// The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).
	VmType *string `json:"VmType,omitempty"`
}

// NewUpdateVmRequest instantiates a new UpdateVmRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVmRequest(vmId string, ) *UpdateVmRequest {
	this := UpdateVmRequest{}
	this.VmId = vmId
	return &this
}

// NewUpdateVmRequestWithDefaults instantiates a new UpdateVmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVmRequestWithDefaults() *UpdateVmRequest {
	this := UpdateVmRequest{}
	return &this
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetBlockDeviceMappings() []BlockDeviceMappingVmUpdate {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingVmUpdate
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetBlockDeviceMappingsOk() (*[]BlockDeviceMappingVmUpdate, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		return nil, false
	}
	return o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingVmUpdate and assigns it to the BlockDeviceMappings field.
func (o *UpdateVmRequest) SetBlockDeviceMappings(v []BlockDeviceMappingVmUpdate) {
	o.BlockDeviceMappings = &v
}

// GetBsuOptimized returns the BsuOptimized field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetBsuOptimized() bool {
	if o == nil || o.BsuOptimized == nil {
		var ret bool
		return ret
	}
	return *o.BsuOptimized
}

// GetBsuOptimizedOk returns a tuple with the BsuOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetBsuOptimizedOk() (*bool, bool) {
	if o == nil || o.BsuOptimized == nil {
		return nil, false
	}
	return o.BsuOptimized, true
}

// HasBsuOptimized returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasBsuOptimized() bool {
	if o != nil && o.BsuOptimized != nil {
		return true
	}

	return false
}

// SetBsuOptimized gets a reference to the given bool and assigns it to the BsuOptimized field.
func (o *UpdateVmRequest) SetBsuOptimized(v bool) {
	o.BsuOptimized = &v
}

// GetDeletionProtection returns the DeletionProtection field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetDeletionProtection() bool {
	if o == nil || o.DeletionProtection == nil {
		var ret bool
		return ret
	}
	return *o.DeletionProtection
}

// GetDeletionProtectionOk returns a tuple with the DeletionProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetDeletionProtectionOk() (*bool, bool) {
	if o == nil || o.DeletionProtection == nil {
		return nil, false
	}
	return o.DeletionProtection, true
}

// HasDeletionProtection returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasDeletionProtection() bool {
	if o != nil && o.DeletionProtection != nil {
		return true
	}

	return false
}

// SetDeletionProtection gets a reference to the given bool and assigns it to the DeletionProtection field.
func (o *UpdateVmRequest) SetDeletionProtection(v bool) {
	o.DeletionProtection = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateVmRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetIsSourceDestChecked returns the IsSourceDestChecked field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetIsSourceDestChecked() bool {
	if o == nil || o.IsSourceDestChecked == nil {
		var ret bool
		return ret
	}
	return *o.IsSourceDestChecked
}

// GetIsSourceDestCheckedOk returns a tuple with the IsSourceDestChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetIsSourceDestCheckedOk() (*bool, bool) {
	if o == nil || o.IsSourceDestChecked == nil {
		return nil, false
	}
	return o.IsSourceDestChecked, true
}

// HasIsSourceDestChecked returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasIsSourceDestChecked() bool {
	if o != nil && o.IsSourceDestChecked != nil {
		return true
	}

	return false
}

// SetIsSourceDestChecked gets a reference to the given bool and assigns it to the IsSourceDestChecked field.
func (o *UpdateVmRequest) SetIsSourceDestChecked(v bool) {
	o.IsSourceDestChecked = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil || o.KeypairName == nil {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *UpdateVmRequest) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetPerformance returns the Performance field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetPerformance() string {
	if o == nil || o.Performance == nil {
		var ret string
		return ret
	}
	return *o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetPerformanceOk() (*string, bool) {
	if o == nil || o.Performance == nil {
		return nil, false
	}
	return o.Performance, true
}

// HasPerformance returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasPerformance() bool {
	if o != nil && o.Performance != nil {
		return true
	}

	return false
}

// SetPerformance gets a reference to the given string and assigns it to the Performance field.
func (o *UpdateVmRequest) SetPerformance(v string) {
	o.Performance = &v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetSecurityGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *UpdateVmRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetUserData() string {
	if o == nil || o.UserData == nil {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetUserDataOk() (*string, bool) {
	if o == nil || o.UserData == nil {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasUserData() bool {
	if o != nil && o.UserData != nil {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *UpdateVmRequest) SetUserData(v string) {
	o.UserData = &v
}

// GetVmId returns the VmId field value
func (o *UpdateVmRequest) GetVmId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetVmIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *UpdateVmRequest) SetVmId(v string) {
	o.VmId = v
}

// GetVmInitiatedShutdownBehavior returns the VmInitiatedShutdownBehavior field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetVmInitiatedShutdownBehavior() string {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		var ret string
		return ret
	}
	return *o.VmInitiatedShutdownBehavior
}

// GetVmInitiatedShutdownBehaviorOk returns a tuple with the VmInitiatedShutdownBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetVmInitiatedShutdownBehaviorOk() (*string, bool) {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		return nil, false
	}
	return o.VmInitiatedShutdownBehavior, true
}

// HasVmInitiatedShutdownBehavior returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasVmInitiatedShutdownBehavior() bool {
	if o != nil && o.VmInitiatedShutdownBehavior != nil {
		return true
	}

	return false
}

// SetVmInitiatedShutdownBehavior gets a reference to the given string and assigns it to the VmInitiatedShutdownBehavior field.
func (o *UpdateVmRequest) SetVmInitiatedShutdownBehavior(v string) {
	o.VmInitiatedShutdownBehavior = &v
}

// GetVmType returns the VmType field value if set, zero value otherwise.
func (o *UpdateVmRequest) GetVmType() string {
	if o == nil || o.VmType == nil {
		var ret string
		return ret
	}
	return *o.VmType
}

// GetVmTypeOk returns a tuple with the VmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmRequest) GetVmTypeOk() (*string, bool) {
	if o == nil || o.VmType == nil {
		return nil, false
	}
	return o.VmType, true
}

// HasVmType returns a boolean if a field has been set.
func (o *UpdateVmRequest) HasVmType() bool {
	if o != nil && o.VmType != nil {
		return true
	}

	return false
}

// SetVmType gets a reference to the given string and assigns it to the VmType field.
func (o *UpdateVmRequest) SetVmType(v string) {
	o.VmType = &v
}

func (o UpdateVmRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockDeviceMappings != nil {
		toSerialize["BlockDeviceMappings"] = o.BlockDeviceMappings
	}
	if o.BsuOptimized != nil {
		toSerialize["BsuOptimized"] = o.BsuOptimized
	}
	if o.DeletionProtection != nil {
		toSerialize["DeletionProtection"] = o.DeletionProtection
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.IsSourceDestChecked != nil {
		toSerialize["IsSourceDestChecked"] = o.IsSourceDestChecked
	}
	if o.KeypairName != nil {
		toSerialize["KeypairName"] = o.KeypairName
	}
	if o.Performance != nil {
		toSerialize["Performance"] = o.Performance
	}
	if o.SecurityGroupIds != nil {
		toSerialize["SecurityGroupIds"] = o.SecurityGroupIds
	}
	if o.UserData != nil {
		toSerialize["UserData"] = o.UserData
	}
	if true {
		toSerialize["VmId"] = o.VmId
	}
	if o.VmInitiatedShutdownBehavior != nil {
		toSerialize["VmInitiatedShutdownBehavior"] = o.VmInitiatedShutdownBehavior
	}
	if o.VmType != nil {
		toSerialize["VmType"] = o.VmType
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateVmRequest struct {
	value *UpdateVmRequest
	isSet bool
}

func (v NullableUpdateVmRequest) Get() *UpdateVmRequest {
	return v.value
}

func (v *NullableUpdateVmRequest) Set(val *UpdateVmRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVmRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVmRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVmRequest(val *UpdateVmRequest) *NullableUpdateVmRequest {
	return &NullableUpdateVmRequest{value: val, isSet: true}
}

func (v NullableUpdateVmRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVmRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// UpdateVmResponse struct for UpdateVmResponse
type UpdateVmResponse struct {
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
	Vm *Vm `json:"Vm,omitempty"`
}

// NewUpdateVmResponse instantiates a new UpdateVmResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVmResponse() *UpdateVmResponse {
	this := UpdateVmResponse{}
	return &this
}

// NewUpdateVmResponseWithDefaults instantiates a new UpdateVmResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVmResponseWithDefaults() *UpdateVmResponse {
	this := UpdateVmResponse{}
	return &this
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *UpdateVmResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *UpdateVmResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *UpdateVmResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

// GetVm returns the Vm field value if set, zero value otherwise.
func (o *UpdateVmResponse) GetVm() Vm {
	if o == nil || o.Vm == nil {
		var ret Vm
		return ret
	}
	return *o.Vm
}

// GetVmOk returns a tuple with the Vm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmResponse) GetVmOk() (*Vm, bool) {
	if o == nil || o.Vm == nil {
		return nil, false
	}
	return o.Vm, true
}

// HasVm returns a boolean if a field has been set.
func (o *UpdateVmResponse) HasVm() bool {
	if o != nil && o.Vm != nil {
		return true
	}

	return false
}

// SetVm gets a reference to the given Vm and assigns it to the Vm field.
func (o *UpdateVmResponse) SetVm(v Vm) {
	o.Vm = &v
}

func (o UpdateVmResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	if o.Vm != nil {
		toSerialize["Vm"] = o.Vm
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateVmResponse struct {
	value *UpdateVmResponse
	isSet bool
}

func (v NullableUpdateVmResponse) Get() *UpdateVmResponse {
	return v.value
}

func (v *NullableUpdateVmResponse) Set(val *UpdateVmResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVmResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVmResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVmResponse(val *UpdateVmResponse) *NullableUpdateVmResponse {
	return &NullableUpdateVmResponse{value: val, isSet: true}
}

func (v NullableUpdateVmResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVmResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// VirtualGateway Information about the virtual gateway.
type VirtualGateway struct {
	// The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).
	ConnectionType *string `json:"ConnectionType,omitempty"`
	// The Net to which the virtual gateway is attached.
	NetToVirtualGatewayLinks *[]NetToVirtualGatewayLink `json:"NetToVirtualGatewayLinks,omitempty"`
	// The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the virtual gateway.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the virtual gateway.
	VirtualGatewayId *string `json:"VirtualGatewayId,omitempty"`
}

// NewVirtualGateway instantiates a new VirtualGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualGateway() *VirtualGateway {
	this := VirtualGateway{}
	return &this
}

// NewVirtualGatewayWithDefaults instantiates a new VirtualGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualGatewayWithDefaults() *VirtualGateway {
	this := VirtualGateway{}
	return &this
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *VirtualGateway) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualGateway) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *VirtualGateway) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *VirtualGateway) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetNetToVirtualGatewayLinks returns the NetToVirtualGatewayLinks field value if set, zero value otherwise.
func (o *VirtualGateway) GetNetToVirtualGatewayLinks() []NetToVirtualGatewayLink {
	if o == nil || o.NetToVirtualGatewayLinks == nil {
		var ret []NetToVirtualGatewayLink
		return ret
	}
	return *o.NetToVirtualGatewayLinks
}

// GetNetToVirtualGatewayLinksOk returns a tuple with the NetToVirtualGatewayLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualGateway) GetNetToVirtualGatewayLinksOk() (*[]NetToVirtualGatewayLink, bool) {
	if o == nil || o.NetToVirtualGatewayLinks == nil {
		return nil, false
	}
	return o.NetToVirtualGatewayLinks, true
}

// HasNetToVirtualGatewayLinks returns a boolean if a field has been set.
func (o *VirtualGateway) HasNetToVirtualGatewayLinks() bool {
	if o != nil && o.NetToVirtualGatewayLinks != nil {
		return true
	}

	return false
}

// SetNetToVirtualGatewayLinks gets a reference to the given []NetToVirtualGatewayLink and assigns it to the NetToVirtualGatewayLinks field.
func (o *VirtualGateway) SetNetToVirtualGatewayLinks(v []NetToVirtualGatewayLink) {
	o.NetToVirtualGatewayLinks = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VirtualGateway) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualGateway) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VirtualGateway) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *VirtualGateway) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VirtualGateway) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualGateway) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VirtualGateway) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *VirtualGateway) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value if set, zero value otherwise.
func (o *VirtualGateway) GetVirtualGatewayId() string {
	if o == nil || o.VirtualGatewayId == nil {
		var ret string
		return ret
	}
	return *o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualGateway) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil || o.VirtualGatewayId == nil {
		return nil, false
	}
	return o.VirtualGatewayId, true
}

// HasVirtualGatewayId returns a boolean if a field has been set.
func (o *VirtualGateway) HasVirtualGatewayId() bool {
	if o != nil && o.VirtualGatewayId != nil {
		return true
	}

	return false
}

// SetVirtualGatewayId gets a reference to the given string and assigns it to the VirtualGatewayId field.
func (o *VirtualGateway) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = &v
}

func (o VirtualGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionType != nil {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.NetToVirtualGatewayLinks != nil {
		toSerialize["NetToVirtualGatewayLinks"] = o.NetToVirtualGatewayLinks
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VirtualGatewayId != nil {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualGateway struct {
	value *VirtualGateway
	isSet bool
}

func (v NullableVirtualGateway) Get() *VirtualGateway {
	return v.value
}

func (v *NullableVirtualGateway) Set(val *VirtualGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualGateway(val *VirtualGateway) *NullableVirtualGateway {
	return &NullableVirtualGateway{value: val, isSet: true}
}

func (v NullableVirtualGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Vm Information about the VM.
type Vm struct {
	// The architecture of the VM (`i386` \\| `x86_64`).
	Architecture *string `json:"Architecture,omitempty"`
	// The block device mapping of the VM.
	BlockDeviceMappings *[]BlockDeviceMappingCreated `json:"BlockDeviceMappings,omitempty"`
	// If `true`, the VM is optimized for BSU I/O.
	BsuOptimized *bool `json:"BsuOptimized,omitempty"`
	// The idempotency token provided when launching the VM.
	ClientToken *string `json:"ClientToken,omitempty"`
	// If `true`, you cannot terminate the VM using Cockpit, the CLI or the API. If `false`, you can.
	DeletionProtection *bool `json:"DeletionProtection,omitempty"`
	// The hypervisor type of the VMs (`ovm` \\| `xen`).
	Hypervisor *string `json:"Hypervisor,omitempty"`
	// The ID of the OMI used to create the VM.
	ImageId *string `json:"ImageId,omitempty"`
	// (Net only) If `true`, the source/destination check is enabled. If `false`, it is disabled. This value must be `false` for a NAT VM to perform network address translation (NAT) in a Net.
	IsSourceDestChecked *bool `json:"IsSourceDestChecked,omitempty"`
	// The name of the keypair used when launching the VM.
	KeypairName *string `json:"KeypairName,omitempty"`
	// The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on).
	LaunchNumber *int32 `json:"LaunchNumber,omitempty"`
	// The ID of the Net in which the VM is running.
	NetId *string `json:"NetId,omitempty"`
	// The network interface cards (NICs) the VMs are attached to.
	Nics *[]NicLight `json:"Nics,omitempty"`
	// Indicates the operating system (OS) of the VM.
	OsFamily *string `json:"OsFamily,omitempty"`
	// The performance of the VM (`standard` \\| `high` \\|  `highest`).
	Performance *string `json:"Performance,omitempty"`
	Placement *Placement `json:"Placement,omitempty"`
	// The name of the private DNS.
	PrivateDnsName *string `json:"PrivateDnsName,omitempty"`
	// The primary private IP address of the VM.
	PrivateIp *string `json:"PrivateIp,omitempty"`
	// The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).
	ProductCodes *[]string `json:"ProductCodes,omitempty"`
	// The name of the public DNS.
	PublicDnsName *string `json:"PublicDnsName,omitempty"`
	// The public IP address of the VM.
	PublicIp *string `json:"PublicIp,omitempty"`
	// The reservation ID of the VM.
	ReservationId *string `json:"ReservationId,omitempty"`
	// The name of the root device for the VM (for example, /dev/vda1).
	RootDeviceName *string `json:"RootDeviceName,omitempty"`
	// The type of root device used by the VM (always `bsu`).
	RootDeviceType *string `json:"RootDeviceType,omitempty"`
	// One or more security groups associated with the VM.
	SecurityGroups *[]SecurityGroupLight `json:"SecurityGroups,omitempty"`
	// The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).
	State *string `json:"State,omitempty"`
	// The reason explaining the current state of the VM.
	StateReason *string `json:"StateReason,omitempty"`
	// The ID of the Subnet for the VM.
	SubnetId *string `json:"SubnetId,omitempty"`
	// One or more tags associated with the VM.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The Base64-encoded MIME user data.
	UserData *string `json:"UserData,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
	// The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted.
	VmInitiatedShutdownBehavior *string `json:"VmInitiatedShutdownBehavior,omitempty"`
	// The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).
	VmType *string `json:"VmType,omitempty"`
}

// NewVm instantiates a new Vm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVm() *Vm {
	this := Vm{}
	return &this
}

// NewVmWithDefaults instantiates a new Vm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmWithDefaults() *Vm {
	this := Vm{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *Vm) GetArchitecture() string {
	if o == nil || o.Architecture == nil {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetArchitectureOk() (*string, bool) {
	if o == nil || o.Architecture == nil {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *Vm) HasArchitecture() bool {
	if o != nil && o.Architecture != nil {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *Vm) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *Vm) GetBlockDeviceMappings() []BlockDeviceMappingCreated {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingCreated
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetBlockDeviceMappingsOk() (*[]BlockDeviceMappingCreated, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		return nil, false
	}
	return o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *Vm) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingCreated and assigns it to the BlockDeviceMappings field.
func (o *Vm) SetBlockDeviceMappings(v []BlockDeviceMappingCreated) {
	o.BlockDeviceMappings = &v
}

// GetBsuOptimized returns the BsuOptimized field value if set, zero value otherwise.
func (o *Vm) GetBsuOptimized() bool {
	if o == nil || o.BsuOptimized == nil {
		var ret bool
		return ret
	}
	return *o.BsuOptimized
}

// GetBsuOptimizedOk returns a tuple with the BsuOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetBsuOptimizedOk() (*bool, bool) {
	if o == nil || o.BsuOptimized == nil {
		return nil, false
	}
	return o.BsuOptimized, true
}

// HasBsuOptimized returns a boolean if a field has been set.
func (o *Vm) HasBsuOptimized() bool {
	if o != nil && o.BsuOptimized != nil {
		return true
	}

	return false
}

// SetBsuOptimized gets a reference to the given bool and assigns it to the BsuOptimized field.
func (o *Vm) SetBsuOptimized(v bool) {
	o.BsuOptimized = &v
}

// GetClientToken returns the ClientToken field value if set, zero value otherwise.
func (o *Vm) GetClientToken() string {
	if o == nil || o.ClientToken == nil {
		var ret string
		return ret
	}
	return *o.ClientToken
}

// GetClientTokenOk returns a tuple with the ClientToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetClientTokenOk() (*string, bool) {
	if o == nil || o.ClientToken == nil {
		return nil, false
	}
	return o.ClientToken, true
}

// HasClientToken returns a boolean if a field has been set.
func (o *Vm) HasClientToken() bool {
	if o != nil && o.ClientToken != nil {
		return true
	}

	return false
}

// SetClientToken gets a reference to the given string and assigns it to the ClientToken field.
func (o *Vm) SetClientToken(v string) {
	o.ClientToken = &v
}

// GetDeletionProtection returns the DeletionProtection field value if set, zero value otherwise.
func (o *Vm) GetDeletionProtection() bool {
	if o == nil || o.DeletionProtection == nil {
		var ret bool
		return ret
	}
	return *o.DeletionProtection
}

// GetDeletionProtectionOk returns a tuple with the DeletionProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetDeletionProtectionOk() (*bool, bool) {
	if o == nil || o.DeletionProtection == nil {
		return nil, false
	}
	return o.DeletionProtection, true
}

// HasDeletionProtection returns a boolean if a field has been set.
func (o *Vm) HasDeletionProtection() bool {
	if o != nil && o.DeletionProtection != nil {
		return true
	}

	return false
}

// SetDeletionProtection gets a reference to the given bool and assigns it to the DeletionProtection field.
func (o *Vm) SetDeletionProtection(v bool) {
	o.DeletionProtection = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *Vm) GetHypervisor() string {
	if o == nil || o.Hypervisor == nil {
		var ret string
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetHypervisorOk() (*string, bool) {
	if o == nil || o.Hypervisor == nil {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *Vm) HasHypervisor() bool {
	if o != nil && o.Hypervisor != nil {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given string and assigns it to the Hypervisor field.
func (o *Vm) SetHypervisor(v string) {
	o.Hypervisor = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *Vm) GetImageId() string {
	if o == nil || o.ImageId == nil {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetImageIdOk() (*string, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *Vm) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *Vm) SetImageId(v string) {
	o.ImageId = &v
}

// GetIsSourceDestChecked returns the IsSourceDestChecked field value if set, zero value otherwise.
func (o *Vm) GetIsSourceDestChecked() bool {
	if o == nil || o.IsSourceDestChecked == nil {
		var ret bool
		return ret
	}
	return *o.IsSourceDestChecked
}

// GetIsSourceDestCheckedOk returns a tuple with the IsSourceDestChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetIsSourceDestCheckedOk() (*bool, bool) {
	if o == nil || o.IsSourceDestChecked == nil {
		return nil, false
	}
	return o.IsSourceDestChecked, true
}

// HasIsSourceDestChecked returns a boolean if a field has been set.
func (o *Vm) HasIsSourceDestChecked() bool {
	if o != nil && o.IsSourceDestChecked != nil {
		return true
	}

	return false
}

// SetIsSourceDestChecked gets a reference to the given bool and assigns it to the IsSourceDestChecked field.
func (o *Vm) SetIsSourceDestChecked(v bool) {
	o.IsSourceDestChecked = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *Vm) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetKeypairNameOk() (*string, bool) {
	if o == nil || o.KeypairName == nil {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *Vm) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *Vm) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetLaunchNumber returns the LaunchNumber field value if set, zero value otherwise.
func (o *Vm) GetLaunchNumber() int32 {
	if o == nil || o.LaunchNumber == nil {
		var ret int32
		return ret
	}
	return *o.LaunchNumber
}

// GetLaunchNumberOk returns a tuple with the LaunchNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetLaunchNumberOk() (*int32, bool) {
	if o == nil || o.LaunchNumber == nil {
		return nil, false
	}
	return o.LaunchNumber, true
}

// HasLaunchNumber returns a boolean if a field has been set.
func (o *Vm) HasLaunchNumber() bool {
	if o != nil && o.LaunchNumber != nil {
		return true
	}

	return false
}

// SetLaunchNumber gets a reference to the given int32 and assigns it to the LaunchNumber field.
func (o *Vm) SetLaunchNumber(v int32) {
	o.LaunchNumber = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *Vm) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetNetIdOk() (*string, bool) {
	if o == nil || o.NetId == nil {
		return nil, false
	}
	return o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *Vm) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *Vm) SetNetId(v string) {
	o.NetId = &v
}

// GetNics returns the Nics field value if set, zero value otherwise.
func (o *Vm) GetNics() []NicLight {
	if o == nil || o.Nics == nil {
		var ret []NicLight
		return ret
	}
	return *o.Nics
}

// GetNicsOk returns a tuple with the Nics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetNicsOk() (*[]NicLight, bool) {
	if o == nil || o.Nics == nil {
		return nil, false
	}
	return o.Nics, true
}

// HasNics returns a boolean if a field has been set.
func (o *Vm) HasNics() bool {
	if o != nil && o.Nics != nil {
		return true
	}

	return false
}

// SetNics gets a reference to the given []NicLight and assigns it to the Nics field.
func (o *Vm) SetNics(v []NicLight) {
	o.Nics = &v
}

// GetOsFamily returns the OsFamily field value if set, zero value otherwise.
func (o *Vm) GetOsFamily() string {
	if o == nil || o.OsFamily == nil {
		var ret string
		return ret
	}
	return *o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetOsFamilyOk() (*string, bool) {
	if o == nil || o.OsFamily == nil {
		return nil, false
	}
	return o.OsFamily, true
}

// HasOsFamily returns a boolean if a field has been set.
func (o *Vm) HasOsFamily() bool {
	if o != nil && o.OsFamily != nil {
		return true
	}

	return false
}

// SetOsFamily gets a reference to the given string and assigns it to the OsFamily field.
func (o *Vm) SetOsFamily(v string) {
	o.OsFamily = &v
}

// GetPerformance returns the Performance field value if set, zero value otherwise.
func (o *Vm) GetPerformance() string {
	if o == nil || o.Performance == nil {
		var ret string
		return ret
	}
	return *o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPerformanceOk() (*string, bool) {
	if o == nil || o.Performance == nil {
		return nil, false
	}
	return o.Performance, true
}

// HasPerformance returns a boolean if a field has been set.
func (o *Vm) HasPerformance() bool {
	if o != nil && o.Performance != nil {
		return true
	}

	return false
}

// SetPerformance gets a reference to the given string and assigns it to the Performance field.
func (o *Vm) SetPerformance(v string) {
	o.Performance = &v
}

// GetPlacement returns the Placement field value if set, zero value otherwise.
func (o *Vm) GetPlacement() Placement {
	if o == nil || o.Placement == nil {
		var ret Placement
		return ret
	}
	return *o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPlacementOk() (*Placement, bool) {
	if o == nil || o.Placement == nil {
		return nil, false
	}
	return o.Placement, true
}

// HasPlacement returns a boolean if a field has been set.
func (o *Vm) HasPlacement() bool {
	if o != nil && o.Placement != nil {
		return true
	}

	return false
}

// SetPlacement gets a reference to the given Placement and assigns it to the Placement field.
func (o *Vm) SetPlacement(v Placement) {
	o.Placement = &v
}

// GetPrivateDnsName returns the PrivateDnsName field value if set, zero value otherwise.
func (o *Vm) GetPrivateDnsName() string {
	if o == nil || o.PrivateDnsName == nil {
		var ret string
		return ret
	}
	return *o.PrivateDnsName
}

// GetPrivateDnsNameOk returns a tuple with the PrivateDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPrivateDnsNameOk() (*string, bool) {
	if o == nil || o.PrivateDnsName == nil {
		return nil, false
	}
	return o.PrivateDnsName, true
}

// HasPrivateDnsName returns a boolean if a field has been set.
func (o *Vm) HasPrivateDnsName() bool {
	if o != nil && o.PrivateDnsName != nil {
		return true
	}

	return false
}

// SetPrivateDnsName gets a reference to the given string and assigns it to the PrivateDnsName field.
func (o *Vm) SetPrivateDnsName(v string) {
	o.PrivateDnsName = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *Vm) GetPrivateIp() string {
	if o == nil || o.PrivateIp == nil {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPrivateIpOk() (*string, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *Vm) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *Vm) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetProductCodes returns the ProductCodes field value if set, zero value otherwise.
func (o *Vm) GetProductCodes() []string {
	if o == nil || o.ProductCodes == nil {
		var ret []string
		return ret
	}
	return *o.ProductCodes
}

// GetProductCodesOk returns a tuple with the ProductCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetProductCodesOk() (*[]string, bool) {
	if o == nil || o.ProductCodes == nil {
		return nil, false
	}
	return o.ProductCodes, true
}

// HasProductCodes returns a boolean if a field has been set.
func (o *Vm) HasProductCodes() bool {
	if o != nil && o.ProductCodes != nil {
		return true
	}

	return false
}

// SetProductCodes gets a reference to the given []string and assigns it to the ProductCodes field.
func (o *Vm) SetProductCodes(v []string) {
	o.ProductCodes = &v
}

// GetPublicDnsName returns the PublicDnsName field value if set, zero value otherwise.
func (o *Vm) GetPublicDnsName() string {
	if o == nil || o.PublicDnsName == nil {
		var ret string
		return ret
	}
	return *o.PublicDnsName
}

// GetPublicDnsNameOk returns a tuple with the PublicDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPublicDnsNameOk() (*string, bool) {
	if o == nil || o.PublicDnsName == nil {
		return nil, false
	}
	return o.PublicDnsName, true
}

// HasPublicDnsName returns a boolean if a field has been set.
func (o *Vm) HasPublicDnsName() bool {
	if o != nil && o.PublicDnsName != nil {
		return true
	}

	return false
}

// SetPublicDnsName gets a reference to the given string and assigns it to the PublicDnsName field.
func (o *Vm) SetPublicDnsName(v string) {
	o.PublicDnsName = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *Vm) GetPublicIp() string {
	if o == nil || o.PublicIp == nil {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetPublicIpOk() (*string, bool) {
	if o == nil || o.PublicIp == nil {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *Vm) HasPublicIp() bool {
	if o != nil && o.PublicIp != nil {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *Vm) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *Vm) GetReservationId() string {
	if o == nil || o.ReservationId == nil {
		var ret string
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetReservationIdOk() (*string, bool) {
	if o == nil || o.ReservationId == nil {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *Vm) HasReservationId() bool {
	if o != nil && o.ReservationId != nil {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given string and assigns it to the ReservationId field.
func (o *Vm) SetReservationId(v string) {
	o.ReservationId = &v
}

// GetRootDeviceName returns the RootDeviceName field value if set, zero value otherwise.
func (o *Vm) GetRootDeviceName() string {
	if o == nil || o.RootDeviceName == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceName
}

// GetRootDeviceNameOk returns a tuple with the RootDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetRootDeviceNameOk() (*string, bool) {
	if o == nil || o.RootDeviceName == nil {
		return nil, false
	}
	return o.RootDeviceName, true
}

// HasRootDeviceName returns a boolean if a field has been set.
func (o *Vm) HasRootDeviceName() bool {
	if o != nil && o.RootDeviceName != nil {
		return true
	}

	return false
}

// SetRootDeviceName gets a reference to the given string and assigns it to the RootDeviceName field.
func (o *Vm) SetRootDeviceName(v string) {
	o.RootDeviceName = &v
}

// GetRootDeviceType returns the RootDeviceType field value if set, zero value otherwise.
func (o *Vm) GetRootDeviceType() string {
	if o == nil || o.RootDeviceType == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceType
}

// GetRootDeviceTypeOk returns a tuple with the RootDeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetRootDeviceTypeOk() (*string, bool) {
	if o == nil || o.RootDeviceType == nil {
		return nil, false
	}
	return o.RootDeviceType, true
}

// HasRootDeviceType returns a boolean if a field has been set.
func (o *Vm) HasRootDeviceType() bool {
	if o != nil && o.RootDeviceType != nil {
		return true
	}

	return false
}

// SetRootDeviceType gets a reference to the given string and assigns it to the RootDeviceType field.
func (o *Vm) SetRootDeviceType(v string) {
	o.RootDeviceType = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *Vm) GetSecurityGroups() []SecurityGroupLight {
	if o == nil || o.SecurityGroups == nil {
		var ret []SecurityGroupLight
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetSecurityGroupsOk() (*[]SecurityGroupLight, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *Vm) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []SecurityGroupLight and assigns it to the SecurityGroups field.
func (o *Vm) SetSecurityGroups(v []SecurityGroupLight) {
	o.SecurityGroups = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Vm) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Vm) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Vm) SetState(v string) {
	o.State = &v
}

// GetStateReason returns the StateReason field value if set, zero value otherwise.
func (o *Vm) GetStateReason() string {
	if o == nil || o.StateReason == nil {
		var ret string
		return ret
	}
	return *o.StateReason
}

// GetStateReasonOk returns a tuple with the StateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetStateReasonOk() (*string, bool) {
	if o == nil || o.StateReason == nil {
		return nil, false
	}
	return o.StateReason, true
}

// HasStateReason returns a boolean if a field has been set.
func (o *Vm) HasStateReason() bool {
	if o != nil && o.StateReason != nil {
		return true
	}

	return false
}

// SetStateReason gets a reference to the given string and assigns it to the StateReason field.
func (o *Vm) SetStateReason(v string) {
	o.StateReason = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *Vm) GetSubnetId() string {
	if o == nil || o.SubnetId == nil {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetSubnetIdOk() (*string, bool) {
	if o == nil || o.SubnetId == nil {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *Vm) HasSubnetId() bool {
	if o != nil && o.SubnetId != nil {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *Vm) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Vm) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Vm) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Vm) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *Vm) GetUserData() string {
	if o == nil || o.UserData == nil {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetUserDataOk() (*string, bool) {
	if o == nil || o.UserData == nil {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *Vm) HasUserData() bool {
	if o != nil && o.UserData != nil {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *Vm) SetUserData(v string) {
	o.UserData = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *Vm) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *Vm) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *Vm) SetVmId(v string) {
	o.VmId = &v
}

// GetVmInitiatedShutdownBehavior returns the VmInitiatedShutdownBehavior field value if set, zero value otherwise.
func (o *Vm) GetVmInitiatedShutdownBehavior() string {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		var ret string
		return ret
	}
	return *o.VmInitiatedShutdownBehavior
}

// GetVmInitiatedShutdownBehaviorOk returns a tuple with the VmInitiatedShutdownBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetVmInitiatedShutdownBehaviorOk() (*string, bool) {
	if o == nil || o.VmInitiatedShutdownBehavior == nil {
		return nil, false
	}
	return o.VmInitiatedShutdownBehavior, true
}

// HasVmInitiatedShutdownBehavior returns a boolean if a field has been set.
func (o *Vm) HasVmInitiatedShutdownBehavior() bool {
	if o != nil && o.VmInitiatedShutdownBehavior != nil {
		return true
	}

	return false
}

// SetVmInitiatedShutdownBehavior gets a reference to the given string and assigns it to the VmInitiatedShutdownBehavior field.
func (o *Vm) SetVmInitiatedShutdownBehavior(v string) {
	o.VmInitiatedShutdownBehavior = &v
}

// GetVmType returns the VmType field value if set, zero value otherwise.
func (o *Vm) GetVmType() string {
	if o == nil || o.VmType == nil {
		var ret string
		return ret
	}
	return *o.VmType
}

// GetVmTypeOk returns a tuple with the VmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetVmTypeOk() (*string, bool) {
	if o == nil || o.VmType == nil {
		return nil, false
	}
	return o.VmType, true
}

// HasVmType returns a boolean if a field has been set.
func (o *Vm) HasVmType() bool {
	if o != nil && o.VmType != nil {
		return true
	}

	return false
}

// SetVmType gets a reference to the given string and assigns it to the VmType field.
func (o *Vm) SetVmType(v string) {
	o.VmType = &v
}

func (o Vm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Architecture != nil {
		toSerialize["Architecture"] = o.Architecture
	}
	if o.BlockDeviceMappings != nil {
		toSerialize["BlockDeviceMappings"] = o.BlockDeviceMappings
	}
	if o.BsuOptimized != nil {
		toSerialize["BsuOptimized"] = o.BsuOptimized
	}
	if o.ClientToken != nil {
		toSerialize["ClientToken"] = o.ClientToken
	}
	if o.DeletionProtection != nil {
		toSerialize["DeletionProtection"] = o.DeletionProtection
	}
	if o.Hypervisor != nil {
		toSerialize["Hypervisor"] = o.Hypervisor
	}
	if o.ImageId != nil {
		toSerialize["ImageId"] = o.ImageId
	}
	if o.IsSourceDestChecked != nil {
		toSerialize["IsSourceDestChecked"] = o.IsSourceDestChecked
	}
	if o.KeypairName != nil {
		toSerialize["KeypairName"] = o.KeypairName
	}
	if o.LaunchNumber != nil {
		toSerialize["LaunchNumber"] = o.LaunchNumber
	}
	if o.NetId != nil {
		toSerialize["NetId"] = o.NetId
	}
	if o.Nics != nil {
		toSerialize["Nics"] = o.Nics
	}
	if o.OsFamily != nil {
		toSerialize["OsFamily"] = o.OsFamily
	}
	if o.Performance != nil {
		toSerialize["Performance"] = o.Performance
	}
	if o.Placement != nil {
		toSerialize["Placement"] = o.Placement
	}
	if o.PrivateDnsName != nil {
		toSerialize["PrivateDnsName"] = o.PrivateDnsName
	}
	if o.PrivateIp != nil {
		toSerialize["PrivateIp"] = o.PrivateIp
	}
	if o.ProductCodes != nil {
		toSerialize["ProductCodes"] = o.ProductCodes
	}
	if o.PublicDnsName != nil {
		toSerialize["PublicDnsName"] = o.PublicDnsName
	}
	if o.PublicIp != nil {
		toSerialize["PublicIp"] = o.PublicIp
	}
	if o.ReservationId != nil {
		toSerialize["ReservationId"] = o.ReservationId
	}
	if o.RootDeviceName != nil {
		toSerialize["RootDeviceName"] = o.RootDeviceName
	}
	if o.RootDeviceType != nil {
		toSerialize["RootDeviceType"] = o.RootDeviceType
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.StateReason != nil {
		toSerialize["StateReason"] = o.StateReason
	}
	if o.SubnetId != nil {
		toSerialize["SubnetId"] = o.SubnetId
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.UserData != nil {
		toSerialize["UserData"] = o.UserData
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	if o.VmInitiatedShutdownBehavior != nil {
		toSerialize["VmInitiatedShutdownBehavior"] = o.VmInitiatedShutdownBehavior
	}
	if o.VmType != nil {
		toSerialize["VmType"] = o.VmType
	}
	return json.Marshal(toSerialize)
}

type NullableVm struct {
	value *Vm
	isSet bool
}

func (v NullableVm) Get() *Vm {
	return v.value
}

func (v *NullableVm) Set(val *Vm) {
	v.value = val
	v.isSet = true
}

func (v NullableVm) IsSet() bool {
	return v.isSet
}

func (v *NullableVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVm(val *Vm) *NullableVm {
	return &NullableVm{value: val, isSet: true}
}

func (v NullableVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// VmState Information about the state of the VM.
type VmState struct {
	// The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`).
	CurrentState *string `json:"CurrentState,omitempty"`
	// The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`).
	PreviousState *string `json:"PreviousState,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
}

// NewVmState instantiates a new VmState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmState() *VmState {
	this := VmState{}
	return &this
}

// NewVmStateWithDefaults instantiates a new VmState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmStateWithDefaults() *VmState {
	this := VmState{}
	return &this
}

// GetCurrentState returns the CurrentState field value if set, zero value otherwise.
func (o *VmState) GetCurrentState() string {
	if o == nil || o.CurrentState == nil {
		var ret string
		return ret
	}
	return *o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmState) GetCurrentStateOk() (*string, bool) {
	if o == nil || o.CurrentState == nil {
		return nil, false
	}
	return o.CurrentState, true
}

// HasCurrentState returns a boolean if a field has been set.
func (o *VmState) HasCurrentState() bool {
	if o != nil && o.CurrentState != nil {
		return true
	}

	return false
}

// SetCurrentState gets a reference to the given string and assigns it to the CurrentState field.
func (o *VmState) SetCurrentState(v string) {
	o.CurrentState = &v
}

// GetPreviousState returns the PreviousState field value if set, zero value otherwise.
func (o *VmState) GetPreviousState() string {
	if o == nil || o.PreviousState == nil {
		var ret string
		return ret
	}
	return *o.PreviousState
}

// GetPreviousStateOk returns a tuple with the PreviousState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmState) GetPreviousStateOk() (*string, bool) {
	if o == nil || o.PreviousState == nil {
		return nil, false
	}
	return o.PreviousState, true
}

// HasPreviousState returns a boolean if a field has been set.
func (o *VmState) HasPreviousState() bool {
	if o != nil && o.PreviousState != nil {
		return true
	}

	return false
}

// SetPreviousState gets a reference to the given string and assigns it to the PreviousState field.
func (o *VmState) SetPreviousState(v string) {
	o.PreviousState = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *VmState) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmState) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *VmState) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *VmState) SetVmId(v string) {
	o.VmId = &v
}

func (o VmState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentState != nil {
		toSerialize["CurrentState"] = o.CurrentState
	}
	if o.PreviousState != nil {
		toSerialize["PreviousState"] = o.PreviousState
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	return json.Marshal(toSerialize)
}

type NullableVmState struct {
	value *VmState
	isSet bool
}

func (v NullableVmState) Get() *VmState {
	return v.value
}

func (v *NullableVmState) Set(val *VmState) {
	v.value = val
	v.isSet = true
}

func (v NullableVmState) IsSet() bool {
	return v.isSet
}

func (v *NullableVmState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmState(val *VmState) *NullableVmState {
	return &NullableVmState{value: val, isSet: true}
}

func (v NullableVmState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// VmStates Information about the states of the VMs.
type VmStates struct {
	// One or more scheduled events associated with the VM.
	MaintenanceEvents *[]MaintenanceEvent `json:"MaintenanceEvents,omitempty"`
	// The name of the Subregion of the VM.
	SubregionName *string `json:"SubregionName,omitempty"`
	// The ID of the VM.
	VmId *string `json:"VmId,omitempty"`
	// The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).
	VmState *string `json:"VmState,omitempty"`
}

// NewVmStates instantiates a new VmStates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmStates() *VmStates {
	this := VmStates{}
	return &this
}

// NewVmStatesWithDefaults instantiates a new VmStates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmStatesWithDefaults() *VmStates {
	this := VmStates{}
	return &this
}

// GetMaintenanceEvents returns the MaintenanceEvents field value if set, zero value otherwise.
func (o *VmStates) GetMaintenanceEvents() []MaintenanceEvent {
	if o == nil || o.MaintenanceEvents == nil {
		var ret []MaintenanceEvent
		return ret
	}
	return *o.MaintenanceEvents
}

// GetMaintenanceEventsOk returns a tuple with the MaintenanceEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmStates) GetMaintenanceEventsOk() (*[]MaintenanceEvent, bool) {
	if o == nil || o.MaintenanceEvents == nil {
		return nil, false
	}
	return o.MaintenanceEvents, true
}

// HasMaintenanceEvents returns a boolean if a field has been set.
func (o *VmStates) HasMaintenanceEvents() bool {
	if o != nil && o.MaintenanceEvents != nil {
		return true
	}

	return false
}

// SetMaintenanceEvents gets a reference to the given []MaintenanceEvent and assigns it to the MaintenanceEvents field.
func (o *VmStates) SetMaintenanceEvents(v []MaintenanceEvent) {
	o.MaintenanceEvents = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *VmStates) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmStates) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *VmStates) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *VmStates) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *VmStates) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmStates) GetVmIdOk() (*string, bool) {
	if o == nil || o.VmId == nil {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *VmStates) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *VmStates) SetVmId(v string) {
	o.VmId = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *VmStates) GetVmState() string {
	if o == nil || o.VmState == nil {
		var ret string
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmStates) GetVmStateOk() (*string, bool) {
	if o == nil || o.VmState == nil {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *VmStates) HasVmState() bool {
	if o != nil && o.VmState != nil {
		return true
	}

	return false
}

// SetVmState gets a reference to the given string and assigns it to the VmState field.
func (o *VmStates) SetVmState(v string) {
	o.VmState = &v
}

func (o VmStates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaintenanceEvents != nil {
		toSerialize["MaintenanceEvents"] = o.MaintenanceEvents
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.VmId != nil {
		toSerialize["VmId"] = o.VmId
	}
	if o.VmState != nil {
		toSerialize["VmState"] = o.VmState
	}
	return json.Marshal(toSerialize)
}

type NullableVmStates struct {
	value *VmStates
	isSet bool
}

func (v NullableVmStates) Get() *VmStates {
	return v.value
}

func (v *NullableVmStates) Set(val *VmStates) {
	v.value = val
	v.isSet = true
}

func (v NullableVmStates) IsSet() bool {
	return v.isSet
}

func (v *NullableVmStates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmStates(val *VmStates) *NullableVmStates {
	return &NullableVmStates{value: val, isSet: true}
}

func (v NullableVmStates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmStates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// VmType Information about the VM type.
type VmType struct {
	// Indicates whether the VM is optimized for BSU I/O.
	BsuOptimized *bool `json:"BsuOptimized,omitempty"`
	// The maximum number of private IP addresses per network interface card (NIC).
	MaxPrivateIps *int32 `json:"MaxPrivateIps,omitempty"`
	// The amount of memory, in gibibytes.
	MemorySize *float32 `json:"MemorySize,omitempty"`
	// The number of vCores.
	VcoreCount *int32 `json:"VcoreCount,omitempty"`
	// The name of the VM type.
	VmTypeName *string `json:"VmTypeName,omitempty"`
	// The maximum number of ephemeral storage disks.
	VolumeCount *int32 `json:"VolumeCount,omitempty"`
	// The size of one ephemeral storage disk, in gibibytes (GiB).
	VolumeSize *int32 `json:"VolumeSize,omitempty"`
}

// NewVmType instantiates a new VmType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmType() *VmType {
	this := VmType{}
	return &this
}

// NewVmTypeWithDefaults instantiates a new VmType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmTypeWithDefaults() *VmType {
	this := VmType{}
	return &this
}

// GetBsuOptimized returns the BsuOptimized field value if set, zero value otherwise.
func (o *VmType) GetBsuOptimized() bool {
	if o == nil || o.BsuOptimized == nil {
		var ret bool
		return ret
	}
	return *o.BsuOptimized
}

// GetBsuOptimizedOk returns a tuple with the BsuOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetBsuOptimizedOk() (*bool, bool) {
	if o == nil || o.BsuOptimized == nil {
		return nil, false
	}
	return o.BsuOptimized, true
}

// HasBsuOptimized returns a boolean if a field has been set.
func (o *VmType) HasBsuOptimized() bool {
	if o != nil && o.BsuOptimized != nil {
		return true
	}

	return false
}

// SetBsuOptimized gets a reference to the given bool and assigns it to the BsuOptimized field.
func (o *VmType) SetBsuOptimized(v bool) {
	o.BsuOptimized = &v
}

// GetMaxPrivateIps returns the MaxPrivateIps field value if set, zero value otherwise.
func (o *VmType) GetMaxPrivateIps() int32 {
	if o == nil || o.MaxPrivateIps == nil {
		var ret int32
		return ret
	}
	return *o.MaxPrivateIps
}

// GetMaxPrivateIpsOk returns a tuple with the MaxPrivateIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetMaxPrivateIpsOk() (*int32, bool) {
	if o == nil || o.MaxPrivateIps == nil {
		return nil, false
	}
	return o.MaxPrivateIps, true
}

// HasMaxPrivateIps returns a boolean if a field has been set.
func (o *VmType) HasMaxPrivateIps() bool {
	if o != nil && o.MaxPrivateIps != nil {
		return true
	}

	return false
}

// SetMaxPrivateIps gets a reference to the given int32 and assigns it to the MaxPrivateIps field.
func (o *VmType) SetMaxPrivateIps(v int32) {
	o.MaxPrivateIps = &v
}

// GetMemorySize returns the MemorySize field value if set, zero value otherwise.
func (o *VmType) GetMemorySize() float32 {
	if o == nil || o.MemorySize == nil {
		var ret float32
		return ret
	}
	return *o.MemorySize
}

// GetMemorySizeOk returns a tuple with the MemorySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetMemorySizeOk() (*float32, bool) {
	if o == nil || o.MemorySize == nil {
		return nil, false
	}
	return o.MemorySize, true
}

// HasMemorySize returns a boolean if a field has been set.
func (o *VmType) HasMemorySize() bool {
	if o != nil && o.MemorySize != nil {
		return true
	}

	return false
}

// SetMemorySize gets a reference to the given float32 and assigns it to the MemorySize field.
func (o *VmType) SetMemorySize(v float32) {
	o.MemorySize = &v
}

// GetVcoreCount returns the VcoreCount field value if set, zero value otherwise.
func (o *VmType) GetVcoreCount() int32 {
	if o == nil || o.VcoreCount == nil {
		var ret int32
		return ret
	}
	return *o.VcoreCount
}

// GetVcoreCountOk returns a tuple with the VcoreCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetVcoreCountOk() (*int32, bool) {
	if o == nil || o.VcoreCount == nil {
		return nil, false
	}
	return o.VcoreCount, true
}

// HasVcoreCount returns a boolean if a field has been set.
func (o *VmType) HasVcoreCount() bool {
	if o != nil && o.VcoreCount != nil {
		return true
	}

	return false
}

// SetVcoreCount gets a reference to the given int32 and assigns it to the VcoreCount field.
func (o *VmType) SetVcoreCount(v int32) {
	o.VcoreCount = &v
}

// GetVmTypeName returns the VmTypeName field value if set, zero value otherwise.
func (o *VmType) GetVmTypeName() string {
	if o == nil || o.VmTypeName == nil {
		var ret string
		return ret
	}
	return *o.VmTypeName
}

// GetVmTypeNameOk returns a tuple with the VmTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetVmTypeNameOk() (*string, bool) {
	if o == nil || o.VmTypeName == nil {
		return nil, false
	}
	return o.VmTypeName, true
}

// HasVmTypeName returns a boolean if a field has been set.
func (o *VmType) HasVmTypeName() bool {
	if o != nil && o.VmTypeName != nil {
		return true
	}

	return false
}

// SetVmTypeName gets a reference to the given string and assigns it to the VmTypeName field.
func (o *VmType) SetVmTypeName(v string) {
	o.VmTypeName = &v
}

// GetVolumeCount returns the VolumeCount field value if set, zero value otherwise.
func (o *VmType) GetVolumeCount() int32 {
	if o == nil || o.VolumeCount == nil {
		var ret int32
		return ret
	}
	return *o.VolumeCount
}

// GetVolumeCountOk returns a tuple with the VolumeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetVolumeCountOk() (*int32, bool) {
	if o == nil || o.VolumeCount == nil {
		return nil, false
	}
	return o.VolumeCount, true
}

// HasVolumeCount returns a boolean if a field has been set.
func (o *VmType) HasVolumeCount() bool {
	if o != nil && o.VolumeCount != nil {
		return true
	}

	return false
}

// SetVolumeCount gets a reference to the given int32 and assigns it to the VolumeCount field.
func (o *VmType) SetVolumeCount(v int32) {
	o.VolumeCount = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *VmType) GetVolumeSize() int32 {
	if o == nil || o.VolumeSize == nil {
		var ret int32
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmType) GetVolumeSizeOk() (*int32, bool) {
	if o == nil || o.VolumeSize == nil {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *VmType) HasVolumeSize() bool {
	if o != nil && o.VolumeSize != nil {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int32 and assigns it to the VolumeSize field.
func (o *VmType) SetVolumeSize(v int32) {
	o.VolumeSize = &v
}

func (o VmType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BsuOptimized != nil {
		toSerialize["BsuOptimized"] = o.BsuOptimized
	}
	if o.MaxPrivateIps != nil {
		toSerialize["MaxPrivateIps"] = o.MaxPrivateIps
	}
	if o.MemorySize != nil {
		toSerialize["MemorySize"] = o.MemorySize
	}
	if o.VcoreCount != nil {
		toSerialize["VcoreCount"] = o.VcoreCount
	}
	if o.VmTypeName != nil {
		toSerialize["VmTypeName"] = o.VmTypeName
	}
	if o.VolumeCount != nil {
		toSerialize["VolumeCount"] = o.VolumeCount
	}
	if o.VolumeSize != nil {
		toSerialize["VolumeSize"] = o.VolumeSize
	}
	return json.Marshal(toSerialize)
}

type NullableVmType struct {
	value *VmType
	isSet bool
}

func (v NullableVmType) Get() *VmType {
	return v.value
}

func (v *NullableVmType) Set(val *VmType) {
	v.value = val
	v.isSet = true
}

func (v NullableVmType) IsSet() bool {
	return v.isSet
}

func (v *NullableVmType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmType(val *VmType) *NullableVmType {
	return &NullableVmType{value: val, isSet: true}
}

func (v NullableVmType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// Volume Information about the volume.
type Volume struct {
	// The number of I/O operations per second (IOPS):<br /> - For `io1` volumes, the number of provisioned IOPS<br /> - For `gp2` volumes, the baseline performance of the volume
	Iops *int32 `json:"Iops,omitempty"`
	// Information about your volume attachment.
	LinkedVolumes *[]LinkedVolume `json:"LinkedVolumes,omitempty"`
	// The size of the volume, in gibibytes (GiB).
	Size *int32 `json:"Size,omitempty"`
	// The snapshot from which the volume was created.
	SnapshotId *string `json:"SnapshotId,omitempty"`
	// The state of the volume (`creating` \\| `available` \\| `in-use` \\| `deleting` \\| `error`).
	State *string `json:"State,omitempty"`
	// The Subregion in which the volume was created.
	SubregionName *string `json:"SubregionName,omitempty"`
	// One or more tags associated with the volume.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the volume.
	VolumeId *string `json:"VolumeId,omitempty"`
	// The type of the volume (`standard` \\| `gp2` \\| `io1`).
	VolumeType *string `json:"VolumeType,omitempty"`
}

// NewVolume instantiates a new Volume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolume() *Volume {
	this := Volume{}
	return &this
}

// NewVolumeWithDefaults instantiates a new Volume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeWithDefaults() *Volume {
	this := Volume{}
	return &this
}

// GetIops returns the Iops field value if set, zero value otherwise.
func (o *Volume) GetIops() int32 {
	if o == nil || o.Iops == nil {
		var ret int32
		return ret
	}
	return *o.Iops
}

// GetIopsOk returns a tuple with the Iops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetIopsOk() (*int32, bool) {
	if o == nil || o.Iops == nil {
		return nil, false
	}
	return o.Iops, true
}

// HasIops returns a boolean if a field has been set.
func (o *Volume) HasIops() bool {
	if o != nil && o.Iops != nil {
		return true
	}

	return false
}

// SetIops gets a reference to the given int32 and assigns it to the Iops field.
func (o *Volume) SetIops(v int32) {
	o.Iops = &v
}

// GetLinkedVolumes returns the LinkedVolumes field value if set, zero value otherwise.
func (o *Volume) GetLinkedVolumes() []LinkedVolume {
	if o == nil || o.LinkedVolumes == nil {
		var ret []LinkedVolume
		return ret
	}
	return *o.LinkedVolumes
}

// GetLinkedVolumesOk returns a tuple with the LinkedVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetLinkedVolumesOk() (*[]LinkedVolume, bool) {
	if o == nil || o.LinkedVolumes == nil {
		return nil, false
	}
	return o.LinkedVolumes, true
}

// HasLinkedVolumes returns a boolean if a field has been set.
func (o *Volume) HasLinkedVolumes() bool {
	if o != nil && o.LinkedVolumes != nil {
		return true
	}

	return false
}

// SetLinkedVolumes gets a reference to the given []LinkedVolume and assigns it to the LinkedVolumes field.
func (o *Volume) SetLinkedVolumes(v []LinkedVolume) {
	o.LinkedVolumes = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Volume) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Volume) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *Volume) SetSize(v int32) {
	o.Size = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *Volume) GetSnapshotId() string {
	if o == nil || o.SnapshotId == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSnapshotIdOk() (*string, bool) {
	if o == nil || o.SnapshotId == nil {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *Volume) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *Volume) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Volume) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Volume) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Volume) SetState(v string) {
	o.State = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *Volume) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSubregionNameOk() (*string, bool) {
	if o == nil || o.SubregionName == nil {
		return nil, false
	}
	return o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *Volume) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *Volume) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Volume) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Volume) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *Volume) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *Volume) GetVolumeId() string {
	if o == nil || o.VolumeId == nil {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumeIdOk() (*string, bool) {
	if o == nil || o.VolumeId == nil {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *Volume) HasVolumeId() bool {
	if o != nil && o.VolumeId != nil {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *Volume) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *Volume) GetVolumeType() string {
	if o == nil || o.VolumeType == nil {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumeTypeOk() (*string, bool) {
	if o == nil || o.VolumeType == nil {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *Volume) HasVolumeType() bool {
	if o != nil && o.VolumeType != nil {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *Volume) SetVolumeType(v string) {
	o.VolumeType = &v
}

func (o Volume) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Iops != nil {
		toSerialize["Iops"] = o.Iops
	}
	if o.LinkedVolumes != nil {
		toSerialize["LinkedVolumes"] = o.LinkedVolumes
	}
	if o.Size != nil {
		toSerialize["Size"] = o.Size
	}
	if o.SnapshotId != nil {
		toSerialize["SnapshotId"] = o.SnapshotId
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.SubregionName != nil {
		toSerialize["SubregionName"] = o.SubregionName
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VolumeId != nil {
		toSerialize["VolumeId"] = o.VolumeId
	}
	if o.VolumeType != nil {
		toSerialize["VolumeType"] = o.VolumeType
	}
	return json.Marshal(toSerialize)
}

type NullableVolume struct {
	value *Volume
	isSet bool
}

func (v NullableVolume) Get() *Volume {
	return v.value
}

func (v *NullableVolume) Set(val *Volume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolume(val *Volume) *NullableVolume {
	return &NullableVolume{value: val, isSet: true}
}

func (v NullableVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// VpnConnection Information about a VPN connection.
type VpnConnection struct {
	// The configuration to apply to the client gateway to establish the VPN connection, in XML format.
	ClientGatewayConfiguration *string `json:"ClientGatewayConfiguration,omitempty"`
	// The ID of the client gateway used on the client end of the connection.
	ClientGatewayId *string `json:"ClientGatewayId,omitempty"`
	// The type of VPN connection (always `ipsec.1`).
	ConnectionType *string `json:"ConnectionType,omitempty"`
	// Information about one or more static routes associated with the VPN connection, if any.
	Routes *[]RouteLight `json:"Routes,omitempty"`
	// The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	State *string `json:"State,omitempty"`
	// If `false`, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If `true`, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
	StaticRoutesOnly *bool `json:"StaticRoutesOnly,omitempty"`
	// One or more tags associated with the VPN connection.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the virtual gateway used on the 3DS OUTSCALE end of the connection.
	VirtualGatewayId *string `json:"VirtualGatewayId,omitempty"`
	// The ID of the VPN connection.
	VpnConnectionId *string `json:"VpnConnectionId,omitempty"`
}

// NewVpnConnection instantiates a new VpnConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnConnection() *VpnConnection {
	this := VpnConnection{}
	return &this
}

// NewVpnConnectionWithDefaults instantiates a new VpnConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnConnectionWithDefaults() *VpnConnection {
	this := VpnConnection{}
	return &this
}

// GetClientGatewayConfiguration returns the ClientGatewayConfiguration field value if set, zero value otherwise.
func (o *VpnConnection) GetClientGatewayConfiguration() string {
	if o == nil || o.ClientGatewayConfiguration == nil {
		var ret string
		return ret
	}
	return *o.ClientGatewayConfiguration
}

// GetClientGatewayConfigurationOk returns a tuple with the ClientGatewayConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetClientGatewayConfigurationOk() (*string, bool) {
	if o == nil || o.ClientGatewayConfiguration == nil {
		return nil, false
	}
	return o.ClientGatewayConfiguration, true
}

// HasClientGatewayConfiguration returns a boolean if a field has been set.
func (o *VpnConnection) HasClientGatewayConfiguration() bool {
	if o != nil && o.ClientGatewayConfiguration != nil {
		return true
	}

	return false
}

// SetClientGatewayConfiguration gets a reference to the given string and assigns it to the ClientGatewayConfiguration field.
func (o *VpnConnection) SetClientGatewayConfiguration(v string) {
	o.ClientGatewayConfiguration = &v
}

// GetClientGatewayId returns the ClientGatewayId field value if set, zero value otherwise.
func (o *VpnConnection) GetClientGatewayId() string {
	if o == nil || o.ClientGatewayId == nil {
		var ret string
		return ret
	}
	return *o.ClientGatewayId
}

// GetClientGatewayIdOk returns a tuple with the ClientGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetClientGatewayIdOk() (*string, bool) {
	if o == nil || o.ClientGatewayId == nil {
		return nil, false
	}
	return o.ClientGatewayId, true
}

// HasClientGatewayId returns a boolean if a field has been set.
func (o *VpnConnection) HasClientGatewayId() bool {
	if o != nil && o.ClientGatewayId != nil {
		return true
	}

	return false
}

// SetClientGatewayId gets a reference to the given string and assigns it to the ClientGatewayId field.
func (o *VpnConnection) SetClientGatewayId(v string) {
	o.ClientGatewayId = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *VpnConnection) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *VpnConnection) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *VpnConnection) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *VpnConnection) GetRoutes() []RouteLight {
	if o == nil || o.Routes == nil {
		var ret []RouteLight
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetRoutesOk() (*[]RouteLight, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *VpnConnection) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []RouteLight and assigns it to the Routes field.
func (o *VpnConnection) SetRoutes(v []RouteLight) {
	o.Routes = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VpnConnection) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VpnConnection) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *VpnConnection) SetState(v string) {
	o.State = &v
}

// GetStaticRoutesOnly returns the StaticRoutesOnly field value if set, zero value otherwise.
func (o *VpnConnection) GetStaticRoutesOnly() bool {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret
	}
	return *o.StaticRoutesOnly
}

// GetStaticRoutesOnlyOk returns a tuple with the StaticRoutesOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetStaticRoutesOnlyOk() (*bool, bool) {
	if o == nil || o.StaticRoutesOnly == nil {
		return nil, false
	}
	return o.StaticRoutesOnly, true
}

// HasStaticRoutesOnly returns a boolean if a field has been set.
func (o *VpnConnection) HasStaticRoutesOnly() bool {
	if o != nil && o.StaticRoutesOnly != nil {
		return true
	}

	return false
}

// SetStaticRoutesOnly gets a reference to the given bool and assigns it to the StaticRoutesOnly field.
func (o *VpnConnection) SetStaticRoutesOnly(v bool) {
	o.StaticRoutesOnly = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VpnConnection) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VpnConnection) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *VpnConnection) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value if set, zero value otherwise.
func (o *VpnConnection) GetVirtualGatewayId() string {
	if o == nil || o.VirtualGatewayId == nil {
		var ret string
		return ret
	}
	return *o.VirtualGatewayId
}

// GetVirtualGatewayIdOk returns a tuple with the VirtualGatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetVirtualGatewayIdOk() (*string, bool) {
	if o == nil || o.VirtualGatewayId == nil {
		return nil, false
	}
	return o.VirtualGatewayId, true
}

// HasVirtualGatewayId returns a boolean if a field has been set.
func (o *VpnConnection) HasVirtualGatewayId() bool {
	if o != nil && o.VirtualGatewayId != nil {
		return true
	}

	return false
}

// SetVirtualGatewayId gets a reference to the given string and assigns it to the VirtualGatewayId field.
func (o *VpnConnection) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value if set, zero value otherwise.
func (o *VpnConnection) GetVpnConnectionId() string {
	if o == nil || o.VpnConnectionId == nil {
		var ret string
		return ret
	}
	return *o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnConnection) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil || o.VpnConnectionId == nil {
		return nil, false
	}
	return o.VpnConnectionId, true
}

// HasVpnConnectionId returns a boolean if a field has been set.
func (o *VpnConnection) HasVpnConnectionId() bool {
	if o != nil && o.VpnConnectionId != nil {
		return true
	}

	return false
}

// SetVpnConnectionId gets a reference to the given string and assigns it to the VpnConnectionId field.
func (o *VpnConnection) SetVpnConnectionId(v string) {
	o.VpnConnectionId = &v
}

func (o VpnConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientGatewayConfiguration != nil {
		toSerialize["ClientGatewayConfiguration"] = o.ClientGatewayConfiguration
	}
	if o.ClientGatewayId != nil {
		toSerialize["ClientGatewayId"] = o.ClientGatewayId
	}
	if o.ConnectionType != nil {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if o.Routes != nil {
		toSerialize["Routes"] = o.Routes
	}
	if o.State != nil {
		toSerialize["State"] = o.State
	}
	if o.StaticRoutesOnly != nil {
		toSerialize["StaticRoutesOnly"] = o.StaticRoutesOnly
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.VirtualGatewayId != nil {
		toSerialize["VirtualGatewayId"] = o.VirtualGatewayId
	}
	if o.VpnConnectionId != nil {
		toSerialize["VpnConnectionId"] = o.VpnConnectionId
	}
	return json.Marshal(toSerialize)
}

type NullableVpnConnection struct {
	value *VpnConnection
	isSet bool
}

func (v NullableVpnConnection) Get() *VpnConnection {
	return v.value
}

func (v *NullableVpnConnection) Set(val *VpnConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnConnection(val *VpnConnection) *NullableVpnConnection {
	return &NullableVpnConnection{value: val, isSet: true}
}

func (v NullableVpnConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
)

// With The information to be displayed in the API logs to retrieve.
type With struct {
	// If set to `true`, the account ID is displayed in the logs.
	AccountId *bool `json:"AccountId,omitempty"`
	// If set to `true`, the duration of the call is displayed each log.
	CallDuration *bool `json:"CallDuration,omitempty"`
	// If set to `true`, the API key used for the query is displayed each log.
	QueryAccessKey *bool `json:"QueryAccessKey,omitempty"`
	// If set to `true`, the name of the API service used by the call is displayed in each log (`oapi` \\| `fcu` \\| `lbu` \\| `directlink` \\| `eim` \\| `icu`).
	QueryApiName *bool `json:"QueryApiName,omitempty"`
	// If set to `true`, the version of the API service used by the call is displayed in each log.
	QueryApiVersion *bool `json:"QueryApiVersion,omitempty"`
	// If set to `true`, the name of the call is displayed in each log.
	QueryCallName *bool `json:"QueryCallName,omitempty"`
	// If set to `true`, the date of the call is displayed in each log.
	QueryDate *bool `json:"QueryDate,omitempty"`
	// If set to `true`, the query header RAW is displayed in each log.
	QueryHeaderRaw *bool `json:"QueryHeaderRaw,omitempty"`
	// If set to `true`, the query header size is displayed in each log.
	QueryHeaderSize *bool `json:"QueryHeaderSize,omitempty"`
	// If set to `true`, the IP address used to make to query is displayed in each log.
	QueryIpAddress *bool `json:"QueryIpAddress,omitempty"`
	// If set to `true`, the query payload raw is displayed in each log.
	QueryPayloadRaw *bool `json:"QueryPayloadRaw,omitempty"`
	// If set to `true`, the query payload size is displayed in each log.
	QueryPayloadSize *bool `json:"QueryPayloadSize,omitempty"`
	// If set to `true`, the user agent used to make the HTTP request is displayed in each log.
	QueryUserAgent *bool `json:"QueryUserAgent,omitempty"`
	// By default ot if set to `true`, the ID of the call is displayed in each log.
	RequestId *bool `json:"RequestId,omitempty"`
	// If set to `true`, the size of the response (in bytes) is displayed in each log.
	ResponseSize *bool `json:"ResponseSize,omitempty"`
	// If set to `true`, the HTTP code provided by the response is displayed in each log.
	ResponseStatusCode *bool `json:"ResponseStatusCode,omitempty"`
}

// NewWith instantiates a new With object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWith() *With {
	this := With{}
	return &this
}

// NewWithWithDefaults instantiates a new With object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWithWithDefaults() *With {
	this := With{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *With) GetAccountId() bool {
	if o == nil || o.AccountId == nil {
		var ret bool
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetAccountIdOk() (*bool, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *With) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given bool and assigns it to the AccountId field.
func (o *With) SetAccountId(v bool) {
	o.AccountId = &v
}

// GetCallDuration returns the CallDuration field value if set, zero value otherwise.
func (o *With) GetCallDuration() bool {
	if o == nil || o.CallDuration == nil {
		var ret bool
		return ret
	}
	return *o.CallDuration
}

// GetCallDurationOk returns a tuple with the CallDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetCallDurationOk() (*bool, bool) {
	if o == nil || o.CallDuration == nil {
		return nil, false
	}
	return o.CallDuration, true
}

// HasCallDuration returns a boolean if a field has been set.
func (o *With) HasCallDuration() bool {
	if o != nil && o.CallDuration != nil {
		return true
	}

	return false
}

// SetCallDuration gets a reference to the given bool and assigns it to the CallDuration field.
func (o *With) SetCallDuration(v bool) {
	o.CallDuration = &v
}

// GetQueryAccessKey returns the QueryAccessKey field value if set, zero value otherwise.
func (o *With) GetQueryAccessKey() bool {
	if o == nil || o.QueryAccessKey == nil {
		var ret bool
		return ret
	}
	return *o.QueryAccessKey
}

// GetQueryAccessKeyOk returns a tuple with the QueryAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryAccessKeyOk() (*bool, bool) {
	if o == nil || o.QueryAccessKey == nil {
		return nil, false
	}
	return o.QueryAccessKey, true
}

// HasQueryAccessKey returns a boolean if a field has been set.
func (o *With) HasQueryAccessKey() bool {
	if o != nil && o.QueryAccessKey != nil {
		return true
	}

	return false
}

// SetQueryAccessKey gets a reference to the given bool and assigns it to the QueryAccessKey field.
func (o *With) SetQueryAccessKey(v bool) {
	o.QueryAccessKey = &v
}

// GetQueryApiName returns the QueryApiName field value if set, zero value otherwise.
func (o *With) GetQueryApiName() bool {
	if o == nil || o.QueryApiName == nil {
		var ret bool
		return ret
	}
	return *o.QueryApiName
}

// GetQueryApiNameOk returns a tuple with the QueryApiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryApiNameOk() (*bool, bool) {
	if o == nil || o.QueryApiName == nil {
		return nil, false
	}
	return o.QueryApiName, true
}

// HasQueryApiName returns a boolean if a field has been set.
func (o *With) HasQueryApiName() bool {
	if o != nil && o.QueryApiName != nil {
		return true
	}

	return false
}

// SetQueryApiName gets a reference to the given bool and assigns it to the QueryApiName field.
func (o *With) SetQueryApiName(v bool) {
	o.QueryApiName = &v
}

// GetQueryApiVersion returns the QueryApiVersion field value if set, zero value otherwise.
func (o *With) GetQueryApiVersion() bool {
	if o == nil || o.QueryApiVersion == nil {
		var ret bool
		return ret
	}
	return *o.QueryApiVersion
}

// GetQueryApiVersionOk returns a tuple with the QueryApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryApiVersionOk() (*bool, bool) {
	if o == nil || o.QueryApiVersion == nil {
		return nil, false
	}
	return o.QueryApiVersion, true
}

// HasQueryApiVersion returns a boolean if a field has been set.
func (o *With) HasQueryApiVersion() bool {
	if o != nil && o.QueryApiVersion != nil {
		return true
	}

	return false
}

// SetQueryApiVersion gets a reference to the given bool and assigns it to the QueryApiVersion field.
func (o *With) SetQueryApiVersion(v bool) {
	o.QueryApiVersion = &v
}

// GetQueryCallName returns the QueryCallName field value if set, zero value otherwise.
func (o *With) GetQueryCallName() bool {
	if o == nil || o.QueryCallName == nil {
		var ret bool
		return ret
	}
	return *o.QueryCallName
}

// GetQueryCallNameOk returns a tuple with the QueryCallName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryCallNameOk() (*bool, bool) {
	if o == nil || o.QueryCallName == nil {
		return nil, false
	}
	return o.QueryCallName, true
}

// HasQueryCallName returns a boolean if a field has been set.
func (o *With) HasQueryCallName() bool {
	if o != nil && o.QueryCallName != nil {
		return true
	}

	return false
}

// SetQueryCallName gets a reference to the given bool and assigns it to the QueryCallName field.
func (o *With) SetQueryCallName(v bool) {
	o.QueryCallName = &v
}

// GetQueryDate returns the QueryDate field value if set, zero value otherwise.
func (o *With) GetQueryDate() bool {
	if o == nil || o.QueryDate == nil {
		var ret bool
		return ret
	}
	return *o.QueryDate
}

// GetQueryDateOk returns a tuple with the QueryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryDateOk() (*bool, bool) {
	if o == nil || o.QueryDate == nil {
		return nil, false
	}
	return o.QueryDate, true
}

// HasQueryDate returns a boolean if a field has been set.
func (o *With) HasQueryDate() bool {
	if o != nil && o.QueryDate != nil {
		return true
	}

	return false
}

// SetQueryDate gets a reference to the given bool and assigns it to the QueryDate field.
func (o *With) SetQueryDate(v bool) {
	o.QueryDate = &v
}

// GetQueryHeaderRaw returns the QueryHeaderRaw field value if set, zero value otherwise.
func (o *With) GetQueryHeaderRaw() bool {
	if o == nil || o.QueryHeaderRaw == nil {
		var ret bool
		return ret
	}
	return *o.QueryHeaderRaw
}

// GetQueryHeaderRawOk returns a tuple with the QueryHeaderRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryHeaderRawOk() (*bool, bool) {
	if o == nil || o.QueryHeaderRaw == nil {
		return nil, false
	}
	return o.QueryHeaderRaw, true
}

// HasQueryHeaderRaw returns a boolean if a field has been set.
func (o *With) HasQueryHeaderRaw() bool {
	if o != nil && o.QueryHeaderRaw != nil {
		return true
	}

	return false
}

// SetQueryHeaderRaw gets a reference to the given bool and assigns it to the QueryHeaderRaw field.
func (o *With) SetQueryHeaderRaw(v bool) {
	o.QueryHeaderRaw = &v
}

// GetQueryHeaderSize returns the QueryHeaderSize field value if set, zero value otherwise.
func (o *With) GetQueryHeaderSize() bool {
	if o == nil || o.QueryHeaderSize == nil {
		var ret bool
		return ret
	}
	return *o.QueryHeaderSize
}

// GetQueryHeaderSizeOk returns a tuple with the QueryHeaderSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryHeaderSizeOk() (*bool, bool) {
	if o == nil || o.QueryHeaderSize == nil {
		return nil, false
	}
	return o.QueryHeaderSize, true
}

// HasQueryHeaderSize returns a boolean if a field has been set.
func (o *With) HasQueryHeaderSize() bool {
	if o != nil && o.QueryHeaderSize != nil {
		return true
	}

	return false
}

// SetQueryHeaderSize gets a reference to the given bool and assigns it to the QueryHeaderSize field.
func (o *With) SetQueryHeaderSize(v bool) {
	o.QueryHeaderSize = &v
}

// GetQueryIpAddress returns the QueryIpAddress field value if set, zero value otherwise.
func (o *With) GetQueryIpAddress() bool {
	if o == nil || o.QueryIpAddress == nil {
		var ret bool
		return ret
	}
	return *o.QueryIpAddress
}

// GetQueryIpAddressOk returns a tuple with the QueryIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryIpAddressOk() (*bool, bool) {
	if o == nil || o.QueryIpAddress == nil {
		return nil, false
	}
	return o.QueryIpAddress, true
}

// HasQueryIpAddress returns a boolean if a field has been set.
func (o *With) HasQueryIpAddress() bool {
	if o != nil && o.QueryIpAddress != nil {
		return true
	}

	return false
}

// SetQueryIpAddress gets a reference to the given bool and assigns it to the QueryIpAddress field.
func (o *With) SetQueryIpAddress(v bool) {
	o.QueryIpAddress = &v
}

// GetQueryPayloadRaw returns the QueryPayloadRaw field value if set, zero value otherwise.
func (o *With) GetQueryPayloadRaw() bool {
	if o == nil || o.QueryPayloadRaw == nil {
		var ret bool
		return ret
	}
	return *o.QueryPayloadRaw
}

// GetQueryPayloadRawOk returns a tuple with the QueryPayloadRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryPayloadRawOk() (*bool, bool) {
	if o == nil || o.QueryPayloadRaw == nil {
		return nil, false
	}
	return o.QueryPayloadRaw, true
}

// HasQueryPayloadRaw returns a boolean if a field has been set.
func (o *With) HasQueryPayloadRaw() bool {
	if o != nil && o.QueryPayloadRaw != nil {
		return true
	}

	return false
}

// SetQueryPayloadRaw gets a reference to the given bool and assigns it to the QueryPayloadRaw field.
func (o *With) SetQueryPayloadRaw(v bool) {
	o.QueryPayloadRaw = &v
}

// GetQueryPayloadSize returns the QueryPayloadSize field value if set, zero value otherwise.
func (o *With) GetQueryPayloadSize() bool {
	if o == nil || o.QueryPayloadSize == nil {
		var ret bool
		return ret
	}
	return *o.QueryPayloadSize
}

// GetQueryPayloadSizeOk returns a tuple with the QueryPayloadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryPayloadSizeOk() (*bool, bool) {
	if o == nil || o.QueryPayloadSize == nil {
		return nil, false
	}
	return o.QueryPayloadSize, true
}

// HasQueryPayloadSize returns a boolean if a field has been set.
func (o *With) HasQueryPayloadSize() bool {
	if o != nil && o.QueryPayloadSize != nil {
		return true
	}

	return false
}

// SetQueryPayloadSize gets a reference to the given bool and assigns it to the QueryPayloadSize field.
func (o *With) SetQueryPayloadSize(v bool) {
	o.QueryPayloadSize = &v
}

// GetQueryUserAgent returns the QueryUserAgent field value if set, zero value otherwise.
func (o *With) GetQueryUserAgent() bool {
	if o == nil || o.QueryUserAgent == nil {
		var ret bool
		return ret
	}
	return *o.QueryUserAgent
}

// GetQueryUserAgentOk returns a tuple with the QueryUserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetQueryUserAgentOk() (*bool, bool) {
	if o == nil || o.QueryUserAgent == nil {
		return nil, false
	}
	return o.QueryUserAgent, true
}

// HasQueryUserAgent returns a boolean if a field has been set.
func (o *With) HasQueryUserAgent() bool {
	if o != nil && o.QueryUserAgent != nil {
		return true
	}

	return false
}

// SetQueryUserAgent gets a reference to the given bool and assigns it to the QueryUserAgent field.
func (o *With) SetQueryUserAgent(v bool) {
	o.QueryUserAgent = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *With) GetRequestId() bool {
	if o == nil || o.RequestId == nil {
		var ret bool
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetRequestIdOk() (*bool, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *With) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given bool and assigns it to the RequestId field.
func (o *With) SetRequestId(v bool) {
	o.RequestId = &v
}

// GetResponseSize returns the ResponseSize field value if set, zero value otherwise.
func (o *With) GetResponseSize() bool {
	if o == nil || o.ResponseSize == nil {
		var ret bool
		return ret
	}
	return *o.ResponseSize
}

// GetResponseSizeOk returns a tuple with the ResponseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetResponseSizeOk() (*bool, bool) {
	if o == nil || o.ResponseSize == nil {
		return nil, false
	}
	return o.ResponseSize, true
}

// HasResponseSize returns a boolean if a field has been set.
func (o *With) HasResponseSize() bool {
	if o != nil && o.ResponseSize != nil {
		return true
	}

	return false
}

// SetResponseSize gets a reference to the given bool and assigns it to the ResponseSize field.
func (o *With) SetResponseSize(v bool) {
	o.ResponseSize = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *With) GetResponseStatusCode() bool {
	if o == nil || o.ResponseStatusCode == nil {
		var ret bool
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *With) GetResponseStatusCodeOk() (*bool, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *With) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given bool and assigns it to the ResponseStatusCode field.
func (o *With) SetResponseStatusCode(v bool) {
	o.ResponseStatusCode = &v
}

func (o With) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.CallDuration != nil {
		toSerialize["CallDuration"] = o.CallDuration
	}
	if o.QueryAccessKey != nil {
		toSerialize["QueryAccessKey"] = o.QueryAccessKey
	}
	if o.QueryApiName != nil {
		toSerialize["QueryApiName"] = o.QueryApiName
	}
	if o.QueryApiVersion != nil {
		toSerialize["QueryApiVersion"] = o.QueryApiVersion
	}
	if o.QueryCallName != nil {
		toSerialize["QueryCallName"] = o.QueryCallName
	}
	if o.QueryDate != nil {
		toSerialize["QueryDate"] = o.QueryDate
	}
	if o.QueryHeaderRaw != nil {
		toSerialize["QueryHeaderRaw"] = o.QueryHeaderRaw
	}
	if o.QueryHeaderSize != nil {
		toSerialize["QueryHeaderSize"] = o.QueryHeaderSize
	}
	if o.QueryIpAddress != nil {
		toSerialize["QueryIpAddress"] = o.QueryIpAddress
	}
	if o.QueryPayloadRaw != nil {
		toSerialize["QueryPayloadRaw"] = o.QueryPayloadRaw
	}
	if o.QueryPayloadSize != nil {
		toSerialize["QueryPayloadSize"] = o.QueryPayloadSize
	}
	if o.QueryUserAgent != nil {
		toSerialize["QueryUserAgent"] = o.QueryUserAgent
	}
	if o.RequestId != nil {
		toSerialize["RequestId"] = o.RequestId
	}
	if o.ResponseSize != nil {
		toSerialize["ResponseSize"] = o.ResponseSize
	}
	if o.ResponseStatusCode != nil {
		toSerialize["ResponseStatusCode"] = o.ResponseStatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableWith struct {
	value *With
	isSet bool
}

func (v NullableWith) Get() *With {
	return v.value
}

func (v *NullableWith) Set(val *With) {
	v.value = val
	v.isSet = true
}

func (v NullableWith) IsSet() bool {
	return v.isSet
}

func (v *NullableWith) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWith(val *With) *NullableWith {
	return &NullableWith{value: val, isSet: true}
}

func (v NullableWith) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWith) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// NatServiceApiService NatServiceApi service
type NatServiceApiService service

type ApiCreateNatServiceRequest struct {
	ctx _context.Context
	ApiService *NatServiceApiService
	createNatServiceRequest *CreateNatServiceRequest
}

func (r ApiCreateNatServiceRequest) CreateNatServiceRequest(createNatServiceRequest CreateNatServiceRequest) ApiCreateNatServiceRequest {
	r.createNatServiceRequest = &createNatServiceRequest
	return r
}

func (r ApiCreateNatServiceRequest) Execute() (CreateNatServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateNatServiceExecute(r)
}

/*
 * CreateNatService Method for CreateNatService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateNatServiceRequest
 */
func (a *NatServiceApiService) CreateNatService(ctx _context.Context) ApiCreateNatServiceRequest {
	return ApiCreateNatServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateNatServiceResponse
 */
func (a *NatServiceApiService) CreateNatServiceExecute(r ApiCreateNatServiceRequest) (CreateNatServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateNatServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NatServiceApiService.CreateNatService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateNatService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createNatServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteNatServiceRequest struct {
	ctx _context.Context
	ApiService *NatServiceApiService
	deleteNatServiceRequest *DeleteNatServiceRequest
}

func (r ApiDeleteNatServiceRequest) DeleteNatServiceRequest(deleteNatServiceRequest DeleteNatServiceRequest) ApiDeleteNatServiceRequest {
	r.deleteNatServiceRequest = &deleteNatServiceRequest
	return r
}

func (r ApiDeleteNatServiceRequest) Execute() (DeleteNatServiceResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteNatServiceExecute(r)
}

/*
 * DeleteNatService Method for DeleteNatService
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteNatServiceRequest
 */
func (a *NatServiceApiService) DeleteNatService(ctx _context.Context) ApiDeleteNatServiceRequest {
	return ApiDeleteNatServiceRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteNatServiceResponse
 */
func (a *NatServiceApiService) DeleteNatServiceExecute(r ApiDeleteNatServiceRequest) (DeleteNatServiceResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteNatServiceResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NatServiceApiService.DeleteNatService")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteNatService"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteNatServiceRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNatServicesRequest struct {
	ctx _context.Context
	ApiService *NatServiceApiService
	readNatServicesRequest *ReadNatServicesRequest
}

func (r ApiReadNatServicesRequest) ReadNatServicesRequest(readNatServicesRequest ReadNatServicesRequest) ApiReadNatServicesRequest {
	r.readNatServicesRequest = &readNatServicesRequest
	return r
}

func (r ApiReadNatServicesRequest) Execute() (ReadNatServicesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNatServicesExecute(r)
}

/*
 * ReadNatServices Method for ReadNatServices
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNatServicesRequest
 */
func (a *NatServiceApiService) ReadNatServices(ctx _context.Context) ApiReadNatServicesRequest {
	return ApiReadNatServicesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNatServicesResponse
 */
func (a *NatServiceApiService) ReadNatServicesExecute(r ApiReadNatServicesRequest) (ReadNatServicesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNatServicesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NatServiceApiService.ReadNatServices")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNatServices"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNatServicesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// NetApiService NetApi service
type NetApiService service

type ApiCreateNetRequest struct {
	ctx _context.Context
	ApiService *NetApiService
	createNetRequest *CreateNetRequest
}

func (r ApiCreateNetRequest) CreateNetRequest(createNetRequest CreateNetRequest) ApiCreateNetRequest {
	r.createNetRequest = &createNetRequest
	return r
}

func (r ApiCreateNetRequest) Execute() (CreateNetResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateNetExecute(r)
}

/*
 * CreateNet Method for CreateNet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateNetRequest
 */
func (a *NetApiService) CreateNet(ctx _context.Context) ApiCreateNetRequest {
	return ApiCreateNetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateNetResponse
 */
func (a *NetApiService) CreateNetExecute(r ApiCreateNetRequest) (CreateNetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateNetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetApiService.CreateNet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateNet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createNetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteNetRequest struct {
	ctx _context.Context
	ApiService *NetApiService
	deleteNetRequest *DeleteNetRequest
}

func (r ApiDeleteNetRequest) DeleteNetRequest(deleteNetRequest DeleteNetRequest) ApiDeleteNetRequest {
	r.deleteNetRequest = &deleteNetRequest
	return r
}

func (r ApiDeleteNetRequest) Execute() (DeleteNetResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteNetExecute(r)
}

/*
 * DeleteNet Method for DeleteNet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteNetRequest
 */
func (a *NetApiService) DeleteNet(ctx _context.Context) ApiDeleteNetRequest {
	return ApiDeleteNetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteNetResponse
 */
func (a *NetApiService) DeleteNetExecute(r ApiDeleteNetRequest) (DeleteNetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteNetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetApiService.DeleteNet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteNet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteNetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNetsRequest struct {
	ctx _context.Context
	ApiService *NetApiService
	readNetsRequest *ReadNetsRequest
}

func (r ApiReadNetsRequest) ReadNetsRequest(readNetsRequest ReadNetsRequest) ApiReadNetsRequest {
	r.readNetsRequest = &readNetsRequest
	return r
}

func (r ApiReadNetsRequest) Execute() (ReadNetsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNetsExecute(r)
}

/*
 * ReadNets Method for ReadNets
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNetsRequest
 */
func (a *NetApiService) ReadNets(ctx _context.Context) ApiReadNetsRequest {
	return ApiReadNetsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNetsResponse
 */
func (a *NetApiService) ReadNetsExecute(r ApiReadNetsRequest) (ReadNetsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNetsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetApiService.ReadNets")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNets"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNetsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateNetRequest struct {
	ctx _context.Context
	ApiService *NetApiService
	updateNetRequest *UpdateNetRequest
}

func (r ApiUpdateNetRequest) UpdateNetRequest(updateNetRequest UpdateNetRequest) ApiUpdateNetRequest {
	r.updateNetRequest = &updateNetRequest
	return r
}

func (r ApiUpdateNetRequest) Execute() (UpdateNetResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateNetExecute(r)
}

/*
 * UpdateNet Method for UpdateNet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateNetRequest
 */
func (a *NetApiService) UpdateNet(ctx _context.Context) ApiUpdateNetRequest {
	return ApiUpdateNetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateNetResponse
 */
func (a *NetApiService) UpdateNetExecute(r ApiUpdateNetRequest) (UpdateNetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateNetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetApiService.UpdateNet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateNet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateNetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// NetAccessPointApiService NetAccessPointApi service
type NetAccessPointApiService service

type ApiCreateNetAccessPointRequest struct {
	ctx _context.Context
	ApiService *NetAccessPointApiService
	createNetAccessPointRequest *CreateNetAccessPointRequest
}

func (r ApiCreateNetAccessPointRequest) CreateNetAccessPointRequest(createNetAccessPointRequest CreateNetAccessPointRequest) ApiCreateNetAccessPointRequest {
	r.createNetAccessPointRequest = &createNetAccessPointRequest
	return r
}

func (r ApiCreateNetAccessPointRequest) Execute() (CreateNetAccessPointResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateNetAccessPointExecute(r)
}

/*
 * CreateNetAccessPoint Method for CreateNetAccessPoint
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateNetAccessPointRequest
 */
func (a *NetAccessPointApiService) CreateNetAccessPoint(ctx _context.Context) ApiCreateNetAccessPointRequest {
	return ApiCreateNetAccessPointRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateNetAccessPointResponse
 */
func (a *NetAccessPointApiService) CreateNetAccessPointExecute(r ApiCreateNetAccessPointRequest) (CreateNetAccessPointResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateNetAccessPointResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetAccessPointApiService.CreateNetAccessPoint")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateNetAccessPoint"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createNetAccessPointRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteNetAccessPointRequest struct {
	ctx _context.Context
	ApiService *NetAccessPointApiService
	deleteNetAccessPointRequest *DeleteNetAccessPointRequest
}

func (r ApiDeleteNetAccessPointRequest) DeleteNetAccessPointRequest(deleteNetAccessPointRequest DeleteNetAccessPointRequest) ApiDeleteNetAccessPointRequest {
	r.deleteNetAccessPointRequest = &deleteNetAccessPointRequest
	return r
}

func (r ApiDeleteNetAccessPointRequest) Execute() (DeleteNetAccessPointResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteNetAccessPointExecute(r)
}

/*
 * DeleteNetAccessPoint Method for DeleteNetAccessPoint
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteNetAccessPointRequest
 */
func (a *NetAccessPointApiService) DeleteNetAccessPoint(ctx _context.Context) ApiDeleteNetAccessPointRequest {
	return ApiDeleteNetAccessPointRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteNetAccessPointResponse
 */
func (a *NetAccessPointApiService) DeleteNetAccessPointExecute(r ApiDeleteNetAccessPointRequest) (DeleteNetAccessPointResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteNetAccessPointResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetAccessPointApiService.DeleteNetAccessPoint")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteNetAccessPoint"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteNetAccessPointRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNetAccessPointServicesRequest struct {
	ctx _context.Context
	ApiService *NetAccessPointApiService
	readNetAccessPointServicesRequest *ReadNetAccessPointServicesRequest
}

func (r ApiReadNetAccessPointServicesRequest) ReadNetAccessPointServicesRequest(readNetAccessPointServicesRequest ReadNetAccessPointServicesRequest) ApiReadNetAccessPointServicesRequest {
	r.readNetAccessPointServicesRequest = &readNetAccessPointServicesRequest
	return r
}

func (r ApiReadNetAccessPointServicesRequest) Execute() (ReadNetAccessPointServicesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNetAccessPointServicesExecute(r)
}

/*
 * ReadNetAccessPointServices Method for ReadNetAccessPointServices
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNetAccessPointServicesRequest
 */
func (a *NetAccessPointApiService) ReadNetAccessPointServices(ctx _context.Context) ApiReadNetAccessPointServicesRequest {
	return ApiReadNetAccessPointServicesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNetAccessPointServicesResponse
 */
func (a *NetAccessPointApiService) ReadNetAccessPointServicesExecute(r ApiReadNetAccessPointServicesRequest) (ReadNetAccessPointServicesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNetAccessPointServicesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetAccessPointApiService.ReadNetAccessPointServices")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNetAccessPointServices"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNetAccessPointServicesRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNetAccessPointsRequest struct {
	ctx _context.Context
	ApiService *NetAccessPointApiService
	readNetAccessPointsRequest *ReadNetAccessPointsRequest
}

func (r ApiReadNetAccessPointsRequest) ReadNetAccessPointsRequest(readNetAccessPointsRequest ReadNetAccessPointsRequest) ApiReadNetAccessPointsRequest {
	r.readNetAccessPointsRequest = &readNetAccessPointsRequest
	return r
}

func (r ApiReadNetAccessPointsRequest) Execute() (ReadNetAccessPointsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNetAccessPointsExecute(r)
}

/*
 * ReadNetAccessPoints Method for ReadNetAccessPoints
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNetAccessPointsRequest
 */
func (a *NetAccessPointApiService) ReadNetAccessPoints(ctx _context.Context) ApiReadNetAccessPointsRequest {
	return ApiReadNetAccessPointsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNetAccessPointsResponse
 */
func (a *NetAccessPointApiService) ReadNetAccessPointsExecute(r ApiReadNetAccessPointsRequest) (ReadNetAccessPointsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNetAccessPointsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetAccessPointApiService.ReadNetAccessPoints")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNetAccessPoints"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNetAccessPointsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateNetAccessPointRequest struct {
	ctx _context.Context
	ApiService *NetAccessPointApiService
	updateNetAccessPointRequest *UpdateNetAccessPointRequest
}

func (r ApiUpdateNetAccessPointRequest) UpdateNetAccessPointRequest(updateNetAccessPointRequest UpdateNetAccessPointRequest) ApiUpdateNetAccessPointRequest {
	r.updateNetAccessPointRequest = &updateNetAccessPointRequest
	return r
}

func (r ApiUpdateNetAccessPointRequest) Execute() (UpdateNetAccessPointResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateNetAccessPointExecute(r)
}

/*
 * UpdateNetAccessPoint Method for UpdateNetAccessPoint
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateNetAccessPointRequest
 */
func (a *NetAccessPointApiService) UpdateNetAccessPoint(ctx _context.Context) ApiUpdateNetAccessPointRequest {
	return ApiUpdateNetAccessPointRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateNetAccessPointResponse
 */
func (a *NetAccessPointApiService) UpdateNetAccessPointExecute(r ApiUpdateNetAccessPointRequest) (UpdateNetAccessPointResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateNetAccessPointResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetAccessPointApiService.UpdateNetAccessPoint")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateNetAccessPoint"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateNetAccessPointRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// NetPeeringApiService NetPeeringApi service
type NetPeeringApiService service

type ApiAcceptNetPeeringRequest struct {
	ctx _context.Context
	ApiService *NetPeeringApiService
	acceptNetPeeringRequest *AcceptNetPeeringRequest
}

func (r ApiAcceptNetPeeringRequest) AcceptNetPeeringRequest(acceptNetPeeringRequest AcceptNetPeeringRequest) ApiAcceptNetPeeringRequest {
	r.acceptNetPeeringRequest = &acceptNetPeeringRequest
	return r
}

func (r ApiAcceptNetPeeringRequest) Execute() (AcceptNetPeeringResponse, *_nethttp.Response, error) {
	return r.ApiService.AcceptNetPeeringExecute(r)
}

/*
 * AcceptNetPeering Method for AcceptNetPeering
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiAcceptNetPeeringRequest
 */
func (a *NetPeeringApiService) AcceptNetPeering(ctx _context.Context) ApiAcceptNetPeeringRequest {
	return ApiAcceptNetPeeringRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return AcceptNetPeeringResponse
 */
func (a *NetPeeringApiService) AcceptNetPeeringExecute(r ApiAcceptNetPeeringRequest) (AcceptNetPeeringResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  AcceptNetPeeringResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetPeeringApiService.AcceptNetPeering")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/AcceptNetPeering"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.acceptNetPeeringRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateNetPeeringRequest struct {
	ctx _context.Context
	ApiService *NetPeeringApiService
	createNetPeeringRequest *CreateNetPeeringRequest
}

func (r ApiCreateNetPeeringRequest) CreateNetPeeringRequest(createNetPeeringRequest CreateNetPeeringRequest) ApiCreateNetPeeringRequest {
	r.createNetPeeringRequest = &createNetPeeringRequest
	return r
}

func (r ApiCreateNetPeeringRequest) Execute() (CreateNetPeeringResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateNetPeeringExecute(r)
}

/*
 * CreateNetPeering Method for CreateNetPeering
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateNetPeeringRequest
 */
func (a *NetPeeringApiService) CreateNetPeering(ctx _context.Context) ApiCreateNetPeeringRequest {
	return ApiCreateNetPeeringRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateNetPeeringResponse
 */
func (a *NetPeeringApiService) CreateNetPeeringExecute(r ApiCreateNetPeeringRequest) (CreateNetPeeringResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateNetPeeringResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetPeeringApiService.CreateNetPeering")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateNetPeering"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createNetPeeringRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteNetPeeringRequest struct {
	ctx _context.Context
	ApiService *NetPeeringApiService
	deleteNetPeeringRequest *DeleteNetPeeringRequest
}

func (r ApiDeleteNetPeeringRequest) DeleteNetPeeringRequest(deleteNetPeeringRequest DeleteNetPeeringRequest) ApiDeleteNetPeeringRequest {
	r.deleteNetPeeringRequest = &deleteNetPeeringRequest
	return r
}

func (r ApiDeleteNetPeeringRequest) Execute() (DeleteNetPeeringResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteNetPeeringExecute(r)
}

/*
 * DeleteNetPeering Method for DeleteNetPeering
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteNetPeeringRequest
 */
func (a *NetPeeringApiService) DeleteNetPeering(ctx _context.Context) ApiDeleteNetPeeringRequest {
	return ApiDeleteNetPeeringRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteNetPeeringResponse
 */
func (a *NetPeeringApiService) DeleteNetPeeringExecute(r ApiDeleteNetPeeringRequest) (DeleteNetPeeringResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteNetPeeringResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetPeeringApiService.DeleteNetPeering")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteNetPeering"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteNetPeeringRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNetPeeringsRequest struct {
	ctx _context.Context
	ApiService *NetPeeringApiService
	readNetPeeringsRequest *ReadNetPeeringsRequest
}

func (r ApiReadNetPeeringsRequest) ReadNetPeeringsRequest(readNetPeeringsRequest ReadNetPeeringsRequest) ApiReadNetPeeringsRequest {
	r.readNetPeeringsRequest = &readNetPeeringsRequest
	return r
}

func (r ApiReadNetPeeringsRequest) Execute() (ReadNetPeeringsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNetPeeringsExecute(r)
}

/*
 * ReadNetPeerings Method for ReadNetPeerings
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNetPeeringsRequest
 */
func (a *NetPeeringApiService) ReadNetPeerings(ctx _context.Context) ApiReadNetPeeringsRequest {
	return ApiReadNetPeeringsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNetPeeringsResponse
 */
func (a *NetPeeringApiService) ReadNetPeeringsExecute(r ApiReadNetPeeringsRequest) (ReadNetPeeringsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNetPeeringsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetPeeringApiService.ReadNetPeerings")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNetPeerings"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNetPeeringsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiRejectNetPeeringRequest struct {
	ctx _context.Context
	ApiService *NetPeeringApiService
	rejectNetPeeringRequest *RejectNetPeeringRequest
}

func (r ApiRejectNetPeeringRequest) RejectNetPeeringRequest(rejectNetPeeringRequest RejectNetPeeringRequest) ApiRejectNetPeeringRequest {
	r.rejectNetPeeringRequest = &rejectNetPeeringRequest
	return r
}

func (r ApiRejectNetPeeringRequest) Execute() (RejectNetPeeringResponse, *_nethttp.Response, error) {
	return r.ApiService.RejectNetPeeringExecute(r)
}

/*
 * RejectNetPeering Method for RejectNetPeering
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiRejectNetPeeringRequest
 */
func (a *NetPeeringApiService) RejectNetPeering(ctx _context.Context) ApiRejectNetPeeringRequest {
	return ApiRejectNetPeeringRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return RejectNetPeeringResponse
 */
func (a *NetPeeringApiService) RejectNetPeeringExecute(r ApiRejectNetPeeringRequest) (RejectNetPeeringResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  RejectNetPeeringResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NetPeeringApiService.RejectNetPeering")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/RejectNetPeering"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.rejectNetPeeringRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// NicApiService NicApi service
type NicApiService service

type ApiCreateNicRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	createNicRequest *CreateNicRequest
}

func (r ApiCreateNicRequest) CreateNicRequest(createNicRequest CreateNicRequest) ApiCreateNicRequest {
	r.createNicRequest = &createNicRequest
	return r
}

func (r ApiCreateNicRequest) Execute() (CreateNicResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateNicExecute(r)
}

/*
 * CreateNic Method for CreateNic
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateNicRequest
 */
func (a *NicApiService) CreateNic(ctx _context.Context) ApiCreateNicRequest {
	return ApiCreateNicRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateNicResponse
 */
func (a *NicApiService) CreateNicExecute(r ApiCreateNicRequest) (CreateNicResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateNicResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.CreateNic")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateNic"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createNicRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteNicRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	deleteNicRequest *DeleteNicRequest
}

func (r ApiDeleteNicRequest) DeleteNicRequest(deleteNicRequest DeleteNicRequest) ApiDeleteNicRequest {
	r.deleteNicRequest = &deleteNicRequest
	return r
}

func (r ApiDeleteNicRequest) Execute() (DeleteNicResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteNicExecute(r)
}

/*
 * DeleteNic Method for DeleteNic
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteNicRequest
 */
func (a *NicApiService) DeleteNic(ctx _context.Context) ApiDeleteNicRequest {
	return ApiDeleteNicRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteNicResponse
 */
func (a *NicApiService) DeleteNicExecute(r ApiDeleteNicRequest) (DeleteNicResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteNicResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.DeleteNic")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteNic"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteNicRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkNicRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	linkNicRequest *LinkNicRequest
}

func (r ApiLinkNicRequest) LinkNicRequest(linkNicRequest LinkNicRequest) ApiLinkNicRequest {
	r.linkNicRequest = &linkNicRequest
	return r
}

func (r ApiLinkNicRequest) Execute() (LinkNicResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkNicExecute(r)
}

/*
 * LinkNic Method for LinkNic
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkNicRequest
 */
func (a *NicApiService) LinkNic(ctx _context.Context) ApiLinkNicRequest {
	return ApiLinkNicRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkNicResponse
 */
func (a *NicApiService) LinkNicExecute(r ApiLinkNicRequest) (LinkNicResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkNicResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.LinkNic")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkNic"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkNicRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkPrivateIpsRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	linkPrivateIpsRequest *LinkPrivateIpsRequest
}

func (r ApiLinkPrivateIpsRequest) LinkPrivateIpsRequest(linkPrivateIpsRequest LinkPrivateIpsRequest) ApiLinkPrivateIpsRequest {
	r.linkPrivateIpsRequest = &linkPrivateIpsRequest
	return r
}

func (r ApiLinkPrivateIpsRequest) Execute() (LinkPrivateIpsResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkPrivateIpsExecute(r)
}

/*
 * LinkPrivateIps Method for LinkPrivateIps
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkPrivateIpsRequest
 */
func (a *NicApiService) LinkPrivateIps(ctx _context.Context) ApiLinkPrivateIpsRequest {
	return ApiLinkPrivateIpsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkPrivateIpsResponse
 */
func (a *NicApiService) LinkPrivateIpsExecute(r ApiLinkPrivateIpsRequest) (LinkPrivateIpsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkPrivateIpsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.LinkPrivateIps")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkPrivateIps"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkPrivateIpsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadNicsRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	readNicsRequest *ReadNicsRequest
}

func (r ApiReadNicsRequest) ReadNicsRequest(readNicsRequest ReadNicsRequest) ApiReadNicsRequest {
	r.readNicsRequest = &readNicsRequest
	return r
}

func (r ApiReadNicsRequest) Execute() (ReadNicsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadNicsExecute(r)
}

/*
 * ReadNics Method for ReadNics
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadNicsRequest
 */
func (a *NicApiService) ReadNics(ctx _context.Context) ApiReadNicsRequest {
	return ApiReadNicsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadNicsResponse
 */
func (a *NicApiService) ReadNicsExecute(r ApiReadNicsRequest) (ReadNicsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadNicsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.ReadNics")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadNics"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readNicsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkNicRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	unlinkNicRequest *UnlinkNicRequest
}

func (r ApiUnlinkNicRequest) UnlinkNicRequest(unlinkNicRequest UnlinkNicRequest) ApiUnlinkNicRequest {
	r.unlinkNicRequest = &unlinkNicRequest
	return r
}

func (r ApiUnlinkNicRequest) Execute() (UnlinkNicResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkNicExecute(r)
}

/*
 * UnlinkNic Method for UnlinkNic
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkNicRequest
 */
func (a *NicApiService) UnlinkNic(ctx _context.Context) ApiUnlinkNicRequest {
	return ApiUnlinkNicRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkNicResponse
 */
func (a *NicApiService) UnlinkNicExecute(r ApiUnlinkNicRequest) (UnlinkNicResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkNicResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.UnlinkNic")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkNic"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkNicRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkPrivateIpsRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	unlinkPrivateIpsRequest *UnlinkPrivateIpsRequest
}

func (r ApiUnlinkPrivateIpsRequest) UnlinkPrivateIpsRequest(unlinkPrivateIpsRequest UnlinkPrivateIpsRequest) ApiUnlinkPrivateIpsRequest {
	r.unlinkPrivateIpsRequest = &unlinkPrivateIpsRequest
	return r
}

func (r ApiUnlinkPrivateIpsRequest) Execute() (UnlinkPrivateIpsResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkPrivateIpsExecute(r)
}

/*
 * UnlinkPrivateIps Method for UnlinkPrivateIps
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkPrivateIpsRequest
 */
func (a *NicApiService) UnlinkPrivateIps(ctx _context.Context) ApiUnlinkPrivateIpsRequest {
	return ApiUnlinkPrivateIpsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkPrivateIpsResponse
 */
func (a *NicApiService) UnlinkPrivateIpsExecute(r ApiUnlinkPrivateIpsRequest) (UnlinkPrivateIpsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkPrivateIpsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.UnlinkPrivateIps")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkPrivateIps"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkPrivateIpsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateNicRequest struct {
	ctx _context.Context
	ApiService *NicApiService
	updateNicRequest *UpdateNicRequest
}

func (r ApiUpdateNicRequest) UpdateNicRequest(updateNicRequest UpdateNicRequest) ApiUpdateNicRequest {
	r.updateNicRequest = &updateNicRequest
	return r
}

func (r ApiUpdateNicRequest) Execute() (UpdateNicResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateNicExecute(r)
}

/*
 * UpdateNic Method for UpdateNic
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateNicRequest
 */
func (a *NicApiService) UpdateNic(ctx _context.Context) ApiUpdateNicRequest {
	return ApiUpdateNicRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateNicResponse
 */
func (a *NicApiService) UpdateNicExecute(r ApiUpdateNicRequest) (UpdateNicResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateNicResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "NicApiService.UpdateNic")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateNic"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateNicRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ProductTypeApiService ProductTypeApi service
type ProductTypeApiService service

type ApiReadProductTypesRequest struct {
	ctx _context.Context
	ApiService *ProductTypeApiService
	readProductTypesRequest *ReadProductTypesRequest
}

func (r ApiReadProductTypesRequest) ReadProductTypesRequest(readProductTypesRequest ReadProductTypesRequest) ApiReadProductTypesRequest {
	r.readProductTypesRequest = &readProductTypesRequest
	return r
}

func (r ApiReadProductTypesRequest) Execute() (ReadProductTypesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadProductTypesExecute(r)
}

/*
 * ReadProductTypes Method for ReadProductTypes
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadProductTypesRequest
 */
func (a *ProductTypeApiService) ReadProductTypes(ctx _context.Context) ApiReadProductTypesRequest {
	return ApiReadProductTypesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadProductTypesResponse
 */
func (a *ProductTypeApiService) ReadProductTypesExecute(r ApiReadProductTypesRequest) (ReadProductTypesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadProductTypesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ProductTypeApiService.ReadProductTypes")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadProductTypes"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readProductTypesRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// PublicIpApiService PublicIpApi service
type PublicIpApiService service

type ApiCreatePublicIpRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	createPublicIpRequest *CreatePublicIpRequest
}

func (r ApiCreatePublicIpRequest) CreatePublicIpRequest(createPublicIpRequest CreatePublicIpRequest) ApiCreatePublicIpRequest {
	r.createPublicIpRequest = &createPublicIpRequest
	return r
}

func (r ApiCreatePublicIpRequest) Execute() (CreatePublicIpResponse, *_nethttp.Response, error) {
	return r.ApiService.CreatePublicIpExecute(r)
}

/*
 * CreatePublicIp Method for CreatePublicIp
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreatePublicIpRequest
 */
func (a *PublicIpApiService) CreatePublicIp(ctx _context.Context) ApiCreatePublicIpRequest {
	return ApiCreatePublicIpRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreatePublicIpResponse
 */
func (a *PublicIpApiService) CreatePublicIpExecute(r ApiCreatePublicIpRequest) (CreatePublicIpResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreatePublicIpResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.CreatePublicIp")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreatePublicIp"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createPublicIpRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeletePublicIpRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	deletePublicIpRequest *DeletePublicIpRequest
}

func (r ApiDeletePublicIpRequest) DeletePublicIpRequest(deletePublicIpRequest DeletePublicIpRequest) ApiDeletePublicIpRequest {
	r.deletePublicIpRequest = &deletePublicIpRequest
	return r
}

func (r ApiDeletePublicIpRequest) Execute() (DeletePublicIpResponse, *_nethttp.Response, error) {
	return r.ApiService.DeletePublicIpExecute(r)
}

/*
 * DeletePublicIp Method for DeletePublicIp
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeletePublicIpRequest
 */
func (a *PublicIpApiService) DeletePublicIp(ctx _context.Context) ApiDeletePublicIpRequest {
	return ApiDeletePublicIpRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeletePublicIpResponse
 */
func (a *PublicIpApiService) DeletePublicIpExecute(r ApiDeletePublicIpRequest) (DeletePublicIpResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeletePublicIpResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.DeletePublicIp")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeletePublicIp"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deletePublicIpRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkPublicIpRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	linkPublicIpRequest *LinkPublicIpRequest
}

func (r ApiLinkPublicIpRequest) LinkPublicIpRequest(linkPublicIpRequest LinkPublicIpRequest) ApiLinkPublicIpRequest {
	r.linkPublicIpRequest = &linkPublicIpRequest
	return r
}

func (r ApiLinkPublicIpRequest) Execute() (LinkPublicIpResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkPublicIpExecute(r)
}

/*
 * LinkPublicIp Method for LinkPublicIp
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkPublicIpRequest
 */
func (a *PublicIpApiService) LinkPublicIp(ctx _context.Context) ApiLinkPublicIpRequest {
	return ApiLinkPublicIpRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkPublicIpResponse
 */
func (a *PublicIpApiService) LinkPublicIpExecute(r ApiLinkPublicIpRequest) (LinkPublicIpResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkPublicIpResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.LinkPublicIp")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkPublicIp"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkPublicIpRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadPublicIpRangesRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	readPublicIpRangesRequest *ReadPublicIpRangesRequest
}

func (r ApiReadPublicIpRangesRequest) ReadPublicIpRangesRequest(readPublicIpRangesRequest ReadPublicIpRangesRequest) ApiReadPublicIpRangesRequest {
	r.readPublicIpRangesRequest = &readPublicIpRangesRequest
	return r
}

func (r ApiReadPublicIpRangesRequest) Execute() (ReadPublicIpRangesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadPublicIpRangesExecute(r)
}

/*
 * ReadPublicIpRanges Method for ReadPublicIpRanges
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadPublicIpRangesRequest
 */
func (a *PublicIpApiService) ReadPublicIpRanges(ctx _context.Context) ApiReadPublicIpRangesRequest {
	return ApiReadPublicIpRangesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadPublicIpRangesResponse
 */
func (a *PublicIpApiService) ReadPublicIpRangesExecute(r ApiReadPublicIpRangesRequest) (ReadPublicIpRangesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadPublicIpRangesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.ReadPublicIpRanges")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadPublicIpRanges"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readPublicIpRangesRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadPublicIpsRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	readPublicIpsRequest *ReadPublicIpsRequest
}

func (r ApiReadPublicIpsRequest) ReadPublicIpsRequest(readPublicIpsRequest ReadPublicIpsRequest) ApiReadPublicIpsRequest {
	r.readPublicIpsRequest = &readPublicIpsRequest
	return r
}

func (r ApiReadPublicIpsRequest) Execute() (ReadPublicIpsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadPublicIpsExecute(r)
}

/*
 * ReadPublicIps Method for ReadPublicIps
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadPublicIpsRequest
 */
func (a *PublicIpApiService) ReadPublicIps(ctx _context.Context) ApiReadPublicIpsRequest {
	return ApiReadPublicIpsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadPublicIpsResponse
 */
func (a *PublicIpApiService) ReadPublicIpsExecute(r ApiReadPublicIpsRequest) (ReadPublicIpsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadPublicIpsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.ReadPublicIps")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadPublicIps"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readPublicIpsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkPublicIpRequest struct {
	ctx _context.Context
	ApiService *PublicIpApiService
	unlinkPublicIpRequest *UnlinkPublicIpRequest
}

func (r ApiUnlinkPublicIpRequest) UnlinkPublicIpRequest(unlinkPublicIpRequest UnlinkPublicIpRequest) ApiUnlinkPublicIpRequest {
	r.unlinkPublicIpRequest = &unlinkPublicIpRequest
	return r
}

func (r ApiUnlinkPublicIpRequest) Execute() (UnlinkPublicIpResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkPublicIpExecute(r)
}

/*
 * UnlinkPublicIp Method for UnlinkPublicIp
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkPublicIpRequest
 */
func (a *PublicIpApiService) UnlinkPublicIp(ctx _context.Context) ApiUnlinkPublicIpRequest {
	return ApiUnlinkPublicIpRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkPublicIpResponse
 */
func (a *PublicIpApiService) UnlinkPublicIpExecute(r ApiUnlinkPublicIpRequest) (UnlinkPublicIpResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkPublicIpResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "PublicIpApiService.UnlinkPublicIp")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkPublicIp"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkPublicIpRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// QuotaApiService QuotaApi service
type QuotaApiService service

type ApiReadQuotasRequest struct {
	ctx _context.Context
	ApiService *QuotaApiService
	readQuotasRequest *ReadQuotasRequest
}

func (r ApiReadQuotasRequest) ReadQuotasRequest(readQuotasRequest ReadQuotasRequest) ApiReadQuotasRequest {
	r.readQuotasRequest = &readQuotasRequest
	return r
}

func (r ApiReadQuotasRequest) Execute() (ReadQuotasResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadQuotasExecute(r)
}

/*
 * ReadQuotas Method for ReadQuotas
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadQuotasRequest
 */
func (a *QuotaApiService) ReadQuotas(ctx _context.Context) ApiReadQuotasRequest {
	return ApiReadQuotasRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadQuotasResponse
 */
func (a *QuotaApiService) ReadQuotasExecute(r ApiReadQuotasRequest) (ReadQuotasResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadQuotasResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "QuotaApiService.ReadQuotas")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadQuotas"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readQuotasRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// RegionApiService RegionApi service
type RegionApiService service

type ApiReadRegionsRequest struct {
	ctx _context.Context
	ApiService *RegionApiService
	readRegionsRequest *ReadRegionsRequest
}

func (r ApiReadRegionsRequest) ReadRegionsRequest(readRegionsRequest ReadRegionsRequest) ApiReadRegionsRequest {
	r.readRegionsRequest = &readRegionsRequest
	return r
}

func (r ApiReadRegionsRequest) Execute() (ReadRegionsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadRegionsExecute(r)
}

/*
 * ReadRegions Method for ReadRegions
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadRegionsRequest
 */
func (a *RegionApiService) ReadRegions(ctx _context.Context) ApiReadRegionsRequest {
	return ApiReadRegionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadRegionsResponse
 */
func (a *RegionApiService) ReadRegionsExecute(r ApiReadRegionsRequest) (ReadRegionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadRegionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RegionApiService.ReadRegions")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadRegions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readRegionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// RouteApiService RouteApi service
type RouteApiService service

type ApiCreateRouteRequest struct {
	ctx _context.Context
	ApiService *RouteApiService
	createRouteRequest *CreateRouteRequest
}

func (r ApiCreateRouteRequest) CreateRouteRequest(createRouteRequest CreateRouteRequest) ApiCreateRouteRequest {
	r.createRouteRequest = &createRouteRequest
	return r
}

func (r ApiCreateRouteRequest) Execute() (CreateRouteResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateRouteExecute(r)
}

/*
 * CreateRoute Method for CreateRoute
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateRouteRequest
 */
func (a *RouteApiService) CreateRoute(ctx _context.Context) ApiCreateRouteRequest {
	return ApiCreateRouteRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateRouteResponse
 */
func (a *RouteApiService) CreateRouteExecute(r ApiCreateRouteRequest) (CreateRouteResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateRouteResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteApiService.CreateRoute")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateRoute"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createRouteRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteRouteRequest struct {
	ctx _context.Context
	ApiService *RouteApiService
	deleteRouteRequest *DeleteRouteRequest
}

func (r ApiDeleteRouteRequest) DeleteRouteRequest(deleteRouteRequest DeleteRouteRequest) ApiDeleteRouteRequest {
	r.deleteRouteRequest = &deleteRouteRequest
	return r
}

func (r ApiDeleteRouteRequest) Execute() (DeleteRouteResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteRouteExecute(r)
}

/*
 * DeleteRoute Method for DeleteRoute
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteRouteRequest
 */
func (a *RouteApiService) DeleteRoute(ctx _context.Context) ApiDeleteRouteRequest {
	return ApiDeleteRouteRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteRouteResponse
 */
func (a *RouteApiService) DeleteRouteExecute(r ApiDeleteRouteRequest) (DeleteRouteResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteRouteResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteApiService.DeleteRoute")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteRoute"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteRouteRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateRouteRequest struct {
	ctx _context.Context
	ApiService *RouteApiService
	updateRouteRequest *UpdateRouteRequest
}

func (r ApiUpdateRouteRequest) UpdateRouteRequest(updateRouteRequest UpdateRouteRequest) ApiUpdateRouteRequest {
	r.updateRouteRequest = &updateRouteRequest
	return r
}

func (r ApiUpdateRouteRequest) Execute() (UpdateRouteResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateRouteExecute(r)
}

/*
 * UpdateRoute Method for UpdateRoute
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateRouteRequest
 */
func (a *RouteApiService) UpdateRoute(ctx _context.Context) ApiUpdateRouteRequest {
	return ApiUpdateRouteRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateRouteResponse
 */
func (a *RouteApiService) UpdateRouteExecute(r ApiUpdateRouteRequest) (UpdateRouteResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateRouteResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteApiService.UpdateRoute")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateRoute"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateRouteRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// RouteTableApiService RouteTableApi service
type RouteTableApiService service

type ApiCreateRouteTableRequest struct {
	ctx _context.Context
	ApiService *RouteTableApiService
	createRouteTableRequest *CreateRouteTableRequest
}

func (r ApiCreateRouteTableRequest) CreateRouteTableRequest(createRouteTableRequest CreateRouteTableRequest) ApiCreateRouteTableRequest {
	r.createRouteTableRequest = &createRouteTableRequest
	return r
}

func (r ApiCreateRouteTableRequest) Execute() (CreateRouteTableResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateRouteTableExecute(r)
}

/*
 * CreateRouteTable Method for CreateRouteTable
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateRouteTableRequest
 */
func (a *RouteTableApiService) CreateRouteTable(ctx _context.Context) ApiCreateRouteTableRequest {
	return ApiCreateRouteTableRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateRouteTableResponse
 */
func (a *RouteTableApiService) CreateRouteTableExecute(r ApiCreateRouteTableRequest) (CreateRouteTableResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateRouteTableResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteTableApiService.CreateRouteTable")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateRouteTable"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createRouteTableRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteRouteTableRequest struct {
	ctx _context.Context
	ApiService *RouteTableApiService
	deleteRouteTableRequest *DeleteRouteTableRequest
}

func (r ApiDeleteRouteTableRequest) DeleteRouteTableRequest(deleteRouteTableRequest DeleteRouteTableRequest) ApiDeleteRouteTableRequest {
	r.deleteRouteTableRequest = &deleteRouteTableRequest
	return r
}

func (r ApiDeleteRouteTableRequest) Execute() (DeleteRouteTableResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteRouteTableExecute(r)
}

/*
 * DeleteRouteTable Method for DeleteRouteTable
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteRouteTableRequest
 */
func (a *RouteTableApiService) DeleteRouteTable(ctx _context.Context) ApiDeleteRouteTableRequest {
	return ApiDeleteRouteTableRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteRouteTableResponse
 */
func (a *RouteTableApiService) DeleteRouteTableExecute(r ApiDeleteRouteTableRequest) (DeleteRouteTableResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteRouteTableResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteTableApiService.DeleteRouteTable")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteRouteTable"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteRouteTableRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkRouteTableRequest struct {
	ctx _context.Context
	ApiService *RouteTableApiService
	linkRouteTableRequest *LinkRouteTableRequest
}

func (r ApiLinkRouteTableRequest) LinkRouteTableRequest(linkRouteTableRequest LinkRouteTableRequest) ApiLinkRouteTableRequest {
	r.linkRouteTableRequest = &linkRouteTableRequest
	return r
}

func (r ApiLinkRouteTableRequest) Execute() (LinkRouteTableResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkRouteTableExecute(r)
}

/*
 * LinkRouteTable Method for LinkRouteTable
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkRouteTableRequest
 */
func (a *RouteTableApiService) LinkRouteTable(ctx _context.Context) ApiLinkRouteTableRequest {
	return ApiLinkRouteTableRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkRouteTableResponse
 */
func (a *RouteTableApiService) LinkRouteTableExecute(r ApiLinkRouteTableRequest) (LinkRouteTableResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkRouteTableResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteTableApiService.LinkRouteTable")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkRouteTable"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkRouteTableRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadRouteTablesRequest struct {
	ctx _context.Context
	ApiService *RouteTableApiService
	readRouteTablesRequest *ReadRouteTablesRequest
}

func (r ApiReadRouteTablesRequest) ReadRouteTablesRequest(readRouteTablesRequest ReadRouteTablesRequest) ApiReadRouteTablesRequest {
	r.readRouteTablesRequest = &readRouteTablesRequest
	return r
}

func (r ApiReadRouteTablesRequest) Execute() (ReadRouteTablesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadRouteTablesExecute(r)
}

/*
 * ReadRouteTables Method for ReadRouteTables
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadRouteTablesRequest
 */
func (a *RouteTableApiService) ReadRouteTables(ctx _context.Context) ApiReadRouteTablesRequest {
	return ApiReadRouteTablesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadRouteTablesResponse
 */
func (a *RouteTableApiService) ReadRouteTablesExecute(r ApiReadRouteTablesRequest) (ReadRouteTablesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadRouteTablesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteTableApiService.ReadRouteTables")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadRouteTables"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readRouteTablesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkRouteTableRequest struct {
	ctx _context.Context
	ApiService *RouteTableApiService
	unlinkRouteTableRequest *UnlinkRouteTableRequest
}

func (r ApiUnlinkRouteTableRequest) UnlinkRouteTableRequest(unlinkRouteTableRequest UnlinkRouteTableRequest) ApiUnlinkRouteTableRequest {
	r.unlinkRouteTableRequest = &unlinkRouteTableRequest
	return r
}

func (r ApiUnlinkRouteTableRequest) Execute() (UnlinkRouteTableResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkRouteTableExecute(r)
}

/*
 * UnlinkRouteTable Method for UnlinkRouteTable
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkRouteTableRequest
 */
func (a *RouteTableApiService) UnlinkRouteTable(ctx _context.Context) ApiUnlinkRouteTableRequest {
	return ApiUnlinkRouteTableRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkRouteTableResponse
 */
func (a *RouteTableApiService) UnlinkRouteTableExecute(r ApiUnlinkRouteTableRequest) (UnlinkRouteTableResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkRouteTableResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "RouteTableApiService.UnlinkRouteTable")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkRouteTable"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkRouteTableRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// SecurityGroupApiService SecurityGroupApi service
type SecurityGroupApiService service

type ApiCreateSecurityGroupRequest struct {
	ctx _context.Context
	ApiService *SecurityGroupApiService
	createSecurityGroupRequest *CreateSecurityGroupRequest
}

func (r ApiCreateSecurityGroupRequest) CreateSecurityGroupRequest(createSecurityGroupRequest CreateSecurityGroupRequest) ApiCreateSecurityGroupRequest {
	r.createSecurityGroupRequest = &createSecurityGroupRequest
	return r
}

func (r ApiCreateSecurityGroupRequest) Execute() (CreateSecurityGroupResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateSecurityGroupExecute(r)
}

/*
 * CreateSecurityGroup Method for CreateSecurityGroup
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateSecurityGroupRequest
 */
func (a *SecurityGroupApiService) CreateSecurityGroup(ctx _context.Context) ApiCreateSecurityGroupRequest {
	return ApiCreateSecurityGroupRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateSecurityGroupResponse
 */
func (a *SecurityGroupApiService) CreateSecurityGroupExecute(r ApiCreateSecurityGroupRequest) (CreateSecurityGroupResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateSecurityGroupResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SecurityGroupApiService.CreateSecurityGroup")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateSecurityGroup"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createSecurityGroupRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteSecurityGroupRequest struct {
	ctx _context.Context
	ApiService *SecurityGroupApiService
	deleteSecurityGroupRequest *DeleteSecurityGroupRequest
}

func (r ApiDeleteSecurityGroupRequest) DeleteSecurityGroupRequest(deleteSecurityGroupRequest DeleteSecurityGroupRequest) ApiDeleteSecurityGroupRequest {
	r.deleteSecurityGroupRequest = &deleteSecurityGroupRequest
	return r
}

func (r ApiDeleteSecurityGroupRequest) Execute() (DeleteSecurityGroupResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteSecurityGroupExecute(r)
}

/*
 * DeleteSecurityGroup Method for DeleteSecurityGroup
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteSecurityGroupRequest
 */
func (a *SecurityGroupApiService) DeleteSecurityGroup(ctx _context.Context) ApiDeleteSecurityGroupRequest {
	return ApiDeleteSecurityGroupRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteSecurityGroupResponse
 */
func (a *SecurityGroupApiService) DeleteSecurityGroupExecute(r ApiDeleteSecurityGroupRequest) (DeleteSecurityGroupResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteSecurityGroupResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SecurityGroupApiService.DeleteSecurityGroup")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteSecurityGroup"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteSecurityGroupRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadSecurityGroupsRequest struct {
	ctx _context.Context
	ApiService *SecurityGroupApiService
	readSecurityGroupsRequest *ReadSecurityGroupsRequest
}

func (r ApiReadSecurityGroupsRequest) ReadSecurityGroupsRequest(readSecurityGroupsRequest ReadSecurityGroupsRequest) ApiReadSecurityGroupsRequest {
	r.readSecurityGroupsRequest = &readSecurityGroupsRequest
	return r
}

func (r ApiReadSecurityGroupsRequest) Execute() (ReadSecurityGroupsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSecurityGroupsExecute(r)
}

/*
 * ReadSecurityGroups Method for ReadSecurityGroups
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSecurityGroupsRequest
 */
func (a *SecurityGroupApiService) ReadSecurityGroups(ctx _context.Context) ApiReadSecurityGroupsRequest {
	return ApiReadSecurityGroupsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSecurityGroupsResponse
 */
func (a *SecurityGroupApiService) ReadSecurityGroupsExecute(r ApiReadSecurityGroupsRequest) (ReadSecurityGroupsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSecurityGroupsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SecurityGroupApiService.ReadSecurityGroups")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSecurityGroups"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSecurityGroupsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// SecurityGroupRuleApiService SecurityGroupRuleApi service
type SecurityGroupRuleApiService service

type ApiCreateSecurityGroupRuleRequest struct {
	ctx _context.Context
	ApiService *SecurityGroupRuleApiService
	createSecurityGroupRuleRequest *CreateSecurityGroupRuleRequest
}

func (r ApiCreateSecurityGroupRuleRequest) CreateSecurityGroupRuleRequest(createSecurityGroupRuleRequest CreateSecurityGroupRuleRequest) ApiCreateSecurityGroupRuleRequest {
	r.createSecurityGroupRuleRequest = &createSecurityGroupRuleRequest
	return r
}

func (r ApiCreateSecurityGroupRuleRequest) Execute() (CreateSecurityGroupRuleResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateSecurityGroupRuleExecute(r)
}

/*
 * CreateSecurityGroupRule Method for CreateSecurityGroupRule
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateSecurityGroupRuleRequest
 */
func (a *SecurityGroupRuleApiService) CreateSecurityGroupRule(ctx _context.Context) ApiCreateSecurityGroupRuleRequest {
	return ApiCreateSecurityGroupRuleRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateSecurityGroupRuleResponse
 */
func (a *SecurityGroupRuleApiService) CreateSecurityGroupRuleExecute(r ApiCreateSecurityGroupRuleRequest) (CreateSecurityGroupRuleResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateSecurityGroupRuleResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SecurityGroupRuleApiService.CreateSecurityGroupRule")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateSecurityGroupRule"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createSecurityGroupRuleRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteSecurityGroupRuleRequest struct {
	ctx _context.Context
	ApiService *SecurityGroupRuleApiService
	deleteSecurityGroupRuleRequest *DeleteSecurityGroupRuleRequest
}

func (r ApiDeleteSecurityGroupRuleRequest) DeleteSecurityGroupRuleRequest(deleteSecurityGroupRuleRequest DeleteSecurityGroupRuleRequest) ApiDeleteSecurityGroupRuleRequest {
	r.deleteSecurityGroupRuleRequest = &deleteSecurityGroupRuleRequest
	return r
}

func (r ApiDeleteSecurityGroupRuleRequest) Execute() (DeleteSecurityGroupRuleResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteSecurityGroupRuleExecute(r)
}

/*
 * DeleteSecurityGroupRule Method for DeleteSecurityGroupRule
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteSecurityGroupRuleRequest
 */
func (a *SecurityGroupRuleApiService) DeleteSecurityGroupRule(ctx _context.Context) ApiDeleteSecurityGroupRuleRequest {
	return ApiDeleteSecurityGroupRuleRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteSecurityGroupRuleResponse
 */
func (a *SecurityGroupRuleApiService) DeleteSecurityGroupRuleExecute(r ApiDeleteSecurityGroupRuleRequest) (DeleteSecurityGroupRuleResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteSecurityGroupRuleResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SecurityGroupRuleApiService.DeleteSecurityGroupRule")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteSecurityGroupRule"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteSecurityGroupRuleRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// ServerCertificateApiService ServerCertificateApi service
type ServerCertificateApiService service

type ApiCreateServerCertificateRequest struct {
	ctx _context.Context
	ApiService *ServerCertificateApiService
	createServerCertificateRequest *CreateServerCertificateRequest
}

func (r ApiCreateServerCertificateRequest) CreateServerCertificateRequest(createServerCertificateRequest CreateServerCertificateRequest) ApiCreateServerCertificateRequest {
	r.createServerCertificateRequest = &createServerCertificateRequest
	return r
}

func (r ApiCreateServerCertificateRequest) Execute() (CreateServerCertificateResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateServerCertificateExecute(r)
}

/*
 * CreateServerCertificate Method for CreateServerCertificate
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateServerCertificateRequest
 */
func (a *ServerCertificateApiService) CreateServerCertificate(ctx _context.Context) ApiCreateServerCertificateRequest {
	return ApiCreateServerCertificateRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateServerCertificateResponse
 */
func (a *ServerCertificateApiService) CreateServerCertificateExecute(r ApiCreateServerCertificateRequest) (CreateServerCertificateResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateServerCertificateResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ServerCertificateApiService.CreateServerCertificate")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateServerCertificate"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createServerCertificateRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteServerCertificateRequest struct {
	ctx _context.Context
	ApiService *ServerCertificateApiService
	deleteServerCertificateRequest *DeleteServerCertificateRequest
}

func (r ApiDeleteServerCertificateRequest) DeleteServerCertificateRequest(deleteServerCertificateRequest DeleteServerCertificateRequest) ApiDeleteServerCertificateRequest {
	r.deleteServerCertificateRequest = &deleteServerCertificateRequest
	return r
}

func (r ApiDeleteServerCertificateRequest) Execute() (DeleteServerCertificateResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteServerCertificateExecute(r)
}

/*
 * DeleteServerCertificate Method for DeleteServerCertificate
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteServerCertificateRequest
 */
func (a *ServerCertificateApiService) DeleteServerCertificate(ctx _context.Context) ApiDeleteServerCertificateRequest {
	return ApiDeleteServerCertificateRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteServerCertificateResponse
 */
func (a *ServerCertificateApiService) DeleteServerCertificateExecute(r ApiDeleteServerCertificateRequest) (DeleteServerCertificateResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteServerCertificateResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ServerCertificateApiService.DeleteServerCertificate")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteServerCertificate"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteServerCertificateRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadServerCertificatesRequest struct {
	ctx _context.Context
	ApiService *ServerCertificateApiService
	readServerCertificatesRequest *ReadServerCertificatesRequest
}

func (r ApiReadServerCertificatesRequest) ReadServerCertificatesRequest(readServerCertificatesRequest ReadServerCertificatesRequest) ApiReadServerCertificatesRequest {
	r.readServerCertificatesRequest = &readServerCertificatesRequest
	return r
}

func (r ApiReadServerCertificatesRequest) Execute() (ReadServerCertificatesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadServerCertificatesExecute(r)
}

/*
 * ReadServerCertificates Method for ReadServerCertificates
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadServerCertificatesRequest
 */
func (a *ServerCertificateApiService) ReadServerCertificates(ctx _context.Context) ApiReadServerCertificatesRequest {
	return ApiReadServerCertificatesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadServerCertificatesResponse
 */
func (a *ServerCertificateApiService) ReadServerCertificatesExecute(r ApiReadServerCertificatesRequest) (ReadServerCertificatesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadServerCertificatesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ServerCertificateApiService.ReadServerCertificates")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadServerCertificates"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readServerCertificatesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateServerCertificateRequest struct {
	ctx _context.Context
	ApiService *ServerCertificateApiService
	updateServerCertificateRequest *UpdateServerCertificateRequest
}

func (r ApiUpdateServerCertificateRequest) UpdateServerCertificateRequest(updateServerCertificateRequest UpdateServerCertificateRequest) ApiUpdateServerCertificateRequest {
	r.updateServerCertificateRequest = &updateServerCertificateRequest
	return r
}

func (r ApiUpdateServerCertificateRequest) Execute() (UpdateServerCertificateResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateServerCertificateExecute(r)
}

/*
 * UpdateServerCertificate Method for UpdateServerCertificate
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateServerCertificateRequest
 */
func (a *ServerCertificateApiService) UpdateServerCertificate(ctx _context.Context) ApiUpdateServerCertificateRequest {
	return ApiUpdateServerCertificateRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateServerCertificateResponse
 */
func (a *ServerCertificateApiService) UpdateServerCertificateExecute(r ApiUpdateServerCertificateRequest) (UpdateServerCertificateResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateServerCertificateResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "ServerCertificateApiService.UpdateServerCertificate")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateServerCertificate"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateServerCertificateRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// SnapshotApiService SnapshotApi service
type SnapshotApiService service

type ApiCreateSnapshotRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	createSnapshotRequest *CreateSnapshotRequest
}

func (r ApiCreateSnapshotRequest) CreateSnapshotRequest(createSnapshotRequest CreateSnapshotRequest) ApiCreateSnapshotRequest {
	r.createSnapshotRequest = &createSnapshotRequest
	return r
}

func (r ApiCreateSnapshotRequest) Execute() (CreateSnapshotResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateSnapshotExecute(r)
}

/*
 * CreateSnapshot Method for CreateSnapshot
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateSnapshotRequest
 */
func (a *SnapshotApiService) CreateSnapshot(ctx _context.Context) ApiCreateSnapshotRequest {
	return ApiCreateSnapshotRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateSnapshotResponse
 */
func (a *SnapshotApiService) CreateSnapshotExecute(r ApiCreateSnapshotRequest) (CreateSnapshotResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateSnapshotResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.CreateSnapshot")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateSnapshot"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createSnapshotRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateSnapshotExportTaskRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	createSnapshotExportTaskRequest *CreateSnapshotExportTaskRequest
}

func (r ApiCreateSnapshotExportTaskRequest) CreateSnapshotExportTaskRequest(createSnapshotExportTaskRequest CreateSnapshotExportTaskRequest) ApiCreateSnapshotExportTaskRequest {
	r.createSnapshotExportTaskRequest = &createSnapshotExportTaskRequest
	return r
}

func (r ApiCreateSnapshotExportTaskRequest) Execute() (CreateSnapshotExportTaskResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateSnapshotExportTaskExecute(r)
}

/*
 * CreateSnapshotExportTask Method for CreateSnapshotExportTask
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateSnapshotExportTaskRequest
 */
func (a *SnapshotApiService) CreateSnapshotExportTask(ctx _context.Context) ApiCreateSnapshotExportTaskRequest {
	return ApiCreateSnapshotExportTaskRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateSnapshotExportTaskResponse
 */
func (a *SnapshotApiService) CreateSnapshotExportTaskExecute(r ApiCreateSnapshotExportTaskRequest) (CreateSnapshotExportTaskResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateSnapshotExportTaskResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.CreateSnapshotExportTask")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateSnapshotExportTask"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createSnapshotExportTaskRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteSnapshotRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	deleteSnapshotRequest *DeleteSnapshotRequest
}

func (r ApiDeleteSnapshotRequest) DeleteSnapshotRequest(deleteSnapshotRequest DeleteSnapshotRequest) ApiDeleteSnapshotRequest {
	r.deleteSnapshotRequest = &deleteSnapshotRequest
	return r
}

func (r ApiDeleteSnapshotRequest) Execute() (DeleteSnapshotResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteSnapshotExecute(r)
}

/*
 * DeleteSnapshot Method for DeleteSnapshot
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteSnapshotRequest
 */
func (a *SnapshotApiService) DeleteSnapshot(ctx _context.Context) ApiDeleteSnapshotRequest {
	return ApiDeleteSnapshotRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteSnapshotResponse
 */
func (a *SnapshotApiService) DeleteSnapshotExecute(r ApiDeleteSnapshotRequest) (DeleteSnapshotResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteSnapshotResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.DeleteSnapshot")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteSnapshot"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteSnapshotRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadSnapshotExportTasksRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	readSnapshotExportTasksRequest *ReadSnapshotExportTasksRequest
}

func (r ApiReadSnapshotExportTasksRequest) ReadSnapshotExportTasksRequest(readSnapshotExportTasksRequest ReadSnapshotExportTasksRequest) ApiReadSnapshotExportTasksRequest {
	r.readSnapshotExportTasksRequest = &readSnapshotExportTasksRequest
	return r
}

func (r ApiReadSnapshotExportTasksRequest) Execute() (ReadSnapshotExportTasksResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSnapshotExportTasksExecute(r)
}

/*
 * ReadSnapshotExportTasks Method for ReadSnapshotExportTasks
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSnapshotExportTasksRequest
 */
func (a *SnapshotApiService) ReadSnapshotExportTasks(ctx _context.Context) ApiReadSnapshotExportTasksRequest {
	return ApiReadSnapshotExportTasksRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSnapshotExportTasksResponse
 */
func (a *SnapshotApiService) ReadSnapshotExportTasksExecute(r ApiReadSnapshotExportTasksRequest) (ReadSnapshotExportTasksResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSnapshotExportTasksResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.ReadSnapshotExportTasks")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSnapshotExportTasks"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSnapshotExportTasksRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadSnapshotsRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	readSnapshotsRequest *ReadSnapshotsRequest
}

func (r ApiReadSnapshotsRequest) ReadSnapshotsRequest(readSnapshotsRequest ReadSnapshotsRequest) ApiReadSnapshotsRequest {
	r.readSnapshotsRequest = &readSnapshotsRequest
	return r
}

func (r ApiReadSnapshotsRequest) Execute() (ReadSnapshotsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSnapshotsExecute(r)
}

/*
 * ReadSnapshots Method for ReadSnapshots
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSnapshotsRequest
 */
func (a *SnapshotApiService) ReadSnapshots(ctx _context.Context) ApiReadSnapshotsRequest {
	return ApiReadSnapshotsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSnapshotsResponse
 */
func (a *SnapshotApiService) ReadSnapshotsExecute(r ApiReadSnapshotsRequest) (ReadSnapshotsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSnapshotsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.ReadSnapshots")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSnapshots"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSnapshotsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateSnapshotRequest struct {
	ctx _context.Context
	ApiService *SnapshotApiService
	updateSnapshotRequest *UpdateSnapshotRequest
}

func (r ApiUpdateSnapshotRequest) UpdateSnapshotRequest(updateSnapshotRequest UpdateSnapshotRequest) ApiUpdateSnapshotRequest {
	r.updateSnapshotRequest = &updateSnapshotRequest
	return r
}

func (r ApiUpdateSnapshotRequest) Execute() (UpdateSnapshotResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateSnapshotExecute(r)
}

/*
 * UpdateSnapshot Method for UpdateSnapshot
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateSnapshotRequest
 */
func (a *SnapshotApiService) UpdateSnapshot(ctx _context.Context) ApiUpdateSnapshotRequest {
	return ApiUpdateSnapshotRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateSnapshotResponse
 */
func (a *SnapshotApiService) UpdateSnapshotExecute(r ApiUpdateSnapshotRequest) (UpdateSnapshotResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateSnapshotResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SnapshotApiService.UpdateSnapshot")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateSnapshot"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateSnapshotRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// SubnetApiService SubnetApi service
type SubnetApiService service

type ApiCreateSubnetRequest struct {
	ctx _context.Context
	ApiService *SubnetApiService
	createSubnetRequest *CreateSubnetRequest
}

func (r ApiCreateSubnetRequest) CreateSubnetRequest(createSubnetRequest CreateSubnetRequest) ApiCreateSubnetRequest {
	r.createSubnetRequest = &createSubnetRequest
	return r
}

func (r ApiCreateSubnetRequest) Execute() (CreateSubnetResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateSubnetExecute(r)
}

/*
 * CreateSubnet Method for CreateSubnet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateSubnetRequest
 */
func (a *SubnetApiService) CreateSubnet(ctx _context.Context) ApiCreateSubnetRequest {
	return ApiCreateSubnetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateSubnetResponse
 */
func (a *SubnetApiService) CreateSubnetExecute(r ApiCreateSubnetRequest) (CreateSubnetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateSubnetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SubnetApiService.CreateSubnet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateSubnet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createSubnetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 409 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteSubnetRequest struct {
	ctx _context.Context
	ApiService *SubnetApiService
	deleteSubnetRequest *DeleteSubnetRequest
}

func (r ApiDeleteSubnetRequest) DeleteSubnetRequest(deleteSubnetRequest DeleteSubnetRequest) ApiDeleteSubnetRequest {
	r.deleteSubnetRequest = &deleteSubnetRequest
	return r
}

func (r ApiDeleteSubnetRequest) Execute() (DeleteSubnetResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteSubnetExecute(r)
}

/*
 * DeleteSubnet Method for DeleteSubnet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteSubnetRequest
 */
func (a *SubnetApiService) DeleteSubnet(ctx _context.Context) ApiDeleteSubnetRequest {
	return ApiDeleteSubnetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteSubnetResponse
 */
func (a *SubnetApiService) DeleteSubnetExecute(r ApiDeleteSubnetRequest) (DeleteSubnetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteSubnetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SubnetApiService.DeleteSubnet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteSubnet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteSubnetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadSubnetsRequest struct {
	ctx _context.Context
	ApiService *SubnetApiService
	readSubnetsRequest *ReadSubnetsRequest
}

func (r ApiReadSubnetsRequest) ReadSubnetsRequest(readSubnetsRequest ReadSubnetsRequest) ApiReadSubnetsRequest {
	r.readSubnetsRequest = &readSubnetsRequest
	return r
}

func (r ApiReadSubnetsRequest) Execute() (ReadSubnetsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSubnetsExecute(r)
}

/*
 * ReadSubnets Method for ReadSubnets
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSubnetsRequest
 */
func (a *SubnetApiService) ReadSubnets(ctx _context.Context) ApiReadSubnetsRequest {
	return ApiReadSubnetsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSubnetsResponse
 */
func (a *SubnetApiService) ReadSubnetsExecute(r ApiReadSubnetsRequest) (ReadSubnetsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSubnetsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SubnetApiService.ReadSubnets")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSubnets"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSubnetsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateSubnetRequest struct {
	ctx _context.Context
	ApiService *SubnetApiService
	updateSubnetRequest *UpdateSubnetRequest
}

func (r ApiUpdateSubnetRequest) UpdateSubnetRequest(updateSubnetRequest UpdateSubnetRequest) ApiUpdateSubnetRequest {
	r.updateSubnetRequest = &updateSubnetRequest
	return r
}

func (r ApiUpdateSubnetRequest) Execute() (UpdateSubnetResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateSubnetExecute(r)
}

/*
 * UpdateSubnet Method for UpdateSubnet
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateSubnetRequest
 */
func (a *SubnetApiService) UpdateSubnet(ctx _context.Context) ApiUpdateSubnetRequest {
	return ApiUpdateSubnetRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateSubnetResponse
 */
func (a *SubnetApiService) UpdateSubnetExecute(r ApiUpdateSubnetRequest) (UpdateSubnetResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateSubnetResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SubnetApiService.UpdateSubnet")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateSubnet"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateSubnetRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// SubregionApiService SubregionApi service
type SubregionApiService service

type ApiReadSubregionsRequest struct {
	ctx _context.Context
	ApiService *SubregionApiService
	readSubregionsRequest *ReadSubregionsRequest
}

func (r ApiReadSubregionsRequest) ReadSubregionsRequest(readSubregionsRequest ReadSubregionsRequest) ApiReadSubregionsRequest {
	r.readSubregionsRequest = &readSubregionsRequest
	return r
}

func (r ApiReadSubregionsRequest) Execute() (ReadSubregionsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadSubregionsExecute(r)
}

/*
 * ReadSubregions Method for ReadSubregions
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadSubregionsRequest
 */
func (a *SubregionApiService) ReadSubregions(ctx _context.Context) ApiReadSubregionsRequest {
	return ApiReadSubregionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadSubregionsResponse
 */
func (a *SubregionApiService) ReadSubregionsExecute(r ApiReadSubregionsRequest) (ReadSubregionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadSubregionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "SubregionApiService.ReadSubregions")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadSubregions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readSubregionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// TagApiService TagApi service
type TagApiService service

type ApiCreateTagsRequest struct {
	ctx _context.Context
	ApiService *TagApiService
	createTagsRequest *CreateTagsRequest
}

func (r ApiCreateTagsRequest) CreateTagsRequest(createTagsRequest CreateTagsRequest) ApiCreateTagsRequest {
	r.createTagsRequest = &createTagsRequest
	return r
}

func (r ApiCreateTagsRequest) Execute() (CreateTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateTagsExecute(r)
}

/*
 * CreateTags Method for CreateTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateTagsRequest
 */
func (a *TagApiService) CreateTags(ctx _context.Context) ApiCreateTagsRequest {
	return ApiCreateTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateTagsResponse
 */
func (a *TagApiService) CreateTagsExecute(r ApiCreateTagsRequest) (CreateTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "TagApiService.CreateTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteTagsRequest struct {
	ctx _context.Context
	ApiService *TagApiService
	deleteTagsRequest *DeleteTagsRequest
}

func (r ApiDeleteTagsRequest) DeleteTagsRequest(deleteTagsRequest DeleteTagsRequest) ApiDeleteTagsRequest {
	r.deleteTagsRequest = &deleteTagsRequest
	return r
}

func (r ApiDeleteTagsRequest) Execute() (DeleteTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteTagsExecute(r)
}

/*
 * DeleteTags Method for DeleteTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteTagsRequest
 */
func (a *TagApiService) DeleteTags(ctx _context.Context) ApiDeleteTagsRequest {
	return ApiDeleteTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteTagsResponse
 */
func (a *TagApiService) DeleteTagsExecute(r ApiDeleteTagsRequest) (DeleteTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "TagApiService.DeleteTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadTagsRequest struct {
	ctx _context.Context
	ApiService *TagApiService
	readTagsRequest *ReadTagsRequest
}

func (r ApiReadTagsRequest) ReadTagsRequest(readTagsRequest ReadTagsRequest) ApiReadTagsRequest {
	r.readTagsRequest = &readTagsRequest
	return r
}

func (r ApiReadTagsRequest) Execute() (ReadTagsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadTagsExecute(r)
}

/*
 * ReadTags Method for ReadTags
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadTagsRequest
 */
func (a *TagApiService) ReadTags(ctx _context.Context) ApiReadTagsRequest {
	return ApiReadTagsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadTagsResponse
 */
func (a *TagApiService) ReadTagsExecute(r ApiReadTagsRequest) (ReadTagsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadTagsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "TagApiService.ReadTags")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadTags"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readTagsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// TaskApiService TaskApi service
type TaskApiService service

type ApiDeleteExportTaskRequest struct {
	ctx _context.Context
	ApiService *TaskApiService
	deleteExportTaskRequest *DeleteExportTaskRequest
}

func (r ApiDeleteExportTaskRequest) DeleteExportTaskRequest(deleteExportTaskRequest DeleteExportTaskRequest) ApiDeleteExportTaskRequest {
	r.deleteExportTaskRequest = &deleteExportTaskRequest
	return r
}

func (r ApiDeleteExportTaskRequest) Execute() (DeleteExportTaskResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteExportTaskExecute(r)
}

/*
 * DeleteExportTask Method for DeleteExportTask
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteExportTaskRequest
 */
func (a *TaskApiService) DeleteExportTask(ctx _context.Context) ApiDeleteExportTaskRequest {
	return ApiDeleteExportTaskRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteExportTaskResponse
 */
func (a *TaskApiService) DeleteExportTaskExecute(r ApiDeleteExportTaskRequest) (DeleteExportTaskResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteExportTaskResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "TaskApiService.DeleteExportTask")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteExportTask"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteExportTaskRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// VirtualGatewayApiService VirtualGatewayApi service
type VirtualGatewayApiService service

type ApiCreateVirtualGatewayRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	createVirtualGatewayRequest *CreateVirtualGatewayRequest
}

func (r ApiCreateVirtualGatewayRequest) CreateVirtualGatewayRequest(createVirtualGatewayRequest CreateVirtualGatewayRequest) ApiCreateVirtualGatewayRequest {
	r.createVirtualGatewayRequest = &createVirtualGatewayRequest
	return r
}

func (r ApiCreateVirtualGatewayRequest) Execute() (CreateVirtualGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateVirtualGatewayExecute(r)
}

/*
 * CreateVirtualGateway Method for CreateVirtualGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateVirtualGatewayRequest
 */
func (a *VirtualGatewayApiService) CreateVirtualGateway(ctx _context.Context) ApiCreateVirtualGatewayRequest {
	return ApiCreateVirtualGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateVirtualGatewayResponse
 */
func (a *VirtualGatewayApiService) CreateVirtualGatewayExecute(r ApiCreateVirtualGatewayRequest) (CreateVirtualGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateVirtualGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.CreateVirtualGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateVirtualGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createVirtualGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteVirtualGatewayRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	deleteVirtualGatewayRequest *DeleteVirtualGatewayRequest
}

func (r ApiDeleteVirtualGatewayRequest) DeleteVirtualGatewayRequest(deleteVirtualGatewayRequest DeleteVirtualGatewayRequest) ApiDeleteVirtualGatewayRequest {
	r.deleteVirtualGatewayRequest = &deleteVirtualGatewayRequest
	return r
}

func (r ApiDeleteVirtualGatewayRequest) Execute() (DeleteVirtualGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteVirtualGatewayExecute(r)
}

/*
 * DeleteVirtualGateway Method for DeleteVirtualGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteVirtualGatewayRequest
 */
func (a *VirtualGatewayApiService) DeleteVirtualGateway(ctx _context.Context) ApiDeleteVirtualGatewayRequest {
	return ApiDeleteVirtualGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteVirtualGatewayResponse
 */
func (a *VirtualGatewayApiService) DeleteVirtualGatewayExecute(r ApiDeleteVirtualGatewayRequest) (DeleteVirtualGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteVirtualGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.DeleteVirtualGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteVirtualGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteVirtualGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkVirtualGatewayRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	linkVirtualGatewayRequest *LinkVirtualGatewayRequest
}

func (r ApiLinkVirtualGatewayRequest) LinkVirtualGatewayRequest(linkVirtualGatewayRequest LinkVirtualGatewayRequest) ApiLinkVirtualGatewayRequest {
	r.linkVirtualGatewayRequest = &linkVirtualGatewayRequest
	return r
}

func (r ApiLinkVirtualGatewayRequest) Execute() (LinkVirtualGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkVirtualGatewayExecute(r)
}

/*
 * LinkVirtualGateway Method for LinkVirtualGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkVirtualGatewayRequest
 */
func (a *VirtualGatewayApiService) LinkVirtualGateway(ctx _context.Context) ApiLinkVirtualGatewayRequest {
	return ApiLinkVirtualGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkVirtualGatewayResponse
 */
func (a *VirtualGatewayApiService) LinkVirtualGatewayExecute(r ApiLinkVirtualGatewayRequest) (LinkVirtualGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkVirtualGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.LinkVirtualGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkVirtualGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkVirtualGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVirtualGatewaysRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	readVirtualGatewaysRequest *ReadVirtualGatewaysRequest
}

func (r ApiReadVirtualGatewaysRequest) ReadVirtualGatewaysRequest(readVirtualGatewaysRequest ReadVirtualGatewaysRequest) ApiReadVirtualGatewaysRequest {
	r.readVirtualGatewaysRequest = &readVirtualGatewaysRequest
	return r
}

func (r ApiReadVirtualGatewaysRequest) Execute() (ReadVirtualGatewaysResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVirtualGatewaysExecute(r)
}

/*
 * ReadVirtualGateways Method for ReadVirtualGateways
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVirtualGatewaysRequest
 */
func (a *VirtualGatewayApiService) ReadVirtualGateways(ctx _context.Context) ApiReadVirtualGatewaysRequest {
	return ApiReadVirtualGatewaysRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVirtualGatewaysResponse
 */
func (a *VirtualGatewayApiService) ReadVirtualGatewaysExecute(r ApiReadVirtualGatewaysRequest) (ReadVirtualGatewaysResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVirtualGatewaysResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.ReadVirtualGateways")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVirtualGateways"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVirtualGatewaysRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkVirtualGatewayRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	unlinkVirtualGatewayRequest *UnlinkVirtualGatewayRequest
}

func (r ApiUnlinkVirtualGatewayRequest) UnlinkVirtualGatewayRequest(unlinkVirtualGatewayRequest UnlinkVirtualGatewayRequest) ApiUnlinkVirtualGatewayRequest {
	r.unlinkVirtualGatewayRequest = &unlinkVirtualGatewayRequest
	return r
}

func (r ApiUnlinkVirtualGatewayRequest) Execute() (UnlinkVirtualGatewayResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkVirtualGatewayExecute(r)
}

/*
 * UnlinkVirtualGateway Method for UnlinkVirtualGateway
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkVirtualGatewayRequest
 */
func (a *VirtualGatewayApiService) UnlinkVirtualGateway(ctx _context.Context) ApiUnlinkVirtualGatewayRequest {
	return ApiUnlinkVirtualGatewayRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkVirtualGatewayResponse
 */
func (a *VirtualGatewayApiService) UnlinkVirtualGatewayExecute(r ApiUnlinkVirtualGatewayRequest) (UnlinkVirtualGatewayResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkVirtualGatewayResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.UnlinkVirtualGateway")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkVirtualGateway"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkVirtualGatewayRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateRoutePropagationRequest struct {
	ctx _context.Context
	ApiService *VirtualGatewayApiService
	updateRoutePropagationRequest *UpdateRoutePropagationRequest
}

func (r ApiUpdateRoutePropagationRequest) UpdateRoutePropagationRequest(updateRoutePropagationRequest UpdateRoutePropagationRequest) ApiUpdateRoutePropagationRequest {
	r.updateRoutePropagationRequest = &updateRoutePropagationRequest
	return r
}

func (r ApiUpdateRoutePropagationRequest) Execute() (UpdateRoutePropagationResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateRoutePropagationExecute(r)
}

/*
 * UpdateRoutePropagation Method for UpdateRoutePropagation
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateRoutePropagationRequest
 */
func (a *VirtualGatewayApiService) UpdateRoutePropagation(ctx _context.Context) ApiUpdateRoutePropagationRequest {
	return ApiUpdateRoutePropagationRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateRoutePropagationResponse
 */
func (a *VirtualGatewayApiService) UpdateRoutePropagationExecute(r ApiUpdateRoutePropagationRequest) (UpdateRoutePropagationResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateRoutePropagationResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VirtualGatewayApiService.UpdateRoutePropagation")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateRoutePropagation"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateRoutePropagationRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// VmApiService VmApi service
type VmApiService service

type ApiCreateVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	createVmsRequest *CreateVmsRequest
}

func (r ApiCreateVmsRequest) CreateVmsRequest(createVmsRequest CreateVmsRequest) ApiCreateVmsRequest {
	r.createVmsRequest = &createVmsRequest
	return r
}

func (r ApiCreateVmsRequest) Execute() (CreateVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateVmsExecute(r)
}

/*
 * CreateVms Method for CreateVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateVmsRequest
 */
func (a *VmApiService) CreateVms(ctx _context.Context) ApiCreateVmsRequest {
	return ApiCreateVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateVmsResponse
 */
func (a *VmApiService) CreateVmsExecute(r ApiCreateVmsRequest) (CreateVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.CreateVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	deleteVmsRequest *DeleteVmsRequest
}

func (r ApiDeleteVmsRequest) DeleteVmsRequest(deleteVmsRequest DeleteVmsRequest) ApiDeleteVmsRequest {
	r.deleteVmsRequest = &deleteVmsRequest
	return r
}

func (r ApiDeleteVmsRequest) Execute() (DeleteVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteVmsExecute(r)
}

/*
 * DeleteVms Method for DeleteVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteVmsRequest
 */
func (a *VmApiService) DeleteVms(ctx _context.Context) ApiDeleteVmsRequest {
	return ApiDeleteVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteVmsResponse
 */
func (a *VmApiService) DeleteVmsExecute(r ApiDeleteVmsRequest) (DeleteVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.DeleteVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadAdminPasswordRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	readAdminPasswordRequest *ReadAdminPasswordRequest
}

func (r ApiReadAdminPasswordRequest) ReadAdminPasswordRequest(readAdminPasswordRequest ReadAdminPasswordRequest) ApiReadAdminPasswordRequest {
	r.readAdminPasswordRequest = &readAdminPasswordRequest
	return r
}

func (r ApiReadAdminPasswordRequest) Execute() (ReadAdminPasswordResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadAdminPasswordExecute(r)
}

/*
 * ReadAdminPassword Method for ReadAdminPassword
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadAdminPasswordRequest
 */
func (a *VmApiService) ReadAdminPassword(ctx _context.Context) ApiReadAdminPasswordRequest {
	return ApiReadAdminPasswordRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadAdminPasswordResponse
 */
func (a *VmApiService) ReadAdminPasswordExecute(r ApiReadAdminPasswordRequest) (ReadAdminPasswordResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadAdminPasswordResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.ReadAdminPassword")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadAdminPassword"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readAdminPasswordRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadConsoleOutputRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	readConsoleOutputRequest *ReadConsoleOutputRequest
}

func (r ApiReadConsoleOutputRequest) ReadConsoleOutputRequest(readConsoleOutputRequest ReadConsoleOutputRequest) ApiReadConsoleOutputRequest {
	r.readConsoleOutputRequest = &readConsoleOutputRequest
	return r
}

func (r ApiReadConsoleOutputRequest) Execute() (ReadConsoleOutputResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadConsoleOutputExecute(r)
}

/*
 * ReadConsoleOutput Method for ReadConsoleOutput
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadConsoleOutputRequest
 */
func (a *VmApiService) ReadConsoleOutput(ctx _context.Context) ApiReadConsoleOutputRequest {
	return ApiReadConsoleOutputRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadConsoleOutputResponse
 */
func (a *VmApiService) ReadConsoleOutputExecute(r ApiReadConsoleOutputRequest) (ReadConsoleOutputResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadConsoleOutputResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.ReadConsoleOutput")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadConsoleOutput"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readConsoleOutputRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVmTypesRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	readVmTypesRequest *ReadVmTypesRequest
}

func (r ApiReadVmTypesRequest) ReadVmTypesRequest(readVmTypesRequest ReadVmTypesRequest) ApiReadVmTypesRequest {
	r.readVmTypesRequest = &readVmTypesRequest
	return r
}

func (r ApiReadVmTypesRequest) Execute() (ReadVmTypesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVmTypesExecute(r)
}

/*
 * ReadVmTypes Method for ReadVmTypes
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVmTypesRequest
 */
func (a *VmApiService) ReadVmTypes(ctx _context.Context) ApiReadVmTypesRequest {
	return ApiReadVmTypesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVmTypesResponse
 */
func (a *VmApiService) ReadVmTypesExecute(r ApiReadVmTypesRequest) (ReadVmTypesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVmTypesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.ReadVmTypes")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVmTypes"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVmTypesRequest
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	readVmsRequest *ReadVmsRequest
}

func (r ApiReadVmsRequest) ReadVmsRequest(readVmsRequest ReadVmsRequest) ApiReadVmsRequest {
	r.readVmsRequest = &readVmsRequest
	return r
}

func (r ApiReadVmsRequest) Execute() (ReadVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVmsExecute(r)
}

/*
 * ReadVms Method for ReadVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVmsRequest
 */
func (a *VmApiService) ReadVms(ctx _context.Context) ApiReadVmsRequest {
	return ApiReadVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVmsResponse
 */
func (a *VmApiService) ReadVmsExecute(r ApiReadVmsRequest) (ReadVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.ReadVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVmsStateRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	readVmsStateRequest *ReadVmsStateRequest
}

func (r ApiReadVmsStateRequest) ReadVmsStateRequest(readVmsStateRequest ReadVmsStateRequest) ApiReadVmsStateRequest {
	r.readVmsStateRequest = &readVmsStateRequest
	return r
}

func (r ApiReadVmsStateRequest) Execute() (ReadVmsStateResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVmsStateExecute(r)
}

/*
 * ReadVmsState Method for ReadVmsState
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVmsStateRequest
 */
func (a *VmApiService) ReadVmsState(ctx _context.Context) ApiReadVmsStateRequest {
	return ApiReadVmsStateRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVmsStateResponse
 */
func (a *VmApiService) ReadVmsStateExecute(r ApiReadVmsStateRequest) (ReadVmsStateResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVmsStateResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.ReadVmsState")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVmsState"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVmsStateRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiRebootVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	rebootVmsRequest *RebootVmsRequest
}

func (r ApiRebootVmsRequest) RebootVmsRequest(rebootVmsRequest RebootVmsRequest) ApiRebootVmsRequest {
	r.rebootVmsRequest = &rebootVmsRequest
	return r
}

func (r ApiRebootVmsRequest) Execute() (RebootVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.RebootVmsExecute(r)
}

/*
 * RebootVms Method for RebootVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiRebootVmsRequest
 */
func (a *VmApiService) RebootVms(ctx _context.Context) ApiRebootVmsRequest {
	return ApiRebootVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return RebootVmsResponse
 */
func (a *VmApiService) RebootVmsExecute(r ApiRebootVmsRequest) (RebootVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  RebootVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.RebootVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/RebootVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.rebootVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiStartVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	startVmsRequest *StartVmsRequest
}

func (r ApiStartVmsRequest) StartVmsRequest(startVmsRequest StartVmsRequest) ApiStartVmsRequest {
	r.startVmsRequest = &startVmsRequest
	return r
}

func (r ApiStartVmsRequest) Execute() (StartVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.StartVmsExecute(r)
}

/*
 * StartVms Method for StartVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiStartVmsRequest
 */
func (a *VmApiService) StartVms(ctx _context.Context) ApiStartVmsRequest {
	return ApiStartVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return StartVmsResponse
 */
func (a *VmApiService) StartVmsExecute(r ApiStartVmsRequest) (StartVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  StartVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.StartVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/StartVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.startVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiStopVmsRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	stopVmsRequest *StopVmsRequest
}

func (r ApiStopVmsRequest) StopVmsRequest(stopVmsRequest StopVmsRequest) ApiStopVmsRequest {
	r.stopVmsRequest = &stopVmsRequest
	return r
}

func (r ApiStopVmsRequest) Execute() (StopVmsResponse, *_nethttp.Response, error) {
	return r.ApiService.StopVmsExecute(r)
}

/*
 * StopVms Method for StopVms
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiStopVmsRequest
 */
func (a *VmApiService) StopVms(ctx _context.Context) ApiStopVmsRequest {
	return ApiStopVmsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return StopVmsResponse
 */
func (a *VmApiService) StopVmsExecute(r ApiStopVmsRequest) (StopVmsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  StopVmsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.StopVms")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/StopVms"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.stopVmsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUpdateVmRequest struct {
	ctx _context.Context
	ApiService *VmApiService
	updateVmRequest *UpdateVmRequest
}

func (r ApiUpdateVmRequest) UpdateVmRequest(updateVmRequest UpdateVmRequest) ApiUpdateVmRequest {
	r.updateVmRequest = &updateVmRequest
	return r
}

func (r ApiUpdateVmRequest) Execute() (UpdateVmResponse, *_nethttp.Response, error) {
	return r.ApiService.UpdateVmExecute(r)
}

/*
 * UpdateVm Method for UpdateVm
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUpdateVmRequest
 */
func (a *VmApiService) UpdateVm(ctx _context.Context) ApiUpdateVmRequest {
	return ApiUpdateVmRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UpdateVmResponse
 */
func (a *VmApiService) UpdateVmExecute(r ApiUpdateVmRequest) (UpdateVmResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UpdateVmResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VmApiService.UpdateVm")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UpdateVm"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.updateVmRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// VolumeApiService VolumeApi service
type VolumeApiService service

type ApiCreateVolumeRequest struct {
	ctx _context.Context
	ApiService *VolumeApiService
	createVolumeRequest *CreateVolumeRequest
}

func (r ApiCreateVolumeRequest) CreateVolumeRequest(createVolumeRequest CreateVolumeRequest) ApiCreateVolumeRequest {
	r.createVolumeRequest = &createVolumeRequest
	return r
}

func (r ApiCreateVolumeRequest) Execute() (CreateVolumeResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateVolumeExecute(r)
}

/*
 * CreateVolume Method for CreateVolume
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateVolumeRequest
 */
func (a *VolumeApiService) CreateVolume(ctx _context.Context) ApiCreateVolumeRequest {
	return ApiCreateVolumeRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateVolumeResponse
 */
func (a *VolumeApiService) CreateVolumeExecute(r ApiCreateVolumeRequest) (CreateVolumeResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateVolumeResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VolumeApiService.CreateVolume")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateVolume"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createVolumeRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteVolumeRequest struct {
	ctx _context.Context
	ApiService *VolumeApiService
	deleteVolumeRequest *DeleteVolumeRequest
}

func (r ApiDeleteVolumeRequest) DeleteVolumeRequest(deleteVolumeRequest DeleteVolumeRequest) ApiDeleteVolumeRequest {
	r.deleteVolumeRequest = &deleteVolumeRequest
	return r
}

func (r ApiDeleteVolumeRequest) Execute() (DeleteVolumeResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteVolumeExecute(r)
}

/*
 * DeleteVolume Method for DeleteVolume
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteVolumeRequest
 */
func (a *VolumeApiService) DeleteVolume(ctx _context.Context) ApiDeleteVolumeRequest {
	return ApiDeleteVolumeRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteVolumeResponse
 */
func (a *VolumeApiService) DeleteVolumeExecute(r ApiDeleteVolumeRequest) (DeleteVolumeResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteVolumeResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VolumeApiService.DeleteVolume")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteVolume"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteVolumeRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiLinkVolumeRequest struct {
	ctx _context.Context
	ApiService *VolumeApiService
	linkVolumeRequest *LinkVolumeRequest
}

func (r ApiLinkVolumeRequest) LinkVolumeRequest(linkVolumeRequest LinkVolumeRequest) ApiLinkVolumeRequest {
	r.linkVolumeRequest = &linkVolumeRequest
	return r
}

func (r ApiLinkVolumeRequest) Execute() (LinkVolumeResponse, *_nethttp.Response, error) {
	return r.ApiService.LinkVolumeExecute(r)
}

/*
 * LinkVolume Method for LinkVolume
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiLinkVolumeRequest
 */
func (a *VolumeApiService) LinkVolume(ctx _context.Context) ApiLinkVolumeRequest {
	return ApiLinkVolumeRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return LinkVolumeResponse
 */
func (a *VolumeApiService) LinkVolumeExecute(r ApiLinkVolumeRequest) (LinkVolumeResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  LinkVolumeResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VolumeApiService.LinkVolume")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/LinkVolume"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.linkVolumeRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVolumesRequest struct {
	ctx _context.Context
	ApiService *VolumeApiService
	readVolumesRequest *ReadVolumesRequest
}

func (r ApiReadVolumesRequest) ReadVolumesRequest(readVolumesRequest ReadVolumesRequest) ApiReadVolumesRequest {
	r.readVolumesRequest = &readVolumesRequest
	return r
}

func (r ApiReadVolumesRequest) Execute() (ReadVolumesResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVolumesExecute(r)
}

/*
 * ReadVolumes Method for ReadVolumes
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVolumesRequest
 */
func (a *VolumeApiService) ReadVolumes(ctx _context.Context) ApiReadVolumesRequest {
	return ApiReadVolumesRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVolumesResponse
 */
func (a *VolumeApiService) ReadVolumesExecute(r ApiReadVolumesRequest) (ReadVolumesResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVolumesResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VolumeApiService.ReadVolumes")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVolumes"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVolumesRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiUnlinkVolumeRequest struct {
	ctx _context.Context
	ApiService *VolumeApiService
	unlinkVolumeRequest *UnlinkVolumeRequest
}

func (r ApiUnlinkVolumeRequest) UnlinkVolumeRequest(unlinkVolumeRequest UnlinkVolumeRequest) ApiUnlinkVolumeRequest {
	r.unlinkVolumeRequest = &unlinkVolumeRequest
	return r
}

func (r ApiUnlinkVolumeRequest) Execute() (UnlinkVolumeResponse, *_nethttp.Response, error) {
	return r.ApiService.UnlinkVolumeExecute(r)
}

/*
 * UnlinkVolume Method for UnlinkVolume
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiUnlinkVolumeRequest
 */
func (a *VolumeApiService) UnlinkVolume(ctx _context.Context) ApiUnlinkVolumeRequest {
	return ApiUnlinkVolumeRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return UnlinkVolumeResponse
 */
func (a *VolumeApiService) UnlinkVolumeExecute(r ApiUnlinkVolumeRequest) (UnlinkVolumeResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  UnlinkVolumeResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VolumeApiService.UnlinkVolume")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/UnlinkVolume"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.unlinkVolumeRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		if localVarHTTPResponse.StatusCode == 400 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 401 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
			return localVarReturnValue, localVarHTTPResponse, newErr
		}
		if localVarHTTPResponse.StatusCode == 500 {
			var v ErrorResponse
			err = a.client.decode(&v, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, localVarHTTPResponse, newErr
			}
			newErr.model = v
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	_context "context"
	_ioutil "io/ioutil"
	_nethttp "net/http"
	_neturl "net/url"
)

// Linger please
var (
	_ _context.Context
)

// VpnConnectionApiService VpnConnectionApi service
type VpnConnectionApiService service

type ApiCreateVpnConnectionRequest struct {
	ctx _context.Context
	ApiService *VpnConnectionApiService
	createVpnConnectionRequest *CreateVpnConnectionRequest
}

func (r ApiCreateVpnConnectionRequest) CreateVpnConnectionRequest(createVpnConnectionRequest CreateVpnConnectionRequest) ApiCreateVpnConnectionRequest {
	r.createVpnConnectionRequest = &createVpnConnectionRequest
	return r
}

func (r ApiCreateVpnConnectionRequest) Execute() (CreateVpnConnectionResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateVpnConnectionExecute(r)
}

/*
 * CreateVpnConnection Method for CreateVpnConnection
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateVpnConnectionRequest
 */
func (a *VpnConnectionApiService) CreateVpnConnection(ctx _context.Context) ApiCreateVpnConnectionRequest {
	return ApiCreateVpnConnectionRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateVpnConnectionResponse
 */
func (a *VpnConnectionApiService) CreateVpnConnectionExecute(r ApiCreateVpnConnectionRequest) (CreateVpnConnectionResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateVpnConnectionResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VpnConnectionApiService.CreateVpnConnection")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateVpnConnection"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createVpnConnectionRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiCreateVpnConnectionRouteRequest struct {
	ctx _context.Context
	ApiService *VpnConnectionApiService
	createVpnConnectionRouteRequest *CreateVpnConnectionRouteRequest
}

func (r ApiCreateVpnConnectionRouteRequest) CreateVpnConnectionRouteRequest(createVpnConnectionRouteRequest CreateVpnConnectionRouteRequest) ApiCreateVpnConnectionRouteRequest {
	r.createVpnConnectionRouteRequest = &createVpnConnectionRouteRequest
	return r
}

func (r ApiCreateVpnConnectionRouteRequest) Execute() (CreateVpnConnectionRouteResponse, *_nethttp.Response, error) {
	return r.ApiService.CreateVpnConnectionRouteExecute(r)
}

/*
 * CreateVpnConnectionRoute Method for CreateVpnConnectionRoute
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiCreateVpnConnectionRouteRequest
 */
func (a *VpnConnectionApiService) CreateVpnConnectionRoute(ctx _context.Context) ApiCreateVpnConnectionRouteRequest {
	return ApiCreateVpnConnectionRouteRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return CreateVpnConnectionRouteResponse
 */
func (a *VpnConnectionApiService) CreateVpnConnectionRouteExecute(r ApiCreateVpnConnectionRouteRequest) (CreateVpnConnectionRouteResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  CreateVpnConnectionRouteResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VpnConnectionApiService.CreateVpnConnectionRoute")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/CreateVpnConnectionRoute"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.createVpnConnectionRouteRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteVpnConnectionRequest struct {
	ctx _context.Context
	ApiService *VpnConnectionApiService
	deleteVpnConnectionRequest *DeleteVpnConnectionRequest
}

func (r ApiDeleteVpnConnectionRequest) DeleteVpnConnectionRequest(deleteVpnConnectionRequest DeleteVpnConnectionRequest) ApiDeleteVpnConnectionRequest {
	r.deleteVpnConnectionRequest = &deleteVpnConnectionRequest
	return r
}

func (r ApiDeleteVpnConnectionRequest) Execute() (DeleteVpnConnectionResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteVpnConnectionExecute(r)
}

/*
 * DeleteVpnConnection Method for DeleteVpnConnection
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteVpnConnectionRequest
 */
func (a *VpnConnectionApiService) DeleteVpnConnection(ctx _context.Context) ApiDeleteVpnConnectionRequest {
	return ApiDeleteVpnConnectionRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteVpnConnectionResponse
 */
func (a *VpnConnectionApiService) DeleteVpnConnectionExecute(r ApiDeleteVpnConnectionRequest) (DeleteVpnConnectionResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteVpnConnectionResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VpnConnectionApiService.DeleteVpnConnection")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteVpnConnection"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteVpnConnectionRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiDeleteVpnConnectionRouteRequest struct {
	ctx _context.Context
	ApiService *VpnConnectionApiService
	deleteVpnConnectionRouteRequest *DeleteVpnConnectionRouteRequest
}

func (r ApiDeleteVpnConnectionRouteRequest) DeleteVpnConnectionRouteRequest(deleteVpnConnectionRouteRequest DeleteVpnConnectionRouteRequest) ApiDeleteVpnConnectionRouteRequest {
	r.deleteVpnConnectionRouteRequest = &deleteVpnConnectionRouteRequest
	return r
}

func (r ApiDeleteVpnConnectionRouteRequest) Execute() (DeleteVpnConnectionRouteResponse, *_nethttp.Response, error) {
	return r.ApiService.DeleteVpnConnectionRouteExecute(r)
}

/*
 * DeleteVpnConnectionRoute Method for DeleteVpnConnectionRoute
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiDeleteVpnConnectionRouteRequest
 */
func (a *VpnConnectionApiService) DeleteVpnConnectionRoute(ctx _context.Context) ApiDeleteVpnConnectionRouteRequest {
	return ApiDeleteVpnConnectionRouteRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return DeleteVpnConnectionRouteResponse
 */
func (a *VpnConnectionApiService) DeleteVpnConnectionRouteExecute(r ApiDeleteVpnConnectionRouteRequest) (DeleteVpnConnectionRouteResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteVpnConnectionRouteResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VpnConnectionApiService.DeleteVpnConnectionRoute")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/DeleteVpnConnectionRoute"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.deleteVpnConnectionRouteRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiReadVpnConnectionsRequest struct {
	ctx _context.Context
	ApiService *VpnConnectionApiService
	readVpnConnectionsRequest *ReadVpnConnectionsRequest
}

func (r ApiReadVpnConnectionsRequest) ReadVpnConnectionsRequest(readVpnConnectionsRequest ReadVpnConnectionsRequest) ApiReadVpnConnectionsRequest {
	r.readVpnConnectionsRequest = &readVpnConnectionsRequest
	return r
}

func (r ApiReadVpnConnectionsRequest) Execute() (ReadVpnConnectionsResponse, *_nethttp.Response, error) {
	return r.ApiService.ReadVpnConnectionsExecute(r)
}

/*
 * ReadVpnConnections Method for ReadVpnConnections
 * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @return ApiReadVpnConnectionsRequest
 */
func (a *VpnConnectionApiService) ReadVpnConnections(ctx _context.Context) ApiReadVpnConnectionsRequest {
	return ApiReadVpnConnectionsRequest{
		ApiService: a,
		ctx: ctx,
	}
}

/*
 * Execute executes the request
 * @return ReadVpnConnectionsResponse
 */
func (a *VpnConnectionApiService) ReadVpnConnectionsExecute(r ApiReadVpnConnectionsRequest) (ReadVpnConnectionsResponse, *_nethttp.Response, error) {
	var (
		localVarHTTPMethod   = _nethttp.MethodPost
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ReadVpnConnectionsResponse
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "VpnConnectionApiService.ReadVpnConnections")
	if err != nil {
		return localVarReturnValue, nil, GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/ReadVpnConnections"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := _neturl.Values{}
	localVarFormParams := _neturl.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.readVpnConnectionsRequest
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["ApiKeyAuth"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["Authorization"] = key
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := _ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: err.Error(),
		}
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	return localVarReturnValue, localVarHTTPResponse, nil
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"bytes"
	"context"
	"encoding/json"
	"encoding/xml"
	"errors"
	"fmt"
	"io"
	"log"
	"mime/multipart"
	"net/http"
	"net/http/httputil"
	"net/url"
	"os"
	"path/filepath"
	"reflect"
	"regexp"
	"strconv"
	"strings"
	"time"
	"unicode/utf8"

	"golang.org/x/oauth2"
	awsv4 "github.com/aws/aws-sdk-go/aws/signer/v4"
	awscredentials "github.com/aws/aws-sdk-go/aws/credentials"
)

var (
	jsonCheck = regexp.MustCompile(`(?i:(?:application|text)/(?:vnd\.[^;]+\+)?json)`)
	xmlCheck  = regexp.MustCompile(`(?i:(?:application|text)/xml)`)
)

// APIClient manages communication with the 3DS OUTSCALE API API v1.4
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	cfg    *Configuration
	common service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services

	AccessKeyApi *AccessKeyApiService

	AccountApi *AccountApiService

	ApiLogApi *ApiLogApiService

	ClientGatewayApi *ClientGatewayApiService

	DhcpOptionApi *DhcpOptionApiService

	DirectLinkApi *DirectLinkApiService

	DirectLinkInterfaceApi *DirectLinkInterfaceApiService

	FlexibleGpuApi *FlexibleGpuApiService

	ImageApi *ImageApiService

	InternetServiceApi *InternetServiceApiService

	KeypairApi *KeypairApiService

	ListenerApi *ListenerApiService

	LoadBalancerApi *LoadBalancerApiService

	LoadBalancerPolicyApi *LoadBalancerPolicyApiService

	LocationApi *LocationApiService

	NatServiceApi *NatServiceApiService

	NetApi *NetApiService

	NetAccessPointApi *NetAccessPointApiService

	NetPeeringApi *NetPeeringApiService

	NicApi *NicApiService

	ProductTypeApi *ProductTypeApiService

	PublicIpApi *PublicIpApiService

	QuotaApi *QuotaApiService

	RegionApi *RegionApiService

	RouteApi *RouteApiService

	RouteTableApi *RouteTableApiService

	SecurityGroupApi *SecurityGroupApiService

	SecurityGroupRuleApi *SecurityGroupRuleApiService

	ServerCertificateApi *ServerCertificateApiService

	SnapshotApi *SnapshotApiService

	SubnetApi *SubnetApiService

	SubregionApi *SubregionApiService

	TagApi *TagApiService

	TaskApi *TaskApiService

	VirtualGatewayApi *VirtualGatewayApiService

	VmApi *VmApiService

	VolumeApi *VolumeApiService

	VpnConnectionApi *VpnConnectionApiService
}

type service struct {
	client *APIClient
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *Configuration) *APIClient {
	if cfg.HTTPClient == nil {
		cfg.HTTPClient = http.DefaultClient
	}

	c := &APIClient{}
	c.cfg = cfg
	c.common.client = c

	// API Services
	c.AccessKeyApi = (*AccessKeyApiService)(&c.common)
	c.AccountApi = (*AccountApiService)(&c.common)
	c.ApiLogApi = (*ApiLogApiService)(&c.common)
	c.ClientGatewayApi = (*ClientGatewayApiService)(&c.common)
	c.DhcpOptionApi = (*DhcpOptionApiService)(&c.common)
	c.DirectLinkApi = (*DirectLinkApiService)(&c.common)
	c.DirectLinkInterfaceApi = (*DirectLinkInterfaceApiService)(&c.common)
	c.FlexibleGpuApi = (*FlexibleGpuApiService)(&c.common)
	c.ImageApi = (*ImageApiService)(&c.common)
	c.InternetServiceApi = (*InternetServiceApiService)(&c.common)
	c.KeypairApi = (*KeypairApiService)(&c.common)
	c.ListenerApi = (*ListenerApiService)(&c.common)
	c.LoadBalancerApi = (*LoadBalancerApiService)(&c.common)
	c.LoadBalancerPolicyApi = (*LoadBalancerPolicyApiService)(&c.common)
	c.LocationApi = (*LocationApiService)(&c.common)
	c.NatServiceApi = (*NatServiceApiService)(&c.common)
	c.NetApi = (*NetApiService)(&c.common)
	c.NetAccessPointApi = (*NetAccessPointApiService)(&c.common)
	c.NetPeeringApi = (*NetPeeringApiService)(&c.common)
	c.NicApi = (*NicApiService)(&c.common)
	c.ProductTypeApi = (*ProductTypeApiService)(&c.common)
	c.PublicIpApi = (*PublicIpApiService)(&c.common)
	c.QuotaApi = (*QuotaApiService)(&c.common)
	c.RegionApi = (*RegionApiService)(&c.common)
	c.RouteApi = (*RouteApiService)(&c.common)
	c.RouteTableApi = (*RouteTableApiService)(&c.common)
	c.SecurityGroupApi = (*SecurityGroupApiService)(&c.common)
	c.SecurityGroupRuleApi = (*SecurityGroupRuleApiService)(&c.common)
	c.ServerCertificateApi = (*ServerCertificateApiService)(&c.common)
	c.SnapshotApi = (*SnapshotApiService)(&c.common)
	c.SubnetApi = (*SubnetApiService)(&c.common)
	c.SubregionApi = (*SubregionApiService)(&c.common)
	c.TagApi = (*TagApiService)(&c.common)
	c.TaskApi = (*TaskApiService)(&c.common)
	c.VirtualGatewayApi = (*VirtualGatewayApiService)(&c.common)
	c.VmApi = (*VmApiService)(&c.common)
	c.VolumeApi = (*VolumeApiService)(&c.common)
	c.VpnConnectionApi = (*VpnConnectionApiService)(&c.common)

	return c
}

func atoi(in string) (int, error) {
	return strconv.Atoi(in)
}

// selectHeaderContentType select a content type from the available list.
func selectHeaderContentType(contentTypes []string) string {
	if len(contentTypes) == 0 {
		return ""
	}
	if contains(contentTypes, "application/json") {
		return "application/json"
	}
	return contentTypes[0] // use the first content type specified in 'consumes'
}

// selectHeaderAccept join all accept types and return
func selectHeaderAccept(accepts []string) string {
	if len(accepts) == 0 {
		return ""
	}

	if contains(accepts, "application/json") {
		return "application/json"
	}

	return strings.Join(accepts, ",")
}

// contains is a case insenstive match, finding needle in a haystack
func contains(haystack []string, needle string) bool {
	for _, a := range haystack {
		if strings.ToLower(a) == strings.ToLower(needle) {
			return true
		}
	}
	return false
}

// Verify optional parameters are of the correct type.
func typeCheckParameter(obj interface{}, expected string, name string) error {
	// Make sure there is an object.
	if obj == nil {
		return nil
	}

	// Check the type is as expected.
	if reflect.TypeOf(obj).String() != expected {
		return fmt.Errorf("Expected %s to be of type %s but received %s.", name, expected, reflect.TypeOf(obj).String())
	}
	return nil
}

// parameterToString convert interface{} parameters to string, using a delimiter if format is provided.
func parameterToString(obj interface{}, collectionFormat string) string {
	var delimiter string

	switch collectionFormat {
	case "pipes":
		delimiter = "|"
	case "ssv":
		delimiter = " "
	case "tsv":
		delimiter = "\t"
	case "csv":
		delimiter = ","
	}

	if reflect.TypeOf(obj).Kind() == reflect.Slice {
		return strings.Trim(strings.Replace(fmt.Sprint(obj), " ", delimiter, -1), "[]")
	} else if t, ok := obj.(time.Time); ok {
		return t.Format(time.RFC3339)
	}

	return fmt.Sprintf("%v", obj)
}

// helper for converting interface{} parameters to json strings
func parameterToJson(obj interface{}) (string, error) {
	jsonBuf, err := json.Marshal(obj)
	if err != nil {
		return "", err
	}
	return string(jsonBuf), err
}


// callAPI do the request.
func (c *APIClient) callAPI(request *http.Request) (*http.Response, error) {
	if c.cfg.Debug {
		dump, err := httputil.DumpRequestOut(request, true)
		if err != nil {
			return nil, err
		}
		log.Printf("\n%s\n", string(dump))
	}

	resp, err := c.cfg.HTTPClient.Do(request)
	if err != nil {
		return resp, err
	}

	if c.cfg.Debug {
		dump, err := httputil.DumpResponse(resp, true)
		if err != nil {
			return resp, err
		}
		log.Printf("\n%s\n", string(dump))
	}
	return resp, err
}

// Allow modification of underlying config for alternate implementations and testing
// Caution: modifying the configuration while live can cause data races and potentially unwanted behavior
func (c *APIClient) GetConfig() *Configuration {
	return c.cfg
}

// prepareRequest build the request
func (c *APIClient) prepareRequest(
	ctx context.Context,
	path string, method string,
	postBody interface{},
	headerParams map[string]string,
	queryParams url.Values,
	formParams url.Values,
	formFileName string,
	fileName string,
	fileBytes []byte) (localVarRequest *http.Request, err error) {

	var body *bytes.Buffer

	// Detect postBody type and post.
	if postBody != nil {
		contentType := headerParams["Content-Type"]
		if contentType == "" {
			contentType = detectContentType(postBody)
			headerParams["Content-Type"] = contentType
		}

		body, err = setBody(postBody, contentType)
		if err != nil {
			return nil, err
		}
	}

	// add form parameters and file if available.
	if strings.HasPrefix(headerParams["Content-Type"], "multipart/form-data") && len(formParams) > 0 || (len(fileBytes) > 0 && fileName != "") {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and multipart form at the same time.")
		}
		body = &bytes.Buffer{}
		w := multipart.NewWriter(body)

		for k, v := range formParams {
			for _, iv := range v {
				if strings.HasPrefix(k, "@") { // file
					err = addFile(w, k[1:], iv)
					if err != nil {
						return nil, err
					}
				} else { // form value
					w.WriteField(k, iv)
				}
			}
		}
		if len(fileBytes) > 0 && fileName != "" {
			w.Boundary()
			//_, fileNm := filepath.Split(fileName)
			part, err := w.CreateFormFile(formFileName, filepath.Base(fileName))
			if err != nil {
				return nil, err
			}
			_, err = part.Write(fileBytes)
			if err != nil {
				return nil, err
			}
		}

		// Set the Boundary in the Content-Type
		headerParams["Content-Type"] = w.FormDataContentType()

		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
		w.Close()
	}

	if strings.HasPrefix(headerParams["Content-Type"], "application/x-www-form-urlencoded") && len(formParams) > 0 {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and x-www-form-urlencoded form at the same time.")
		}
		body = &bytes.Buffer{}
		body.WriteString(formParams.Encode())
		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
	}

	// Setup path and query parameters
	url, err := url.Parse(path)
	if err != nil {
		return nil, err
	}

	// Override request host, if applicable
	if c.cfg.Host != "" {
		url.Host = c.cfg.Host
	}

	// Override request scheme, if applicable
	if c.cfg.Scheme != "" {
		url.Scheme = c.cfg.Scheme
	}

	// Adding Query Param
	query := url.Query()
	for k, v := range queryParams {
		for _, iv := range v {
			query.Add(k, iv)
		}
	}

	// Encode the parameters.
	url.RawQuery = query.Encode()

	// Generate a new request
	if body != nil {
		localVarRequest, err = http.NewRequest(method, url.String(), body)
	} else {
		localVarRequest, err = http.NewRequest(method, url.String(), nil)
	}
	if err != nil {
		return nil, err
	}

	// add header parameters, if any
	if len(headerParams) > 0 {
		headers := http.Header{}
		for h, v := range headerParams {
			headers.Set(h, v)
		}
		localVarRequest.Header = headers
	}

	// Add the user agent to the request.
	localVarRequest.Header.Add("User-Agent", c.cfg.UserAgent)

	if ctx != nil {
		// add context to the request
		localVarRequest = localVarRequest.WithContext(ctx)

		// Walk through any authentication.

		// OAuth2 authentication
		if tok, ok := ctx.Value(ContextOAuth2).(oauth2.TokenSource); ok {
			// We were able to grab an oauth2 token from the context
			var latestToken *oauth2.Token
			if latestToken, err = tok.Token(); err != nil {
				return nil, err
			}

			latestToken.SetAuthHeader(localVarRequest)
		}

		// Basic HTTP Authentication
		if auth, ok := ctx.Value(ContextBasicAuth).(BasicAuth); ok {
			localVarRequest.SetBasicAuth(auth.UserName, auth.Password)
		}

		// AccessToken Authentication
		if auth, ok := ctx.Value(ContextAccessToken).(string); ok {
			localVarRequest.Header.Add("Authorization", "Bearer "+auth)
		}

		// AWS Signature v4 Authentication
		if auth, ok := ctx.Value(ContextAWSv4).(AWSv4); ok {
			creds := awscredentials.NewStaticCredentials(auth.AccessKey, auth.SecretKey, "")
			signer := awsv4.NewSigner(creds)
			var reader *strings.Reader
			if body == nil {
				reader = strings.NewReader("")
			} else {
				reader = strings.NewReader(body.String())
			}
			timestamp := time.Now()
			_, err := signer.Sign(localVarRequest, reader, "oapi", "eu-west-2", timestamp)
			if err != nil {
				return nil, err
			}
		}
	}

	for header, value := range c.cfg.DefaultHeader {
		localVarRequest.Header.Add(header, value)
	}
	return localVarRequest, nil
}

func (c *APIClient) decode(v interface{}, b []byte, contentType string) (err error) {
	if len(b) == 0 {
		return nil
	}
	if s, ok := v.(*string); ok {
		*s = string(b)
		return nil
	}
	if xmlCheck.MatchString(contentType) {
		if err = xml.Unmarshal(b, v); err != nil {
			return err
		}
		return nil
	}
	if jsonCheck.MatchString(contentType) {
		if actualObj, ok := v.(interface{GetActualInstance() interface{}}); ok { // oneOf, anyOf schemas
			if unmarshalObj, ok := actualObj.(interface{UnmarshalJSON([]byte) error}); ok { // make sure it has UnmarshalJSON defined
				if err = unmarshalObj.UnmarshalJSON(b); err!= nil {
					return err
				}
			} else {
				errors.New("Unknown type with GetActualInstance but no unmarshalObj.UnmarshalJSON defined")
			}
		} else if err = json.Unmarshal(b, v); err != nil { // simple model
			return err
		}
		return nil
	}
	return errors.New("undefined response type")
}

// Add a file to the multipart request
func addFile(w *multipart.Writer, fieldName, path string) error {
	file, err := os.Open(path)
	if err != nil {
		return err
	}
	defer file.Close()

	part, err := w.CreateFormFile(fieldName, filepath.Base(path))
	if err != nil {
		return err
	}
	_, err = io.Copy(part, file)

	return err
}

// Prevent trying to import "fmt"
func reportError(format string, a ...interface{}) error {
	return fmt.Errorf(format, a...)
}

// Set request body from an interface{}
func setBody(body interface{}, contentType string) (bodyBuf *bytes.Buffer, err error) {
	if bodyBuf == nil {
		bodyBuf = &bytes.Buffer{}
	}

	if reader, ok := body.(io.Reader); ok {
		_, err = bodyBuf.ReadFrom(reader)
	} else if b, ok := body.([]byte); ok {
		_, err = bodyBuf.Write(b)
	} else if s, ok := body.(string); ok {
		_, err = bodyBuf.WriteString(s)
	} else if s, ok := body.(*string); ok {
		_, err = bodyBuf.WriteString(*s)
	} else if jsonCheck.MatchString(contentType) {
		err = json.NewEncoder(bodyBuf).Encode(body)
	} else if xmlCheck.MatchString(contentType) {
		err = xml.NewEncoder(bodyBuf).Encode(body)
	}

	if err != nil {
		return nil, err
	}

	if bodyBuf.Len() == 0 {
		err = fmt.Errorf("Invalid body type %s\n", contentType)
		return nil, err
	}
	return bodyBuf, nil
}

// detectContentType method is used to figure out `Request.Body` content type for request header
func detectContentType(body interface{}) string {
	contentType := "text/plain; charset=utf-8"
	kind := reflect.TypeOf(body).Kind()

	switch kind {
	case reflect.Struct, reflect.Map, reflect.Ptr:
		contentType = "application/json; charset=utf-8"
	case reflect.String:
		contentType = "text/plain; charset=utf-8"
	default:
		if b, ok := body.([]byte); ok {
			contentType = http.DetectContentType(b)
		} else if kind == reflect.Slice {
			contentType = "application/json; charset=utf-8"
		}
	}

	return contentType
}

// Ripped from https://github.com/gregjones/httpcache/blob/master/httpcache.go
type cacheControl map[string]string

func parseCacheControl(headers http.Header) cacheControl {
	cc := cacheControl{}
	ccHeader := headers.Get("Cache-Control")
	for _, part := range strings.Split(ccHeader, ",") {
		part = strings.Trim(part, " ")
		if part == "" {
			continue
		}
		if strings.ContainsRune(part, '=') {
			keyval := strings.Split(part, "=")
			cc[strings.Trim(keyval[0], " ")] = strings.Trim(keyval[1], ",")
		} else {
			cc[part] = ""
		}
	}
	return cc
}

// CacheExpires helper function to determine remaining time before repeating a request.
func CacheExpires(r *http.Response) time.Time {
	// Figure out when the cache expires.
	var expires time.Time
	now, err := time.Parse(time.RFC1123, r.Header.Get("date"))
	if err != nil {
		return time.Now()
	}
	respCacheControl := parseCacheControl(r.Header)

	if maxAge, ok := respCacheControl["max-age"]; ok {
		lifetime, err := time.ParseDuration(maxAge + "s")
		if err != nil {
			expires = now
		} else {
			expires = now.Add(lifetime)
		}
	} else {
		expiresHeader := r.Header.Get("Expires")
		if expiresHeader != "" {
			expires, err = time.Parse(time.RFC1123, expiresHeader)
			if err != nil {
				expires = now
			}
		}
	}
	return expires
}

func strlen(s string) int {
	return utf8.RuneCountInString(s)
}

// GenericOpenAPIError Provides access to the body, error and model on returned errors.
type GenericOpenAPIError struct {
	body  []byte
	error string
	model interface{}
}

// Error returns non-empty string if there was an error.
func (e GenericOpenAPIError) Error() string {
	return e.error
}

// Body returns the raw bytes of the response
func (e GenericOpenAPIError) Body() []byte {
	return e.body
}

// Model returns the unpacked model of the error
func (e GenericOpenAPIError) Model() interface{} {
	return e.model
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"context"
	"fmt"
	"net/http"
	"strings"
)

// contextKeys are used to identify the type of value in the context.
// Since these are string, it is possible to get a short description of the
// context key for logging and debugging using key.String().

type contextKey string

func (c contextKey) String() string {
	return "auth " + string(c)
}

var (
	// ContextOAuth2 takes an oauth2.TokenSource as authentication for the request.
	ContextOAuth2 = contextKey("token")

	// ContextBasicAuth takes BasicAuth as authentication for the request.
	ContextBasicAuth = contextKey("basic")

	// ContextAccessToken takes a string oauth2 access token as authentication for the request.
	ContextAccessToken = contextKey("accesstoken")

	// ContextAPIKeys takes a string apikey as authentication for the request
	ContextAPIKeys = contextKey("apiKeys")

	// ContextAWSv4 takes an Access Key and a Secret Key for signing AWS Signature v4
	ContextAWSv4 = contextKey("awsv4")

	// ContextHttpSignatureAuth takes HttpSignatureAuth as authentication for the request.
	ContextHttpSignatureAuth = contextKey("httpsignature")

	// ContextServerIndex uses a server configuration from the index.
	ContextServerIndex = contextKey("serverIndex")

	// ContextOperationServerIndices uses a server configuration from the index mapping.
	ContextOperationServerIndices = contextKey("serverOperationIndices")

	// ContextServerVariables overrides a server configuration variables.
	ContextServerVariables = contextKey("serverVariables")

	// ContextOperationServerVariables overrides a server configuration variables using operation specific values.
	ContextOperationServerVariables = contextKey("serverOperationVariables")
)

// BasicAuth provides basic http authentication to a request passed via context using ContextBasicAuth
type BasicAuth struct {
	UserName string `json:"userName,omitempty"`
	Password string `json:"password,omitempty"`
}

// APIKey provides API key based authentication to a request passed via context using ContextAPIKey
type APIKey struct {
	Key    string
	Prefix string
}

// AWSv4 provides AWS Signature to a request passed via context using ContextAWSv4
// https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
type AWSv4 struct {
	AccessKey string
	SecretKey string
}

// ServerVariable stores the information about a server variable
type ServerVariable struct {
	Description  string
	DefaultValue string
	EnumValues   []string
}

// ServerConfiguration stores the information about a server
type ServerConfiguration struct {
	URL string
	Description string
	Variables map[string]ServerVariable
}

// ServerConfigurations stores multiple ServerConfiguration items
type ServerConfigurations []ServerConfiguration

// Configuration stores the configuration of the API client
type Configuration struct {
	Host             string            `json:"host,omitempty"`
	Scheme           string            `json:"scheme,omitempty"`
	DefaultHeader    map[string]string `json:"defaultHeader,omitempty"`
	UserAgent        string            `json:"userAgent,omitempty"`
	Debug            bool              `json:"debug,omitempty"`
	Servers          ServerConfigurations
	OperationServers map[string]ServerConfigurations
	HTTPClient       *http.Client
}

// NewConfiguration returns a new Configuration object
func NewConfiguration() *Configuration {
	cfg := &Configuration{
		DefaultHeader:    make(map[string]string),
		UserAgent:        "OpenAPI-Generator/2.0.0/go",
		Debug:            false,
		Servers:          ServerConfigurations{
			{
				URL: "https://api.{region}.outscale.com/api/v1",
				Description: "No description provided",
				Variables: map[string]ServerVariable{
					"region": ServerVariable{
						Description: "No description provided",
						DefaultValue: "eu-west-2",
						EnumValues: []string{
							"cloudgouv-eu-west-1",
							"eu-west-2",
							"us-east-2",
							"us-west-1",
						},
					},
				},
			},
			{
				URL: "https://api.{region}.outscale.hk/api/v1",
				Description: "No description provided",
				Variables: map[string]ServerVariable{
					"region": ServerVariable{
						Description: "No description provided",
						DefaultValue: "cn-southeast-1",
						EnumValues: []string{
							"cn-southeast-1",
						},
					},
				},
			},
		},
		OperationServers: map[string]ServerConfigurations{
		},
	}
	return cfg
}

// AddDefaultHeader adds a new HTTP header to the default header in the request
func (c *Configuration) AddDefaultHeader(key string, value string) {
	c.DefaultHeader[key] = value
}

// URL formats template on a index using given variables
func (sc ServerConfigurations) URL(index int, variables map[string]string) (string, error) {
	if index < 0 || len(sc) <= index {
		return "", fmt.Errorf("Index %v out of range %v", index, len(sc)-1)
	}
	server := sc[index]
	url := server.URL

	// go through variables and replace placeholders
	for name, variable := range server.Variables {
		if value, ok := variables[name]; ok {
			found := bool(len(variable.EnumValues) == 0)
			for _, enumValue := range variable.EnumValues {
				if value == enumValue {
					found = true
				}
			}
			if !found {
				return "", fmt.Errorf("The variable %s in the server URL has invalid value %v. Must be %v", name, value, variable.EnumValues)
			}
			url = strings.Replace(url, "{"+name+"}", value, -1)
		} else {
			url = strings.Replace(url, "{"+name+"}", variable.DefaultValue, -1)
		}
	}
	return url, nil
}

// ServerURL returns URL based on server settings
func (c *Configuration) ServerURL(index int, variables map[string]string) (string, error) {
	return c.Servers.URL(index, variables)
}

func getServerIndex(ctx context.Context) (int, error) {
	si := ctx.Value(ContextServerIndex)
	if si != nil {
		if index, ok := si.(int); ok {
			return index, nil
		}
		return 0, reportError("Invalid type %T should be int", si)
	}
	return 0, nil
}

func getServerOperationIndex(ctx context.Context, endpoint string) (int, error) {
	osi := ctx.Value(ContextOperationServerIndices)
	if osi != nil {
		if operationIndices, ok := osi.(map[string]int); !ok {
			return 0, reportError("Invalid type %T should be map[string]int", osi)
		} else {
			index, ok := operationIndices[endpoint]
			if ok {
				return index, nil
			}
		}
	}
	return getServerIndex(ctx)
}

func getServerVariables(ctx context.Context) (map[string]string, error) {
	sv := ctx.Value(ContextServerVariables)
	if sv != nil {
		if variables, ok := sv.(map[string]string); ok {
			return variables, nil
		}
		return nil, reportError("ctx value of ContextServerVariables has invalid type %T should be map[string]string", sv)
	}
	return nil, nil
}

func getServerOperationVariables(ctx context.Context, endpoint string) (map[string]string, error) {
	osv := ctx.Value(ContextOperationServerVariables)
	if osv != nil {
		if operationVariables, ok := osv.(map[string]map[string]string); !ok {
			return nil, reportError("ctx value of ContextOperationServerVariables has invalid type %T should be map[string]map[string]string", osv)
		} else {
			variables, ok := operationVariables[endpoint]
			if ok {
				return variables, nil
			}
		}
	}
	return getServerVariables(ctx)
}

// ServerURLWithContext returns a new server URL given an endpoint
func (c *Configuration) ServerURLWithContext(ctx context.Context, endpoint string) (string, error) {
	sc, ok := c.OperationServers[endpoint]
	if !ok {
		sc = c.Servers
	}

	if ctx == nil {
		return sc.URL(0, nil)
	}

	index, err := getServerOperationIndex(ctx, endpoint)
	if err != nil {
		return "", err
	}

	variables, err := getServerOperationVariables(ctx, endpoint)
	if err != nil {
		return "", err
	}

	return sc.URL(index, variables)
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"net/http"
)

// APIResponse stores the API response returned by the server.
type APIResponse struct {
	*http.Response `json:"-"`
	Message        string `json:"message,omitempty"`
	// Operation is the name of the OpenAPI operation.
	Operation string `json:"operation,omitempty"`
	// RequestURL is the request URL. This value is always available, even if the
	// embedded *http.Response is nil.
	RequestURL string `json:"url,omitempty"`
	// Method is the HTTP method used for the request.  This value is always
	// available, even if the embedded *http.Response is nil.
	Method string `json:"method,omitempty"`
	// Payload holds the contents of the response body (which may be nil or empty).
	// This is provided here as the raw response.Body() reader will have already
	// been drained.
	Payload []byte `json:"-"`
}

// NewAPIResponse returns a new APIResonse object.
func NewAPIResponse(r *http.Response) *APIResponse {

	response := &APIResponse{Response: r}
	return response
}

// NewAPIResponseWithError returns a new APIResponse object with the provided error message.
func NewAPIResponseWithError(errorMessage string) *APIResponse {

	response := &APIResponse{Message: errorMessage}
	return response
}
/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


import (
	"encoding/json"
	"time"
)

// PtrBool is a helper routine that returns a pointer to given boolean value.
func PtrBool(v bool) *bool { return &v }

// PtrInt is a helper routine that returns a pointer to given integer value.
func PtrInt(v int) *int { return &v }

// PtrInt32 is a helper routine that returns a pointer to given integer value.
func PtrInt32(v int32) *int32 { return &v }

// PtrInt64 is a helper routine that returns a pointer to given integer value.
func PtrInt64(v int64) *int64 { return &v }

// PtrFloat32 is a helper routine that returns a pointer to given float value.
func PtrFloat32(v float32) *float32 { return &v }

// PtrFloat64 is a helper routine that returns a pointer to given float value.
func PtrFloat64(v float64) *float64 { return &v }

// PtrString is a helper routine that returns a pointer to given string value.
func PtrString(v string) *string { return &v }

// PtrTime is helper routine that returns a pointer to given Time value.
func PtrTime(v time.Time) *time.Time { return &v }

type NullableBool struct {
	value *bool
	isSet bool
}

func (v NullableBool) Get() *bool {
	return v.value
}

func (v *NullableBool) Set(val *bool) {
	v.value = val
	v.isSet = true
}

func (v NullableBool) IsSet() bool {
	return v.isSet
}

func (v *NullableBool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBool(val *bool) *NullableBool {
	return &NullableBool{value: val, isSet: true}
}

func (v NullableBool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableInt struct {
	value *int
	isSet bool
}

func (v NullableInt) Get() *int {
	return v.value
}

func (v *NullableInt) Set(val *int) {
	v.value = val
	v.isSet = true
}

func (v NullableInt) IsSet() bool {
	return v.isSet
}

func (v *NullableInt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInt(val *int) *NullableInt {
	return &NullableInt{value: val, isSet: true}
}

func (v NullableInt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableInt32 struct {
	value *int32
	isSet bool
}

func (v NullableInt32) Get() *int32 {
	return v.value
}

func (v *NullableInt32) Set(val *int32) {
	v.value = val
	v.isSet = true
}

func (v NullableInt32) IsSet() bool {
	return v.isSet
}

func (v *NullableInt32) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInt32(val *int32) *NullableInt32 {
	return &NullableInt32{value: val, isSet: true}
}

func (v NullableInt32) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInt32) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableInt64 struct {
	value *int64
	isSet bool
}

func (v NullableInt64) Get() *int64 {
	return v.value
}

func (v *NullableInt64) Set(val *int64) {
	v.value = val
	v.isSet = true
}

func (v NullableInt64) IsSet() bool {
	return v.isSet
}

func (v *NullableInt64) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInt64(val *int64) *NullableInt64 {
	return &NullableInt64{value: val, isSet: true}
}

func (v NullableInt64) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInt64) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableFloat32 struct {
	value *float32
	isSet bool
}

func (v NullableFloat32) Get() *float32 {
	return v.value
}

func (v *NullableFloat32) Set(val *float32) {
	v.value = val
	v.isSet = true
}

func (v NullableFloat32) IsSet() bool {
	return v.isSet
}

func (v *NullableFloat32) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFloat32(val *float32) *NullableFloat32 {
	return &NullableFloat32{value: val, isSet: true}
}

func (v NullableFloat32) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFloat32) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableFloat64 struct {
	value *float64
	isSet bool
}

func (v NullableFloat64) Get() *float64 {
	return v.value
}

func (v *NullableFloat64) Set(val *float64) {
	v.value = val
	v.isSet = true
}

func (v NullableFloat64) IsSet() bool {
	return v.isSet
}

func (v *NullableFloat64) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFloat64(val *float64) *NullableFloat64 {
	return &NullableFloat64{value: val, isSet: true}
}

func (v NullableFloat64) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFloat64) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableString struct {
	value *string
	isSet bool
}

func (v NullableString) Get() *string {
	return v.value
}

func (v *NullableString) Set(val *string) {
	v.value = val
	v.isSet = true
}

func (v NullableString) IsSet() bool {
	return v.isSet
}

func (v *NullableString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableString(val *string) *NullableString {
	return &NullableString{value: val, isSet: true}
}

func (v NullableString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


type NullableTime struct {
	value *time.Time
	isSet bool
}

func (v NullableTime) Get() *time.Time {
	return v.value
}

func (v *NullableTime) Set(val *time.Time) {
	v.value = val
	v.isSet = true
}

func (v NullableTime) IsSet() bool {
	return v.isSet
}

func (v *NullableTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTime(val *time.Time) *NullableTime {
	return &NullableTime{value: val, isSet: true}
}

func (v NullableTime) MarshalJSON() ([]byte, error) {
	return v.value.MarshalJSON()
}

func (v *NullableTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
